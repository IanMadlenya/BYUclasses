(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 8.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[    186694,       4984]
NotebookOptionsPosition[    173627,       4545]
NotebookOutlinePosition[    174135,       4564]
CellTagsIndexPosition[    174092,       4561]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Econ 378 Final Review", "Title",
 CellChangeTimes->{{3.511804975400614*^9, 3.511804984927018*^9}}],

Cell[CellGroupData[{

Cell["Probability", "Section",
 CellChangeTimes->{{3.511805053332864*^9, 3.511805068299056*^9}}],

Cell[CellGroupData[{

Cell["\<\
Represent intersections, unions, subsets, and complements of sets, using Venn \
diagrams or set notation. Interpreting these sets as events, compute relevant \
probabilities.\
\>", "Subsection",
 CellChangeTimes->{{3.5118051108932877`*^9, 3.511805129250771*^9}, 
   3.511805179104569*^9}],

Cell[CellGroupData[{

Cell[TextData[{
 "Intersection: ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{
      SubscriptBox["A", "n"], "B"}], "=", 
     RowBox[{"{", "s", "}"}]}], ",", " ", 
    GraphicsBox[{
      CircleBox[{0.46568624509804035`, 0.5686274828431364}, \
{0.2254901397058826, 0.18627446323529506`}], 
      CircleBox[{0.7107841360294129, 0.5784313529411751}, \
{0.18627446323529506`, 0.19607838235294173`}], 
      {StrokeForm[Hue[0.2611111111111111, 0.8378378378378378, 1.]], EdgeForm[
       GrayLevel[0]], EdgeForm[None], LineBox[CompressedData["
1:eJydlk9I02EYx5cpVBB4WNQlKQZRsAjEuhiNQZD9IVYg1JxOZN2ECKUuDUII
Vthh0CGwYAc9ZMcWdIgxMLoFIh0mLG1zI0mhHUTndFpCn/eFr7wsFIZ8+P1+
z/N9/rzP854cuH/7XpPH45n9+9v5Px7rq127vhCY/rB6qbu7HIBj5WqT11sy
3PVg/f3U1IJhf309NjRkufVZ7YjPZ3nFu/FlZqZoOJfaeDQyYvmTf/N0e7vl
8Y+bs4VCwXDicv15Mml5cLreGQxaDkW2liuVH4Y7FrfepFKWjw1v3wyFLFe3
d/7mDWeP7huIRuedz/V7ta/+VZ/q1/g0fs2P5k/zrfV5crd6Kxaz/PrrWiqd
LgWyud6rY2OWczd6Xy0tWV7JRn52XiwZbj0fuTA6upvx53/b8zSfLxk9MPWH
0Y99GD3Em6j0vavViiY/g4+jkclJyx0v+zMHDxVNPmF9Tj5h7IcO9B8Ohy1j
X/1r/vfar9iD8aes8br6gfyTX/JJPainsvaDqz9c53/5zOqLiYmyqReMfWW+
h9PBtd/NLeVd/ab6XPqZNzD9BpMP9CnzPox9GP+w6oXJP0x/K2MPRr+eD+y5
zgf+lfne9Zx+geknmH4jXmXe1/PZKL9aH+JRdsUP4x9GH8z5wR6Mfxh9yq74
NH/Y5331BzP/YfYDzP6A2S/4U+Z9GPsw+wV7MP0Fdx3v+eY/WzYcS4Z98XjZ
2IPRC6MHZj9iL3Gu6XMmM2f83bmy/1Rb25zRA6NXGXuu+NHjil/zo9+jz9Rf
GP/MZ+zB+GMek79G81r3CUx/Y19Z9w/2dB/udZ+oHs4fzDyEmc8w8w1mvqNH
94Wy3j903up81vni2s+aXxh7rvh0/xFfo/lPfyu77kcw8x9Gn2v+6b6nHzhv
1FfPO0w/w5wPWM/viWhzIh7/bnjxYcuvfD5v/MPEC5MfZeyRX5j6MQ9MP//T
Y/pZmPPK/U2Z+GDih5kn3AeVyd//3i+pD0z9YPoXpt4w/QDTLzD9+Qdw0Ihp

        "]]}},
     ContentSelectable->True,
     ImagePadding->{{0., 0.}, {0., 0.}},
     ImageSize->{76., 57.},
     PlotRange->{{0., 1.333333}, {0., 1.}},
     PlotRangePadding->Automatic]}], TraditionalForm]],
  FormatType->"TraditionalForm"]
}], "Subitem",
 CellChangeTimes->{{3.511807893675267*^9, 3.511807959142191*^9}, {
  3.51180800222762*^9, 3.511808024771163*^9}}],

Cell[TextData[{
 "Union: ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"P", "(", 
      RowBox[{
       SubscriptBox["A", "U"], "B"}], ")"}], 
     GraphicsBox[{
       {StrokeForm[Hue[0.2, 1., 0.1797091412742382]], EdgeForm[GrayLevel[0.]],
         EdgeForm[None], 
        CircleBox[{0.42807015438596535`, 0.49298245614035086`}, \
{0.28070168421052644`, 0.196491178947368}]}, 
       {StrokeForm[Hue[0.2, 1., 0.1797091412742382]], EdgeForm[GrayLevel[0.]],
         EdgeForm[None], 
        CircleBox[{0.7789471736842111, 0.4929824578947368}, \
{0.25263151578947385`, 0.18245609473684166`}]}, 
       {AbsoluteThickness[5.821032177708714], StrokeForm[{Hue[
        0.3388888888888889, 0.7297297297297297, 1.], Opacity[0.52]}], 
        EdgeForm[{GrayLevel[0.], Opacity[1.]}], EdgeForm[None], 
        LineBox[CompressedData["
1:eJyFmH1MllUYxjFNszFFQ83VprjZ18z8CEN0Pm9a2rSUysws3atJpa6ktEiL
WY10mjBSt7QMmVp+F6lztGXi8luZKAoI4seLX4AKZsUyaK3t/l1nO8T6691v
97mf9znn3Nd1n/PETZn5XPJtUVFRQYuoqH9/Ezq37tQluzDonnrfsJRu54OU
NvHjR6QcDUJrsyMd150JUiIT54fXFjTh/A7b5nTbXRGk7Jy/fU7p4SA0b39M
r/LT4vyr5esSfi938Ql1Q55s7zh/f6viZx8sc/H4rm9OGnbK/Z/H+asfbjVj
YmnA+8J562+k3Zl+rAmHYoZ+lZpaEiQMqrjUOO24OK/gwJgbY4qC/LRx/dI/
Lw4SwtvzLsSfEOf9uiqu9J6T4j6ffrbocIviJhyqmX4wa9PJoM/GKa9sLSgR
5w4evfebbaUufnRg7xUrTrn45J5fLJ5X5uK/xUR9lFzu4vMb3pg16rSLd71y
7LW+FS6+qShxQpczLj5k15pnGh3nFm6MfrzyrHh538OJX049Jz5xK1S7tMRx
7J4dazJGnhcvG7c6+uM+ETe+2927565xHFuV8e7szpXisVtbPvTWwv9gW+8T
T9QumTzzgji2XfKIlyOOx5aU/TX2hYtu/LR9U58adEn7Gdt/cNeh3zlOavih
YFDcZXHW3vs/iV/muDDz6wGPtLkijhl/V80Dcx0nxS1c1eOa46zqv5+/N1zl
8rfNvqNzkeOYtOqf2g+vdvnDw2+3/dFxVvvini171bj80lFlDdmOY1bvzvyj
w1WXP+OxYXXpjhc/uqW+qt7xkcYemyunXxNH718erqhw/HRWu04lSdebMHo5
0uNW2qEBteLoqzP77dlQK719W/bOzUnt6sTDd20pKB9RJ32KTc8welfc/EDx
AYtGtc44K865kFj24cBz4nNbcjPf2+wYv4HDoZX105Y4zmnbcfOrt0dc/vEF
4YnvR/T+Pndf2Rj7Yk1E84VZj3DyrINJkyqDxS+lHyz85bqY9YNZb5j9UL7t
F8x+wuw3TD3A1IvyrZ6Ub/WmfKtH5Vu9Kt/qWflW78o3PSjf9KJ80xOM3mD0
CC/LScodfeCiGP0q3/StfNO/8j+Yc+b1hkqXb36hfPMX5Zv/KN/8SfkZvcYv
2Hne5ZufKd/8DsYPYfwSxk8VN79V3PxYcfNrxc3PFTe/V9z6geLWLxS3fqJ4
l9SbP18udnHrPzD9ymfqH0YvMPpSvulP+aZP/g/98j4+o3fe32f8gvniJ6yH
z/iP+qWx+iVx+iVx+iVx+iVMfzRWPzSmnhSn/xlTn7wv9QtT3zD1D6v/2Xqo
/xmjLxj9wegTRr8w+obRP4w/KN/8w2feV/3TWP3WWP2Y+dK/WQ+bj9bLmy9M
/4CpH5h643mw/MrqV/5mLD80lp8ay3/Jx58Zj3/zPPydfPzfWP3BY/REP/GZ
+ar/23rArJfitp6KW32KrZ/z/7DOI9b/dZ6B2X9j7bexzmPG2l9j7Sfjrd5h
6YF89EI+eiKf86a9v/RorPOqx9w/0LPPzelf52XPL+RP1h9g/EVx8x/F8Sfb
P/mXx+y3/NAYv6Q+4P/zY+rL9/Mmfm/3IZj7ks/qH3a/gnV/tH7D/VFs9zex
3ffEy7+PLIk+1ITpZ3BO76q0kccqlS+254vt/2HeF2Y+Yrv/wfQ7Mf0Mtv2B
6U+K234qbvvvs3++YP7UF0z9wdQnTP3C1LfiphcYPWm86U3jTZ8ab/plv+XH
HlMvMPXm+7eeh5+b/mHeR+PtfWHmo3zTu/Jt/sq386Dybb2kF1tfmPUX236K
2f/mzjt8L0DPfC9A78TxC+KcXzgv4T+cl8y/dD4yv5NfmF9Sj7D8hbjVn+L4
FYy/4b+2fs35sc4z+KnX/9Uvmjk/6L7ezHnDP4/ovs547ueMp58xnvs5/8f9
nHz6Ifncz411P/eY+Spu++P3W57nM+vp92P/+4HmY9+fYL63cJ4J7Vtav+Fs
kdYH1vr1X5+548/jwT96Pylq
         "]]}},
      ContentSelectable->True,
      ImagePadding->{{0., 0.}, {0., 0.}},
      ImageSize->{95., 74.},
      PlotRange->{{0., 1.333333}, {0., 1.}},
      PlotRangePadding->Automatic], 
     RowBox[{"P", "(", 
      RowBox[{
       SubscriptBox["A", "U"], "B"}], ")"}]}], "=", 
    RowBox[{
     RowBox[{"P", "(", "A", ")"}], "+", 
     RowBox[{"P", "(", "B", ")"}], "-", 
     RowBox[{"P", "(", 
      RowBox[{
       SubscriptBox["A", "n"], "B"}], ")"}]}]}], TraditionalForm]],
  FormatType->"TraditionalForm"]
}], "Subitem",
 CellChangeTimes->{{3.5118080285487823`*^9, 3.511808177258793*^9}, {
  3.511810498433691*^9, 3.511810541493216*^9}}],

Cell[TextData[{
 "Complement: ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     OverscriptBox["A", "-"], 
     GraphicsBox[{
       {Thickness[0.031622776601683764`], StrokeForm[{
          Hue[0.07777777777777778, 1., 0.15408587257617726`], 
          Opacity[1.]}], 
        {EdgeForm[None], 
         CircleBox[{0.6453899042553188, 0.5212765957446823}, \
{0.2553191489361697, 0.2765957446808507}]}}, 
       {Thickness[0.031622776601683764`], StrokeForm[{
          Hue[0.3055555555555556, 0.8648648648648649, 1.], 
          Opacity[0.52]}], 
        {EdgeForm[None], LineBox[CompressedData["
1:eJyFmXtsluUZxr9hYAw6h8vcZtQNHKGJOrVsUclkX3HI2EJREWOXkIxUFg9A
NMyJZIJNRxaQ2MwwjcFh6pZtoqIITlHR4iwo0HCoQMehHJRDLaUWEHVMk31v
c/2uZ7k/38w/ML/c3/sc7sP13M/TYXV3TfpVv0KhUFX6J/v/gOWjLt209UTx
iluGLL5kwQdFeOjppQ+d2XzE3DRlzITnhiYe2nJoUN2sw8l+yYIN57YcMmej
bTg38R/ObB4397b3k71uVv+qV95L9uzrQYmHVL3S8NiUg8n+WLaAA+ZC33//
w0+UljuuI/HM7bOv7NqTeHA24S7zgV1PfThje3viDGfvTFz6+kfn70hcWv1f
3ng3cbbcurbEmTv6bzPXl3696sYtiftnG2pNnJn3b0icuXfE24n3ZwtsSZxN
v+rN4vqpiwb/dU7ihm90dM27KPG171y2sXZTr7nf/fXLRt6T+I3L2xZUXPgF
nG339OvFz9b/dGvrog/N9192rLG+o8f80SONNT+8PPE9n1dVdNYfT/ZpOzY+
3tZtntF638Lrhyfu/sEF48+691iyP9484OW3u8yH+t267s7zvoCzdGlYXZx2
54D535n+gXnKqJov/f7sTvPept7mUVOPFutL3rxlyKri9ruuGv3kWUcS/3je
qwP/fsg84W/D5qz59H1z61fXXXX3zxOP/c3tH3/vT++ZW/YO/kf78YPJPvb5
Xy8qJr5vRPfBw+v2Jz498pc1d+wz394yZ++LFR2JF6/9xQUr9iSu+3L7727a
ba6tmjj52Mf/Kmft1yx/mRVfs/LJrHwzKx9rC49sm7Sk3flqVj7D5Hvtlj0T
Xx290/VgVr2YVU9m1ZtZ9Th+5h0/Wzj/3cTXrFjfW9lWLFxzfkmRdidWfV89
+JOf1G7a6vo3b8kWsC/9PrJ+P/6Ji1qHHdzu8cyaj/VFZn1xP3xv1nzw3S/+
tuGBjs3mqZO+Mnfi8NbEvY/OvnD6BvMNjcNndb+wPtcex/N88rfXQzyIH/FS
/Imn80/xdn4qH8zkS8wf+YP8Ip5mrS/PHr93vYhdX+I1z0waWXz4gNn1Ge3K
f6+femA+sdcnxr+MR7zMigf7N8tfZvnT34vJV35v1nhmzVe2HsYXky9w9cbi
bQ8W30y/37rkrZUVr+fa4/dxfvIpN17kD4y/c+JpzotP1C/0iHiF9ZhjPopj
/jpfxD4fxFMG/nHe8ReOmH2+YOf8ybH7/BFPbt/9n8k3H86dL9rj+D4PxT5v
xT6v5Q+f5+Jo9/kMcx6LfV6Lff6L3T+I3Y/EfkY87t9HJ5yoPFnOWr859E/o
F/0P+guj32bpvVn9Ikw/CdNv2q5+1Hb1qzD9r1n9MnzFiKyh7kzc1x53mauz
43rpcfM7pd2XtmSe1ne+95o7M3muOmF+KnPXrmQf3jdfb+541dnxdabHvLYh
c0CP/bu67+fdZtZLPLgfwE3Z8Tn3aPHB6x6d+a0HTvp+sPHhsY2jd570fQDm
PgBzH7Bd/rVd/md8mPyCyT+Y/ITJb7Pym/mpJ9YLE1/btT/bFW/b5Q/Gh6kf
27UemPqF6adt135g6hemvmH8AdP/w9wPYPwJkx+w73fiGP9oj+PF+Vkv9cH+
yC/2T/7Bq7P2d/Ex89VZuY7p9vcw+4fZL9+zvliPK7L26cqulP8h38tY64/+
gOP9OepD5P/nb37vegv1RT4P2nfyuVu/f8r5DqNvtkv/GA99xD/oJ/6kXyb/
YPwPE588exzP+iz2eqTnEy9+csvC+afcfzfee33v83tO+T6/+Z+fD9k58iOf
B1//2rNVny1MbLv6Y8aD8R/M/GWsftqs88isftqsfhrmPIvnm+/zYp+fYt/n
xb7PB2Y+/Avn/Z7z1hzP7/i+oPul16P+K64Pxn8w8TIrnmbF26x8MCsfWW9Z
Pmk89IX4k69lrHiatd74e8Zj/XE+rycw35uVH9H/ee8vhR3ZAp9JXJM9ADSl
fk7vAfG9xqz4xP4vxtus38f3IX8vdv+o35sV/zx/4j+z4m2W/3LjFeOj+KEv
Zazvo/7A6CHjoZ8+T6Wv+Id+gHyMTH8DM57t6m/y7PQX1NuKvv6uM/d84jxD
T2D0jO9h1pvbf8kftut8gDkfzKpHzhPia32VPsLcb9Fv8s+s/DIrv8z63uOr
npif+aznOfoc32etb1EPYz3Eeor1IPb9SBzfR+N7aNn757Zl17atSe+Zvn+G
90r0gfdHmPu0WfdxmPs07PcumPcPzef3BrHfG8R+L9D6/Z6g/VdXvLT6hiUv
23/V47ct76lcaS4Uvjv16Yql9r9Z8S6szQIw1/EqjDm7Z1PFQ82cb2bFt/7b
Ned8UvnnZvSgvumbla9VLG9GP8zSB5j8NUuPzNIrs/TErHowq15YD/UEU2/s
j36N/Zex6rV64K7rzpu+LLH8a5b/0aPqS1fOeO3Tt6xnxA894D0KJt4w+YA+
8V4X2b8XM79Z+mfW/mH8w3ww70/83qzxWK/3x37UL8P00zD9e549+of9mDU/
TLzy7IzH+tFn9st9BH9wf6E+uZ/znlXG0n+Y8wLm/mLW/v17rafs93pvM0s/
YPSF72HG573NLH2Cec+Fea+FeZ+D+fsMjB7CvKfBvKfZrvc41ou+wrzf5dnj
9x5f/vD8Yq9P7PWL+fsS7P2K7Q+x/QXr70uOB/6F8X+IV148Y/zJRzjmL/UH
k+9m6U1kxnM9ihkvzhfXQ32Tn+gf+0M/2D/6bZbew5wHPi9l93mp75kPvcdf
zGeWHlC/1j8YfRSjX3DU0zLW/q3H0i/HS/ke4wejDzD6YZa+wLxXwrwf2q73
xWgnfowHo2/Em/kdf+mh80vrjflRln/KL+s55x3nAXadX/E8pJ/Bbg7jxfOD
+cvyFX3PqSfinVd/UX9j/ZbVd6j/qBdRT+gf8/Qn6lPUr6hvUf/K9FH6CaOv
MPoL0w/D/P0fpn+GeW+1Xf02zHsr+UR/Dv8XNdWHhA==
          "]]}}},
      ContentSelectable->True,
      ImagePadding->{{0., 0.}, {0., 0.}},
      ImageSize->{63., 47.},
      PlotRange->{{0., 1.333333}, {0., 1.}},
      PlotRangePadding->Automatic], 
     RowBox[{"P", "(", 
      OverscriptBox["A", "-"], ")"}]}], "=", 
    RowBox[{"1", "-", 
     RowBox[{"P", "(", "A", ")"}]}]}], TraditionalForm]]]
}], "Subitem",
 CellChangeTimes->{{3.511808180391821*^9, 3.511808256337994*^9}, {
  3.511808294936039*^9, 3.511808324449853*^9}, {3.51181057503118*^9, 
  3.511810581608461*^9}}],

Cell[TextData[{
 "Probability: ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"P", 
      RowBox[{"(", "A", ")"}]}], "=", 
     FractionBox[
      RowBox[{"#", "A"}], 
      RowBox[{"#", "S"}]]}], ",", " ", 
    RowBox[{
    "where", " ", "A", " ", "is", " ", "the", " ", "thing", " ", "we", " ", 
     "want", " ", "and", " ", "S", " ", "is", " ", "the", " ", "total", " ", 
     RowBox[{"universe", ".", " "}]}]}], TraditionalForm]]]
}], "Subitem",
 CellChangeTimes->{{3.511808325026876*^9, 3.511808352517627*^9}, 
   3.51181316792597*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Count the numbers of combinations of items from a group.\
\>", "Subsection",
 CellChangeTimes->{{3.5118051108932877`*^9, 3.5118051325153227`*^9}, 
   3.511805174202888*^9}],

Cell[CellGroupData[{

Cell[TextData[{
 "How many ways can we arrange x items using only y of them (permutation, \
order doesn't matter)?: ",
 Cell[BoxData[
  FormBox[
   FractionBox[
    RowBox[{"x", "!"}], 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"x", "-", "y"}], ")"}], "!"}]], TraditionalForm]]]
}], "Item",
 CellChangeTimes->{{3.51180838666676*^9, 3.511808449382196*^9}, {
  3.512220885210749*^9, 3.512220887370965*^9}, {3.512220933261554*^9, 
  3.512220935932821*^9}}],

Cell[TextData[{
 "What is the # of combinations of arranging x items using only y of them \
(order does matter)? ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox[
     SubscriptBox["C", "y"], "x"], "=", 
    FractionBox[
     RowBox[{"x", "!"}], 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"y", "!"}], ")"}], "*", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"x", "-", "y"}], ")"}], "!"}]}]]}], TraditionalForm]]]
}], "Item",
 CellChangeTimes->{{3.511808452102873*^9, 3.511808469158162*^9}, {
  3.511808645285828*^9, 3.511808662826758*^9}, {3.51180886687852*^9, 
  3.511808944308735*^9}, {3.5122208305532837`*^9, 3.512220836744903*^9}, {
  3.512220926876915*^9, 3.5122209510403314`*^9}}],

Cell["\<\
We can easily remember in which case order does and doens't matter by seeing \
which denominator it larger. The denominator for a combination is larger so \
that is the one with more constrainsts, or the one where order does matter. \
\>", "Subitem",
 CellChangeTimes->{{3.512220956876915*^9, 3.5122210090231295`*^9}, {
  3.512226934465661*^9, 3.5122269362418385`*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Compute and interpret conditional probabilities, and determine total \
probabilities by the method of event decomposition.  Obtain P(B|A) from \
P(A|B) using Bayes\[CloseCurlyQuote] rule.\
\>", "Subsection",
 CellChangeTimes->{{3.511805188920232*^9, 3.5118052233832693`*^9}}],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"P", 
     RowBox[{"(", 
      RowBox[{"A", "|", "B"}], ")"}]}], "=", 
    FractionBox[
     RowBox[{"P", "(", 
      RowBox[{
       SubscriptBox["A", "n"], "B"}], ")"}], 
     RowBox[{"P", "(", "B", ")"}]]}], TraditionalForm]]],
 " and it means the Probability of being A given that you are B or what \
fraction (%) of B\[CloseCurlyQuote]s are A."
}], "Subitem",
 CellChangeTimes->{{3.511808683049095*^9, 3.5118087134520884`*^9}, {
  3.5118106754295273`*^9, 3.511810700988345*^9}}],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"P", "(", 
    RowBox[{
     SubscriptBox["A", "n"], "B"}], ")"}], "=", 
   RowBox[{
    RowBox[{
     RowBox[{"P", "(", 
      RowBox[{"A", "|", "B"}], ")"}], "*", 
     RowBox[{"P", "(", "B", ")"}]}], "=", 
    RowBox[{
     RowBox[{"P", "(", 
      RowBox[{"B", "|", "A"}], ")"}], "*", 
     RowBox[{"P", "(", "A", ")"}]}]}]}], TraditionalForm]],
 FormatType->"TraditionalForm"]], "Subitem",
 CellChangeTimes->{{3.5118087161099033`*^9, 3.511808742714982*^9}, {
  3.5118088143200617`*^9, 3.511808814325307*^9}}],

Cell[TextData[{
 "If two events are independent then ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"P", "(", 
     RowBox[{
      SubscriptBox["A", "n"], "B"}], ")"}], "=", 
    RowBox[{
     RowBox[{"P", "(", "A", ")"}], "*", 
     RowBox[{"P", "(", "B", ")"}]}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " and therefore P(A|B)=P(A)"
}], "Subitem",
 CellChangeTimes->{{3.511808814786521*^9, 3.511808850633189*^9}, {
  3.511809053685433*^9, 3.511809053691156*^9}}],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"P", 
    RowBox[{"(", "A", ")"}]}], "=", 
   RowBox[{
    RowBox[{"P", "(", 
     RowBox[{
      SubscriptBox["A", "n"], 
      OverscriptBox["B", "-"]}], ")"}], "+", 
    RowBox[{"P", "(", 
     RowBox[{
      SubscriptBox["A", "n"], "B"}], ")"}]}]}], TraditionalForm]],
 FormatType->"TraditionalForm"]], "Subitem",
 CellChangeTimes->{{3.511809054362747*^9, 3.511809096123764*^9}}],

Cell["\<\
Example: Suppose that the unemployment rate among all immigrant workers is \
7%. 15% of working immigrants are in the country illegally. 40% of unemployed \
immigrants are illegally here. Find the unemployment rates among legal and \
illegal immigrants?\
\>", "Subitem",
 CellChangeTimes->{{3.511809244566577*^9, 3.5118092677283373`*^9}, 
   3.51181317564791*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  GraphicsBox[{
    TagBox[
     GraphicsComplexBox[{{1.2247448713915892`, 1.6329931618554523`}, {
      0.4082482904638631, 0.8164965809277261}, {0.14580295238095298`, 
      0.09470178006676999}, {0.8164965809277261, 0.}, {2.041241452319315, 
      0.8164965809277261}, {1.6329931618554523`, 0.}, {2.4494897427831783`, 
      0.}}, {
       {RGBColor[0.55, 0.45, 0.45], 
        LineBox[{{1, 2}, {1, 5}, {2, 3}, {2, 4}, {5, 6}, {5, 7}}]}, {
        InsetBox[""], InsetBox[
         TagBox[
          TooltipBox["",
           TagBox[
            SubscriptBox["x", "1"], HoldForm]],
          Annotation[#, 
           HoldForm[
            Subscript[$CellContext`x, 1]], "Tooltip"]& ]], 
        TagBox[
         TooltipBox[InsetBox[
           FrameBox[
            StyleBox[
             RowBox[{
              RowBox[{"Legal", " ", 
               RowBox[{
                StyleBox["(", "StandardForm", "Output",
                 StripOnInput->False,
                 FrontFaceColor->GrayLevel[0],
                 BackFaceColor->GrayLevel[0],
                 GraphicsColor->GrayLevel[0],
                 LineColor -> GrayLevel[0],
                 FontSize->Scaled[0.044444444444444446`],
                 FontColor->GrayLevel[0]], 
                OverscriptBox["I", "_"], ")"}]}], "=", 
              RowBox[{
               RowBox[{"1", "-", ".4"}], "=", ".6"}]}],
             FontSize->14],
            Background->RGBColor[1., 1., 0.871],
            FrameStyle->GrayLevel[0.5],
            StripOnInput->False], 3, 
           Automatic, {0.8869679603174603, 0.3928370136103003}, {{1., 0.}, {
           0., 1.}}],
          TagBox["x", HoldForm]],
         Annotation[#, 
          HoldForm[$CellContext`x], "Tooltip"]& ], 
        TagBox[
         TooltipBox[InsetBox[
           FrameBox[
            StyleBox[
             RowBox[{
              RowBox[{
               TagBox["Illegal",
                HoldForm], "(", "I", ")"}], "=", ".4"}],
             StripOnInput->False,
             FontSize->13],
            Background->RGBColor[1., 1., 0.871],
            FrameStyle->GrayLevel[0.5],
            StripOnInput->False], 4],
          TagBox["1", HoldForm]],
         Annotation[#, 
          HoldForm[1], "Tooltip"]& ], 
        TagBox[
         TooltipBox[InsetBox[
           FrameBox[
            StyleBox[
             RowBox[{
              RowBox[{
               StyleBox[
                RowBox[{
                 StyleBox["E", "StandardForm", "Output",
                  StripOnInput->False,
                  FrontFaceColor->GrayLevel[0],
                  BackFaceColor->GrayLevel[0],
                  GraphicsColor->GrayLevel[0],
                  LineColor -> GrayLevel[0],
                  FontSize->Scaled[0.044444444444444446`],
                  FontColor->GrayLevel[0]], "mployed"}]], " ", 
               RowBox[{
                StyleBox["(", "StandardForm", "Output",
                 StripOnInput->False,
                 FrontFaceColor->GrayLevel[0],
                 BackFaceColor->GrayLevel[0],
                 GraphicsColor->GrayLevel[0],
                 LineColor -> GrayLevel[0],
                 FontSize->Scaled[0.044444444444444446`],
                 FontColor->GrayLevel[0]], 
                OverscriptBox[
                 StyleBox["U", "StandardForm", "Output",
                  StripOnInput->False,
                  FrontFaceColor->GrayLevel[0],
                  BackFaceColor->GrayLevel[0],
                  GraphicsColor->GrayLevel[0],
                  LineColor -> GrayLevel[0],
                  FontSize->Scaled[0.044444444444444446`],
                  FontColor->GrayLevel[0]], "-"], ")"}]}], "=", 
              RowBox[{
               RowBox[{"1", "-", "7"}], "=", ".93"}]}],
             FontSize->13],
            Background->RGBColor[1., 1., 0.871],
            FrameStyle->GrayLevel[0.5],
            StripOnInput->False], 5],
          TagBox[
           SubscriptBox["x", "2"], HoldForm]],
         Annotation[#, 
          HoldForm[
           Subscript[$CellContext`x, 2]], "Tooltip"]& ], InsetBox[""], 
        InsetBox[""]}}],
     Annotation[#, 
      VertexCoordinateRules -> {{1.2247448713915892`, 1.6329931618554523`}, {
       0.4082482904638631, 0.8164965809277261}, {0., 0.}, {0.8164965809277261,
        0.}, {2.041241452319315, 0.8164965809277261}, {1.6329931618554523`, 
       0.}, {2.4494897427831783`, 0.}}]& ], InsetBox[
     StyleBox[Cell["Immigrants",
       GeneratedCell->False,
       CellAutoOverwrite->False,
       CellBaseline->Baseline,
       TextAlignment->Left],
      TextAlignment->Center,
      Background->GrayLevel[
       1.]], {1.1565139593363476`, 1.6253792040858408`}, {Left, Baseline},
     Alignment->{Left, Top}], InsetBox[
     FrameBox[
      StyleBox[
       RowBox[{
        RowBox[{"Unemployed", "(", "U", ")"}], " ", "=", ".7", " "}],
       StripOnInput->False,
       FontSize->14],
      Background->RGBColor[1., 1., 0.871],
      FrameStyle->GrayLevel[0.5],
      StripOnInput->False], {0.4358251253481893, 0.8227439871399759}], 
    InsetBox[
     FrameBox[
      StyleBox[
       RowBox[{
        RowBox[{"Legal", " ", 
         RowBox[{
          StyleBox["(", "StandardForm", "Output",
           StripOnInput->False,
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           LineColor -> GrayLevel[0],
           FontSize->Scaled[0.044444444444444446`],
           FontColor->GrayLevel[0]], 
          OverscriptBox["I", "-"], ")"}]}], "=", 
        RowBox[{
         RowBox[{"1", "-", ".15"}], "=", ".85"}]}],
       FontSize->13],
      Background->RGBColor[1., 1., 0.871],
      FrameStyle->GrayLevel[0.5],
      StripOnInput->False], {1.459832344412134, 0.0926183570044663}, 
     Automatic, {0.8479002461538461, 0.47399455048803263`}, {{1., 0.}, {0., 
     1.}}], InsetBox[
     FrameBox[
      StyleBox[
       RowBox[{
        StyleBox[
         StyleBox[
          TagBox[
           StyleBox[
            RowBox[{"Illegal", " ", 
             RowBox[{"(", "I", ")"}]}],
            FontSize->14],
           HoldForm], "StandardForm", "Output",
          StripOnInput->False,
          FrontFaceColor->GrayLevel[0],
          BackFaceColor->GrayLevel[0],
          GraphicsColor->GrayLevel[0],
          LineColor -> GrayLevel[0],
          FontSize->Scaled[0.044444444444444446`],
          FontColor->GrayLevel[0]], "StandardForm", "Output",
         StripOnInput->False,
         FrontFaceColor->GrayLevel[0],
         BackFaceColor->GrayLevel[0],
         GraphicsColor->GrayLevel[0],
         LineColor -> GrayLevel[0],
         FontSize->Scaled[0.044444444444444446`],
         FontColor->GrayLevel[0]], "=", ".15"}],
       StripOnInput->False,
       FontSize->13],
      Background->RGBColor[1., 1., 0.871],
      FrameStyle->GrayLevel[0.5],
      StripOnInput->False], {2.321406889314028, 0.005336607845006558}, 
     Automatic, {1.0161344219780217`, 0.24865287894454172`}, {{1., 0.}, {0., 
     1.}}]},
   AspectRatio->NCache[3^Rational[-1, 2], 0.5773502691896258],
   FrameTicks->Automatic,
   ImagePadding->{{0., 1.}, {1., 0.}},
   ImageSize->{372., Automatic},
   PlotRange->{{-0.306186, 2.755676}, {-0.204124, 1.837117}},
   PlotRangePadding->Automatic], " "}]], "Item",
 CellChangeTimes->{{3.511810421568769*^9, 3.5118104568685904`*^9}, 
   3.511810711224493*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
  "Answer", " ", "is", " ", "that", " ", "the", " ", "unemployment", " ", 
   "rate", " ", "among", " ", "illigals", " ", "is", " ", 
   FractionBox[
    RowBox[{"(", 
     RowBox[{".4", "*", ".7"}], ")"}], 
    RowBox[{"P", 
     RowBox[{"(", "illigal", ")"}]}]], "  ", "and", " ", "the", " ", "rate", 
   " ", "among", " ", "leagals", " ", "is", " ", 
   RowBox[{
    FractionBox[
     RowBox[{"(", 
      RowBox[{".6", "*", ".7"}], ")"}], 
     RowBox[{"P", 
      RowBox[{"(", "legal", ")"}]}]], ".", " ", "We"}], " ", "compute", " ", 
   "p", 
   RowBox[{"(", "illegal", ")"}], " ", "by", " ", "saying", " ", "that", " ", 
   "P", 
   RowBox[{"(", "L", ")"}]}], "=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"P", 
     RowBox[{"(", 
      RowBox[{"L", "|", "E"}], ")"}], "*", "P", 
     RowBox[{"(", "E", ")"}]}], "+", 
    RowBox[{"P", 
     RowBox[{"(", 
      RowBox[{"L", "|", 
       OverscriptBox["E", "-"]}], ")"}], "*", "P", 
     RowBox[{"(", 
      OverscriptBox["E", "-"], ")"}], " ", "and", " ", "P", 
     RowBox[{"(", "IL", ")"}]}]}], "=", 
   RowBox[{"1", "-", 
    RowBox[{"P", 
     RowBox[{"(", "L", ")"}]}]}]}]}]], "Item",
 CellChangeTimes->{{3.511810421568769*^9, 3.5118104568685904`*^9}, 
   3.511810711224493*^9, 3.51181317785077*^9, {3.5122206066118917`*^9, 
   3.5122206777330036`*^9}, {3.512220765336763*^9, 3.5122208014683757`*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Understand the concept of statistical independence, and determine whether two \
events are independent.\
\>", "Subsection",
 CellChangeTimes->{{3.511805188920232*^9, 3.511805194959503*^9}, {
  3.5118097024699373`*^9, 3.51180970496546*^9}}],

Cell[CellGroupData[{

Cell["Two events are independent if P(A|B)=P(A)*P(B)", "Subitem",
 CellChangeTimes->{{3.511809708871565*^9, 3.511809728284614*^9}, {
  3.512221035456772*^9, 3.512221035459772*^9}}],

Cell["\<\
If two events are independent the correlation coefficient between them is \
zero, but having a correlation coefficient of zero doesn't mean that they are \
independent. \
\>", "Subitem",
 CellChangeTimes->{{3.512221035904817*^9, 3.51222106153738*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Random Variables", "Section",
 CellChangeTimes->{{3.5118050711484327`*^9, 3.511805073871347*^9}}],

Cell[CellGroupData[{

Cell[TextData[{
 "Compute and interpret means, variances, standard deviations, and means of \
random functions, such as ",
 Cell[BoxData[
  FormBox[
   RowBox[{"E", "(", 
    FractionBox["1", "X"], ")"}], TraditionalForm]]],
 ", both for distribution functions and for density functions. "
}], "Subsection",
 CellChangeTimes->{{3.511805266671049*^9, 3.511805297038159*^9}}],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   SuperscriptBox["\[Sigma]", "2"], "=", 
   RowBox[{
    RowBox[{"E", "[", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"x", "-", "\[Mu]"}], ")"}], "2"], "]"}], "=", 
    RowBox[{
     RowBox[{"E", "(", 
      SuperscriptBox["x", "2"], ")"}], "-", 
     SuperscriptBox["\[Mu]", "2"]}]}]}], TraditionalForm]]]], "Item",
 CellChangeTimes->{{3.511810820456518*^9, 3.51181087204317*^9}, {
  3.511810914394689*^9, 3.511810914400477*^9}, {3.512210420477956*^9, 
  3.512210420480956*^9}}],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{"\[Mu]", " ", "=", " ", 
   RowBox[{
    FractionBox["1", "n"], 
    RowBox[{"(", 
     RowBox[{"\[Sum]", 
      SubscriptBox["x", "i"]}], ")"}]}]}], TraditionalForm]]]], "Item",
 CellChangeTimes->{{3.5122104211030188`*^9, 3.512210457333641*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Continuous Distributions", "Subsubsection",
 CellChangeTimes->{{3.5122253885029964`*^9, 3.5122253910459967`*^9}}],

Cell[CellGroupData[{

Cell["E(x) = \[Integral]f(x) * x ds", "Item",
 CellChangeTimes->{{3.5122253987419963`*^9, 3.5122254153979964`*^9}}],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"E", "(", 
    RowBox[{"2", 
     SuperscriptBox["x", "2"]}], ")"}], "=", 
   RowBox[{"\[Integral]", 
    RowBox[{
     RowBox[{"f", "(", "x", ")"}], " ", "*", " ", 
     RowBox[{"(", 
      RowBox[{"2", 
       SuperscriptBox["x", "2"]}], ")"}], "dx"}]}]}], TraditionalForm]],
 FormatType->"TraditionalForm"]], "Item",
 CellChangeTimes->{{3.5122254158279963`*^9, 3.512225436775996*^9}, {
  3.5122255486849966`*^9, 3.5122255486889963`*^9}}],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"V", " ", 
    RowBox[{"(", "x", ")"}]}], " ", "=", " ", 
   RowBox[{
    RowBox[{"E", 
     RowBox[{"(", 
      RowBox[{"(", 
       RowBox[{"x", "^", "2"}], ")"}], ")"}]}], "=", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"E", "(", "x", ")"}], "2"], " ", "-", " ", 
     RowBox[{
     "find", " ", "the", " ", "expected", " ", "values", " ", "using", " ", 
      "the", " ", "examples", " ", 
      RowBox[{"above", ".", " "}]}]}]}]}], TraditionalForm]],
 FormatType->"TraditionalForm"]], "Item",
 CellChangeTimes->{{3.512225549020996*^9, 3.512225578992996*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Discrete Distributions", "Subsubsection",
 CellChangeTimes->{{3.5122254492349963`*^9, 3.5122254535059967`*^9}}],

Cell[CellGroupData[{

Cell["\<\
E(x) = the sum of all x's divided by the total number of them. \
\>", "Item",
 CellChangeTimes->{{3.5122254598579965`*^9, 3.5122254814909964`*^9}}],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"V", 
     RowBox[{"(", "x", ")"}]}], "=", 
    RowBox[{"E", "(", 
     SuperscriptBox[
      RowBox[{"{", 
       RowBox[{
        SubscriptBox["x", "i"], "-", 
        OverscriptBox["x", "-"]}], ")"}], "2"], ")"}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "= ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"E", "(", 
     SuperscriptBox["x", "2"], ")"}], " ", "=", 
    SuperscriptBox[
     RowBox[{"E", "(", "x", ")"}], "2"]}], TraditionalForm]],
  FormatType->"TraditionalForm"]
}], "Item",
 CellChangeTimes->{{3.5122254820319967`*^9, 3.5122255200969963`*^9}}],

Cell["Algebra tricks:", "Item",
 CellChangeTimes->{{3.511810914669229*^9, 3.511810932396797*^9}}],

Cell[CellGroupData[{

Cell["E(5X)=5 E(X)", "Subitem",
 CellChangeTimes->{{3.51181093815658*^9, 3.5118109460246487`*^9}}],

Cell["E(5)=5", "Subitem",
 CellChangeTimes->{{3.511810947955978*^9, 3.51181095064865*^9}}],

Cell[TextData[{
 "E(X+ ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SuperscriptBox["X", "2"], ")"}], "=", 
    RowBox[{
     RowBox[{"E", "(", "X", ")"}], "+", 
     RowBox[{"E", "(", 
      SuperscriptBox["X", "2"], ")"}]}]}], TraditionalForm]]]
}], "Subitem",
 CellChangeTimes->{{3.511810953595853*^9, 3.511810969633492*^9}, {
  3.51181102014555*^9, 3.511811020150568*^9}}],

Cell[TextData[{
 "E(X- ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SuperscriptBox["X", "2"], ")"}], "=", 
    RowBox[{
     RowBox[{"E", "(", "X", ")"}], "-", 
     RowBox[{"E", "(", 
      SuperscriptBox["X", "2"], ")"}]}]}], TraditionalForm]]]
}], "Subitem",
 CellChangeTimes->{{3.511811020292068*^9, 3.511811026249967*^9}}],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   SubscriptBox["\[Sigma]", 
    RowBox[{"5", "x"}]], "=", 
   RowBox[{"5", " ", 
    SubscriptBox["\[Sigma]", "x"]}]}], TraditionalForm]]]], "Subitem",
 CellChangeTimes->{{3.51181098157102*^9, 3.511810998440469*^9}}],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"V", 
    RowBox[{"(", 
     RowBox[{"5", "X"}], ")"}]}], "=", 
   RowBox[{
    SuperscriptBox["5", "2"], 
    RowBox[{"V", "(", "X", ")"}]}]}], TraditionalForm]]]], "Subitem",
 CellChangeTimes->{{3.51181099988265*^9, 3.511811014327846*^9}, {
  3.512223520546275*^9, 3.5122235205492754`*^9}}],

Cell["V(constant)=0", "Subitem",
 CellChangeTimes->{{3.5122235212513456`*^9, 3.5122235240026207`*^9}}],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"V", "(", 
    RowBox[{"X", "+", 
     SuperscriptBox["X", "2"]}], ")"}], "=", 
   RowBox[{
    RowBox[{"V", "(", "X", ")"}], "+", 
    RowBox[{"V", "(", 
     SuperscriptBox["X", "2"], ")"}], " "}]}], TraditionalForm]]]], "Subitem",\

 CellChangeTimes->{{3.511811015153901*^9, 3.511811071581979*^9}}],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"V", "(", 
    RowBox[{"X", "-", 
     SuperscriptBox["X", "2"]}], ")"}], "=", 
   RowBox[{
    RowBox[{"V", "(", "X", ")"}], "+", 
    RowBox[{"V", "(", 
     SuperscriptBox["X", "2"], ")"}]}]}], TraditionalForm]]]], "Subitem",
 CellChangeTimes->{
  3.511811071773962*^9, {3.512221068418068*^9, 3.512221068421068*^9}}],

Cell["Cov(2x,y) = Cov(x,y)", "Subitem",
 CellChangeTimes->{{3.5122210712023463`*^9, 3.512221083508577*^9}}],

Cell["\<\
Cov(-2x,y)= - Cov( x,y) (essentially all that matters for cov is the sign of \
the coefficients. If you muliplt x and y by any scalar constant, the only \
effect it has on the covariance is the cov inherits to product of the signs \
associated with those scalars)\
\>", "Subitem",
 CellChangeTimes->{{3.5122210842426505`*^9, 3.5122211592401495`*^9}}],

Cell[TextData[{
 "Proof: Cov(-2x,y) = ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox[
     SubscriptBox["\[Sigma]", 
      RowBox[{
       RowBox[{"2", "x"}], ",", "y"}]], 
     RowBox[{
      SubscriptBox["\[Sigma]", 
       RowBox[{"2", "x"}]], 
      SubscriptBox["\[Sigma]", "y"]}]], "=", 
    RowBox[{
     FractionBox[
      RowBox[{
       RowBox[{"-", "2"}], 
       SubscriptBox["\[Sigma]", 
        RowBox[{"x", ",", "y"}]]}], 
      RowBox[{
       SqrtBox[
        RowBox[{"4", 
         RowBox[{"(", 
          RowBox[{"v", "(", "x", ")"}]}]}]], 
       SqrtBox[
        RowBox[{"V", "(", "y", ")"}]]}]], "=", 
     RowBox[{
      FractionBox[
       RowBox[{
        RowBox[{"-", "2"}], 
        SubscriptBox["\[Sigma]", 
         RowBox[{"x", ",", "y"}]]}], 
       RowBox[{"2", 
        SqrtBox[
         RowBox[{"v", "(", "x", ")"}]], 
        SqrtBox[
         RowBox[{"v", "(", "y", ")"}]]}]], "=", 
      RowBox[{
       FractionBox[
        RowBox[{"-", 
         SubscriptBox["\[Sigma]", 
          RowBox[{"x", ",", "y"}]]}], 
        RowBox[{
         SubscriptBox["\[Sigma]", "x"], " ", 
         SubscriptBox["\[Sigma]", "y"]}]], "=", 
       RowBox[{"-", 
        RowBox[{"Corr", "(", 
         RowBox[{"x", ",", "y"}], ")"}]}]}]}]}]}], TraditionalForm]],
  FormatType->"TraditionalForm"]
}], "Subitem",
 CellChangeTimes->{{3.5122211645016756`*^9, 3.512221189120137*^9}, {
  3.512221304822706*^9, 3.5122215165850086`*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Confirm that a distribution function or density function is valid.\
\>", "Subsection",
 CellChangeTimes->{{3.511805266671049*^9, 3.511805276244597*^9}}],

Cell[BoxData[
 StyleBox[
  RowBox[{"Continuous", " ", "distributions"}], "Subsubsection"]], "Input"],

Cell[CellGroupData[{

Cell[TextData[{
 "We need to say that ",
 Cell[BoxData[
  RowBox[{
   RowBox[{
    SubsuperscriptBox["\[Integral]", "lower", "upper"], 
    RowBox[{"f", 
     RowBox[{"(", "x", ")"}], 
     RowBox[{"\[DifferentialD]", "x"}]}]}], "=", "1"}]]]
}], "Item",
 CellChangeTimes->{{3.512221540272009*^9, 3.5122216471170087`*^9}, {
  3.512221901036009*^9, 3.5122219199030085`*^9}}],

Cell["\<\
We are also asked to find a constant k so that a Joint density function is \
valid and the way to do that is to solve \[Integral]\[Integral]k f(x,y) dx, \
dy=1 for k. \
\>", "Item",
 CellChangeTimes->{{3.5122216474020085`*^9, 3.5122216836560087`*^9}}]
}, Open  ]],

Cell[BoxData[
 StyleBox[
  RowBox[{"Discrete", " ", "Distributions"}], "Subsubsection"]], "Input"],

Cell["\<\
We need to sum up all the individual probabilities and ensure that they add \
up to one. \
\>", "Item",
 CellChangeTimes->{{3.5122219395130086`*^9, 3.5122219567120085`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Determine a cdf from a pdf, or vice versa.  Use a cdf to compute medians, and \
other percentiles.\
\>", "Subsection",
 CellChangeTimes->{{3.511805266671049*^9, 3.511805276244597*^9}, 
   3.512221689543009*^9}],

Cell[CellGroupData[{

Cell["Continuous distributions", "Subsubsection",
 CellChangeTimes->{{3.5122216942630086`*^9, 3.512221732437009*^9}}],

Cell[CellGroupData[{

Cell[TextData[{
 "If we are given a pdf of one variable we do the following integral F(x)=",
 Cell[BoxData[
  RowBox[{
   SubsuperscriptBox["\[Integral]", 
    RowBox[{"lower", " ", "bound"}], "x"], 
   RowBox[{"f", 
    RowBox[{"(", "x", ")"}], 
    RowBox[{"\[DifferentialD]", "x"}]}]}]]]
}], "Item",
 CellChangeTimes->{{3.5122217680670085`*^9, 3.5122218153480086`*^9}}],

Cell["\<\
Obviously, the pdf can be obtianed from the CDF if we take the derivative of \
it with respect to x. \
\>", "Item",
 CellChangeTimes->{{3.5122218158880086`*^9, 3.5122218498860083`*^9}, {
  3.512223200181242*^9, 3.512223200185242*^9}}],

Cell[TextData[{
 "To compute means or medians you simply say that ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"F", 
     RowBox[{"(", "x", ")"}]}], "=", 
    SubscriptBox["\[Phi]", "percentile"]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ". An example would be finding the median by setting F(x)=.5 and then \
solving for x."
}], "Item",
 CellChangeTimes->{{3.5122232012693505`*^9, 3.512223259160139*^9}, {
  3.5122246530435133`*^9, 3.5122246530465136`*^9}}],

Cell["\<\
If we have a pdf and we want to find the probablitiy that a random variable \
is between two values we simply do the integral of hte pds with thoe values \
as our bounds, or we can find the CDF and to F(upper)-F(lower)\
\>", "Item",
 CellChangeTimes->{{3.512224653427552*^9, 3.512224704101619*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Discrete Distributions", "Subsubsection",
 CellChangeTimes->{{3.512221860062009*^9, 3.5122218637570086`*^9}}],

Cell["\<\
A pdf is usually found or converted into a table. There really isn't anything \
like a cdf because there are only distcrete, specific intervals for which the \
variable is defined. \
\>", "Item",
 CellChangeTimes->{{3.5122247167578845`*^9, 3.5122247558477926`*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Joint Distributions", "Section",
 CellChangeTimes->{{3.511805076891378*^9, 3.511805079546504*^9}}],

Cell[CellGroupData[{

Cell["Confirm that a joint density function is valid.", "Subsection",
 CellChangeTimes->{{3.511805313344839*^9, 3.51180531933927*^9}}],

Cell[CellGroupData[{

Cell["Continuous distributions", "Subsubsection",
 CellChangeTimes->{{3.512224908606067*^9, 3.5122249167508817`*^9}}],

Cell["\<\
This is much like confirming a density function for one variable, but in the \
joint case we simply need to confirm that \[Integral]\[Integral] \
f(x,.y)dxdy=1. The bounds of integration are just the bousds given us in the \
description of the pdf. \
\>", "Item",
 CellChangeTimes->{{3.5122249336924133`*^9, 3.512224993666415*^9}, 
   3.5122250388918924`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Discrete Distributions", "Subsubsection",
 CellChangeTimes->{{3.5122249201587667`*^9, 3.512224928284954*^9}}],

Cell["\<\
Also very similar to the one variable case, but here we need to ensure that \
the marginal densities both sum to 1 and that the joint density (entries in \
the table) sum to one also. \
\>", "Item",
 CellChangeTimes->{{3.512225041883593*^9, 3.5122250873320475`*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Find joint probabilities, such as P(X>1, Y<3) or P(X>Y) .\
\>", "Subsection",
 CellChangeTimes->{{3.511805313344839*^9, 3.511805372337346*^9}}],

Cell[CellGroupData[{

Cell["Continuous Distributions", "Subsubsection",
 CellChangeTimes->{{3.512224215904804*^9, 3.5122242182090344`*^9}}],

Cell[TextData[{
 "We will nee do solve double integrals, taking special care to watch our \
bounds. One tricky thing that might happen is that x,y are both defined from \
[0,1] and we want to find the probabiltiy that x is at least twice as big as \
y. The integral would be ",
 Cell[BoxData[
  RowBox[{
   SubsuperscriptBox["\[Integral]", "0", 
    RowBox[{"1", "/", "2"}]], 
   RowBox[{
    SubsuperscriptBox["\[Integral]", "0", 
     RowBox[{"2", "y"}]], 
    RowBox[{"f", 
     RowBox[{"(", 
      RowBox[{"x", ",", "y"}], ")"}], 
     RowBox[{"\[DifferentialD]", "x"}], 
     RowBox[{"\[DifferentialD]", "y"}]}]}]}]]],
 " - the reason this one was tricky was that instead of going from 0-1 for y \
we only went to 1/2 because if x is to be 2y and the max x value is 1, the \
max y value for this problem is 1/2."
}], "Item",
 CellChangeTimes->{{3.5122243284850607`*^9, 3.5122244492911406`*^9}, {
  3.5122246215713663`*^9, 3.512224621635373*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Discrete Distributions", "Subsubsection",
 CellChangeTimes->{{3.5122242111203256`*^9, 3.5122242140966234`*^9}}],

Cell["\<\
this one is actually pretty easy. Make the table of values Then go through it \
for all the combinations you care about and sum to probabilities. I know that \
sounds pretty vague, but if you know what you are doing it should be reminder \
enought to get you going. \
\>", "Item",
 CellChangeTimes->{{3.51222422936115*^9, 3.5122243195731697`*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Find marginal densities from joint density.", "Subsection",
 CellChangeTimes->{{3.511805313344839*^9, 3.511805325178529*^9}, 
   3.5118053765122623`*^9}],

Cell[CellGroupData[{

Cell["Continuous Distributions", "Subsubsection",
 CellChangeTimes->{{3.5122219931520085`*^9, 3.5122220046770086`*^9}}],

Cell[TextData[{
 "To do this we need to integrate out one of the variables. For example if we \
have f(x,y) and we want ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["f", "x"], "(", "x", ")"}], " ", "we", " ", "need", " ", 
    "to", " ", "solve", " ", 
    RowBox[{"\[Integral]", 
     RowBox[{
      RowBox[{"f", "(", 
       RowBox[{"x", ",", "y"}], ")"}], "dy", " ", "over", " ", "the", " ", 
      "entire", " ", "range", " "}]}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " y exists. Be careful here because sometimes you need to be aware of \
relationships that must exist among your variables and instead of numbers for \
your bounds you might get functions. "
}], "Item",
 CellChangeTimes->{{3.5122220217480087`*^9, 3.5122221359660087`*^9}, {
  3.5122233254197645`*^9, 3.5122233267799006`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Discrete Distributions", "Subsubsection",
 CellChangeTimes->{{3.5122220078130083`*^9, 3.5122220112690086`*^9}}],

Cell["\<\
This is even easier, you just need to create a table out of your data and \
look at individual rows and columns (they will correspond to something like \
x=1 and y=0,1,2) and sum them up. Make sure that after you have found these \
marginal densities, they \"x\" probabilities and the \"y\" probabilities all \
sum to 1.\
\>", "Item",
 CellChangeTimes->{{3.5122221426850085`*^9, 3.5122222152890086`*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Determine whether X and Y are independent or not.", "Subsection",
 CellChangeTimes->{{3.511805313344839*^9, 3.5118053273148823`*^9}, {
   3.511805378936536*^9, 3.511805386728333*^9}, 3.5122220775210085`*^9}],

Cell[CellGroupData[{

Cell["Continuous Distribution", "Subsubsection",
 CellChangeTimes->{{3.5122238396331806`*^9, 3.5122238441926365`*^9}}],

Cell[TextData[{
 "x and y are independent iff ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", 
     RowBox[{"(", 
      RowBox[{"x", ",", "y"}], ")"}]}], "=", 
    RowBox[{
     RowBox[{
      SubscriptBox["f", "x"], "(", "x", ")"}], "*", 
     RowBox[{
      SubscriptBox["f", "y"], "(", "y", ")"}]}]}], TraditionalForm]],
  FormatType->"TraditionalForm"]
}], "Item",
 CellChangeTimes->{{3.5122238708343005`*^9, 3.512223897639981*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Discrete Distribution", "Subsubsection",
 CellChangeTimes->{{3.5122238502732444`*^9, 3.512223853809598*^9}}],

Cell[CellGroupData[{

Cell["x and y are independent if P(X=x,Y=y)=P(X=x) * P(Y=y)", "Item",
 CellChangeTimes->{{3.512223906099827*^9, 3.5122239282610426`*^9}, {
  3.51222403194541*^9, 3.51222403194841*^9}}],

Cell["\<\
To test this we need to take the marginal distributions for both x and y and \
take corresponding prodcuts to make sure that each and every product is equal \
to the value in teh tbale under the x,y values multiplied. \
\>", "Item",
 CellChangeTimes->{{3.5122240322484403`*^9, 3.512224034664682*^9}, {
  3.5122241475339675`*^9, 3.5122241782870426`*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Find expected value of a random function, such as ",
 Cell[BoxData[
  FormBox[
   RowBox[{"E", "(", 
    RowBox[{
     SuperscriptBox["X", "2"], "Y"}], ")"}], TraditionalForm]]],
 "."
}], "Subsection",
 CellChangeTimes->{{3.511805313344839*^9, 3.5118053288028173`*^9}, {
  3.51180538904904*^9, 3.511805402241785*^9}}],

Cell[CellGroupData[{

Cell["Continuous Distributions", "Subsubsection",
 CellChangeTimes->{{3.5122251400277777`*^9, 3.5122251433874416`*^9}}],

Cell[CellGroupData[{

Cell["\<\
I think this one applies more to continuous so I will spend more time here. \
\>", "Item",
 CellChangeTimes->{{3.5122251474350367`*^9, 3.5122251616426163`*^9}}],

Cell["\<\
the expected value of any function of random variables is the double indegral \
of the pdf multilied by those variables along the entire domain where they \
exist. \
\>", "Item",
 CellChangeTimes->{{3.5122251645203285`*^9, 3.512225198068973*^9}}],

Cell[TextData[{
 "The example in the heading would yeild ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Integral]", 
    RowBox[{"\[Integral]", 
     RowBox[{
      SuperscriptBox["x", "2"], "y", "*", 
      RowBox[{"f", "(", 
       RowBox[{"x", ",", "y"}], ")"}], "dxdy"}]}]}], TraditionalForm]],
  FormatType->"TraditionalForm"]
}], "Item",
 CellChangeTimes->{{3.5122251982749524`*^9, 3.512225223730996*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Discrete Distributions", "Subsubsection",
 CellChangeTimes->{{3.5122252397269964`*^9, 3.5122252471819963`*^9}}],

Cell["\<\
If you can do it for a discrete joint density function I don't know how and \
don't have any record of it. \
\>", "Item",
 CellChangeTimes->{{3.512225251709996*^9, 3.5122252876439962`*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Find the covariance ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Sigma]", "xy"], TraditionalForm]],
  FormatType->"TraditionalForm"]
}], "Subsection",
 CellChangeTimes->{{3.511805313344839*^9, 3.511805331002977*^9}, {
  3.511805405391387*^9, 3.5118054174629173`*^9}}],

Cell[CellGroupData[{

Cell["Continuous Distributions", "Subsubsection",
 CellChangeTimes->{{3.5122222551110086`*^9, 3.5122222657020082`*^9}}],

Cell[CellGroupData[{

Cell["The equation is Cov(x,y)=E(xy)-E(x)E(y)", "Item",
 CellChangeTimes->{{3.511806818172616*^9, 3.51180682523068*^9}, {
  3.511806866547513*^9, 3.511806866552293*^9}}],

Cell[TextData[{
 "E(xy) is computed as follows: ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubsuperscriptBox["\[Integral]", 
     SubscriptBox["y", "1"], 
     SubscriptBox["y", "2"]], 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       SubsuperscriptBox["\[Integral]", 
        SubscriptBox["lx", "1"], 
        SubscriptBox["x", "2"]], 
       RowBox[{"x", "*", "y", "*", 
        RowBox[{"f", "(", 
         RowBox[{"x", ",", "y"}], ")"}], 
        RowBox[{"\[DifferentialD]", "x"}]}]}], ")"}], 
     RowBox[{"\[DifferentialD]", "y"}]}]}], TraditionalForm]]]
}], "Item",
 CellChangeTimes->{{3.511806883816949*^9, 3.511806978340328*^9}, {
  3.5122222717710085`*^9, 3.5122222747700086`*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Discrete Distributions", "Subsubsection",
 CellChangeTimes->{{3.5122222807250085`*^9, 3.5122222854610085`*^9}}],

Cell[CellGroupData[{

Cell["\<\
We will be given a joint density function or a table. We need to find the \
marginal distributions and the E(x),E(y), E(xy) from the table and \
Cov(x,y)=E(xy)-E(x)E(y)\
\>", "Item",
 CellChangeTimes->{{3.5122224665230083`*^9, 3.5122225064410086`*^9}, {
  3.512222993436569*^9, 3.512223005916817*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{GridBox[{
    {"\[Placeholder]", 
     RowBox[{"x", "=", "0"}], 
     RowBox[{"x", "=", "1"}], 
     RowBox[{"x", "=", "2"}]},
    {
     RowBox[{"y", "=", "1"}], ".3", ".2", ".1"},
    {
     RowBox[{"y", "=", "3"}], ".1", ".2", ".1"}
   }], ",", " "}]], "Subitem",
 CellChangeTimes->{{3.5122225100980086`*^9, 3.512222649101139*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
   "In", " ", "this", " ", "example", " ", "the", " ", "marginal", " ", 
    "distributions", " ", "are", " ", "P", 
    RowBox[{"(", 
     RowBox[{"Y", "=", "1"}], ")"}]}], "=", ".6"}], ",", " ", 
  RowBox[{
   RowBox[{"P", 
    RowBox[{"(", 
     RowBox[{"Y", "=", "3"}], ")"}]}], "=", 
   RowBox[{
    RowBox[{".4", " ", "and", " ", "P", 
     RowBox[{"(", 
      RowBox[{"X", "=", "0"}], ")"}]}], "=", ".4"}]}], ",", " ", 
  RowBox[{
   RowBox[{"P", 
    RowBox[{"(", 
     RowBox[{"X", "=", "1"}], ")"}]}], "=", 
   RowBox[{
    RowBox[{".4", " ", "P", 
     RowBox[{"(", 
      RowBox[{"X", "=", "2"}], ")"}]}], "=", ".2"}]}]}]], "Subitem",
 CellChangeTimes->{{3.5122225100980086`*^9, 3.512222649101139*^9}}],

Cell[TextData[{
 "E(x) = 0 (.4) + (1) (.4) +(2) (.2)=.8          ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"E", "(", 
     SuperscriptBox["x", "2"], ")"}], "="}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "2.4"
}], "Subitem",
 CellChangeTimes->{{3.5122226447497044`*^9, 3.512222695074736*^9}, {
  3.512222820165244*^9, 3.512222824376665*^9}, {3.51222288593182*^9, 
  3.512222907570984*^9}}],

Cell[TextData[{
 "E(y) = 1*.6 3*.4=1.8, ",
 Cell[BoxData[
  FormBox[
   RowBox[{"                         ", 
    RowBox[{
     RowBox[{"E", "(", 
      SuperscriptBox["y", "2"], ")"}], "=", 
     RowBox[{"4.2", " ", "-", " ", 
      RowBox[{"note", " ", "that", " ", "I", " ", 
       RowBox[{"didn", "'"}], "t", " ", "write", " ", "this", " ", "out", " ",
        "but", " ", "all", " ", "you", " ", "have", " ", "to", " ", "do", " ",
        "is", " ", "square", " ", "all", " ", "the", " ", "y", " ", "terms", 
       " ", "and", " ", "multiply", " ", "them", " ", "by", " ", "their", " ", 
       RowBox[{"probabilities", "."}]}]}]}]}], TraditionalForm]],
  FormatType->"TraditionalForm"]
}], "Subitem",
 CellChangeTimes->{{3.5122226960958385`*^9, 3.5122227175719852`*^9}, {
  3.5122227657788057`*^9, 3.5122228139616237`*^9}, {3.5122229034695735`*^9, 
  3.512222909175144*^9}}],

Cell["\<\
E(xy) = 0*1*.3 + 0*3*.1 + 1*1*.2 + 1*3*.2 +2*1*.1+2*3*.1 = 1.6\
\>", "Subitem",
 CellChangeTimes->{{3.51222271912014*^9, 3.512222747457974*^9}, {
  3.5122229292901554`*^9, 3.5122229305242786`*^9}}],

Cell["E(xy)-E(x)E(y) = 1.6- (.8*1.8)=.16", "Subitem",
 CellChangeTimes->{{3.512222933801606*^9, 3.512222984395665*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Covariance algebra, such as Cov[3X, -4Y] and V[3X-4Y].\
\>", "Subsection",
 CellChangeTimes->{{3.511805313344839*^9, 3.5118053331223927`*^9}, {
  3.511805422079536*^9, 3.511805442653986*^9}}],

Cell[CellGroupData[{

Cell["Cov(3x,-4y)=3*-4*Cov(x,y)", "Subitem",
 CellChangeTimes->{3.511806712242683*^9, 3.511807479471548*^9}],

Cell["Cov(x,number)=0", "Subitem",
 CellChangeTimes->{
  3.511806712242683*^9, {3.511807479471548*^9, 3.511807480013402*^9}}],

Cell["Cov(x+y,z)=Cov(x,z)+Cov(y,z)", "Subitem",
 CellChangeTimes->{
  3.511806712242683*^9, {3.511807479471548*^9, 3.5118074804454117`*^9}}],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"Var", 
    RowBox[{"(", 
     RowBox[{"2", "x"}], ")"}]}], "=", 
   RowBox[{
    SuperscriptBox["2", "2"], 
    RowBox[{"Var", "(", "x", ")"}]}]}], TraditionalForm]]]], "Subitem",
 CellChangeTimes->{
  3.511806712242683*^9, {3.511807479471548*^9, 3.511807480821391*^9}}],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"Var", 
    RowBox[{"(", 
     RowBox[{"-", "x"}], ")"}]}], "=", 
   RowBox[{
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"-", "1"}], ")"}], "2"], 
     RowBox[{"Var", "(", "x", ")"}]}], "=", 
    RowBox[{"Var", "(", "x", ")"}]}]}], TraditionalForm]]]], "Subitem",
 CellChangeTimes->{
  3.511806712242683*^9, {3.511807479471548*^9, 3.5118074811810913`*^9}}],

Cell["Var(3x,-2y)=V(3x)+V(2y)+2Cov(3x,-2y)=9V(x)+4V(y)-12Cov(x,y)", "Subitem",
 CellChangeTimes->{
  3.511806712242683*^9, {3.511807479471548*^9, 3.5118074811810913`*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Find the correlation coefficient \[Rho]\
\>", "Subsection",
 CellChangeTimes->{{3.511805313344839*^9, 3.5118053406337976`*^9}, {
  3.511805444246275*^9, 3.511805446637971*^9}}],

Cell[CellGroupData[{

Cell[TextData[{
 "\[Rho]=",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"Corr", " ", 
     RowBox[{"(", 
      RowBox[{"x", ",", " ", "y"}], ")"}]}], " ", "=", " ", 
    FractionBox[
     RowBox[{"(", 
      RowBox[{"Cov", 
       RowBox[{"(", 
        RowBox[{"x", ",", " ", "y"}], ")"}]}], ")"}], 
     RowBox[{
      SubscriptBox["\[Sigma]", "x"], 
      SubscriptBox["\[Sigma]", "y"]}]]}], TraditionalForm]]],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[Sigma]", "x"], "=", 
    RowBox[{
     RowBox[{
      SqrtBox[
       RowBox[{"V", "(", "x", ")"}]], "and", " ", 
      SubscriptBox["\[Sigma]", "y"]}], "=", 
     SqrtBox[
      RowBox[{"V", "(", "y", ")"}]]}]}], TraditionalForm]]]
}], "Item",
 CellChangeTimes->{
  3.511806736849996*^9, {3.5118067736740103`*^9, 3.511806792569129*^9}, {
   3.5122223634590087`*^9, 3.5122223661960087`*^9}, {3.5122253328729963`*^9, 
   3.5122253328789964`*^9}}],

Cell[TextData[{
 "The other steps (like how to find Cov(x,y) and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[Sigma]", "x"], " ", "are", " "}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "outlined above)"
}], "Item",
 CellChangeTimes->{{3.512225333145996*^9, 3.5122253574639964`*^9}, 
   3.5122256090979967`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Understand the relationship between correlation and independence.\
\>", "Subsection",
 CellChangeTimes->{{3.511805313344839*^9, 3.5118053372342463`*^9}}],

Cell["\<\
If the Corr(x,y)=0 that doesn\[CloseCurlyQuote]t mean that they are \
independent. However, if they are independent the Corr(x,y)=0.\
\>", "Subitem",
 CellChangeTimes->{3.5118067563831873`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Understand the relationship between correlation and causation.\
\>", "Subsection",
 CellChangeTimes->{{3.511805313344839*^9, 3.5118053372342463`*^9}, 
   3.5118054521496067`*^9}],

Cell[CellGroupData[{

Cell["\<\
Correlation doesn\[CloseCurlyQuote]t imply causation. So if two things have a \
strong correlation it doesn\[CloseCurlyQuote]t necessarily mean that one \
causes the other. It just means that they usually move together.\
\>", "Subitem",
 CellChangeTimes->{
  3.511806766775819*^9, 3.511813188209343*^9, {3.5122231135535803`*^9, 
   3.512223121382363*^9}}],

Cell["\<\
A correlation coefficient of 1 means they move perfectly together.\
\>", "Subitem",
 CellChangeTimes->{{3.5122231221774426`*^9, 3.5122231359258165`*^9}}],

Cell["\<\
A correllation coefficient of -1 means that they move in opposite directions \
perfectly.\
\>", "Subitem",
 CellChangeTimes->{{3.512223136322857*^9, 3.5122231567588997`*^9}}],

Cell["\<\
A correllation coefficeint of 0 means they don't move together. \
\>", "Subitem",
 CellChangeTimes->{{3.5122231571549397`*^9, 3.5122231675559797`*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Common Distributions", "Section",
 CellChangeTimes->{{3.511805082034875*^9, 3.511805084546597*^9}}],

Cell[CellGroupData[{

Cell["\<\
Find mean, variance, and probability functions for Bernoulli, binomial, \
geometric, and Poisson distributions.  (Distributions handout will be \
provided as part of exam.)\
\>", "Subsection",
 CellChangeTimes->{{3.511805471383253*^9, 3.5118054727893143`*^9}}],

Cell[CellGroupData[{

Cell["\<\
Bernoulli(p): Outcome is success or failure and p is probability of success\
\>", "Item",
 CellChangeTimes->{{3.511811101823145*^9, 3.5118111129312963`*^9}, {
  3.511811148205762*^9, 3.511811158365226*^9}, {3.511813189814928*^9, 
  3.511813190746728*^9}}],

Cell["\<\
Binomial (n,p): Out of  independent Bernoulli trials the probability of each \
one being a success. \
\>", "Item",
 CellChangeTimes->{{3.511811113367481*^9, 3.511811167092767*^9}, {
  3.511811203105351*^9, 3.511811215553093*^9}, {3.512223684218641*^9, 
  3.512223685849804*^9}}],

Cell["\<\
Geometric (p): For this distribution we have p chance of having a succes each \
time and we keep repeating until we get it right. IT HAS THE MEMORYLESS \
PROPERTY.\
\>", "Item",
 CellChangeTimes->{{3.511811216299376*^9, 3.511811221962961*^9}, {
  3.512223662937513*^9, 3.512223675849804*^9}, {3.5122237146996884`*^9, 
  3.5122237622054386`*^9}}],

Cell["\<\
Poisson (\[Lambda]): The poisson distribution is used when we average \
\[Lambda] occurences in a time period and we want to find probabilities that \
we will get a certain number. \
\>", "Item",
 CellChangeTimes->{{3.5122236679130106`*^9, 3.5122236698332024`*^9}, {
  3.5122237702532434`*^9, 3.5122238108473024`*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Find mean, variance, pdf, cdf, and percentiles for uniform, exponential, \
normal, and Chi-square distributions.  (Probability tables will be provided \
as part of exam.)\
\>", "Subsection",
 CellChangeTimes->{{3.5118054849989853`*^9, 3.511805490604437*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"E", 
   RowBox[{"(", "x", ")"}]}], "=", " ", 
  RowBox[{
   RowBox[{"\[OpenCurlyDoubleQuote]", "mean", "\[CloseCurlyDoubleQuote]"}], 
   " ", "on", " ", "table"}]}]], "Item",
 CellChangeTimes->{3.512225665157996*^9},
 FontFamily->"Times New Roman"],

Cell[BoxData[
 RowBox[{
  RowBox[{"V", 
   RowBox[{"(", "x", ")"}]}], "=", " ", 
  RowBox[{
   RowBox[{"\[OpenCurlyDoubleQuote]", "Variace", "\[CloseCurlyDoubleQuote]"}],
    " ", "on", " ", "table"}]}]], "Item",
 CellChangeTimes->{{3.512225665157996*^9, 3.5122256680059967`*^9}},
 FontFamily->"Times New Roman"],

Cell[BoxData[
 RowBox[{
  RowBox[{"pdf", 
   RowBox[{"(", "x", ")"}]}], "=", " ", 
  RowBox[{
   RowBox[{"\[OpenCurlyDoubleQuote]", 
    RowBox[{"f", 
     RowBox[{"(", "x", ")"}]}], "\[CloseCurlyDoubleQuote]"}], " ", "on", " ", 
   "table"}]}]], "Item",
 CellChangeTimes->{{3.512225665157996*^9, 3.512225668565996*^9}},
 FontFamily->"Times New Roman"],

Cell[BoxData[
 RowBox[{
  RowBox[{"cdf", 
   RowBox[{"(", "x", ")"}]}], "=", " ", 
  RowBox[{
   RowBox[{"\[OpenCurlyDoubleQuote]", 
    RowBox[{"F", 
     RowBox[{"(", "x", ")"}]}], "\[CloseCurlyDoubleQuote]"}], " ", "on", " ", 
   "table"}]}]], "Item",
 CellChangeTimes->{{3.512225665157996*^9, 3.5122256694139967`*^9}},
 FontFamily->"Times New Roman"],

Cell[BoxData[
 RowBox[{"Percentile", ":", " ", 
  RowBox[{
   RowBox[{
   "if", " ", "I", " ", "am", " ", "looking", " ", "for", " ", "the", " ", 
    "95", "th", " ", "percentile", " ", "I", " ", "say", " ", 
    FormBox[
     RowBox[{
      RowBox[{"P", "(", 
       RowBox[{"y", "\[GreaterEqual]", 
        SubscriptBox["\[Phi]", ".95"]}], ")"}], "=", ".05", " "}],
     TraditionalForm], "and", " ", "look", " ", "up", " ", "the", " ", "z"}], 
   "-", 
   RowBox[{
   "score", " ", "associated", " ", "with", " ", ".05", " ", "on", " ", "the",
     " ", 
    RowBox[{"chart", "."}]}]}]}]], "Item",
 CellChangeTimes->{{3.512225665157996*^9, 3.5122256719579964`*^9}},
 FontFamily->"Times New Roman"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Find percentiles for t and F distributions.\
\>", "Subsection",
 CellChangeTimes->{{3.5118054849989853`*^9, 3.511805506603704*^9}}],

Cell["\<\
I don't know that it is any different than finding percentiles for other \
special continuous distributions. I think we just need to know our degrees of \
freedom and then find the value associated with that percentile. \
\>", "Item",
 CellChangeTimes->{{3.512226051711996*^9, 3.512226102204996*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Know approximate shape of each probability distribution or density function \
above.\
\>", "Subsection",
 CellChangeTimes->{{3.5118054849989853`*^9, 3.511805492283779*^9}, {
  3.511806665987899*^9, 3.5118066706739883`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"PDF", "[", 
      RowBox[{
       RowBox[{"NormalDistribution", "[", 
        RowBox[{"0", ",", " ", "1"}], "]"}], ",", " ", "x"}], "]"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"x", ",", " ", 
       RowBox[{"-", "5"}], ",", " ", "5"}], "}"}], ",", " ", 
     RowBox[{"Filling", " ", "->", " ", "Axis"}], ",", " ", 
     RowBox[{"PlotLabel", " ", "->", " ", "\"\<Normal Distribution\>\""}], 
     ",", " ", 
     RowBox[{"FillingStyle", " ", "->", " ", "LightBlue"}]}], "]"}], ",", " ", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"PDF", "[", 
      RowBox[{
       RowBox[{"ExponentialDistribution", "[", ".7", "]"}], ",", " ", "x"}], 
      "]"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"x", ",", " ", "0", ",", " ", "5"}], "}"}], ",", " ", 
     RowBox[{"Filling", " ", "->", " ", "Axis"}], ",", " ", 
     RowBox[{
     "PlotLabel", " ", "->", " ", "\"\<Exponential Distribution\>\""}], ",", 
     " ", 
     RowBox[{"FillingStyle", " ", "->", " ", "LightGreen"}]}], "]"}], ",", 
   " ", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"PDF", "[", 
      RowBox[{
       RowBox[{"StudentTDistribution", "[", "15", "]"}], ",", " ", "x"}], 
      "]"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"x", ",", " ", 
       RowBox[{"-", "10"}], ",", " ", "10"}], "}"}], ",", " ", 
     RowBox[{"Filling", " ", "->", " ", "Axis"}], ",", " ", 
     RowBox[{"FillingStyle", " ", "->", " ", "LightRed"}], ",", " ", 
     RowBox[{"PlotLabel", " ", "->", " ", "\"\<t-Distribution\>\""}], ",", 
     " ", 
     RowBox[{"PlotRange", " ", "->", " ", 
      RowBox[{"{", 
       RowBox[{"0", ",", " ", ".4"}], "}"}]}]}], "]"}], ",", " ", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"PDF", "[", 
      RowBox[{
       RowBox[{"FRatioDistribution", "[", 
        RowBox[{"10", ",", " ", "25"}], "]"}], ",", " ", "x"}], "]"}], ",", 
     " ", 
     RowBox[{"{", 
      RowBox[{"x", ",", " ", "0", ",", " ", "3"}], "}"}], ",", " ", 
     RowBox[{"Filling", " ", "->", " ", "Axis"}], ",", " ", 
     RowBox[{"PlotLabel", " ", "->", " ", "\"\<F-Distribution\>\""}], ",", 
     " ", 
     RowBox[{"FillingStyle", " ", "->", " ", "LightYellow"}]}], "]"}], ",", 
   " ", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"PDF", "[", 
      RowBox[{
       RowBox[{"UniformDistribution", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", " ", "1"}], "}"}], "]"}], ",", " ", "x"}], 
      "]"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"x", ",", " ", 
       RowBox[{"-", "1"}], ",", " ", "1"}], "}"}], ",", " ", 
     RowBox[{"Filling", " ", "->", " ", "Axis"}], ",", " ", 
     RowBox[{"PlotLabel", " ", "->", " ", "\"\<Uniform Distribution\>\""}], 
     ",", " ", 
     RowBox[{"FillingStyle", " ", "->", " ", "LightGray"}]}], "]"}], ",", " ", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"PDF", "[", 
      RowBox[{
       RowBox[{"ChiSquareDistribution", "[", "4", "]"}], ",", " ", "x"}], 
      "]"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"x", ",", " ", "0", ",", " ", "10"}], "}"}], ",", " ", 
     RowBox[{"Filling", " ", "->", " ", "Axis"}], ",", " ", 
     RowBox[{"PlotLabel", " ", "->", " ", "\"\<Chi-Square distribution\>\""}],
      ",", " ", 
     RowBox[{"FillingStyle", " ", "->", " ", "LightOrange"}]}], "]"}]}], 
  "}"}]], "Input",
 CellChangeTimes->{{3.511806671880292*^9, 3.51180667188862*^9}, {
  3.5122259030239964`*^9, 3.5122259695999966`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[GraphicsComplexBox[CompressedData["
1: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
/N/8/wFIRnNG
     "], {{{}, 
       {RGBColor[0.87, 0.94, 1], EdgeForm[None], 
        GraphicsGroupBox[PolygonBox[CompressedData["
1:eJwl1ne4j3Ucx+HjmNl7k5mZVWSPyt5771UhIRklKVIhm2QTSdl779mgrdCi
lNKiSen+5I/7er7v1znW+T3PcynYa3CrhxMTEhKS8F7ireu7ibfOFZxPu1bl
OG/4YgXX/dzhvIQ7nDfH13zvKruM825u2I/ZN3jB7mJnc55KNns5z2qv2CWd
t/OR3cL+iD52ebuo82KK2pt4XbvOcO06z2ud7azOL5LVXsYE7UOaax/SWytn
F3FeRBF7I6u1v3lU+5vntE52FucpZLGXMl77gGbaB/TSytqFnRdS2N7Aa9pf
DNP+YqLW0c7sPJnM9hKe0d6nqfY+PbUydiHnBRSy17NK+5Oh2p88q3WwMzlP
IpO9mKfj86OJ9h49tDvtgs7zKWiv41XtD4ZofzBBa29njM+JjPYixsV9QGPt
Xbprpe0Czi9TwF7LSu13HtF+Z7zWzs4Qnw0Z7IU8FfcSjbTTdNNK2Sv4jcHa
bzyjt7XTx2dBensBY7VTNNRO0VUrGfcP13hYu8bTehs7XfzsSWfP50ntHRpo
79BFK2Ev5yqDtKuM01vbaeNnTVr7ZcZob1Nfe5vOWnF7Gb8yUPuVp/RWdpr4
2ZLGnscT2lvU096ik1bMXsovDNB+Yaze0n6cN6mrvUnHeObsJfzMQ9rPPKm3
sEdzkvu1k3TQi9qL+YkHtZ8Yoze3R3GC+7QTtNeL2Iv4kQe0H3lCb2aP5Dj3
asdppxe2F3KF/toVHteb2iM4Rh3tGG31QvYCfqCf9gOj9SbxruAotbWjtNEL
xv3G7eQnX9yP8exzhFq+7witfW9eez7f01f7nlF6o3i2OUxN7TCt9Dzx+zrP
43Z7TXzO2mX6aJcZqTW0U8d9TWr7JYbFfWOXcN7GIbuGfYiWdm77defyzvvI
71zJ9XD8euf88b6M+8L3VXY9Gs9lfM7xzLKL7+J+c72bg/SOzym66wjXBvE8
uFbhWLx34r6KdxJ7uC3uc9eK8feL903cF9GZy1C//h7XI/G+9LXirlvjz9Lv
cj1Adf0gLZxz6audyznvJZ/zXPLFOzn+Xb6+0i7tvJNv7V72tzxm17dTxfNJ
KnsOQ7QDVNMO0FzLac/lEj21SwzX68U7hv1U1fbTTM9hz+Ebemjf8KheN94p
7KOKto+menY7G1nJEs9LvDvYG5+F79lLE9+XOZ6NeC+wJ35W+h4a+1qmeA7i
mWc3lfTdNPK1jPZsvqa79jXD9DrxjLOLitouGuoZ7FlcpJt2kaF67XjG2cnd
2k4a6OntmVygq3aBIXqteMbZEZ+ftoP6ejp7Bl/RRfuKR/Sa8YyznQradurp
ae3pfEln7UsG6zXslPF+JKU9m/7aNspr26irpbGn8QWdtC+I/2BUt1PE+5EU
9iz6aVspp23lfi21PZXP6ah9ziC9mp083o8kt2fSV9tCWW0L98X9bb/IZ3TQ
PmOgXtVOFu9Lktkz6KNtpoy2mXu1VHZe5znktVczRTtPe+08A+K5s5PG+5Sk
9vR4RrVN3Kltoo6W0s7jPJs88ZwyWTtHO+0cD2mV7cR435JoT6OXtpHS2kZq
ayns3M6zyG2vYpJ2lrbaWR7U7rGTxPuYJPZUemobKKVtoJaW3M7lPJNc8R7i
Be1T2mif8oBWKSHh//8cjk4Sf1E/Y3o4rqektp6aWjI7p/MMctoreV77hNba
J/SP95J9k1H2TaZo3e11lLDXUUNLaudwnk4OewXPaSvsUs47OGO3ss/QL96Z
9r+MtP9lstbNXupczHkLa+3i9lqqJ/7/T0rI7jyN7MYrTNQ+pqX2MX21u+x/
GGH/wyStq72GYvYaqmn/AUt8Wso=
          "]]]}, {}, {}}, {{}, {}, 
       {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJwl1ne8znUYxvFjlLL3KOLYe0sqZJOKjr05Rkal0Day9yhEw96y9wpllJld
mqSpPajM3verPz6+1/V5Hjy/+3s/53USk/smPZkiISHhWMqEhDjvc64UimGl
3gHjuev6c7iuV0J37iP9UXykj8ZCLiemcDkhJtzvj1VycazSN+rFME/vqE+Q
b8jP44ZeGT24j/UkfKxv1UthkT5GXyTnwit6LqTiquur5RJYrXfCRO6m/gJu
6lXwGHdWb4az+lgs5nLjVS43UnM19DVySazRO2NSPBBejEHhbkdP/RO5OT7R
x2EJlwdTuTy4haupr5VLYa3eBZNj5niJS4GqXC/9U7kFPo3ZYyl3B6Zxd+BW
7gF9nVwa6/RkTOFSYmDMHvdwvfXP5Jb4LOaNZdydmM7diTRcLX29XAbr9a54
hUuFQTFjVOP66J/LrfB5zBjLubx4jcuL27ja+ga5LDbo3fAqlxqDY8a4l3tc
/0JujS9ixrgddfiNXDlsjH3DVO4WDImZ4j7uCf1LuQ2+jJkiLerym7jy2BQ7
hWncrXg5Zoj7uSf1c3JbnIsZIh3q8Zu5Ctgce4PpXBoMjZmhOtdXPy+3w/mY
GdKjPr+Fq4gtsSexU3iK/4prj69iJsiABvxWrhK2xh7EzuBp/gLXARdiBsiI
hvw2rjK2xT3HTqAf/3V8t/B1PDMyoRG/nauC7XGPcefoz3/DdcI38YzIjAf5
HbHj2BH3FHeKLGjstXdiX/FO3EHcF7LiIa/tjN3Dzphv3AWyITtyICce9r5d
sVPYFXOMmWMA/y3XGd/qryEXHuF3x85gd8wxZoxn+O+4LvhOn4HcaMK/GzuC
d2OO8W9xt2FY7CgacM/q38vJ+F7fppfGYn2m/racDzP0fPFMcnksj++215vK
78Uuxf8jV4rOb3IWx3x+n7Mq+sXnc96OgxjutT3OKjgaPubpLIfDWKa/76yG
D9HQ33/O+QN/wNnV+Z6zMo6E9/p2ZxkcwhKv73feg9e9tsJ5F2bye513R4/5
Oyvg7fj54n2Pyntiv+Pz6Zv1Elig99dnymkxQk+LRtzz+kW5Gy7qb2Allz/+
by5//KzhkvS9co34DHHfsWt4gf+R644f9TeRF834fVzNmGPcd+wf8uEu5EcB
JKK59+73vgfiueNuYx/xIv8T1wM/6W+hIFrw73O1Ys4x29hLvMT/zD2Gn/VZ
KISW/AdcbXwQzxx7iYH8L1xP/KLPRmG04g9wdeK+4hljLzGI/5XrhV/1OSiC
1rEXXF0cjM8d+4XB/G9cb/ymz0VRtIl75urhUHzuuDsM4X/n+uB3fR6KoW3s
FVcfh+Nz43UuHUZy6ZDEvaz/IT+OP/T5KI52sWfxvcGReI64Zy49RnHp0Ywb
qv8pP4E/9QUogfax51xDHI3ninvmMmA0lwHNuWH6X3L8YvKXvhAl0SG+B7Fv
+DCeM+6Sy4gxXEa04Ibrl+S+uKQvQil05I9xD+JYPGfcLZcJY7lMaMmN0C/L
T+GyvhiruAJ4gyuA0lwn/bjcGMfjuePuucwYx2VGK26k/rf8NP7Wl2A1l4g3
uUSU4TrrJ+SHcCLmELvBZcF4Lgtac6P0f+R++EdfijVcQbzFFURZrot+Un4Y
J2MusTtcVkzgsqINN1r/N77b+FdfhrVcIcziCqEcl6yfkh/BqZhT7BaXDRO5
bGjLjdGvyANwRV+OdVxhzOYKozzXVT8tN8HpmFPsGpcdk7jsaMeN1a/Kz+Bq
/EzGeq4I5nBFUIHrpp+Rm+KMvkUviYX6qNhDOQcm6znQnhunX5OfxTV9h14W
S/UV+ga5KObqRbFbrogV8TPAeW/K/393rui9/wEFgFkf
         "]]}}}],
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->True,
    AxesOrigin->{0, 0},
    Method->{"AxesInFront" -> True},
    PlotLabel->FormBox["\"Normal Distribution\"", TraditionalForm],
    PlotRange->{{-5, 5}, {0., 0.39894216224307616`}},
    PlotRangeClipping->True,
    PlotRangePadding->{
      Scaled[0.02], 
      Scaled[0.02]}], ",", 
   GraphicsBox[GraphicsComplexBox[CompressedData["
1:eJw1lH0w1Hkcx9dT2rUe1m/GKbG7xlFaHdNsV93l8710lwuVlXQaxZaHJE9R
ebiK8rB3Q4t9ytrTeiqJoqWk1obI0xaryEOEXYckp41Vl+tm6j3znve8/n2/
Z95UZgQjUBuHw+357P9TdJa5wulogvPgyUy3oCAViNvyo6bJtbDbo4h+Y3Ic
Km6yBsI2tIFXueBU2LExCIauy6+jFVCqL2LlWIxCuHLdmKTiBSRdYOwxnhoB
AvWi3fDmEVCaudPqQ4ch06TdXuw/BkZbtVt9GEPAHNhXr9OhgifHVj45QB+A
qEcXmRF2U6AlnqPYu76Aykiil/mvM5CFVx+4JuwFccLxKUeft6DXXNyAm34G
yfkfPd+9noNv4vBs85M9gFOMoPvx8/DMvNCTYKEA25igM/vs1WAYLv52R30X
jKv5+w0evIfjLh6jq7Kewi5l6O/ZUYvwysxpJFImh93j7PVWVkuAKzndn8jp
gKlG5vnH5R+gdVhYGFnZBhtIzy1dDv8LvtPGjOTWx0AAdcDg/CfgTAdmZVNb
YOeM74K1Nw5ZSJPpVqceQV/DUS1fmhaieb+Pin/bCNXpTYcoai3E8fe5Mytq
gCC92BG5XBsR36lN6K4P4Uh0QjUxVwddH6918CDL4Lvg9XL3AF30NELuZ0eW
whNTmkHsFj3UD87vNJo6qKtIFtJ0VqBNaZdKu9fcgwQt+70dQysQaS6mJemH
u0AYjHcNl+ijmm7jRMnFGlCWUDn5iSsRLGV5RutXA2ftKt1abzzam70QGpF6
G9i5QS0BFAKa63GamP6+Cnw5fnLiBAGZhc5uva9XCYs7ijX5UgNU5Vf/0v/K
TRhTbj/TkEZEXQ6M2bjUcijY5mTRGWCIiLeu464Gl0F5Siwp2MEIJb26g1vJ
LoU07yNuOmoj1JdxMj565CrQB8WlaZ3GSGQd13+CVgKCdcLyTjcT9AvjfKqg
sgjOyTIEbrUm6Gdb5Y3MjYXgYeFd3GZDQgvC3ha3XjH8FN5ykMQioZy6GbHk
2hXIX8O06VCTUF5Nj0nEm7/ApvEqb/dBU/Sg7ihVMJAHbIcG+26pKWpdfU5b
ps6FoHndrlZ7DM0YhhySEC4Ds/IfCusShtbjFS+N/PkgnbfVLC9jaJOmMcu5
mAv6A6N2M+RS8Kad9mkqUgK7m5jR1IKhEIPbpwLP8kDxIYTzlnwZWGF+CTJd
FWgeLj8vKcNQf6e5wOYND+zGVrmMjmEIhW+ZbDbhQdi22BMLZBbsb6+660dX
QcUWzQe+CENRQ9fLFLZ8GPTFQhTPMIR3YTUxdvIg+jjFam4OQ3HsK7myfi6I
ZBlkPUocpPrdSO/xUEG6OjaTzcPQtYXassMufKgxYy+1yzGUPIvb0M7kgbud
6NbkFIb0S/psbqu5ILhZ+OfiIoa8CO3U2XouLDdLL1Aox8DRWoVf7auCWC9J
LzEHQwWmjoNVnnwojJG7uLZjKKeoF+NE8mBryoAmcAJDmUL60GYdHqQYjvbE
qDGU93eO1KuTC2WegdsTP2LISpten13FhSYFxd2H8htQzaIY4K+CsGSvj7uy
MDRrqWwYPsCH3MITIamtGDq70bM64TQPHCXxVkVKDG2siuz7hOdB4o9Jmqp5
DM1z/G3wPVwoOK8bfG8JQ+nCPyahlgsS62ZL508YssxbWzBR9rmfL3+G+6Kv
e37l/wB4qVD0
     "], {{{}, 
       {RGBColor[0.88, 1, 0.88], EdgeForm[None], 
        GraphicsGroupBox[
         PolygonBox[{{1, 78, 79, 50, 77, 70, 76, 64, 69, 75, 59, 63, 68, 74, 
          55, 58, 62, 67, 73, 52, 54, 57, 61, 66, 72, 49, 48, 47, 46, 45, 44, 
          43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 
          26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 
          9, 8, 7, 6, 5, 4, 3, 2, 51, 53, 56, 60, 65, 
          71}}]]}, {}, {}}, {{}, {}, 
       {Hue[0.67, 0.6, 0.6], 
        LineBox[{1, 71, 65, 60, 56, 53, 51, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
         12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 
         29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 
         46, 47, 48, 49, 72, 66, 61, 57, 54, 52, 73, 67, 62, 58, 55, 74, 68, 
         63, 59, 75, 69, 64, 76, 70, 77, 50}]}}}],
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->True,
    AxesOrigin->{0, 0},
    Method->{"AxesInFront" -> True},
    PlotLabel->FormBox["\"Exponential Distribution\"", TraditionalForm],
    PlotRange->{{0, 5}, {0., 0.6999999500000018}},
    PlotRangeClipping->True,
    PlotRangePadding->{
      Scaled[0.02], 
      Scaled[0.02]}], ",", 
   GraphicsBox[GraphicsComplexBox[CompressedData["
1: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
96/2v/r/Af6aGWs=
     "], {{{}, 
       {RGBColor[1, 0.85, 0.85], EdgeForm[None], 
        GraphicsGroupBox[PolygonBox[CompressedData["
1:eJwl1mW0VVUAhdHHo0OQEhSU7u7uku7u7u7u7la6VWwBQQmDbhBUQkHpUKQb
dG788Y1z1nxbBuK+F9O06VmnR2REREQULY36/3NJ1P/f83pf7HnagbmeqTyP
a6r37g4m875fY+2dzqZjhzWSFWFtWQ37sdazdmweu69lrBaLw/LYPyotO6QR
vDBvw6rbj/QRa8vmsnvh98pqstgst/2D0rCDGs4L8dasmv1QH7I2bA67G/4d
WQ0Wi+Wyv1dqdkDDeEHeilW1H+gD1prNZnfCnwurzmKynPZ3SsX2aygvwFuy
KvZ9rWOt2Cx2W4tYNRaD5bC72W/Y+zSG7WDvsH0awvKzFqyyfU9rWUs2k/2j
91lVFp1lt7vaSe29Gs22s7fZXg1m+Vhz9q59V2tYCzaD3dJ7rAqLxrLZXewk
9h6NYttYSrZHg1he1oxVsu9oNWvOprO/tZBVZlFZVruzndjerZFsK0vBdmsg
y8Oasor2ba1izdg09pcWsHdZJMtid7IT2bs0gn3L3mK7NIDlZk1YBfsfrWRN
2VR2U/NZJRaFZbY72gntnRrOvmFvsp3qz3Kxxqy8fUsrWBM2hd3QPFYxfLBY
Jo8O9uv2jxrGtrDk7Ef1YzlZI1bO/lvLWWM2mV3XXFaB/auMdns7gfcfNNS5
zSwZ+0F9WQ7WkJW1/9Iy1ohNYtc0h5VnL5XBbmfH9/69hjj3NXuDfa8+LDtr
wMrYN7WUNWQT2VXNZuXYC6W329qvef9Og53bxJKy79SbZWP1WWn7hpawBmwC
u6JZrCx7rnR2Gzue9x0a5NxGloTtUC+WldVjpezrWszqs/HssmayMuyZ0tqt
7bjet2ugcxtYYrZdPVkWVpeVtK9pEavHxrFLmsFKs6dKY7ey43jfpgHOfcUS
sW0KX7CZWR1Wwr6q91ldNpZd1HRWij1RarulHdv7VvV37kuWkG1Vd5aJ1WbF
7St6j9VhY9gFTWMl2WOlsr/Q6+xbdQt3yNlarJh9WQtZbTaa/amprAR7pHfs
z5WAfaOu4c44W5ON0h+awovzh3rb/kzx2RZ1CXfC+RpspM5rMi/GHyhl+J7X
CJ3TJD8ryu8rhf2pXmOb1TncB79WNVbUvqQFrBYbHj6j3g9qvP27PdHPi9j3
9Fb4TvU8pinh+9TPfvY+03ssz2/Vz/snzv3qfbb3FJ4LPA97TvSMF/6sPU/Y
08PnxJ7n2SncK8+q4bvd85Q9xzOl50LPI56TPIuE//aeJ+0Znhft+Z7z7Zqe
w/zzv3if5T255wGN8/4b/8n7tPAZ8c8U9n5Xb4bvdc+jmhy+0/0spvdv1Nf+
OHwPej+kCXZcP9+kjuHe2lX8vLB9Ifx7sBpsKDur8awQu6Pk9nrFYRvVIdxT
ZyuzITqjcbwgv61k4e8WDdZpjfWzAvwfvWF/pNhsg9qHO+rXqsQG6ZTG8Pz8
lpLaHyoW+0rtwp10viIrZP+puaw6Gxj+22k0y8f+VhL7A8VkX6ptuKPOVmAF
7T80h1VjA8Kff7jXLC/7S4ntZnYM71vUx7l1LAb7Qm3CHWblWQH7vGazqqw/
+znce5aH3VQiu6kd3ftm9XZuLYvOPlfrcO9ZOZbfPqdZrArrx06GzwrLzW4o
od3Ejub9a/Vybg2Lxj5Tq3D3WVmWz/5dM1ll1ped0HCWi13X63ZjO6r3Terp
3OrwVxn7VC3DvWNlWF77N81g77I+4Z5qGMvJrimB3ciO9L5RPZxbxSLZJ2oR
7hcrzfLYZzWdVWK92XENZTnYVcW3G9pRvG9Qd+dWsijsYzUP94+VYrntM5rG
KrJe7Fi4syw7u6LX7AZRwm/I/VI351ZERLz6n+H1ahbuLCuJctmnNZVVYD3Z
0XDPWTZ2WfHs+va/4b7ZXZ1bzv4N9541DXealbBz2qc0hZVnPdiR8DlgWdkl
xbXr2S/DfbO7OLeMvQyfC9Yk3HFW3M5h/6rJrBzrzg5rIMvCLiqOXdd+Ee6b
3dm5pexF+JywxuHOs2J2dvsXTWJlWTd2SANYZnZBse069vNw3+xOzi1hz7WO
NQp3nhW1s4XvXE1kZVhXdlD9WSb2p2LZte1n4b7ZHZ1bzJ5pLWsY7nz4LrWz
2ic1gZVmXdgB9WMZ2R+Kadeyn4b7ZndwbhF7qjWsQbjzrLCdxT6h8awU68z2
qy/LwM4rhl3TfhLum93euffZE61m9cOdZ4XszPZPGsdKhr8n2D71YenZOUW3
39NjreL1wh13tqCdyT6usawE68j2qjdLx35XNHuhHmklrxvutLMF7Iz2MY1h
xVkHtke9WFr2W+Sr/0WNWKCHWsHrhDsM89sZ7KMazYqx9my3erI07Gzkq49N
xHw90HJeO9xZZ/PZ6e0jGsWKsnZsl3qw1OyM/gM8U7Yy
          
          "]]]}, {}, {}}, {{}, {}, 
       {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
         "]]}}}],
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->True,
    AxesOrigin->{0, 0},
    Method->{"AxesInFront" -> True},
    PlotLabel->FormBox["\"t-Distribution\"", TraditionalForm],
    PlotRange->{{-10, 10}, {0, 0.4}},
    PlotRangeClipping->True,
    PlotRangePadding->{
      Scaled[0.02], Automatic}], ",", 
   GraphicsBox[GraphicsComplexBox[CompressedData["
1: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
nr/+D+cTe7M=
     "], {{{}, 
       {RGBColor[1, 1, 0.85], EdgeForm[None], 
        GraphicsGroupBox[PolygonBox[CompressedData["
1:eJxF1He8zWUcwPFzjbr2KGWFi7oK2bK7RrKum6uyGpIVIZEoqVBWNM2Giko7
o5AoRNkzK6WBjEplhvD++qc/3q/P83zvOOc8z+91Urr0y+ybJZFIJNEh6f9W
1fZ6XpvqAv2TGtbD9V32cI19J32IV9hMEbOGegu9eJ5vyGteRStTieupSAXK
cx3XUo7U+N9cTVnKUJoUSlGSElxFcYpRNF6bwlzJFRTici6jIAVII4P7eI6V
5PHe8uuNtKYnz7KC3H6WTzsykJfZFK9j3kCHMoOd8d7M0rUHE/iaXGZ59Ulm
8WN8LrMOOpvf4izsB+gx6lpP043xOazr6380sf5UD1PV+lE9QX3rN7Wl7oiz
0VZ6m57Whvqhpuuvcc7aXTP1b62l47WZLtecmkfb6Tm9SefHfeofWl2f0FNx
Xtbv6A9xT9bt9RP2x93aP6hHqWM9VTfEvVjX03kcoor9I/oG2+Ne7VvqB/wS
z4R9N32GZeSwz62P8za74/kwa6f9mcL6uHuzujqE19kWz4tZC+3KOJaSbJZL
b+cBJrMunhvzOtqcexnLV1xqnjPOl35MYm08Y+a14xzpwhi+5BLzHHorfZnI
mngezWvpzdzDaJaQ3Tw5Xif+lhtoSmdGsZhsfie71oz74W6e5guy+lk2bUsf
XmI1Bcxr6GCm8x3FzZroXTzFIrKYZdVhvMX3lDbL1I/ZRwX7+/VFVpHfvrrO
5SCV7R/W19hKMfvG+j4/U87+Tv0rPp/1SP2cJOv4PvqM36lm/5iepIH1TN1F
inUbPUMj64+0te7V8tpb/6G29Qtxh/qt5tNqcdd6VhvrHM3QA1pJB8XZ6XGt
p69qC92iRbVR3KX+q2n6nrbSnzRV79A2eiTuR0fEHevCROLiF+wF1NiRjw==

          "]]]}, {}, {}}, {{}, {}, 
       {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJwl1Hecz3UcwPFfSpGuuxMNLjkjs+gkqXMuchnnzs5oXlQaRhqKjMioRGhY
ZWaPbJVRtGREaGc2JCpNlDzfD3+8fq/3+/393e/7+bzf78elF3Rv1e2MRCLR
3kc4PlbRTTyIr+FfuCXfwpV4D+fyHM7mY9yGG3Ap/pSb8iTO5D+5NT/KNfhH
zufF3JD/5XZci5P5Q27Co7kuH+X7UU18gPN4ATfgE3E2pIu/5OnIEv/NT6KW
+GdejkJxPfmbPBh1xL/yrags3stz40woLd/Br+Ix1JQf5CW4Ginyj3gMHkB1
+Xe8EK1QTv4Vz0A/nBnvV3uLn8ZtuBFpajv5NfRGbaSqbeSxeDB6h7PiN9Tf
5iG4HY1iPigczz1bzUNxB3Lifjgb56BIfM931vAw3BkzxrUorv4xv4huMUsU
jb9VX8vDUYDGMQ9coL6JX0J3tMW58R71dfwM7ooZ4jqUUN/ML6NHzBrF4kzq
7/Cz6Bw7g0vVdvFkPI7rUVJtC7+CnrgZ5dW+5tfRH+fFmdXe5efQBVXk+3ge
mqGM/DOegidwlfwnXopMXCjfyuPi3OLf+SFcIf6eF6E9Ksi/4ZmoL/6HB8Re
iA9zC14R8+GTcV5Oih7x+ugjj4je82+xL3w3V+X93Jzn8w18PPrLuXwZfx53
4alcj//iPsgQH+JlsVfi/+I5LhJ/wuOjl+I/uBeuFP/Ab6ADKsq/5VkYiPNj
Rmob+HncE+dCWbUveBr6IgsXq23jCXgYHZEcM1F/j0fiXuRFv5CCJM/e51Ho
inxkIzX2MXYs9iZmH3OJe8R7cAlKoTTSYl9irtGbOBvSUS72I+YU98LlqITK
sRPRZ1RD9Zht9AI1UDN2Iu7ubB/wC7gv5hmziHerb+eJeASd4rfVdvNsPIXa
8iO8Ejni/xOn/7dm8Cn7EZEy
         "]]}}}],
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->True,
    AxesOrigin->{0, 0},
    Method->{"AxesInFront" -> True},
    PlotLabel->FormBox["\"F-Distribution\"", TraditionalForm],
    PlotRange->{{0, 3}, {0., 0.8567536908729436}},
    PlotRangeClipping->True,
    PlotRangePadding->{
      Scaled[0.02], 
      Scaled[0.02]}], ",", 
   GraphicsBox[GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAwA2IQrWcv9ur///f7GcDggX35+Zbc9H3v4PwrV7hfHUx8
C+fLHsgXMZd5A+dvzT7Cyn/3FZyf0GP44WbTSzj/x6Tqjv32L+D8xXz3JGc8
fAbnz/EyLLrc+RTOb8pJrND0fALnVzOvKi96+wjOT2w4r3JtxUM4f+repzPm
ZD2A83fd1+BZo3QPzlcWcHAKmXcbzt+k1ZH16PENOP/+0Y0KZmbX4PynOlON
9m+7DOcL1q0002O8COfrmL3XWfr5DJzf7PL2ws6K43C+aMi6CZHihxD2fTvK
f0JlF5y/9PbT3pct6+D82ECZLbeTp8D5O7mqrx4qnWwP45s+YpRrjFgP5yt/
2P3T6tBOON9z8c2zfhGH4HxXXyHmr1uPw/n98dcbDLafgfOP+8nyBghdhPPf
KorWXZp1Gc4vLdFO7Be7BudfvyMQlHbiBpyfUGnznN3nNpx/WNu86zDrPThf
jXPPiyUeD+B82T3ZrqwdD+F8hl9MK4sePYLzvwfujTuq+gTOv20SL63a8hTO
LwgXEFS68wzOl5zyJIJF9gWcvy56wfLPFS/h/HDbeo8Te1/B+RvjcpWs/ryG
839wOTPvDH0L5wddtDaTnfEOzofmB4R8+9nVxvGI/OHAoTmBz+c9unqoPDw/
2cP4ANs9HtY=
     "], {{{}, 
       {GrayLevel[0.85], EdgeForm[None], 
        GraphicsGroupBox[
         PolygonBox[{{1, 53, 54, 50, 52, 49, 48, 47, 46, 45, 44, 43, 42, 41, 
          40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 
          23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 
          5, 4, 3, 2, 51}}]]}, {}, {}}, {{}, {}, 
       {Hue[0.67, 0.6, 0.6], 
        LineBox[{1, 51, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 
         17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 
         34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 
         50}]}}}],
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->True,
    AxesOrigin->{0, 0},
    Method->{"AxesInFront" -> True},
    PlotLabel->FormBox["\"Uniform Distribution\"", TraditionalForm],
    PlotRange->{{-1, 1}, {0., 1.}},
    PlotRangeClipping->True,
    PlotRangePadding->{
      Scaled[0.02], 
      Scaled[0.02]}], ",", 
   GraphicsBox[GraphicsComplexBox[CompressedData["
1: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
     "], {{{}, 
       {RGBColor[1, 0.9, 0.8], EdgeForm[None], 
        GraphicsGroupBox[PolygonBox[CompressedData["
1:eJwl1He4zmUYwPH3jCIje++dvYVsshMHIREn2c7JSpGtKNmKIrIySimEjMqO
yt4jSlGIlpH5eZw/Ptf3+f2u94/3vp/3evPFJ8YlREcikSgyRyU1U1TSuZxz
Rj2mKXWx7iPGeajO5Ttu0Z6BzOBb/qE2zenJ23zJBcpShtKUoiQlKE4xivIY
RShMIQpSgPzkIy95yE0ucpKD7GQjK1nCTGGeMAcZSE860pKGWjxND8azmvM8
Sk2a0Z23WMVvpOZZBvAu3/A3NXiKbrzJSn4lFa8xh538Tzv68w5f8xfVWcSe
cB92/KrOYhvXaco8dnOHruwn1mfH6RecC3cVZvXuqKbQj8KsulejdUjYgR7S
ZPpBmEl36E3ahj15PqzJdUHYh/6g9+gX9uf5gD6k08OMukmvUo0jPOLdQv0x
Ennww3pFDvKw8/u6lWs04UN2cZsXGcvn/BJmYDCz2c4N2jCf77lLX6axkSs8
wSDeYwv/0ZguvMEKfg7fkWd4ials4E+q8jIz2cy/NOIFXuczzob90JpEprCe
y1ShIfGM4VPOhH3TigQm8xWXqEwDOjOa5fwUdkVL+jCJdVzkcerTiVF8wulw
H8TRm4ms5Q8q8STPM5KPOUUsLejFBNbwOxWpR0dGsIyTxFCBunRgOEs5Qfgf
KU8dnmMYSzjOffEWgmE=
          "]]]}, {}, {}}, {{}, {}, 
       {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJwl1GWUFmUYgOGFpVsEJCQVkZQGJZWSEl2VDknJXUKRbqVT6RYJRVLpVEIa
pLuVUEG643oPP67vnpkzP+Z55juTtUlMVHSsiIiIVH5CjzOPXtTnPQoRmxP8
SG8aUI7CRHKSn+hDQ8pThCusYDht+Ig4nGI+fWlEBYpylZWMoC1RxOU0P9OP
z6hIMf5hFSNpx8fE4wwL6E9jKlGcf1nNKKL5hPicZSEDaML7vM1/rGE0MXxK
As6xiK9pSmVu8zsT6Mw7XGMtY2hPTRJynsV8QzOqcIdNTOQrSnCddXxLB56y
i++pxX22MoVuJOICSxhIcx6zgxlU5S6bmRR25aUf1C6EP8Ae+SE8o+MjWpL/
WU8S174L70MPaArtqM/YTTLns8J+9LCm1Nr6gD9I6nxq2Lce0pe0u8bWfZpc
54QZ9Ki+rIn1IksZRBzX9msLnrCTmVTjHluYTNcwjnv36mxKcYMNjKUTdXjI
NqbRI8zIX/zCYD6nOqW5yUbG8QV1w0z8za8MoSUfUCbsg0ssYyitqEHZMGvY
X9hB2FOYlVSkJg2vkJZ0pCcDr5KRTGQmC1nJxmu8TnbeIAdvkpNc5CYPecnH
W+SnAJdZzjBa8yHvcovfGM+X1OMR25lOTyLt+E+dS2LHxyJefEsK6nNkQYIw

         "]]}}}],
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->True,
    AxesOrigin->{0, 0},
    Method->{"AxesInFront" -> True},
    PlotLabel->FormBox["\"Chi-Square distribution\"", TraditionalForm],
    PlotRange->{{0, 10}, {0., 0.18393971400091108`}},
    PlotRangeClipping->True,
    PlotRangePadding->{
      Scaled[0.02], 
      Scaled[0.02]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.511806676975606*^9, {3.5122259039199963`*^9, 3.5122259704109964`*^9}}]
}, {2}]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Estimation and Inference", "Section",
 CellChangeTimes->{{3.511805087746616*^9, 3.511805091343814*^9}}],

Cell[CellGroupData[{

Cell["Understand what is meant by i.i.d.", "Subsection",
 CellChangeTimes->{{3.511805525137125*^9, 3.5118055300343*^9}}],

Cell["\<\
This means Independently and Identically distributed. That means that the \
data was collected in such a way that all the data has the same distribution \
(indentically) and that collecting from one portion in the sample didn\
\[CloseCurlyQuote] t effect the other sections (independent)\
\>", "Item"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Understand what is meant by an estimator, and its distribution.\
\>", "Subsection",
 CellChangeTimes->{{3.511805525137125*^9, 3.5118055316748333`*^9}}],

Cell[CellGroupData[{

Cell[TextData[{
 "An estimator is a function that produces and estimate for example ",
 Cell[BoxData[
  FormBox[
   FractionBox["1", "n"], TraditionalForm]]],
 Cell[BoxData[
  FormBox[
   RowBox[{
    UnderoverscriptBox["\[Sum]", 
     RowBox[{"i", "=", "1"}], "n"], 
    SubscriptBox["x", 
     RowBox[{"i", " "}]]}], TraditionalForm]]],
 "Is an estimator for the mean of a function. It produces the estimate ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["x", "-"], TraditionalForm]]],
 "."
}], "Item",
 CellChangeTimes->{
  3.5122263012209964`*^9, {3.5122265484020586`*^9, 3.512226548484067*^9}, 
   3.5122265801032286`*^9}],

Cell["\<\
To be honest I am not really sure what the distribution part is all about\
\>", "Item",
 CellChangeTimes->{
  3.5122263012209964`*^9, {3.5122265484020586`*^9, 3.5122265484800663`*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Understand the meaning and significance of the Central Limit Theorem.\
\>", "Subsection",
 CellChangeTimes->{{3.511805525137125*^9, 3.511805535545597*^9}, 
   3.5122263223069963`*^9}],

Cell[CellGroupData[{

Cell["\<\
The central Limit theorem says that no matter what distribution the data \
initially had, as you increase the sample size enough, that distribution \
begins to look like a normal distribution. (as a rule of thumb we say that 30 \
is a large sample size).\
\>", "Item",
 CellChangeTimes->{{3.5122263276489964`*^9, 3.5122263321309967`*^9}}],

Cell["\<\
This is very important because it helps us be able to estimate functions and \
distributions of data that otherwise don\[CloseCurlyQuote]t have \
distributions or have distributions that are very difficult to work with.\
\>", "Item",
 CellChangeTimes->{{3.5122263276489964`*^9, 3.5122263410239964`*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Be able to compute common statistics ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    OverscriptBox["x", "-"], ",", 
    SuperscriptBox["s", "2"], ",", 
    OverscriptBox["p", "^"]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " for data from small samples."
}], "Subsection",
 CellChangeTimes->{{3.511805525137125*^9, 3.5118055910840397`*^9}}],

Cell[CellGroupData[{

Cell[TextData[{
 "to compute ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["x", "-"], TraditionalForm]]],
 " we usually just say ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    OverscriptBox["x", "-"], "=", 
    RowBox[{
     FractionBox["1", "n"], 
     RowBox[{
      UnderoverscriptBox["\[Sum]", 
       RowBox[{"i", "=", "1"}], "n"], 
      SubscriptBox["x", "i"]}]}]}], TraditionalForm]]]
}], "Item",
 CellChangeTimes->{{3.511807011483844*^9, 3.511807027412603*^9}, 
   3.5122266134765654`*^9}],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   SuperscriptBox["s", "2"], "=", 
   RowBox[{
    FractionBox["1", 
     RowBox[{"n", "-", "1"}]], 
    RowBox[{
     UnderoverscriptBox["\[Sum]", 
      RowBox[{"i", "=", "1"}], "n"], 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        SubscriptBox["x", "i"], "-", 
        OverscriptBox["x", "-"]}], ")"}], "2"]}]}]}], 
  TraditionalForm]]]], "Item",
 CellChangeTimes->{{3.511807011483844*^9, 3.511807028092942*^9}, {
  3.511807248731003*^9, 3.511807249054439*^9}}],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{"s", "=", 
   SqrtBox[
    SuperscriptBox["s", "2"]]}], TraditionalForm]]]], "Item",
 CellChangeTimes->{{3.511807011483844*^9, 3.5118070285805273`*^9}}],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    OverscriptBox["p", "^"], "=", 
    FractionBox[
     RowBox[{"(", 
      RowBox[{"#", " ", "of", " ", "succeses"}], ")"}], 
     RowBox[{"#", " ", "of", " ", "trials"}]]}], TraditionalForm]]],
 ", that is usually how we do it at least."
}], "Item",
 CellChangeTimes->{{3.511807011483844*^9, 3.5118070285805273`*^9}}]
}, Open  ]]
}, Open  ]],

Cell["\<\
Derive the mean and variance of simple estimators.\
\>", "Subsection",
 CellChangeTimes->{{3.511805525137125*^9, 3.5118055393699827`*^9}}],

Cell[CellGroupData[{

Cell["\<\
Determine whether an estimator is unbiased, efficient, and/or consistent.\
\>", "Subsection",
 CellChangeTimes->{{3.511805525137125*^9, 3.5118055476101513`*^9}}],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"Bias", "(", 
     OverscriptBox["\[Theta]", "^"], ")"}], "=", 
    RowBox[{
     RowBox[{"E", "(", 
      RowBox[{
       OverscriptBox["\[Theta]", "^"], "-", "\[Theta]"}], ")"}], "=", 
     RowBox[{
      RowBox[{"E", "(", 
       OverscriptBox["\[Theta]", "^"], ")"}], "-", 
      RowBox[{"E", "(", "\[Theta]", ")"}]}]}]}], TraditionalForm]]],
 ", so if the expected value of our estimator is equal to the true mean we \
have an unbiased estiamtor. "
}], "Item",
 CellChangeTimes->{{3.511807052735746*^9, 3.511807054741887*^9}, {
  3.5122266903272495`*^9, 3.5122267095751743`*^9}}],

Cell[TextData[{
 "Efficiency says ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"lim", "(", 
     RowBox[{
      RowBox[{"V", "(", 
       OverscriptBox["\[Theta]", "^"], ")"}], ",", 
      RowBox[{"n", "\[Rule]", " ", "\[Infinity]"}]}], ")"}], "=", "0"}], 
   TraditionalForm]]],
 " (NOTE when comparing two estimators, if the variance of one is lower than \
the variance of the other than the lower one is more efficient)"
}], "Item",
 CellChangeTimes->{{3.511807052735746*^9, 3.511807058627892*^9}}],

Cell[TextData[{
 "Consistency says that the estimator is efficient and that ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"lim", "(", 
     RowBox[{
      RowBox[{"E", "(", 
       OverscriptBox["\[Theta]", "^"], ")"}], ",", 
      RowBox[{"n", "\[Rule]", " ", "\[Infinity]"}]}], ")"}], "=", "0"}], 
   TraditionalForm]]]
}], "Item",
 CellChangeTimes->{{3.511807052735746*^9, 3.511807058627892*^9}, 
   3.511813191847041*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Use the method of moments to obtain parameter estimates for given \
distributions.\
\>", "Subsection",
 CellChangeTimes->{{3.511805525137125*^9, 3.511805546393556*^9}}],

Cell["\<\




\
\>", "Text",
 CellChangeTimes->{{3.512226774890705*^9, 3.512226775322748*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Use the method of maximum likelihood to obtain parameter estimates for given \
distributions.\
\>", "Subsection",
 CellChangeTimes->{{3.511805525137125*^9, 3.511805550857707*^9}}],

Cell["\<\
In this case we will either be given a pdf or told what kind of distribution \
we are dealing with so we can look the pdf up.
then the steps are as follows:\
\>", "Text",
 CellChangeTimes->{{3.5118070872303123`*^9, 3.51180709262077*^9}}],

Cell[CellGroupData[{

Cell[TextData[{
 "L=",
 Cell[BoxData[
  FormBox[
   RowBox[{
    UnderoverscriptBox["\[Product]", 
     RowBox[{"i", "=", "1"}], "n"], "pdf"}], TraditionalForm]]]
}], "SubitemNumbered",
 CellChangeTimes->{{3.5118070872303123`*^9, 3.511807107730104*^9}}],

Cell["l=ln(L)", "SubitemNumbered",
 CellChangeTimes->{{3.5118070872303123`*^9, 3.511807108425886*^9}}],

Cell[TextData[{
 "l=",
 Cell[BoxData[
  FormBox[
   RowBox[{
    UnderoverscriptBox["\[Sum]", 
     RowBox[{"i", "=", "1"}], "n"], 
    RowBox[{"ln", "(", "pdf", ")"}]}], TraditionalForm]]]
}], "SubitemNumbered",
 CellChangeTimes->{{3.5118070872303123`*^9, 3.511807109617467*^9}}],

Cell[TextData[{
 "Simplify l, set ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox[
     RowBox[{"\[PartialD]", "l"}], 
     RowBox[{"\[PartialD]", "paramter"}]], "=", "0", " "}], TraditionalForm]]],
 "and solve for the parameter. (If I am trying to find ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["\[Sigma]", "2"], TraditionalForm]]],
 " I need to take the Derivative with respect to \[Sigma], not ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["\[Sigma]", "2"], TraditionalForm]]],
 ")"
}], "SubitemNumbered",
 CellChangeTimes->{{3.5118070872303123`*^9, 3.511807119722323*^9}, 
   3.511813196930213*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Find the margin of error associated with a point estimate.", \
"Subsection",
 CellChangeTimes->{{3.511805525137125*^9, 3.5118055530255127`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"First", " ", "we", " ", "should", " ", "know", " ", "that", " ", 
  "a", " ", "point", " ", "estimate", " ", "is", " ", "either", " ", "the", 
  " ", "simple", " ", "average", " ", 
  FormBox[
   RowBox[{
    RowBox[{"(", 
     OverscriptBox["x", "-"], ")"}], " ", "or", " ", "simple", " ", 
    "probablitiy", " ", 
    RowBox[{"(", 
     OverscriptBox["p", "^"], ")"}]}],
   TraditionalForm]}]], "Item",
 CellChangeTimes->{{3.5122270386200757`*^9, 3.5122270387980933`*^9}},
 FontFamily->"Times New Roman"],

Cell[BoxData[
 RowBox[{
  RowBox[{
  "To", " ", "find", " ", "the", " ", "margin", " ", "of", " ", "error", " ", 
   "associated", " ", "with", " ", 
   FormBox[
    RowBox[{
     OverscriptBox["x", "-"], " ", "we", " ", "do", " ", 
     SqrtBox[
      FractionBox[
       RowBox[{"(", 
        SuperscriptBox["\[Sigma]", "2"], ")"}], "n"]], "and", " ", "if", " ", 
     "we", " ", 
     RowBox[{"don", "'"}], "t", " ", "know", " ", 
     SuperscriptBox["\[Sigma]", "2"], " ", "we", " ", "use", " ", 
     SuperscriptBox["s", "2"]}],
    TraditionalForm]}], ",", " ", 
  RowBox[{
  "n", " ", "is", " ", "the", " ", "number", " ", "of", " ", "samples", " ", 
   "or", " ", 
   RowBox[{"trials", "."}]}]}]], "Item",
 CellChangeTimes->{{3.5122270386200757`*^9, 3.5122270447736907`*^9}},
 FontFamily->"Times New Roman"],

Cell[BoxData[
 RowBox[{"To", " ", "find", " ", "the", " ", "margin", " ", "of", " ", 
  "error", " ", "associated", " ", "with", " ", 
  FormBox[
   RowBox[{
    OverscriptBox["p", "^"], " ", "we", " ", "do", " ", 
    SqrtBox[
     FractionBox[
      RowBox[{"(", 
       RowBox[{
        OverscriptBox["p", "^"], "*", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          OverscriptBox["p", "^"]}], ")"}]}], ")"}], "n"]]}],
   TraditionalForm], 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
    "if", " ", "we", " ", "know", " ", "or", " ", "are", " ", "testing", " ", 
     "a", " ", "value", " ", "for", " ", "p"}], ",", " ", 
    RowBox[{"use", " ", "that", " ", "in", " ", "place", " ", "of", " ", 
     FormBox[
      RowBox[{
       RowBox[{
        OverscriptBox["p", "^"], ",", " ", 
        RowBox[{"n", " ", "is", " ", "the", " ", "number", " ", "of", " ", 
         RowBox[{"observations", "."}]}]}], ")"}],
      TraditionalForm]}]}]}]}]], "Item",
 CellChangeTimes->{{3.5122270386200757`*^9, 3.512227056502864*^9}},
 FontFamily->"Times New Roman"],

Cell[TextData[{
 "NOTE: The way Dr. McMurray does it is 2 * the standard error. The SE is the \
thing in the ",
 Cell[BoxData[
  FormBox[
   SqrtBox["\[Placeholder]"], TraditionalForm]],
  FormatType->"TraditionalForm"]
}], "Item",
 CellChangeTimes->{{3.5122270569989133`*^9, 3.512227097517965*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Derive a one- or two-sided confidence interval for ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Mu]", ",", 
    RowBox[{
     SubscriptBox["\[Mu]", "1"], "-", 
     SubscriptBox["\[Mu]", "2"]}], ",", "p", ",", 
    RowBox[{
     RowBox[{"or", " ", 
      SubscriptBox["p", "1"]}], "-", 
     SubscriptBox["p", "2"]}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "."
}], "Subsection",
 CellChangeTimes->{{3.511805525137125*^9, 3.511805555385168*^9}, {
  3.511805598888159*^9, 3.511805625270739*^9}}],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Mu]", "=", 
    RowBox[{
     RowBox[{
      OverscriptBox["x", "-"], "\[PlusMinus]", " ", 
      RowBox[{"z", " ", 
       SqrtBox[
        FractionBox[
         SuperscriptBox["\[Sigma]", "2"], "n"]], " ", "the"}]}], " ", "+", 
     " ", "or", "  ", "-", " ", 
     RowBox[{
     "comes", " ", "from", " ", "what", " ", "the", " ", "question", " ", 
      "asks", " ", "for"}]}]}], TraditionalForm]]],
 " and we will multiply it by a z-score or something similar depending on the \
 confidence level."
}], "Item",
 CellChangeTimes->{{3.5122272313603477`*^9, 3.512227254433655*^9}}],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    RowBox[{
     SubscriptBox["\[Mu]", "1"], "-", 
     SubscriptBox["\[Mu]", "2"]}], "=", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       SubscriptBox[
        OverscriptBox["x", "-"], "1"], "-", 
       SubscriptBox[
        OverscriptBox["x", "-"], "2"]}], ")"}], "\[PlusMinus]", " ", 
     RowBox[{"z", " ", 
      SqrtBox[
       RowBox[{
        FractionBox[
         SuperscriptBox[
          SubscriptBox["\[Sigma]", "1"], "2"], 
         SubscriptBox["n", "1"]], "+", 
        FractionBox[
         SuperscriptBox[
          SubscriptBox["\[Sigma]", "2"], "2"], 
         SubscriptBox["n", "2"]]}]]}]}]}], ",", " ", 
   RowBox[{"again", " ", "use", " ", 
    SuperscriptBox["s", "2"], " ", "if", " ", 
    SuperscriptBox["\[Sigma]", "2"], " ", "is", " ", 
    RowBox[{"unknown", ".", " ", "Again"}]}], ",", " ", 
   RowBox[{
   "z", " ", "dependent", " ", "on", " ", "the", " ", "confidence", " ", 
    "level", " ", "asked", " ", 
    RowBox[{"for", ".", " "}]}]}], TraditionalForm]]]], "Item",
 CellChangeTimes->{{3.512227254577669*^9, 3.512227279539165*^9}}],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{"p", " ", "=", " ", 
    RowBox[{
     OverscriptBox["p", "^"], "\[PlusMinus]", " ", 
     RowBox[{"z", " ", 
      SqrtBox[
       FractionBox[
        RowBox[{
         RowBox[{
          OverscriptBox[
           RowBox[{"(", "p"}], "^"], 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            OverscriptBox["p", "^"]}], ")"}]}], ")"}], "n"]]}]}]}], 
   TraditionalForm]]],
 "same story for z."
}], "Item",
 CellChangeTimes->{{3.5122272796341743`*^9, 3.512227292403451*^9}}],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    SubscriptBox["p", "1"], "-", 
    SubscriptBox["p", "2"]}], "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      SubscriptBox[
       OverscriptBox["p", "^"], "1"], "-", 
      SubscriptBox[
       OverscriptBox["p", "^"], "2"]}], ")"}], "\[PlusMinus]", " ", 
    RowBox[{"z", " ", 
     SqrtBox[
      RowBox[{
       FractionBox[
        RowBox[{"(", 
         RowBox[{
          SubscriptBox[
           OverscriptBox["p", "^"], "1"], "*", 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            SubscriptBox[
             OverscriptBox["p", "^"], "1"]}], ")"}]}], ")"}], 
        SubscriptBox["n", "1"]], "+", 
       FractionBox[
        RowBox[{"(", 
         RowBox[{
          SubscriptBox[
           OverscriptBox["p", "^"], "2"], "*", 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            SubscriptBox[
             OverscriptBox["p", "^"], "2"]}], ")"}]}], ")"}], 
        SubscriptBox["n", "2"]]}]], " ", "z", " ", "is", " ", "the", " ", 
     "same", " ", "as", " ", 
     RowBox[{"above", ".", " "}]}]}]}], TraditionalForm]]]], "Item",
 CellChangeTimes->{{3.5122272924994607`*^9, 3.512227303930604*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Estimate probabilities associated with ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Mu]", ",", 
    RowBox[{
     SubscriptBox["\[Mu]", "1"], "-", 
     SubscriptBox["\[Mu]", "2"]}], ",", "p", ",", 
    RowBox[{
     RowBox[{"or", " ", 
      SubscriptBox["p", "1"]}], "-", 
     SubscriptBox["p", "2"]}]}], TraditionalForm]]],
 ", such as P(\[Mu]>500)."
}], "Subsection",
 CellChangeTimes->{{3.511805525137125*^9, 3.5118055576493*^9}, {
  3.5118056313828907`*^9, 3.511805650222714*^9}}],

Cell[CellGroupData[{

Cell[TextData[{
 "We will have derived already an ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["x", "-"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " as a point estimate for what \[Mu] should be. "
}], "Item",
 CellChangeTimes->{{3.5122276344796553`*^9, 3.5122276580670137`*^9}}],

Cell[TextData[{
 "we then use the identity that ",
 Cell[BoxData[
  FormBox[
   FractionBox[
    RowBox[{"(", 
     RowBox[{
      OverscriptBox["x", "-"], "-", "\[Mu]"}], ")"}], 
    SqrtBox[
     FractionBox[
      SuperscriptBox["\[Sigma]", "2"], "n"]]], TraditionalForm]]],
 "~ N ( 0,1) and we would plug in the value for \[Micro] that we are trying \
to verify."
}], "Item",
 CellChangeTimes->{{3.5122276589761047`*^9, 3.5122277006292696`*^9}}],

Cell["\<\
This will produce a z-score that we will need to look up on the normal chart \
and that will give us the associated probability. \
\>", "Item",
 CellChangeTimes->{{3.5122277595731635`*^9, 3.512227759896196*^9}}],

Cell[TextData[{
 "Note, we can also use ",
 Cell[BoxData[
  FormBox[
   SqrtBox[
    FractionBox[
     RowBox[{
      RowBox[{
       OverscriptBox[
        RowBox[{"(", "p"}], "^"], 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         OverscriptBox["p", "^"]}], ")"}]}], ")"}], "n"]], 
   TraditionalForm]]],
 ",",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["\[Mu]", "1"], "-", 
     SubscriptBox["\[Mu]", "2"]}], "=", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       SubscriptBox[
        OverscriptBox["x", "-"], "1"], "-", 
       SubscriptBox[
        OverscriptBox["x", "-"], "2"]}], ")"}], "\[PlusMinus]", 
     SqrtBox[
      RowBox[{
       FractionBox[
        SuperscriptBox[
         SubscriptBox["\[Sigma]", "1"], "2"], 
        SubscriptBox["n", "1"]], "+", 
       FractionBox[
        SuperscriptBox[
         SubscriptBox["\[Sigma]", "2"], "2"], 
        SubscriptBox["n", "2"]]}]]}]}], TraditionalForm]]],
 ",",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["p", "1"], "-", 
     SubscriptBox["p", "2"]}], "=", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       SubscriptBox[
        OverscriptBox["p", "^"], "1"], "-", 
       SubscriptBox[
        OverscriptBox["p", "^"], "2"]}], ")"}], "\[PlusMinus]", 
     SqrtBox[
      RowBox[{
       FractionBox[
        RowBox[{"(", 
         RowBox[{
          SubscriptBox[
           OverscriptBox["p", "^"], "1"], "*", 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            SubscriptBox[
             OverscriptBox["p", "^"], "1"]}], ")"}]}], ")"}], 
        SubscriptBox["n", "1"]], "+", 
       FractionBox[
        RowBox[{"(", 
         RowBox[{
          SubscriptBox[
           OverscriptBox["p", "^"], "2"], "*", 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            SubscriptBox[
             OverscriptBox["p", "^"], "2"]}], ")"}]}], ")"}], 
        SubscriptBox["n", "2"]]}]]}]}], TraditionalForm]]],
 " depending on what parameter the question asks us to find a probabiltiy \
for. "
}], "Item",
 CellChangeTimes->{{3.5122277602602324`*^9, 3.5122277992541313`*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Formulate null and one- or two-sided alternative hypotheses for ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Mu]", ",", 
    RowBox[{
     SubscriptBox["\[Mu]", "1"], "-", 
     SubscriptBox["\[Mu]", "2"]}], ",", "p", ",", 
    RowBox[{
     RowBox[{"or", " ", 
      SubscriptBox["p", "1"]}], "-", 
     SubscriptBox["p", "2"]}]}], TraditionalForm]]],
 ", and test null hypothesis at any alpha level.  Calculate test statistic, \
critical value for rejection region, and p-value."
}], "Subsection",
 CellChangeTimes->{{3.511805525137125*^9, 3.511805561704664*^9}, {
   3.511805657131119*^9, 3.5118056632151747`*^9}, 3.512227602094417*^9}],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[{
 FormBox[
  RowBox[{
   RowBox[{
    SubscriptBox["H", "0"], ":", " ", "\[Mu]"}], "=", " ", "something"}], 
  TraditionalForm], "\[IndentingNewLine]", 
 FormBox[
  RowBox[{
   SubscriptBox["H", "a"], ":", " ", 
   RowBox[{"\[Mu]", " ", ">", " ", 
    RowBox[{
     RowBox[{"(", "<", ")"}], " ", 
     RowBox[{"(", "\[NotEqual]", ")"}], "that", " ", 
     RowBox[{"something", ".", " "}]}]}]}], TraditionalForm]}],
 FormatType->"TraditionalForm"]], "Item",
 CellChangeTimes->{{3.5122278686340685`*^9, 3.512227978766081*^9}}],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
   "we", " ", "can", " ", "determine", " ", "the", " ", "sign", " ", "for", 
    FormBox[
     RowBox[{
      SubscriptBox["H", "a"], " ", "based", " ", "on", " ", "what", " ", 
      RowBox[{"asks", ".", " ", "For"}], " ", "example", " ", "if", " ", 
      "they", " ", "ask", " ", "us"}],
     TraditionalForm], "to", " ", "test", " ", "if", " ", "something", " ", 
    "is", " ", "more", " ", "than", " ", "a", " ", "value"}], 
   TraditionalForm]],
  FormatType->"TraditionalForm"],
 " we would use the >."
}], "Item",
 CellChangeTimes->{{3.5122278686340685`*^9, 3.512227976877892*^9}}],

Cell[BoxData[
 StyleBox[
  RowBox[{
  "To", " ", "do", " ", "this", " ", "example", " ", "we", " ", "would", " ", 
   "say", " ", 
   FormBox[
    RowBox[{
     FractionBox[
      RowBox[{"(", 
       RowBox[{
        OverscriptBox["x", "-"], "-", "\[Mu]"}], ")"}], 
      SqrtBox[
       FractionBox[
        SuperscriptBox["\[Sigma]", "2"], "n"]]], "=", " ", 
     RowBox[{"test", " ", 
      RowBox[{"statistic", "."}]}]}],
    TraditionalForm]}],
  FontFamily->"Times New Roman"]], "Item",
 CellChangeTimes->{{3.51222738050426*^9, 3.512227380678278*^9}, {
   3.5122274125234623`*^9, 3.5122274164888587`*^9}, 3.5122274684720564`*^9}],

Cell["\<\
We get the critical value by looking up the z-score associated with the \
confidenc level they gave us. \
\>", "Item",
 CellChangeTimes->{{3.512227468872096*^9, 3.512227518541063*^9}}],

Cell["\<\
Then determine which side of the critical value the test statistic is on to \
decide if it is in the rejection region or not. (the rejection regoin will be \
defined by the alternative hypothesis)\
\>", "Item",
 CellChangeTimes->{{3.5122275194501534`*^9, 3.512227578077016*^9}, {
  3.512227833911597*^9, 3.512227833914597*^9}}],

Cell[TextData[{
 "According to the question we would repeat the proces using ",
 Cell[BoxData[
  FormBox[
   SqrtBox[
    FractionBox[
     RowBox[{
      RowBox[{
       OverscriptBox[
        RowBox[{"(", "p"}], "^"], 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         OverscriptBox["p", "^"]}], ")"}]}], ")"}], "n"]], 
   TraditionalForm]]],
 ",",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["\[Mu]", "1"], "-", 
     SubscriptBox["\[Mu]", "2"]}], "=", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       SubscriptBox[
        OverscriptBox["x", "-"], "1"], "-", 
       SubscriptBox[
        OverscriptBox["x", "-"], "2"]}], ")"}], "\[PlusMinus]", 
     SqrtBox[
      RowBox[{
       FractionBox[
        SuperscriptBox[
         SubscriptBox["\[Sigma]", "1"], "2"], 
        SubscriptBox["n", "1"]], "+", 
       FractionBox[
        SuperscriptBox[
         SubscriptBox["\[Sigma]", "2"], "2"], 
        SubscriptBox["n", "2"]]}]]}]}], TraditionalForm]]],
 ",",
 Cell[BoxData[
  FormBox[
   RowBox[{" ", 
    RowBox[{
     RowBox[{
      RowBox[{"or", " ", 
       SubscriptBox["p", "1"]}], "-", 
      SubscriptBox["p", "2"]}], "=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        SubscriptBox[
         OverscriptBox["p", "^"], "1"], "-", 
        SubscriptBox[
         OverscriptBox["p", "^"], "2"]}], ")"}], "\[PlusMinus]", 
      SqrtBox[
       RowBox[{
        FractionBox[
         RowBox[{"(", 
          RowBox[{
           SubscriptBox[
            OverscriptBox["p", "^"], "1"], "*", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             SubscriptBox[
              OverscriptBox["p", "^"], "1"]}], ")"}]}], ")"}], 
         SubscriptBox["n", "1"]], "+", 
        FractionBox[
         RowBox[{"(", 
          RowBox[{
           SubscriptBox[
            OverscriptBox["p", "^"], "2"], "*", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             SubscriptBox[
              OverscriptBox["p", "^"], "2"]}], ")"}]}], ")"}], 
         SubscriptBox["n", "2"]]}]]}]}]}], TraditionalForm]]],
 " "
}], "Item",
 CellChangeTimes->{{3.5122278349517007`*^9, 3.512227859637169*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Find point estimates and one- or two-sided confidence intervals for ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["\[Sigma]", "2"], " ", "and", " ", 
    FractionBox[
     SuperscriptBox[
      SubscriptBox["\[Sigma]", "1"], "2"], 
     RowBox[{
      SubscriptBox["\[Sigma]", "2"], "2"}]]}], TraditionalForm]]],
 ", as well as probabilities \nfor certain ranges of these parameters (e.g. \
P(2 <",
 Cell[BoxData[
  FormBox[
   FractionBox[
    SuperscriptBox[
     SubscriptBox["\[Sigma]", "1"], "2"], 
    RowBox[{
     SubscriptBox["\[Sigma]", "2"], "2"}]], TraditionalForm]]],
 " < 3) ), and perform hypothesis tests of particular parameter values."
}], "Subsection",
 CellChangeTimes->{{3.511805525137125*^9, 3.511805559673355*^9}, {
  3.511805674311569*^9, 3.5118057386993237`*^9}, {3.5122279939375973`*^9, 
  3.5122280049927034`*^9}}],

Cell[CellGroupData[{

Cell[TextData[{
 "Point estimates are found using this identity ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["s", "2"], "=", 
    RowBox[{
     FractionBox["1", 
      RowBox[{"n", "-", "1"}]], 
     RowBox[{"\[Sum]", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["x", "i"], "-", 
         OverscriptBox["x", "-"]}], ")"}], "2"]}]}]}], TraditionalForm]],
  FormatType->"TraditionalForm"]
}], "Item",
 CellChangeTimes->{{3.5122280329765015`*^9, 3.512228085781781*^9}}],

Cell[TextData[{
 "Confidence intervals for these estimates is found by knowing that ",
 Cell[BoxData[
  FormBox[
   FractionBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{"n", "-", "1"}], ")"}], 
     SuperscriptBox["s", "2"]}], 
    SuperscriptBox["\[Sigma]", "2"]], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "~ ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["\[Chi]", "2"], "(", 
    RowBox[{"n", "-", "1"}], ")"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ". "
}], "Item",
 CellChangeTimes->{{3.5122280868508883`*^9, 3.512228322143415*^9}}],

Cell[CellGroupData[{

Cell[TextData[{
 "We are looking for P(lower \[Chi] <",
 Cell[BoxData[
  FormBox[
   FractionBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{"n", "-", "1"}], ")"}], 
     SuperscriptBox["s", "2"]}], 
    SuperscriptBox["\[Sigma]", "2"]], TraditionalForm]]],
 "< upper \[Chi]) - we find the \[Chi]'s by splitting our confidence level in \
two and then looking up the values on the table. For exapmle \[Alpha]=.05 . \
lower ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["\[Chi]", "2"], "=", 
    SubscriptBox["\[Chi]", ".0975"]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " and the upper is the ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Chi]", ".025"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "."
}], "Subitem",
 CellChangeTimes->{{3.512228326444845*^9, 3.5122284730135*^9}}],

Cell[TextData[{
 "We would then multiply \[Chi] ",
 Cell[BoxData[
  FormBox[
   FractionBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{"n", "-", "1"}], ")"}], 
     SuperscriptBox["s", "2"]}], 
    SuperscriptBox["\[Sigma]", "2"]], TraditionalForm]]],
 ". We would then invert everything, flip the signs on an inequality and \
multily both sides by (n-1) ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["s", "2"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " to end up with ",
 Cell[BoxData[
  FormBox[
   RowBox[{"P", "(", 
    RowBox[{
     RowBox[{
      FractionBox["1", 
       SubscriptBox["\[Chi]", "lower"]], 
      RowBox[{"(", 
       RowBox[{"n", "-", "1"}], ")"}], 
      SuperscriptBox["s", "2"]}], ">", 
     SuperscriptBox["\[Sigma]", "2"], ">", 
     RowBox[{
      FractionBox["1", 
       SubscriptBox["\[Chi]", "upper"]], 
      RowBox[{"(", 
       RowBox[{"n", "-", "1"}], ")"}], 
      SuperscriptBox["s", "2"]}]}], ")"}], TraditionalForm]],
  FormatType->"TraditionalForm"]
}], "Subitem",
 CellChangeTimes->{{3.5122280868508883`*^9, 3.512228315356736*^9}, {
  3.512228484120611*^9, 3.512228547916987*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Matrix Algebra", "Section",
 CellChangeTimes->{{3.511805091970151*^9, 3.5118050938581142`*^9}}],

Cell[CellGroupData[{

Cell["\<\
Be able to identify matrices with the following special properties: square, \
symmetric, upper/lower triangular, diagonal, Identity, idempotent, (non-) \
singular, positive/negative (semi-) definite.\
\>", "Subsection",
 CellChangeTimes->{{3.511805750116338*^9, 3.511805755801752*^9}}],

Cell[CellGroupData[{

Cell[TextData[{
 "Symmetric: ",
 Cell[BoxData[
  FormBox[
   RowBox[{"A", "=", 
    RowBox[{
     SuperscriptBox["A", "T"], "=", 
     RowBox[{"A", "'"}]}]}], TraditionalForm]]]
}], "Subitem",
 CellChangeTimes->{{3.5118058132634087`*^9, 3.511805833923193*^9}, {
  3.512228609807987*^9, 3.512228609809987*^9}}],

Cell["\<\
Square: a matrix that has the same number of columns and rows.\
\>", "Subitem",
 CellChangeTimes->{{3.512228610223987*^9, 3.512228624718987*^9}}],

Cell["\<\
Upper (lower) triangular matrix = all entries are above (below) the main \
diagonal. \
\>", "Subitem",
 CellChangeTimes->{{3.511805837506381*^9, 3.511805862349208*^9}, {
  3.511805901419383*^9, 3.511805917383196*^9}}],

Cell[TextData[{
 "Idempotent ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["A", "2"], "=", "A"}], TraditionalForm]]]
}], "Subitem",
 CellChangeTimes->{{3.511805919626989*^9, 3.5118059276789217`*^9}}],

Cell["non-singular means invertible", "Subitem",
 CellChangeTimes->{{3.511805932474514*^9, 3.511805939044785*^9}, 
   3.5118132054565153`*^9, {3.5122286292949867`*^9, 3.512228629295987*^9}}],

Cell["\<\
Identity matrix is a diagonal, square matrix with 1's along the diagonal .\
\>", "Subitem",
 CellChangeTimes->{{3.512228629726987*^9, 3.512228647677987*^9}}],

Cell[TextData[{
 "positive (semi) definite: ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       SuperscriptBox["x", "T"], "(", "A", ")"}], "x"}], ">", " ", 
     RowBox[{
      RowBox[{"(", "\[GreaterEqual]", ")"}], "0", " ", "for", " ", "all", " ",
       "x"}]}], ";", 
    RowBox[{
     RowBox[{
      RowBox[{"s", ".", "  ", "or"}], " ", "all", " ", 
      RowBox[{"\[Lambda]", "'"}], "s", " ", "are"}], " ", ">", " ", 
     RowBox[{
      RowBox[{"(", "\[GreaterEqual]", ")"}], "0"}]}]}], TraditionalForm]]]
}], "Subitem",
 CellChangeTimes->{{3.511805940137602*^9, 3.511805980071824*^9}, {
  3.511806018298684*^9, 3.5118060299635963`*^9}, {3.511807289009191*^9, 
  3.5118072898384*^9}, {3.5122285928679867`*^9, 3.512228595364987*^9}}],

Cell[TextData[{
 "Negative semi definite: ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{
      SuperscriptBox["x", "T"], "(", "A", ")"}], "x"}], ",", 
    RowBox[{"<", " ", 
     RowBox[{
      RowBox[{"(", "\[LessEqual]", ")"}], "0", " ", "for", " ", "all", " ", 
      RowBox[{"x", "'"}], 
      RowBox[{"s", " ", ".", "  ", "or"}], " ", "all", " ", 
      RowBox[{"\[Lambda]", "'"}], "s", " ", "are"}], " ", "<", " ", 
     RowBox[{
      RowBox[{"(", "\[LessEqual]", ")"}], "0"}]}]}], TraditionalForm]]]
}], "Subitem",
 CellChangeTimes->{{3.511806030606586*^9, 3.511806062735718*^9}, {
  3.511807293765463*^9, 3.5118072943622713`*^9}, {3.5118132063645287`*^9, 
  3.51181320702251*^9}, {3.512228599107987*^9, 3.512228602181987*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Be able to perform basic matrix operations, such as transpose, matrix \
addition, scalar/vector/matrix multiplication.  Be familiar with the order of \
operations, so that you can simplify complicated matrix expressions.\
\>", "Subsection",
 CellChangeTimes->{{3.511805750116338*^9, 3.5118057614012957`*^9}, 
   3.5118060831753902`*^9}],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", "ABC", ")"}], 
     RowBox[{"-", "1"}]], "=", 
    RowBox[{
     SuperscriptBox["C", 
      RowBox[{"-", "1"}]], 
     SuperscriptBox["B", 
      RowBox[{"-", "1"}]], 
     SuperscriptBox["A", 
      RowBox[{"-", "1"}]], " ", "iff", " ", "C"}]}], ",", " ", "B", ",", " ", 
   
   RowBox[{"A", " ", "are", " ", "all", " ", "square"}], ",", " ", 
   RowBox[{"non", "-", "singular"}], ",", " ", 
   RowBox[{"and", " ", "the", " ", "same", " ", "size"}]}], 
  TraditionalForm]]]], "Item",
 CellChangeTimes->{{3.511806094543784*^9, 3.5118061329976482`*^9}}],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", "ABC", ")"}], "T"], "=", 
    RowBox[{
     SuperscriptBox["C", "T"], 
     SuperscriptBox["B", "T"], 
     SuperscriptBox["A", "T"]}]}], TraditionalForm]]],
 ", always"
}], "Item",
 CellChangeTimes->{{3.5118061683947363`*^9, 3.511806173960476*^9}, {
  3.511807305906431*^9, 3.511807305910725*^9}}],

Cell["you can always factor out scalars (1 x 1 matrices)", "Item",
 CellChangeTimes->{{3.511807328393763*^9, 3.5118073305664587`*^9}, {
  3.512228755094987*^9, 3.512228756807987*^9}}],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   SuperscriptBox[
    RowBox[{"(", "AB", ")"}], "T"], "=", 
   RowBox[{
    SuperscriptBox["B", "T"], 
    SuperscriptBox["A", "T"]}]}], TraditionalForm]]]], "Item",
 CellChangeTimes->{
  3.511807347419203*^9, {3.512228781125987*^9, 3.5122287811289873`*^9}}],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{"A", "=", 
    RowBox[{"(", GridBox[{
       {
        SubscriptBox["a", "11"], 
        SubscriptBox["a", "12"]},
       {
        SubscriptBox["a", "21"], 
        SubscriptBox["a", "22"]}
      }], ")"}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{"B", "=", 
    RowBox[{"(", GridBox[{
       {
        SubscriptBox["b", "11"], 
        SubscriptBox["b", "12"]},
       {
        SubscriptBox["b", "21"], 
        SubscriptBox["b", "22"]}
      }], ")"}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " then ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"A", "+", "B"}], "=", 
    RowBox[{"(", GridBox[{
       {
        RowBox[{
         SubscriptBox["a", "11"], "+", 
         SubscriptBox["b", "11"]}], 
        RowBox[{
         SubscriptBox["a", "12"], "+", 
         SubscriptBox["b", "12"]}]},
       {"...", "..."}
      }], ")"}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", note you can only add matricies that are the same size. "
}], "Item",
 CellChangeTimes->{{3.512228782501987*^9, 3.512228881460987*^9}, {
  3.512229017770987*^9, 3.512229026519987*^9}}],

Cell["\<\
When we multiply a matrix, the product will have the same number of rows as \
the first original matrix listed and the same number of columns as the second \
original matrix listed. For example let A be n \[Cross] m and B m \[Cross] n \
AB will be n \[Cross] n.\
\>", "Item",
 CellChangeTimes->{{3.5122288825769873`*^9, 3.5122289654859867`*^9}}],

Cell["\<\
When doing matrix multiplication - it is only possible when the first matrix \
has \"n\" columns and the second has \"n\" rows. If they are differnet the \
product doesn't exist.\
\>", "Item",
 CellChangeTimes->{{3.512229011816987*^9, 3.5122290137209873`*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Find the determinant of a matrix of any size.\
\>", "Subsection",
 CellChangeTimes->{{3.511805750116338*^9, 3.511805759985425*^9}}],

Cell[CellGroupData[{

Cell[TextData[{
 "Just use row operations and don\[CloseCurlyQuote]t forget that when I \
multiply a row by a scalar I multiply the determinant by ",
 Cell[BoxData[
  FormBox[
   FractionBox["1", 
    RowBox[{"the", " ", "scalar"}]], TraditionalForm]]]
}], "Item",
 CellChangeTimes->{{3.511806208388686*^9, 3.5118062408571787`*^9}, {
  3.512229049462987*^9, 3.512229049465987*^9}}],

Cell["\<\
The determinant of a matrix is also found by cofactor expansion (this is the \
way Dr. McMurray taught in class - see notes for details)\
\>", "Item",
 CellChangeTimes->{{3.5122290511769867`*^9, 3.512229065125987*^9}, {
  3.5122291050919867`*^9, 3.5122291332499866`*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Determine whether two matrices are inverses, and find the inverse of any \
Nonsingular matrix.\
\>", "Subsection",
 CellChangeTimes->{{3.511805750116338*^9, 3.51180576373738*^9}, 
   3.5118132088710117`*^9}],

Cell[CellGroupData[{

Cell[TextData[{
 "Matricies are invereses of one another iff AB=BA=I, in this case B is \
called ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["A", 
    RowBox[{"-", "1"}]], TraditionalForm]],
  FormatType->"TraditionalForm"]
}], "Item",
 CellChangeTimes->{{3.5118063152146273`*^9, 3.5118063507996483`*^9}, {
  3.512229143920987*^9, 3.512229163507987*^9}}],

Cell[TextData[{
 "To find the inverse of any matrix A you can augment it with the identity \
matrix as shown [A | I] , preform row operations on the augmented matrx until \
A is I an the result will be [ I | ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["A", 
    RowBox[{"-", "1"}]], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "]"
}], "Item",
 CellChangeTimes->{{3.5122291662879868`*^9, 3.512229249837987*^9}}],

Cell[TextData[{
 "Another way to do this is to do ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox["1", 
     RowBox[{"|", " ", "A", " ", "|"}]], 
    RowBox[{"C", "'"}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", where A is the matrix whose inverse you want and C is the matrix of \
cofactors."
}], "Item",
 CellChangeTimes->{{3.512229250106987*^9, 3.512229295130987*^9}}],

Cell[TextData[{
 "Hint: when finding the matrix of cofactors, don't forget he the \
checkerboard pattern for (+) and (-) signs: ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", GridBox[{
      {"+", "-", "+"},
      {"-", "+", "-"},
      {"+", "-", "+"}
     }], ")"}], TraditionalForm]],
  FormatType->"TraditionalForm"]
}], "Subitem",
 CellChangeTimes->{{3.512229301639987*^9, 3.512229344946987*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Rewrite a system of linear equations using matrix notation, and solve for \
unknown variables.\
\>", "Subsection",
 CellChangeTimes->{{3.511805750116338*^9, 3.511805765697254*^9}}],

Cell[CellGroupData[{

Cell["This is more easily shown by example", "Item",
 CellChangeTimes->{{3.511806355374558*^9, 3.5118063559867907`*^9}, {
  3.512229357012987*^9, 3.512229403924987*^9}}],

Cell[TextData[{
 Cell[BoxData[{
  FormBox[
   RowBox[{
    RowBox[{"x", "+", "y", "-", 
     RowBox[{"2", "z"}]}], "=", "1"}], 
   TraditionalForm], "\[IndentingNewLine]", 
  FormBox[
   RowBox[{
    RowBox[{"y", "-", "z"}], "=", "4"}], 
   TraditionalForm], "\[IndentingNewLine]", 
  FormBox[
   RowBox[{
    RowBox[{"x", "+", 
     RowBox[{"3", "z"}]}], "=", "0"}], TraditionalForm]}],
  FormatType->"TraditionalForm"],
 "  can be re-written as Ax=b where A ",
 Cell[BoxData[
  FormBox[
   RowBox[{"=", 
    RowBox[{"(", GridBox[{
       {"1", "1", 
        RowBox[{"-", "2"}]},
       {"0", "1", 
        RowBox[{"-", "1"}]},
       {"1", "0", "3"}
      }], ")"}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{"x", "=", 
    RowBox[{"(", GridBox[{
       {"x"},
       {"y"},
       {"z"}
      }], ")"}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"b", "=", 
    RowBox[{"(", GridBox[{
       {"1"},
       {"4"},
       {"0"}
      }], ")"}]}], TraditionalForm]],
  FormatType->"TraditionalForm"]
}], "Subitem",
 CellChangeTimes->{{3.512229416599987*^9, 3.5122295661850386`*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Be able to express simple sample statistics such as ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["x", "-"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " and ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["s", "2"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " using matrix notation."
}], "Subsection",
 CellChangeTimes->{{3.511805750116338*^9, 3.51180578506968*^9}, 
   3.5118063604590273`*^9}],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   OverscriptBox["x", "-"], "=", 
   RowBox[{
    FractionBox["1", "n"], 
    StyleBox["1",
     FontWeight->"Bold"], 
    StyleBox["X",
     FontWeight->"Bold"]}]}], TraditionalForm]],
 FormatType->"TraditionalForm"]], "Subitem",
 CellChangeTimes->{{3.5118063653066072`*^9, 3.511806373122757*^9}, {
   3.511806458820548*^9, 3.511806571058895*^9}, 3.5118074127204027`*^9}],

Cell[TextData[Cell[BoxData[{
 FormBox[
  RowBox[{
   SuperscriptBox["s", "2"], "=", " ", 
   RowBox[{
    RowBox[{"1", "/", 
     RowBox[{"(", 
      RowBox[{"n", " ", "-", " ", "1"}], ")"}]}], " ", 
    RowBox[{"\[Sum]", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"x", " ", "-", 
        OverscriptBox["x", "-"]}], ")"}], "^", "2"}]}]}]}], 
  TraditionalForm], "\[IndentingNewLine]", 
 FormBox[
  RowBox[{"=", 
   RowBox[{
    FractionBox["1", 
     RowBox[{"n", "-", "1"}]], 
    RowBox[{
     StyleBox["X",
      FontWeight->"Bold"], "'"}], 
    RowBox[{"(", 
     RowBox[{
      SubscriptBox["I", "n"], "-", 
      RowBox[{
       FractionBox["1", "n"], 
       StyleBox[
        RowBox[{"11", "'"}],
        FontWeight->"Bold"]}]}], 
     StyleBox[")",
      FontWeight->"Bold"]}], 
    StyleBox["X",
     FontWeight->"Bold"]}]}], TraditionalForm], "\[IndentingNewLine]", 
 FormBox[
  RowBox[{
   StyleBox["=",
    FontWeight->"Bold"], 
   RowBox[{
    RowBox[{
     RowBox[{
      FractionBox["1", 
       RowBox[{"n", "-", "1"}]], "[", 
      StyleBox[
       RowBox[{"X", "-", 
        RowBox[{"1", "X"}]}],
       FontWeight->"Bold"], 
      StyleBox["]",
       FontWeight->"Bold"]}], 
     StyleBox["'",
      FontWeight->"Bold"]}], 
    StyleBox["[",
     FontWeight->"Bold"], 
    StyleBox[
     RowBox[{"x", "-", 
      RowBox[{"1", "x"}]}],
     FontWeight->"Bold"], 
    StyleBox["]",
     FontWeight->"Bold"]}]}], TraditionalForm], "\n"
 FormBox[, TraditionalForm]}],
 FormatType->"TraditionalForm"]], "Subitem",
 CellChangeTimes->{{3.5118063653066072`*^9, 3.511806373122757*^9}, {
   3.511806458820548*^9, 3.511806571058895*^9}, 3.5118074127204027`*^9, {
   3.5122296233167505`*^9, 3.5122298535467715`*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowToolbars->{},
WindowSize->{840, 915},
WindowMargins->{{-4, Automatic}, {Automatic, 10}},
PrintingCopies->1,
PrintingPageRange->{Automatic, Automatic},
FrontEndVersion->"7.0 for Microsoft Windows (64-bit) (February 18, 2009)",
StyleDefinitions->FrontEnd`FileName[{"Report"}, "ConfidentialReport.nb", 
  CharacterEncoding -> "WindowsANSI"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[579, 22, 104, 1, 73, "Title"],
Cell[CellGroupData[{
Cell[708, 27, 96, 1, 71, "Section"],
Cell[CellGroupData[{
Cell[829, 32, 298, 6, 53, "Subsection"],
Cell[CellGroupData[{
Cell[1152, 42, 1976, 43, 67, "Subitem"],
Cell[3131, 87, 3546, 74, 84, "Subitem"],
Cell[6680, 163, 4172, 81, 57, "Subitem"],
Cell[10855, 246, 561, 17, 34, "Subitem"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[11465, 269, 182, 4, 36, "Subsection"],
Cell[CellGroupData[{
Cell[11672, 277, 457, 13, 34, "Item"],
Cell[12132, 292, 712, 20, 34, "Item"],
Cell[12847, 314, 379, 6, 39, "Subitem"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[13275, 326, 285, 5, 53, "Subsection"],
Cell[CellGroupData[{
Cell[13585, 335, 549, 16, 36, "Subitem"],
Cell[14137, 353, 573, 17, 23, "Subitem"],
Cell[14713, 372, 486, 15, 23, "Subitem"],
Cell[15202, 389, 443, 14, 35, "Subitem"],
Cell[15648, 405, 373, 7, 39, "Subitem"]
}, Open  ]],
Cell[CellGroupData[{
Cell[16058, 417, 7434, 193, 225, "Item"],
Cell[23495, 612, 1398, 39, 106, "Item"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[24942, 657, 249, 5, 53, "Subsection"],
Cell[CellGroupData[{
Cell[25216, 666, 180, 2, 23, "Subitem"],
Cell[25399, 670, 261, 5, 39, "Subitem"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[25721, 682, 103, 1, 71, "Section"],
Cell[CellGroupData[{
Cell[25849, 687, 373, 9, 63, "Subsection"],
Cell[CellGroupData[{
Cell[26247, 700, 543, 15, 25, "Item"],
Cell[26793, 717, 294, 8, 33, "Item"]
}, Open  ]],
Cell[CellGroupData[{
Cell[27124, 730, 119, 1, 27, "Subsubsection"],
Cell[CellGroupData[{
Cell[27268, 735, 115, 1, 23, "Item"],
Cell[27386, 738, 500, 14, 25, "Item"],
Cell[27889, 754, 629, 18, 23, "Item"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[28567, 778, 117, 1, 27, "Subsubsection"],
Cell[CellGroupData[{
Cell[28709, 783, 157, 3, 23, "Item"],
Cell[28869, 788, 651, 23, 31, "Item"],
Cell[29523, 813, 97, 1, 23, "Item"],
Cell[CellGroupData[{
Cell[29645, 818, 98, 1, 23, "Subitem"],
Cell[29746, 821, 90, 1, 23, "Subitem"],
Cell[29839, 824, 389, 13, 25, "Subitem"],
Cell[30231, 839, 341, 12, 25, "Subitem"],
Cell[30575, 853, 266, 7, 25, "Subitem"],
Cell[30844, 862, 352, 10, 23, "Subitem"],
Cell[31199, 874, 102, 1, 23, "Subitem"],
Cell[31304, 877, 361, 11, 25, "Subitem"],
Cell[31668, 890, 379, 11, 25, "Subitem"],
Cell[32050, 903, 107, 1, 23, "Subitem"],
Cell[32160, 906, 360, 6, 39, "Subitem"],
Cell[32523, 914, 1459, 51, 41, "Subitem"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[34055, 973, 162, 3, 36, "Subsection"],
Cell[34220, 978, 100, 2, 30, "Input"],
Cell[CellGroupData[{
Cell[34345, 984, 372, 11, 27, "Item"],
Cell[34720, 997, 261, 5, 23, "Item"]
}, Open  ]],
Cell[34996, 1005, 98, 2, 30, "Input"],
Cell[35097, 1009, 183, 4, 23, "Item"]
}, Open  ]],
Cell[CellGroupData[{
Cell[35317, 1018, 220, 5, 36, "Subsection"],
Cell[CellGroupData[{
Cell[35562, 1027, 117, 1, 27, "Subsubsection"],
Cell[CellGroupData[{
Cell[35704, 1032, 372, 10, 28, "Item"],
Cell[36079, 1044, 244, 5, 23, "Item"],
Cell[36326, 1051, 481, 13, 42, "Item"],
Cell[36810, 1066, 308, 5, 39, "Item"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[37167, 1077, 115, 1, 27, "Subsubsection"],
Cell[37285, 1080, 275, 5, 39, "Item"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[37621, 1092, 104, 1, 71, "Section"],
Cell[CellGroupData[{
Cell[37750, 1097, 134, 1, 36, "Subsection"],
Cell[CellGroupData[{
Cell[37909, 1102, 117, 1, 27, "Subsubsection"],
Cell[38029, 1105, 369, 7, 39, "Item"]
}, Open  ]],
Cell[CellGroupData[{
Cell[38435, 1117, 115, 1, 27, "Subsubsection"],
Cell[38553, 1120, 276, 5, 39, "Item"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[38878, 1131, 153, 3, 36, "Subsection"],
Cell[CellGroupData[{
Cell[39056, 1138, 117, 1, 27, "Subsubsection"],
Cell[39176, 1141, 950, 22, 75, "Item"]
}, Open  ]],
Cell[CellGroupData[{
Cell[40163, 1168, 117, 1, 27, "Subsubsection"],
Cell[40283, 1171, 357, 6, 39, "Item"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[40689, 1183, 159, 2, 36, "Subsection"],
Cell[CellGroupData[{
Cell[40873, 1189, 119, 1, 27, "Subsubsection"],
Cell[40995, 1192, 843, 20, 57, "Item"]
}, Open  ]],
Cell[CellGroupData[{
Cell[41875, 1217, 117, 1, 27, "Subsubsection"],
Cell[41995, 1220, 414, 7, 55, "Item"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[42458, 1233, 213, 2, 36, "Subsection"],
Cell[CellGroupData[{
Cell[42696, 1239, 118, 1, 27, "Subsubsection"],
Cell[42817, 1242, 446, 15, 26, "Item"]
}, Open  ]],
Cell[CellGroupData[{
Cell[43300, 1262, 114, 1, 27, "Subsubsection"],
Cell[CellGroupData[{
Cell[43439, 1267, 184, 2, 23, "Item"],
Cell[43626, 1271, 363, 6, 39, "Item"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[44050, 1284, 335, 10, 41, "Subsection"],
Cell[CellGroupData[{
Cell[44410, 1298, 119, 1, 27, "Subsubsection"],
Cell[CellGroupData[{
Cell[44554, 1303, 170, 3, 23, "Item"],
Cell[44727, 1308, 256, 5, 39, "Item"],
Cell[44986, 1315, 407, 12, 25, "Item"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[45442, 1333, 117, 1, 27, "Subsubsection"],
Cell[45562, 1336, 199, 4, 23, "Item"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[45810, 1346, 288, 8, 39, "Subsection"],
Cell[CellGroupData[{
Cell[46123, 1358, 119, 1, 27, "Subsubsection"],
Cell[CellGroupData[{
Cell[46267, 1363, 169, 2, 23, "Item"],
Cell[46439, 1367, 697, 21, 30, "Item"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[47185, 1394, 117, 1, 27, "Subsubsection"],
Cell[CellGroupData[{
Cell[47327, 1399, 311, 6, 39, "Item"],
Cell[CellGroupData[{
Cell[47663, 1409, 357, 11, 50, "Subitem"],
Cell[48023, 1422, 761, 24, 43, "Subitem"],
Cell[48787, 1448, 413, 12, 25, "Subitem"],
Cell[49203, 1462, 882, 19, 59, "Subitem"],
Cell[50088, 1483, 207, 4, 23, "Subitem"],
Cell[50298, 1489, 119, 1, 23, "Subitem"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[50490, 1498, 201, 4, 36, "Subsection"],
Cell[CellGroupData[{
Cell[50716, 1506, 108, 1, 23, "Subitem"],
Cell[50827, 1509, 125, 2, 23, "Subitem"],
Cell[50955, 1513, 140, 2, 23, "Subitem"],
Cell[51098, 1517, 331, 10, 23, "Subitem"],
Cell[51432, 1529, 442, 14, 23, "Subitem"],
Cell[51877, 1545, 171, 2, 23, "Subitem"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[52097, 1553, 186, 4, 36, "Subsection"],
Cell[CellGroupData[{
Cell[52308, 1561, 930, 32, 40, "Item"],
Cell[53241, 1595, 339, 10, 23, "Item"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[53629, 1611, 163, 3, 36, "Subsection"],
Cell[53795, 1616, 203, 4, 23, "Subitem"]
}, Open  ]],
Cell[CellGroupData[{
Cell[54035, 1625, 188, 4, 36, "Subsection"],
Cell[CellGroupData[{
Cell[54248, 1633, 365, 7, 39, "Subitem"],
Cell[54616, 1642, 163, 3, 23, "Subitem"],
Cell[54782, 1647, 184, 4, 23, "Subitem"],
Cell[54969, 1653, 161, 3, 23, "Subitem"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[55191, 1663, 105, 1, 71, "Section"],
Cell[CellGroupData[{
Cell[55321, 1668, 270, 5, 53, "Subsection"],
Cell[CellGroupData[{
Cell[55616, 1677, 265, 5, 23, "Item"],
Cell[55884, 1684, 288, 6, 23, "Item"],
Cell[56175, 1692, 355, 7, 39, "Item"],
Cell[56533, 1701, 328, 6, 39, "Item"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[56910, 1713, 268, 5, 53, "Subsection"],
Cell[CellGroupData[{
Cell[57203, 1722, 283, 8, 24, "Item"],
Cell[57489, 1732, 312, 8, 24, "Item"],
Cell[57804, 1742, 352, 10, 24, "Item"],
Cell[58159, 1754, 354, 10, 24, "Item"],
Cell[58516, 1766, 701, 18, 24, "Item"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[59266, 1790, 141, 3, 36, "Subsection"],
Cell[59410, 1795, 310, 5, 39, "Item"]
}, Open  ]],
Cell[CellGroupData[{
Cell[59757, 1805, 233, 5, 36, "Subsection"],
Cell[CellGroupData[{
Cell[60015, 1814, 3520, 90, 252, "Input"],
Cell[63538, 1906, 67022, 1145, 328, "Output"]
}, {2}]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[130618, 3058, 109, 1, 71, "Section"],
Cell[CellGroupData[{
Cell[130752, 3063, 120, 1, 36, "Subsection"],
Cell[130875, 3066, 311, 5, 39, "Item"]
}, Open  ]],
Cell[CellGroupData[{
Cell[131223, 3076, 161, 3, 36, "Subsection"],
Cell[CellGroupData[{
Cell[131409, 3083, 626, 20, 33, "Item"],
Cell[132038, 3105, 194, 4, 23, "Item"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[132281, 3115, 193, 4, 36, "Subsection"],
Cell[CellGroupData[{
Cell[132499, 3123, 348, 6, 39, "Item"],
Cell[132850, 3131, 313, 5, 39, "Item"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[133212, 3142, 369, 11, 39, "Subsection"],
Cell[CellGroupData[{
Cell[133606, 3157, 496, 18, 33, "Item"],
Cell[134105, 3177, 531, 17, 33, "Item"],
Cell[134639, 3196, 200, 5, 30, "Item"],
Cell[134842, 3203, 374, 11, 34, "Item"]
}, Open  ]]
}, Open  ]],
Cell[135243, 3218, 148, 3, 36, "Subsection"],
Cell[CellGroupData[{
Cell[135416, 3225, 171, 3, 28, "Subsection"],
Cell[CellGroupData[{
Cell[135612, 3232, 650, 18, 27, "Item"],
Cell[136265, 3252, 509, 14, 43, "Item"],
Cell[136777, 3268, 432, 13, 27, "Item"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[137258, 3287, 178, 4, 36, "Subsection"],
Cell[137439, 3293, 94, 7, 101, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[137570, 3305, 189, 4, 36, "Subsection"],
Cell[137762, 3311, 247, 5, 47, "Text"],
Cell[CellGroupData[{
Cell[138034, 3320, 253, 8, 25, "SubitemNumbered"],
Cell[138290, 3330, 102, 1, 24, "SubitemNumbered"],
Cell[138395, 3333, 280, 9, 25, "SubitemNumbered"],
Cell[138678, 3344, 617, 19, 35, "SubitemNumbered"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[139344, 3369, 150, 2, 36, "Subsection"],
Cell[CellGroupData[{
Cell[139519, 3375, 531, 13, 27, "Item"],
Cell[140053, 3390, 815, 22, 59, "Item"],
Cell[140871, 3414, 1064, 29, 84, "Item"],
Cell[141938, 3445, 299, 8, 26, "Item"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[142286, 3459, 526, 16, 36, "Subsection"],
Cell[CellGroupData[{
Cell[142837, 3479, 639, 18, 62, "Item"],
Cell[143479, 3499, 1139, 33, 58, "Item"],
Cell[144621, 3534, 542, 19, 58, "Item"],
Cell[145166, 3555, 1210, 38, 46, "Item"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[146425, 3599, 503, 15, 36, "Subsection"],
Cell[CellGroupData[{
Cell[146953, 3618, 292, 8, 25, "Item"],
Cell[147248, 3628, 449, 14, 65, "Item"],
Cell[147700, 3644, 221, 4, 23, "Item"],
Cell[147924, 3650, 2131, 77, 76, "Item"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[150104, 3733, 655, 16, 53, "Subsection"],
Cell[CellGroupData[{
Cell[150784, 3753, 552, 15, 43, "Item"],
Cell[151339, 3770, 644, 16, 23, "Item"],
Cell[151986, 3788, 636, 19, 70, "Item"],
Cell[152625, 3809, 194, 4, 23, "Item"],
Cell[152822, 3815, 337, 6, 39, "Item"],
Cell[153162, 3823, 2169, 78, 113, "Item"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[155380, 3907, 873, 24, 104, "Subsection"],
Cell[CellGroupData[{
Cell[156278, 3935, 519, 17, 33, "Item"],
Cell[156800, 3954, 585, 20, 37, "Item"],
Cell[CellGroupData[{
Cell[157410, 3978, 823, 26, 53, "Subitem"],
Cell[158236, 4006, 1142, 37, 73, "Subitem"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[159451, 4051, 101, 1, 71, "Section"],
Cell[CellGroupData[{
Cell[159577, 4056, 295, 5, 53, "Subsection"],
Cell[CellGroupData[{
Cell[159897, 4065, 309, 10, 23, "Subitem"],
Cell[160209, 4077, 155, 3, 23, "Subitem"],
Cell[160367, 4082, 227, 5, 23, "Subitem"],
Cell[160597, 4089, 213, 7, 23, "Subitem"],
Cell[160813, 4098, 190, 2, 23, "Subitem"],
Cell[161006, 4102, 167, 3, 23, "Subitem"],
Cell[161176, 4107, 777, 21, 23, "Subitem"],
Cell[161956, 4130, 756, 19, 23, "Subitem"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[162761, 4155, 346, 6, 70, "Subsection"],
Cell[CellGroupData[{
Cell[163132, 4165, 651, 19, 23, "Item"],
Cell[163786, 4186, 390, 13, 23, "Item"],
Cell[164179, 4201, 183, 2, 23, "Item"],
Cell[164365, 4205, 308, 9, 23, "Item"],
Cell[164676, 4216, 1213, 45, 39, "Item"],
Cell[165892, 4263, 355, 6, 39, "Item"],
Cell[166250, 4271, 270, 5, 39, "Item"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[166569, 4282, 141, 3, 36, "Subsection"],
Cell[CellGroupData[{
Cell[166735, 4289, 381, 9, 34, "Item"],
Cell[167119, 4300, 281, 5, 23, "Item"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[167449, 4311, 217, 5, 36, "Subsection"],
Cell[CellGroupData[{
Cell[167691, 4320, 357, 10, 23, "Item"],
Cell[168051, 4332, 423, 11, 39, "Item"],
Cell[168477, 4345, 397, 12, 34, "Item"],
Cell[168877, 4359, 399, 12, 56, "Subitem"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[169325, 4377, 190, 4, 36, "Subsection"],
Cell[CellGroupData[{
Cell[169540, 4385, 169, 2, 23, "Item"],
Cell[169712, 4389, 1198, 49, 77, "Subitem"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[170959, 4444, 435, 14, 39, "Subsection"],
Cell[CellGroupData[{
Cell[171419, 4462, 421, 12, 33, "Subitem"],
Cell[171843, 4476, 1732, 63, 105, "Subitem"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
