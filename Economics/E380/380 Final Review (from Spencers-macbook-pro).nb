(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 8.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[    261787,       6414]
NotebookOptionsPosition[    246681,       5894]
NotebookOutlinePosition[    247166,       5913]
CellTagsIndexPosition[    247123,       5910]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Econ 380 Final Review", "Title",
 CellChangeTimes->{{3.511997386091584*^9, 3.511997392664606*^9}}],

Cell["", "Subtitle",
 CellChangeTimes->{{3.5119975375582314`*^9, 3.511997547483411*^9}, {
  3.511997612251327*^9, 3.5119976139930363`*^9}}],

Cell[CellGroupData[{

Cell["Consumer Theory", "Subtitle",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.5119976173851137`*^9, 3.5119976341740923`*^9}}],

Cell["\<\
Preferences and Utility - Chapter 3\
\>", "Section",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.5119974384178133`*^9, 3.5119974395354548`*^9}, 
   3.511997634174262*^9, {3.512136893470846*^9, 3.512136894984292*^9}, {
   3.5121429705262003`*^9, 3.512142973575759*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["The Preference Theory Axioms", "Subsection",
 CellChangeTimes->{{3.512135135269884*^9, 3.512135143349119*^9}, {
  3.512135270741105*^9, 3.512135271466607*^9}}],

Cell[CellGroupData[{

Cell["\<\
Completeness: People can always say if they prefer A to B, B to A, or if they \
are indifferent between the two. \
\>", "Item",
 CellChangeTimes->{{3.5121351454130487`*^9, 3.512135165384808*^9}, 
   3.512146116918736*^9}],

Cell["\<\
Transitivity: We are consistent in what we do. That means if A is preferred \
to B and B is preferred to C, then A is preferred to C\
\>", "Item",
 CellChangeTimes->{{3.512135166596559*^9, 3.512135202056594*^9}, {
  3.512146118465705*^9, 3.512146119273362*^9}}],

Cell["\<\
Continuity: If A is preferred to B, then situations close to A should be \
preferred to situations close to B. \
\>", "Item",
 CellChangeTimes->{{3.512135203331959*^9, 3.512135232290956*^9}, {
  3.5121352739784*^9, 3.512135273983151*^9}, {3.512146119793274*^9, 
  3.512146120304928*^9}}],

Cell["\<\
Monotonicity: non-satiation, this means that more is always preferred to less.\
\>", "Item",
 CellChangeTimes->{{3.512135294587529*^9, 3.512135295630587*^9}, 
   3.512146120760989*^9}],

Cell["\<\
Convexity: This means that every point on an indifference curve is equally \
preferable. Snake like indifference curves aren\[CloseCurlyQuote]t allowed.\
\>", "Item",
 CellChangeTimes->{{3.512135297041947*^9, 3.512135346189611*^9}, 
   3.512146121145596*^9}],

Cell["\<\
Differentiability: The utility function is smooth over the interested domain, \
meaning we can take derivatives of it. \
\>", "Item",
 CellChangeTimes->{{3.512135347441127*^9, 3.512135367848537*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Utility", "Subsection",
 CellChangeTimes->{{3.512136989921019*^9, 3.5121369925982323`*^9}}],

Cell["\<\
Utility is a non-cardinal operator. This means that we cannot numerically \
compare how large the difference between two levels of utility are. We can, \
however, say that one level of utility is greater than, less than, or equal \
to another level of utility. \
\>", "Item",
 CellChangeTimes->{{3.512136998230942*^9, 3.5121370606052847`*^9}, {
  3.512146122025735*^9, 3.512146122681279*^9}}],

Cell[CellGroupData[{

Cell["Types of Variables", "Subsubsection",
 CellChangeTimes->{{3.51213407200427*^9, 3.512134074184637*^9}}],

Cell[CellGroupData[{

Cell["\<\
Endogenous Variables: These are thevariables variables or things that a \
person chooses, examples are how much to buy or produce.\
\>", "Item",
 CellChangeTimes->{{3.512134076659666*^9, 3.5121340962218437`*^9}, {
  3.512146123257018*^9, 3.512146134977116*^9}}],

Cell["\<\
Exogenous Variables: These are the things that a person must take as a given, \
selling price of consumers or competitive firms is an example.\
\>", "Item",
 CellChangeTimes->{{3.512134096674664*^9, 3.512134146969776*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Indifference curves and MRS", "Subsection",
 CellChangeTimes->{{3.512137075845017*^9, 3.5121370817729273`*^9}, {
  3.512137253537191*^9, 3.512137260256939*^9}}],

Cell[CellGroupData[{

Cell["Properties of an indifference Curve", "Subsubsection",
 CellChangeTimes->{{3.512135521125431*^9, 3.512135525556808*^9}}],

Cell[CellGroupData[{

Cell["\<\
An indifference curve is a graphical representation of all possible \
\[OpenCurlyDoubleQuote]bundles\[CloseCurlyDoubleQuote] of x and y that will \
yield the same level of utility - the consumer is therefore indifferent to \
any bundle on that line. \
\>", "Item",
 CellChangeTimes->{{3.512137112613841*^9, 3.5121371580432453`*^9}, {
  3.512138418544921*^9, 3.512138418549411*^9}}],

Cell["\<\
The slope of an indifference curve is the MRS\
\>", "Item",
 CellChangeTimes->{{3.5121384190814533`*^9, 3.512138426425226*^9}}],

Cell["Further out corresponds to a higher level of utility", "Item",
 CellChangeTimes->{{3.512135528652997*^9, 3.5121355363778152`*^9}}],

Cell["not thick", "Item",
 CellChangeTimes->{{3.512135538236974*^9, 3.512135539473631*^9}}],

Cell["\<\
Don\[CloseCurlyQuote]t cross (monotonicity doesn\[CloseCurlyQuote]t rob \
transitivity)\
\>", "Item",
 CellChangeTimes->{{3.512135540124535*^9, 3.5121355551053762`*^9}}],

Cell["Usually diminishing in MRS (convex to the origin)", "Item",
 CellChangeTimes->{{3.512135556180518*^9, 3.51213557456105*^9}}],

Cell["Usually downward sloping for goods", "Item",
 CellChangeTimes->{{3.512135575516212*^9, 3.512135581816887*^9}}],

Cell["Usually differentiable. ", "Item",
 CellChangeTimes->{{3.512135582395886*^9, 3.512135585307884*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Marginal Utility and MRS", "Subsubsection",
 CellChangeTimes->{{3.512135394407695*^9, 3.5121353994634647`*^9}, {
  3.5121371902271023`*^9, 3.5121371909313297`*^9}}],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[{
 FormBox[
  RowBox[{
   FractionBox[
    RowBox[{"\[PartialD]", "U"}], 
    RowBox[{"\[PartialD]", "x"}]], "=", 
   SubscriptBox["MU", "x"]}], TraditionalForm], "\[IndentingNewLine]", 
 FormBox[
  RowBox[{
   FractionBox[
    RowBox[{"\[PartialD]", "U"}], 
    RowBox[{"\[PartialD]", "y"}]], "=", 
   SubscriptBox["MU", "y"]}], TraditionalForm]}]]], "Item",
 CellChangeTimes->{{3.51213540218364*^9, 3.5121354379573517`*^9}}],

Cell[TextData[{
 "The marginal rate of substitution (MRS) ",
 Cell[BoxData[
  FormBox[
   RowBox[{"=", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{
       RowBox[{"\[PartialD]", "U"}], "/", 
       RowBox[{"\[PartialD]", "x"}]}], 
      RowBox[{
       RowBox[{"\[PartialD]", "U"}], "/", 
       RowBox[{"\[PartialD]", "y"}]}]]}]}], TraditionalForm]]],
 ", The interpretation of this is how much y would we be willing to give up \
for an additional unit of x?"
}], "Item",
 CellChangeTimes->{{3.512135438390828*^9, 3.512135505045834*^9}, {
  3.5121355943478603`*^9, 3.512135594354693*^9}, {3.512137185197153*^9, 
  3.512137187566166*^9}}],

Cell["\<\
It should be noted that economists are generally more concerned with MRS over \
MU because MRS is unique and MU is not. This means that you cannot \
monotonically change MRS without changing the meaning of it like you can with \
Mu. \
\>", "Item",
 CellChangeTimes->{{3.512135594627467*^9, 3.512135642818928*^9}, 
   3.512146135697398*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Specific Types of Utility Functions", "Subsection",
 CellChangeTimes->{{3.51213722256958*^9, 3.5121372396495113`*^9}, 
   3.51214613680098*^9}],

Cell[CellGroupData[{

Cell["Cobb-Douglas Utility", "Subsubsection",
 CellChangeTimes->{{3.512137374104916*^9, 3.512137379470716*^9}}],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{"utility", "=", 
   RowBox[{
    RowBox[{"U", 
     RowBox[{"(", 
      RowBox[{"x", ",", "y"}], ")"}]}], "=", 
    RowBox[{"c", " ", 
     SuperscriptBox["x", "\[Alpha]"], 
     SuperscriptBox["y", "\[Beta]"]}]}]}], TraditionalForm]],
 FormatType->"TraditionalForm"]], "Item",
 CellChangeTimes->{{3.512137382990663*^9, 3.512137402838778*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ContourPlot", "[", 
  RowBox[{
   RowBox[{
    SuperscriptBox["x", ".5"], 
    SuperscriptBox["y", ".5"]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", "0", ",", "5"}], "}"}], ",", 
   RowBox[{"ContourShading", "\[Rule]", "None"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.5121379505987673`*^9, 3.512137955613537*^9}, {
  3.512138118236464*^9, 3.512138120010128*^9}}],

Cell[BoxData[
 GraphicsBox[GraphicsComplexBox[CompressedData["
1:eJzVfQdUVUf3L71zuQV7ib1rLLHFMmPssXeNxt577F2ixliiJvYWNYm9Y8He
FRsqKGJDBEQQBQsiiAUe3z385rj3le/7v/976633Z7k8a99pu82ePXvPmVO4
94i2/Rzs7Oz2+9jZ/evJ/w4NexAw7EGYoHCsgpsuLpb57zUrT1FwcWuFj6y+
vaSjOEna3kXBw/8FBrgrWOvPS8Hh/yoe5qNgrX+TgotZfzCz8XwZrNP55Wes
gkEvLU9RMOil9e0l5aOTpO1dFAx6aX9eCga9tH+TgkEvHc9XZifHL9OpPym9
sYzeWEZvLKM3ltEby+iNZfTGMnpjGb2xjN5YRm8so9dWT78sR51O/gS9gEEv
rWcv6TxwkrS9i4JBL+3PS8Ggl/ZvUjDopeP5Mlifh1/W01gbumi5/qTyTWHy
TWHyTWHyTWHyTWHyTWHyTWHyTWHyTWHytbUzX56HsTZy43QB5k/QS+2Yk6Tt
XRQMemk/XgoGvbR/k4JBLx3PV2ZnR79sZ2Jt9JLLjdNF6+tPqs9o76Jgqs/o
z0vBVJ/Rr0nBVJ8xni+D8efE7JiTjZ3h85DrKZcjp5M/6XrkJOl65CTpeuQk
6XrkpOgFTNcjjOPLYH0d/PI6EWtjV/i843rJ5cbpou31J52/LpLOXxdJ56+L
ohcwnb8uit7s1vkvr4OxNnaT2xU+77hecrlxugDzJ+gFDHpp/yYFg146nq/M
zo/58jofa7MucLvJ7Qqfd1wvudw4XbQ//UntlZeiFzC1V16K3uz8tC/7MbE2
6x5fF7jd5HaFzzuul1xunC7A/Al6AYNeOp6vzM4P/bKfFmuzrtPyFJt1gdtN
blf4vON6yeXG6aL9609qn02KXgrrfvaX/dBYG7+Fr+t83ePrAreb3K7wecf1
ksuN0wWYP0EvhfHH/Wrud3K/jPstfF3n6x5fF7jd5HaFzzuul1xunC5fm6c2
XqDAU2sfJf7T7+AQXb8C2ZPvRwKz5J4gOIz+tdrJbJxkVa7xI02VA0a5xo8M
VQ4Y5dp4DpKO7yBpe2dJ2zurcuujqZsqB4zy761PT1UOmNJnkJQ+AxvfyMY3
qnIr+MCkygFT/Cysf1+Gr0XVz04OXE5cDlxOXA5cTlwOXE5cDlxOXA5cTlwO
XE5cDlxOXA5cTlwOXE5cDlxOnO/ZyQnzBeXZPen8TmDzLVnBVA5hjO9hjM9h
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
eGG9Asz75f0gPoH1UHvC301W/jLls228AusV7DLWF9hlyi9fVQ67RNcpH7W+
0H2jnvfUng7K7mGdoeuKM8tn6O/L0PXmrqbPbdl7cgrvuyqfAX7TOOVT5q8l
KzrAN7pOpCk6QDeVB49D+Ki4EvZVsBvoB/Kj93tHs/cKzqi8hlb/vJIH2lvb
qfefo5W/ArpIvcX6ONafTyNupp/7h1xI/kR9H1W/T4j6N/r+WLMToP/ml/f9
yJd8FifR4FfMPnsyPQ5XdiO7fS2dz/x+Tr0dsT/qPQp+r5bu31L+Haf5HHXe
6Yw6l4t65Pem+u/WZj0tkvppm9X8BQx7g35IXFad4/Vh/jI7X97RyPAx0f68
Taoc9o/o33m9HHxAubX+ZLMNvZiPFDZQPMsbGF06njS/ekbhRfBI0u/ZoPZk
s4oDcL6hPc2nnVF8IXyoxc8ZflL+OvU73yp9ofaEvx+NeRzK3ncIYfcaJLA4
8w16vs8u675s9b7FcqV3RI/iLcqe0vnqzOKUMWw+xAhKxxO136H02jF69bgx
9Bawxj/kXZ+o/TbmOfjD34PF/IX8IA/EF0EP6EZeWOOrP3u/SPfXIEdyfqFa
qoo7Y93Q8Md5tqfsnFS82gejHHpP8vE33dS6RPP0rup3zR67qvWEngPDOqyf
owUfKX+esHgZ5ODAYP3eUdg96CXsPGDNfsMu31Rxelqff6devycFMIlnq3w5
7Gcoe38pRMF0f+us9r3UT9DzyFp7e7YvtJP0fVSex3Vi+z9Htv/T867wV2DP
ybgbLTT/pfykT8ovhxxJXEvFqfX7Y+j94KGKPirvt4qfNK8dyt7DC1dypev8
a9WenicNVfsb4Ef3S7FKf6BXsCfQB76+w35gXPRrLfZ7rfQLdABv2BfA0D/q
94VSf0bdr63fx0G/0xPCzpfo46Bfbu9oXkSvF9sjsOSuAbGqfJbr6p/WDApT
fNLKUxQMfVvh4VHv/a57olSxRhFjq+jvZV/zXWC8E5+o5NX903aX2tftlL8O
/fumz/MNbarp9y34Dm+/c8Dq+KzxY5V908bXvyOHeIeh8LEX7RNfq/bpGf/6
e6PaVbX2nyYGXa1S/Psytt8PNFnHSxPflFvc/St7LzZPfWSek22j84zTvzPW
PH5Ngd6dU0XLitsKVwl+peJaeGYsbbi5UvQntR+5d9mhVZGCGeJOvmWGptds
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
hldisHUfcV3EPqke9NevRinqO04M9LwhKpn9uw10zJwHhe85xhW9rs7PDWix
68eYwkHCLm9vEehqlgkpey9O6x8kdiz7MHWjh1nalWiwu1nvIOH1Y6WLqweb
5bZX73rXDLkqWqTuHWnoYZa34gvmvB6VyTfrPum6+GDdN70SFXbP2Vj9x2DR
5dv7s6+291HjAg+MCzzQL8ZBvxjHZN0HvRbfW/dFQSL03f7Nl+f6yAUzkl58
qB8swo/tL/R7U1Pm+tBnw6Bt18TWoYWWDQ7I7DfPphJFN+8Q0ywn048Xtcjl
bSpsNTnuEC/rhvcdnVn+oUTe0wd7XhV9i1c/OOyKWW5au2vq4gZX1TgYF+Ng
XIyDcdEvxkG/GAf9Ypy4CZP+2G3/UZx9nr/gqo5nxYKynw6Yd30QG//J2Xnw
irPiQQVLePPan0SGCH3fav4ZsXd6bPc77T6JmkN8dpeadEb8OOOPT7dj7WSJ
IXVKpy4+KeKvd/pqZ1d7uce+/tStJ0+I1CNxPY1xjvJhhZhVvdKOiDZnv8q9
PqeTfHzo1tHWe46IlvPs5YYIFxl8P9fi/GMDxKaG026l13aTxX6f/vBgx4PC
OHFdwNEObvLFw4rltjU5KCqVnDHUOchdDnj708Py1Q6IkgOrNh/p5im7l07J
XaHTfrHAadvxtfU8ZYfiLRp99e1+0ajT6IcrArzkum1HVi9vs088aWcsWSHM
W3Z/9mRl5b/8Rf7Ex7ucvzbI9ld+fH/o/V6x0DK4wMS/faTfnVbji9ffKypW
bD33pzZGefiXN90rL90jxg2Y1/HCPKOcu7D7oz+/3iNGHrvdt0gDk1zZuMiy
ay92CQ9joUNtjppkNWe33x+U2iXGjk2r2PmTSTb/uK/7ujM7FZ/Bd/AZfAcf
wVfwDXy86XCh9szmB0SuUrF5+v7trvgCPq2MnXq40Jh9IqHb+uOGEV6KD+BL
z0N24T3G7BWlo5YPnfatj6IbfEg52rPm6/a7hXvssTHXnU2KTtBd+urRiDyG
ncKxzZi/UoebFV2gE3oCvYGeQG+gF9AT6AH0AnKHHkCuSs5ZcoMcIRfICXyH
HHDOwyf6bts6he+o80TJr9NadZ+mfwd00HdNcq6o+0S0GDVl8vOfDHJS15zV
ZUJ0Vnz9sbhmja+/F2iHfqJz3Ly4sHqo+FAm6uHk9u7y5ZBKW0a2vCkS3P6c
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
2o/+/WPQHVG4RuVv+t5SdC9x6J1/57QQgd9RD7+jHvW/9X4xzg8DxzZKfvJM
5c82F2nfxpTPJL/J8de8eXcjbc4h4Z4Vr51Frq2prN9/Nbb1258u+cew8wwJ
Ak/8Prr24ivpWxJEoaFrhhSLMKn3n/dO25bxeNdjcaRal1q5envL/odOda26
9rEIMQ0sUjLUWzZsvGHu2taPBeqhHfTobj6PX8eUihLAG3Tgd9Sz0qPy6VfE
3S2XB37oZ5HDw57PbjLuiti6vFxg7rkWGR11P8e676+ID4Zul4c8tcjvFnaZ
n3ztsijh2d734gmL7DT3Sn5XhyuKb46zxzaOev1M+QHwC8rOXrgrvpFJVnka
1dhpU6Lyn999sLuzdd0zUXHPrJXLD5tlYO6MWQ97PBcFL18Z2GW3RfoufjrY
1/mZoP53khj3a6f7ky65y9dbTpY4E/5GLHCObvBruqecmOcXt5zNk4Sd4zmD
72VPeWB0r9Blw5IEfkc9/I56wAt4Rtx/MHxXsSvqfAHoBh9AN/gAPIE37K5G
3/0s+hyy6Hug7PCU78ufvX/5rigz0VDJu7mT9KjeStypdU+8u9u5id1IJ9n3
56tRjcz3RMGFHfoXbeQst+1f28M9913x1ZIRfxV97iS/K/tX+z1T7wqMg3HN
VnzuZ+HjqMYFHhgXeKBfjIN+MQ6V1xUBPYHeQE+gN7uGy4gJ77zlPyM2Oc/K
oX+nc2Lk1OHvprxWeo954GU9f/Y06/yZ/h0F5JUhZ8gd7/XAz4beQI+ov6O/
NwQY/eO9kpwXrm92nRolqn4q8uuFCUb5zHtgzQ+Z86XgQTlmxSX9HpWex8sU
vXwxWtyt1K52vdoGua7GfsMHw2NRKqB1u2O+PjL3spWD/OZEixEzyg77yegj
m1dIbfRsXrTqF+OgX4yjnfd+ovJJ25yfdojKeCJOFu4QV6VpqsjIuaVWtb+e
iGppu0PddqaKph0f9TSF6PcQl2udY8+hJrEipPfWl3MeuMs6e7u0T37/RExt
fG3Gyqoe8o+Cswu/mPpE+NW90afyNQ/pvXHvyIWzn4jGg97tfHHWQ7baUOzF
+auh6n3V9x+LlPT5ECoqzyo/fvZANzm9Snv3t/NCxe8Tb3f/64X+feM3e0Pv
HB9yWwQ9HPltoSJu8utqZ08WqXFbHHYcVLT2MVdZcFXx07eX3BabCrWYf+ac
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
9qswZNVO4TGi6bv1Zc1y2Po/hpWauFNArpAz5Ao5Q66QM+QKOUOukDPkCjmD
75AD+A45gO+QA/gOOYDvkAP4DjmAL+AT+AI+gS/gE/gCPoEv4BP4Aj5FbAk5
dvzBNvGbJaVXRppF6Sn0FnoKvYWeQm+hp9Bb6Cn0FnoKvYUeQa+gR9Ar6BH0
CnoEvYIeQa+gR9Ar7Xz9Y3U/h5ZniRFa3uWeWBgfPTrHXRc5/+mVTv1GBoh5
RZaOuJhpD4bl73R++tkA8ZXP1tGejz6K2gVbx+U8qa/jWNe1fElUVr7ko7g+
RZYwj7WX4kTCwsUzX4kjwVtmFLFzkGP+auXc0O6VmGF9f9hHau8Pv8pa541S
W09eZu1jXaW2r32btY91ldq+9q3YvmhtYFqEWebMW3rO2cpvhen7Qu16F/CW
zRuPu5hzygcRtGK2U7/O3vLEhPXlLfX179Falq+aMLD7O7FkRK0lv//jI+0H
50sv2SxNDM25M3+pt0ZZ+scTA3OuShWT+jVxCthvlFVKNfph8JtUsWh7o51X
J5jkqV6RM76aYif3Be8rM22GSdbrfKvi/lH692odl2nvEfy9O2X+lJNmGVMo
vE788XQx7F1UwNinFvnTAI+mo159FG22D+1X7heLLNKz0E8DZ3wS4BP4Bj6B
bzWy9j2Xsu4j+Ppo3TxfHXWS7RxD6gxs7qh+Rz38jnqIh/UZ3y+5W01nKX+I
vN/wk6eMfeHf1HGZk9zi167q69ue8scXFRK6+zspvkMO4DvkAH7WL5y4Ys5D
Vxm8uVfrbYVMcmuDXlvFYxcZ8ePmCvsPG+XxY81/7J+5/45MWBXhG8G/b5sk
9rU9VNJhsY4XyoEX8ARewBNyhtwhZ8gdegU9g15Bz6AHoAN6AL2AHkAvoAfQ
C9CN9qAbfADd4AP0BnoEvYEeOY3KtbvL78+UPwq9hp5Dr1AOvYKeQa+gZ9Ar
6BnieojzHbjz85wrFU3yZf9vWwafjRS/Gdpb5g/NlJ/LhcfP5kSKqRPjxszq
b5a/1xdfLW35SMiSX7s/OJipz2V6Dh9wNULE/xzj9PBD5v68zPdhE0LDxR/W
/VFE1v7ITsUlEadEXBJxSvSDftEP+n1jtSMJWXYlRO0TsG/4/Ubphdc+ectA
w+ij6Wb9u7Rvh/+YltoohO2HI1VcB+f60Q79oB36Md2Y0jx2QoA4O2HO5C53
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
v+9j2ZWjB/bxlJ9yBNU84G+WOZsci+/QzSy3DXWaMmmTST7atc3hUea+uJS8
3uynvBb5pzUvfTcrT417rd8I5Fk0fUgT4wxPt/osPa++Q7hz/pjRdyacU3kf
5IHgH1WxnoMKFzRf80b1g35pP+8F2qEf5NHgtyJvBj3Adw8CPtYd1HjTTRWH
DHArMHJpzHUVx3x16XDPPLWvC9RDO+Q9EB9FngPxVfSDftEP/Z7fc4Fz/7g/
e9y4hyO+L3pLxR1LpazJWa1osIoTjpm4qs6DldfEroGP6o3afEt9n4q285A+
HoZZAw7p379DP+gX/aBf7dyXnSwXO3PpgVNZ93352cuPjeNzr5l7Qn1nTDsP
dlR9h6tzz+2+GZ2PqHMa387pUntnGf27WkUOHFiaf8VBlRceuXbi8uczDqhz
JDUWuE9x9Dio6Gg4qsfDwfYH9PvEC5+ThX/Zr76fstIQ4hOxep+SwzrXmpMP
ee9XdI7yaDakebl9al8fWcS+6Okz/gJ0gU7QAbqAF/AEXsAT4wIPjAs8wCfw
DXwBn8AX8Al8AZ9AN/gAusEH0AU6QRfo1M45JArt3AO+G5osJlvPcV1ST/wO
uw47DzsMuww7DbsNOwm7CbsLOwy7BzsIOwq7CjsIuwg7CrsKuwY7B7sIOwm7
BDsFOwq7CrsHOwi7CDsJuwU7BjsLuws7B7sHuwk7iu8GHQ5svKmQ82n1naCI
bn/mS2x7TMX9C5ZsvX/Z4hsqTp/r9qTkZe+DRHhl49JrB0+r7xztW/mo54t+
x9V3jSbenP3dghGH1XeMcM94hFfzJftGn1XfXajZfa457ucz6nfUw++oN/vC
n81zlLup9BXjAg+MCzwwLvAAnaAbdIJu0Am6QSfoxrgEj4B7AnmJuHH5Wxhy
3xEj9yd0LVHOJeu8TlTWeZ1P4noHc6Pivd4oP3H8Nx1bdjM9V/n4FsGTZ9Z+
vU1930Gz+68F7u36XzRX2ZM=
   
   "], {{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, {{}, 
     TagBox[
      TooltipBox[
       {GrayLevel[0], Opacity[0.4], LineBox[{2600, 2634, 3246}]},
       "5"],
      Annotation[#, 5, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {GrayLevel[0], Opacity[0.4], 
        LineBox[{2591, 3908, 2929, 3157, 2931, 3989, 2930, 3233, 2596, 3912, 
         2942, 3160, 2944, 3991, 2943, 3236, 2599, 3913, 2950, 3161, 2952, 
         3992, 2951}]},
       "4.5`"],
      Annotation[#, 4.5, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {GrayLevel[0], Opacity[0.4], 
        LineBox[{2598, 2633, 2949, 3787, 3789, 3788, 2779, 2941, 3911, 2595, 
         2631, 2939, 3990, 2940, 3232, 3231, 2927, 3988, 2928, 3156, 2926, 
         3907, 2590, 3228, 2922, 3987, 2923, 3155, 2921, 3906, 2587, 3225, 
         3226, 2911, 3903, 2583, 2626, 2909, 3985, 2910, 2769, 3762, 3763, 
         3442, 3443, 2579, 2623, 3250}]},
       "4"],
      Annotation[#, 4, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {GrayLevel[0], Opacity[0.4], 
        LineBox[{2597, 2632, 2947, 3786, 2948, 3235, 3234, 3781, 2937, 3780, 
         2938, 3782, 3159, 2936, 3910, 2594, 3230, 3774, 3674, 3675, 3673, 
         2773, 2920, 3905, 2586, 2628, 2918, 3986, 2919, 2770, 2908, 3902, 
         2582, 2625, 2906, 3984, 2907, 2768, 2903, 3901, 2577, 2622, 2901, 
         3983, 2902, 2764, 3657, 3659, 3658, 2578, 3221, 3752, 3753, 3751, 
         3755, 3754, 3151, 2891, 3898, 2573, 3216, 3217, 2883, 3439, 3440, 
         3441, 2616, 3247}]},
       "3.5`"],
      Annotation[#, 3.5, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {GrayLevel[0], Opacity[0.4], LineBox[CompressedData["
1:eJwVzzsvg2EYxvG7LKItVoPBd6BpvZqIqGCo5q2kC0kPbG1t7GaHlVqcPoOE
1EJIMFhMPo1fh3+u+3899/Me5tuHaT8TEQ2MT0YsT0WUsYR3nsgx2cs7y0Ys
TkcMdCe8JIu4QsFOBgvOE3sf5tNcxIQs6lZ1VX5v9wE3uMMtLvQ5exXzOtbw
xTfdOXN3QyY8ixLf4t/mujznqSzzmdH38x3+Y656Tg3beMSl98zqV+x07KT8
WX9gfpL78lr3a+eF9/hQdmVFN4ddvjf6Z/8/wJv52PmrPJIt+WevKTto4xP/
p7gp5w==
         "]]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {GrayLevel[0], Opacity[0.4], LineBox[CompressedData["
1:eJwV0D0vw3EUxfFr0XjsZNcVEVXPlpZoF4mSeJqEUYTJjoEUC9ount4CCSGx
iEiYLCavxIDE5z+cnPu99/zOv2lmbWtusyEiNui7KWK9LaK7JaInHVFtj9jB
z80RWfMpnVAOl1ojuuTOcG8q4gD/eT+Eh2mAXuQG+a/9hp5++azeut0uzvF+
qiV52R+5Pves3Cuu6Ayesxuxm8Zj/AiPJo5T7sO4gK/17Ost8DxdJb/FvZEm
zJNUcT+kkvyxd0Ve1ZOWGcczuIxvZWfNN7zM63YfMvd4Gd/xJZ6366BZPEdV
3TV6NK+5P/BVvsA/5eaTd7RIT3Spt9N+yre3kxwu4gytuH/xc30X9I73ZN6S
/4//A29BNMs=
         "]]},
       "2.5`"],
      Annotation[#, 2.5, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {GrayLevel[0], Opacity[0.4], LineBox[CompressedData["
1:eJwVzjtPVGEUheFtQcF1RJRLAglQKcSZyeAMhgJMgEgUSLjUhpgo0EgzUJFg
QQg3YSqg0FJLgRZJxiktbIH/QaSgAJ9TvFl7rb3O/k7X+6XpTw8i4jOuqyPm
6yMe4bwm4iH9RRvpR3zAl4aIXWTNd3URZ/Ypc3dtxI58G6t8mj7HVtLVGdHt
0knbddIMXZfdePOJuRlNKOs+potYwDPd3lREyZ01Pksz2EdO95/ve+yf6lX4
DTdvZRlZWvaGz9ItPkM3+Xv7HJ/n3/L9dJsvJMpXuVPgB/kJ/pu3Xpm/0iG6
J/uj84Mf5b/TETogq8Frfiz5R/9bwrF50v4nnaB9shP3/+qOJxlaZS14gUP3
V+gyipjzzZRsWL8VM/qzOEi6OEK7vI1e0HvdMP/WqaCMoht52al3L3Xeya5o
h+wl+vEfo0s7hA==
         "]]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {GrayLevel[0], Opacity[0.4], LineBox[CompressedData["
1:eJwV0TtI1lEcxvGjmVHpa0NLg0XQhcg3hzIob1FpBi1pDpEu3qrB16GpooL0
7TIYpEFBdAW7aaB5wbJsaLCpGooas6V0kWxJI/Fzhi/PeZ7z/H/n/DnrG9qq
UxkhhLcYWRFCKhHCNB3LDeE13mCef0VfYhRTfKveMP2F2rwQ6ukc6nCE/0kH
ka0/RJfR3diFkZwQjsV96xf4ZtZX7JN/pJ/wAVdXOkM2oNOPLPTI9spW+76b
78L1eEd5jnPn6AG+CvtRiQok9EvQaX0Nz83vwyH9bvO60B/PQifex/+hE/S2
XqleKt6BT9MOtKPcXhkWlodQZG+73k1+B71F38mS1tvi3XQOmlmFAllS9leW
5jfxV/jNtIKvxAbry7KNdNycfLqF/+2bQr7D/K0owFl3SdNLWBu/o+viTDqq
mxvfjyZoE2bNuOiMdqzRa5A1Ykae1Dsnz0LCeauQh1m9ozo75f9x2voMzltf
wA37GXwmlmBQVkL/yItpGUrRZ/5n9/qCO/xdHJYN6Zdb78HS+Eayedk/NOu2
4J78PqrtneJr6EP+Ab5bH49vpX+CTvKP5I/xJP4z30uf4Sl+8Cfj++kvAlAZ
aWQ=
         "]]},
       "1.5`"],
      Annotation[#, 1.5, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {GrayLevel[0], Opacity[0.4], LineBox[CompressedData["
1:eJwV00dMFlEUhuFxpTR7QcCCWBBLYk1MTGwrGyAaxYIK9t57iV0TjTu7O0tU
EBtColHBnS26cmHvFRCjoAtMfO7i5T3fOffemX9mSC1YlrO0QRRFE/2ZEBtF
cQlRFI9GiEUMeuAMTuMUjsdF0dPGUXSMv/FN/sI3+CvPds5bvii/4WJ+xxf4
NRfxKy7ks/FR9NP6o+qTTaLoCJfrbdHLl8vkAvk858pL9R/JS3iSfE6/Rn2Y
T8iH+I75Zr2ZcqmcL79wvZd46P4fYbH5Q/1F/EC+j+fmz1Ctt4J/8ErexL+t
3cgL+R/35yLn9+OvWKg3UW6hnor2mCFv0P+lXs8LuJ4LQ3a9eu6LXPVP95lo
fXO5DTcL+60da9ZOPYazkIkUeT7m4QIyrFunPwPTkYea8E7MPmO6eZpeZ3RE
J6SiOsa78vtembeXX3MHLscdVMnZyHI/L3lweI6cKWdxZaix3Bndw/tUp4f3
zF2t6YbOGGBfF/7G38Pzc28Jcj1vlntaX+Ve8l1zJhL1dzqnTD9ZvcfaJO4t
11iXLqfIt+S+1qepD1rfR70VW9AnvDNrh6tHYBgaulYVKvHbnkbOiUUMFpln
OOOSfZfkIvkicuXV+pNDXy7G+/Ad6F3mDxhv/ZRwPVSY30U3fJK78MfwPHhb
+N7sW4z0cD10R775D7Oa8K5Q7Lw83mu2D4PMYzBOnYNsTMB4dLAuxfp2SEZH
ucDaUWYt1SO5FY/mWr85zpo63i8fwFCzIUgN+8y22Vur3s6z5E7hO0RrTJZX
6Fer/zjjtPyXh8lpmC3vMK9T7+S1fmcdr+FabqM/xZqV6sfqVTxVvuyMK+pb
PEfepb5nHh++bzkhXE8vkafJq9VP1Gs4T75i31X1bZ4r71bfN2+MQrkJ/9U7
x20D4XviJL5qz0f3V8Lv+Rp/4O3hW+FyuZIruJrPcmv7mpqXeH6lKMN19EQv
JIX/USRjIP4D9CO7aA==
         "]]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {GrayLevel[0], Opacity[0.4], LineBox[CompressedData["
1:eJwV1edvV2UYxvHD6qBQhBZQUZCpiPOV6z8QSJRESdQYIrIEKSCrFIp7Acpw
gZRdShPRRGMERYysVlGgFMoqBdpC2aUULbLq537x7XVf132f53fGc3p6vpIz
ZHyLJElq/VnaNkm6ZibJ9x2SJCMjSWaqj7dPkhPI5mtpDarRjp+l/0K7JDlH
f+MPyA/iEPbKK+h+7EMfvrt1W5trNn+SdqSdkIUT+l1oZ2TjlH5ifpo8ldbz
PeW90Dv68ntoD3THo3xvc63M3eRraAZth/ZxHfq30Q7IRK3+LTpVnuK4i3w3
/i7cHecnv5PegdvxCN/LXEtz1+N8aRuaglQc029L05GGav0bdIr8gvptxxa6
v7X8GvoW/7C6hd4x5PJL5FWyr+kM/rh8Mn+evsmvltfwq+hs/iF1oncU0/iv
5Edli+l0vkr+Rjwfms+vlFfzK+gs/kF1s3qa88zFdHzJl8o76WehIzojG52s
swbL41xoibnl5mfyZ/lX+Uo6lf9CviPuCYpjP9GOequwLM6FbpctM5fHn+GH
80foFP5z+TY+Dev49Hh+eitQwC+nW2RbcVq9WlZHRznuUPwOfzh+CylmhvBD
9darn6fP8gV6S9Fa3QYtYv/EM8aIuMfux8i4Dvt3O26p08y/p59Ki6z1nOyZ
OD6em+x3Olu2Sf0t/Y5OoLvkObQRw/A6n0+b6FWMw9h41ulJMiCen/pp6+bS
9fR+OtQ5PBC/SQfEddCC2Evx3sQeoV1ir9G18j60iPaN99Tsizhn/f6yYseP
wEhcRgOmyl/2W93Um83mOO6c7B1ZCT9avVNvDP2DL0WR3ztkbpj8R/UP8c7q
/8R/zM/BQNlAWaGsDf8unxLvkWyrNbZhuDrfOjPMXKINqEcjLmNuzGOQYweZ
/cbcYDqY/0Q+D1tjf/BbaJ7+NrqS30438htwS10oa6btMR+L+U/pz/rvW3MU
v4Nfpy6ho/kP1L/E+4a1sVdopt5CLOEX0E2yD82N4Uv54rhP9DX+I/Wv+i1R
FPuMdtDb69rKUYZF/Oa4b2ZPuiencK+8H15S/6k/1rFz9MvNzaXj+J3y8fxf
oXE/5Pv4ebHP+L7qx/C3fk5cq3w/P59O4HdFzu+mk/iF8gp+AZ3I91M/jj3x
/4RfJD/Af0Yn82Wxx/krznOv+mzsM5yP74H8DD2NurgevodjnqD/xLWbvyC/
iPr4dsR+pA24FN8O/X/NTZQ30f3h5U24isOxDr2CRtwX3wXrPxnvlfkK8//J
r+E6jsQeoDdxAweib26S/Bo9yLekrdAalfE/miZoNt+f72n9p+gp2Qbzu+S7
sQdl8vL4/kWNjfp18fzkebRt/L+WV+EYsvjKOK+4FqTzM8x1pf8DaU4h3A==

         "]]},
       "0.5`"],
      Annotation[#, 0.5, "Tooltip"]& ], {}, {}, {}}}],
  AspectRatio->1,
  Frame->True,
  ImageSize->{193., Automatic},
  PlotRange->{{0, 5}, {0, 5}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{{3.51213794826766*^9, 3.512137957031521*^9}, 
   3.512138120715612*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Perfect Substitutes (linear)", "Subsubsection",
 CellChangeTimes->{{3.512137410174419*^9, 3.512137442389945*^9}}],

Cell["utility = U(x,y)=\[Alpha]x+\[Beta]y", "Item",
 CellChangeTimes->{{3.512137427941449*^9, 3.512137437629333*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ContourPlot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"5", "x"}], "+", 
    RowBox[{"10", "y"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", "0", ",", "5"}], "}"}], ",", 
   RowBox[{"ContourShading", "\[Rule]", "None"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.51213784959722*^9, 3.5121379210542088`*^9}}],

Cell[BoxData[
 GraphicsBox[GraphicsComplexBox[CompressedData["
1:eJx1XE2MZNdVrqqu6r+prt9GAiF+YzsLFphNFojwrgAR2wIhEGHjBSSERUTG
ttgFpGgWJBihALaTiE0CsmaBEolFpLQNkZAVg5VRpNhjw2B72o5n3C5Pezr2
eKa73D0z3U3PPec719/3qlqWrs977/6cc8/5zs+9Nb/w6Yf/4M9ajUbjPzuN
xp1W/546fXHj9MULFdOToO9//K6T/96X99Og784f3Jbvm4lnaSfuvxj0Q3fI
jZWgbbxu0Jt3Xp/uB23jD4O+Kz8YyXzrQhc+Z7eToMEvv58GDX75+2ZiObYT
918MGvzyeN2gwS+PPwwa/PJ862nePs7ms7TM70T4nQi/E+F3IvxOhN+J8DsR
fifC70T4nQi/E+G3rqez97HwqS34BQ1++btmYjtoJ+6/GDT45fG6QYNfHn8Y
NPjl+daFLnY4W08nNb74fWl5f6eyv1PZ36ns71T2dyr7O5X9ncr+TmV/p7K/
dZyZbYeT2r4pX6C1Bb+MY+3E/ReDBr88Tjdo8MvjD4MGvzzfepqHo7NxZlLT
S9035Yu/Ly3rM/ovBs36jPG6QbM+Y9xh0KzPmG9daPy1BcfaNZxRO1Q91X1U
PrVlf9RO7I/aif1RO7E/age/oNkfYZ51oYsfnO0nJjVcUbtTvdR9U764f2nZ
fhcT2+9iYvtdDH5Bs/0uBr/z/PxsPzip4abiitqd6qXum/IFWlvwCxr88vjD
oMEvz7ee5sUxs/38pOYXFDcVV9TuVC9135QvHq+0jFfd4Bc041U3+J0Xp82O
YyY1v6d+QXFTcUXtTvVS9035Aq0t+AUNfnm+9TQvDp0dp01qfp3fT2t+QXFT
cUXtTvVS90354vFLy/g8DH6ZLnH27Dh0Uotb1K+r31O/oLipuKJ2p3qp+6Z8
gdYW/DKNP42rNe7UuEzjFvXr6vfULyhuKq6o3ale6r4pX+u11uZ7rkILzkHn
4e4fJ221v8oN39n7jQptXs7ZcULL822wnM6W/viO+4GP3Vi/yesgaJPPcdAP
5IWdknX3En8/CNrkeSlak+dO0JgftPXvJNAmh+WgMT/o/PnFoXw/Dhrr0HlB
gz/Q1rYSv+8EDX75/SBorIe/340W8gWN+UGDX9Dgl8fpBQ1+MC7m1Xn4fSuB
Bn+gMT9o8MPvx2menvA+Hlc8z3GtxXpYDr3E3w2Cxnrm7Rv4VT5Bgz/QkC/3
7wXN/BW9VL1gGvx0ai3mB838dMLuQTOOLNf2CXJQvliPejLvQOSwU9Mz0JgP
NPqB1hbrn4cTbPe9ml2pHui+QC5MD4KGPJnvcdCKU6yfg5regQ+dh78vreIA
5Kn7DBryBI35+P04aPUrinuYn/XoWN63anrG9KA2L/ujqfi73Tl1hecE3zSu
V3+icW/ZJ/Tn+LD4ldl1qkuS1xW7nZ03XZK4qviX2XHLpeCb9Rjx3k7UDdTf
YJ32dVve92t2wXwV/8Lx0q7sR6nbsB9APFT8jeZNPM4kcBx8a72I/U27hrua
Z/P7Uc3faNzH/uZCTa9Ac/5zLOsudRu2834Nd/j74m/AL/jifWpLvN6SeFtx
uS3xd0vsoCPxZalvMA62w455nFKn4PcjwdFGA+uC/NTfaL2A/Uk/aMiH/epO
LT9n/7KS2P+s1/yJ1gNm43lf7LQn+YLGFSUf5u+H8v0gsV2O4j3r30Dy74Hk
z8WfsF714z3kBzuA/DAv9lP9CdvRivjB9RqO83gXwj9AfuxfmuIfjsMuIT/+
fljzJ/ge8+J9Xu6PR9Ha93tuZ+erp/N6IK/zPu9WtCZP5HtbVf78Y6OgbbyG
jX/6PdfjXtCYD631W0lMY55bLpeFBBrzgUaLeTGfrgPjYD7Q4BN88XyLMQ/6
YTyS00l+p3LTdYDOr88NgkY/PMf4zOdiAo35QGN8PMc4oG3dR5HPZvsYDSJP
Nf247u2my3E1gUZr6932Fv5m2+RyZsj0yXwY1+S5lngePN93eikxvRnjmB01
gw/MBxr98B3mA63rxnygWQ5L0U/XBblgPMwDOwKtcsY6QWuLcVWOGBfrBA38
w/pg59AjvOf510Nf+DlwtBHfcZy5LvkA8KfgsPINvQYNeUIfYR9MN1l/YZdn
S96L+WCPJOeIczbEL21Uum6eZy1orj8f1PJ8jTu1VRzHc8X52XH8cxHnMH7v
Vuqn5uWJXJfuiN/tJI3TsK8cZzVl3k7Q1rYl/1mWuHxxbp7FdcKexB+98KPo
h+egNW7j/K8Vfp399EDo/tw6C/wo5mV/3hM/uyz1xeXws+w310Ofmd4Pf8u4
uSX5wXNCXwicYpxcCZpxYivsAn4F8sK+gYZ+Km5i/aCBH+zf63Uw6Cvj+vXw
16CBf/D/GAd6x/Y1rXhd+8EXaOAlxw/wg7tij9OQF+1L4MP+3Dqt4o6NfxT7
ChotcHZeHYTOzT7kN/Jw5wrN/nNB6iXHUq9thn/BvsJPsJ/bjPhnXl0N9s/+
vx3xCWjGv1L3QH/1a4pTXP9eFL6XIt5hepC4/yDwBvJkf1mv+3LeWNdL0PPq
cnyOtxot7Ezr6IxnmxFPMA5oHFPqcbzvHfFf7UTjRVzRi+esV7s1vwO8gzww
DuSIeAL8AC8ZV0ZzcQk0+mmL/pgX32Ne0Hw+eT7whfF1RfLW1cBp0MBX3qfz
4ddp3Sd4Axp6Db4hf7znOFPrCFsV8XlCA3+IPlkH5uXzyJ3AF17XkcQTx/Ee
fpBw80N5B/ox/l6vGJ+v1+pgeM92sBd5Emi+T3EQ8T77hU2pd12qOA9rS/5X
8jToLcWNZ4acx50p9S7oG95znNRI2nJ94TjsFO9BA39tvT3O08IvLoRcQPP5
cUvykAXBsbbEIwuixyVPB81+oRP4gvegdR14j33nefcjDmE/vCLxe7k/w7i5
HXpCcUbg405FefL9Y8a3+OvNzUO0zo33kAfTBS+BN6AprjhX6k2gNc/nuKrk
dzzutuDlTrzHPoCGHEGjH8afh5P4DvJT/LZx1wOvgUPsn8a1OhfsiXDrTL3u
NRuvLwmuFBzgOuxE8G6rYrntxPdMX5C4d3OunDmuHEv8PQ67Urnoubuum/3Q
ttRBd0MPGWcHieVT9Ij1bHuuncEOtS7M/u39sCvMD1xhfEP+clTLC7luPpU6
2r7sSznfhd2xP2uFfQGH9Fxh9rlDI9bHfq8jeUpb1l3uATAu7sX8XK9djrgA
OIx9wvrZnupxAM8zYL8yGgT+0LnguVIvYn9Vzi2BQ9Bn4CPrRU/yjj77vVHB
M4xLdaUzJR/WlvPrXuI642LgAfQDeAC58jnocsgB+oz5IWesj/3kKPyg4iDn
KT0e96Rl/7KQ2C7resvxZEPqTfVzd9Uj2CNoxrlW6CnrVTn305bPwer3bPic
qX5OrecomJfxqFnLO7iOU87FeF87oQeap7J9l3NS1q9duU96aQ5OFlwFXyzH
co7EcugnksOo1M8ZxzZE3huB71pHhdwxDuN/J74jXIjvelJHgly2Ao+Ba3z+
sVfpc4yrcQvWq3rP8fRiYr7qcT3jWy9ozIv9AU1xx9kST4DmOlcr5KD+AOPO
yxPgn3n/d8I/gGb/sF27J8fnn7ux3/CXHA+VvJn08NxA/GvBYa07837s1+4d
zbYjrZO0EsuvKfbckLrCQc2Pcz1lT85P6rgFGvsP/wi7YtwruA99wPd6bst+
6pTUQVbn1pEZP1bCH2qdiHFrEHYAHGCcGMT6QWP9fJ5zXLtXwX675KHz6tSg
ya7ODKX+NA5+Ge9WanU2vGf/0mhwnFPyJNgB+8FNqZPtBD5xHbvEWZAn9J9/
D3Eg57z7c+sW0G/gJuFA7ZxzGnbG+fVa6DfLe6923opxoS+KV2xfhYa9Q668
jo7UDzqJ817N55clflqO9cFeMK/Wfdl+GmEv2DfNK9getiIe1HuonP+PQ37Q
N8apC7Fviscc71yv4S/j9GYNb/EedqH4yutcq+Ep5x2opxyJ32nGPipeQs8x
ruIj37varuEh3kNuin+wMz0nxr6yHq3Owbd+6NVsPOvH/Ipf7MeOaniF93Re
8SF8YpxcjXl4/5rRT+2F5btWsw+uTy3V7IHv5TTn6H8/9kf1nf3UfkVyerzE
BRjns/m7J10vyvm69b9cuy9p87wWePpb+fkrrp/13w8fHd/5+1HFecQ78juG
a6GXzdxecXup32d8Pb+4Knj8fnVffl//fazh8A3B5w8cnxdq9w1tnINYv61n
P9ZvenIY6z+2v+q1PN6tyLPYDo9i/Q/niQ8rk8t7wTfbfUvORZrpH/PzF2v3
+2zcjuiV5utLMv5q9Dd+1tJv0/f99It5gPp9NqPXQm4X3a6M//p9NaMHznf9
/pnR5d7s3f4ecrF2LP1G6Uuf+smT/6bVjV97/uS/l6pP5r+3ov3G258/+W+U
Hs3fTarn84f99MvdZ+/tPnutyo+/tJLsu2m1m8dZSGt3Xt97O/QZ+4rnH88D
IW/2esHjjfQrPi7GecD1cdP17A/zuv63+tY37/w5fp48fyLPAxr6s5KgH6Z/
3WTjjn193fRl0oee623Tx+mn/PmNQbLP+9Hv4/78XzLfiymL4VMjX38j5nnA
7eBCHu8Hbmdr6Wt53u9Vr7gdftVxwvZp2e3ljepR/+4RA6DQ603v9+k88TD9
Vd6A7Qrzbbq92j6upSyub6K+eDW+y8v/xpKvf9/3d5xsXw9cL5HHHVRf9vU8
5faYu7/ddD06qn4q/88g2Tio0yHOOKowD/r9VxbnKdefluPSKbfTVvq882Vy
bSfjpxPtI24P97n92vaMfX/a6WfzfE8Hn1hXHu5e5CvIb5d9fwfJ7GHJ2xvV
s77Ojzr+Gx6tulxLmz979o3qL/O6EXdcjn3Huky+a5Y/bKBe3ktfzws98vXB
H+H+HPTwhvMzTIdZvxG/jNLZ/OL1CnL4e5fja76PD/l8tp+lPmLtyxVwGLiM
eOAztoCK444fBO6hHgb//2p+/5LU+d8OPcZzjm8vV8BZ7tdJn8j0WxH/2T5c
cbmWOsMVXxf8PPAb8z7sfoDjgOPqsfzgmtSdcM45kLgOfnG3gl9jOaIt52S2
zg/8ef2+v81/szL/sR35Efiydd+K+NTWfej96vf7La+46f683KODvmleauu8
XVkc8+3afX4bt5k+4jiN91w/w/lniSOhvxTvncjX1KwRcjWcafs+7QWf8G/W
H+ebq5LHlvv9HB8uhF7a86X087nfltTh4B8XA0fwHjik56G2rvLvBWAdLNfl
iFuwrk84juq5jY1b/j0B22/Y0Y2wqwsUt3VFft2I761/V+ppvXTT40jswx87
nuv5qOlV+Z2GufHyuyvTA9RbS13155x/reNkPj82dHn2JI/AvxcxTL/nNPQS
/Fn/8juK/PjsKN2T/2d59rlkY8T51oPl/v0T/vw8xdPj9B+ZLveWOA4bO44O
pd5S7tnyuc3Y/cIo2r3sT065n3gh4hLbl+erv8mOYdH9zpsV4hrTgzfdvzbS
D/MHuA+Cet671R9lv7gX7cNuT8bHXoVxze/eqj7q9rDheGF2OfT443b1Fd8v
ew97BZ4tOM6g3riYvuo4ZutdSX9BcUs39Z4yfDac66cns796t7L4YZR+0/f/
ad/PK9nPjZP5w1H6nOO96RXirUF89x3Ha9ML4N6h8/FtH/eo+kKmn6ysXz9d
/eKdBfyTrxNx0kW3K9jfK+7XV9J6XvDL8d0DjtvI05B/2brbyfz12z7e0OX0
TvXrOR647XEc8jP40+vx/IW8cci3kOfuuz687PH0bcd33IM/8vhvmEwfDn1/
4YdaHo90PR5puv1tuz60PV5aSjZPO33B5WhyXYp++G6S+fzA93PV+12pMI/x
hXsHawn+yfalmw7zPvyrx//99EuOJ6+6XbG9DVyOg/TneT3wQ15vOI3zS9RH
hum77m+RH1nbjnUB/5EfMZ6Ufz+E11HOfeiez1a5R2B4VeqveV0Plt/JLuT2
GdfPXsjZ8pxe+v28f9+pkMfe7fpt8d4PXU/G6euOZ18h/ELdCnWfct/exm+5
fow9b7lVGT49I+fs3428HfXiT3o/G6cbOEnndfh9zIPlnMPqHeciTjOcKr+r
/fc8/uWK48ofh18x//Su3H8v9xFs/pvy+0/sE+KzhYgbrX9HztfLfXVry/10
vjfRijo99+9x/TTuW6KeX867DSbhvxBPvhC4sun4z/O/XiE/vuA4ZHa2nFYz
7my6HY8ScN7ejzzP2aq+5nr2lPsP8GP0OxXy7vt8HWbnC27321Lvuub+C3j8
nsSxN6K+85jjLPyQ5X/XPQ9eTZ91v2XPV9Of5PnK/XBb33512/P7lsvtBfeL
xt9+dY/b96s+L/JI46PcDze8OIh84m7HV76/cuTre9Fx9rCCHze/cFihLnWX
++Uvel78z5mPhsQ9x5FfPOF4/Q8ul9dc7t/yvN3ss9z3tvW2EuIHw/VmetP1
4HGPG341M7rp8ij3u+09WtTB2hI/lntAtv/LUacB/vO5WLlfbe0pz2/3HEdW
Zf3lfrQte839NuLztfQ7jl+veHxq8oTf6gk/a4H7iHfhZ2y9A15f1LORb5b7
cGaPJ3Gb+4t73F+Yvr7p/mnE929GY49vkX+NIm4x/RhJ/fDFqKPavOddjw6q
n8h+8/sV8h2rI/6P2025r4y69t/l57hXW7+/fLfLFXGJyWHL44+d6k+zfV2K
Oqjt21uux+X+Mp9zoD5d7pne5XJ6xPtfdH9g+n25+hnnC/MiHrP1XQu7ut/j
QBsX5364N1t+14m85SPeH/WmhzzuRPxm808Dd/i+zHWfd+p6Xn6fijztMe9v
z4H70PM3KsTLL7v98fmS338/jTjmzdp95ob3t/mgzzc9Xh96fe526K3Z+235
HQr8W2lRh7J6UPl9pOVD5d9jRDzP5xuthDqZjVPuH1s+Vv79Q+u36HK6HHyg
rme4W+4Xm5ksRZ3R/MWKnLesuB/bcfzsxnmN+dNu+o2Mi//tcUj53Z/FHeXf
Y3vV9cToYdSdERfCf1uYPvR6Zs/x96bHYeV+HHAbcSv8O/rZegfp33K/d3x9
J/jhdgQ7oXPPz5zkM+7f8mcfuv/7hOPK7+aJyu8vLL5ejnWbXiHOKziE+YBr
+bO/HUWehPGe8f1Efgz9zev46bH7Tehjue9r2oY8bdf38/8q6DHHcbfcTp71
84NLHle87fXha07/KPLRluOW6eHY+X7Dcfglr3de9fn83vbG+/58mKb5u6su
d4+3TnDXxul6fnbD/RDOfw/jnMH278DlctPtuennA430vTzPcfU5xx1bR9v1
YOp8taJuer/v41/TuUrH5Qe77bv9DNxO+nHOYPJdc9wr50cW/5zycYZxbmHj
D5LlCR3nd+Rx/4rXJ5BvL7gej93fjvx8oeP89Nyel72Osez9Tvl8C/GdPT+u
LueBHnX54TxgnP4fpbILkw==
   "], {{{}, {}, {}, {}, {}, {}, {}, {}, {}}, {{}, 
     TagBox[
      TooltipBox[
       {GrayLevel[0], Opacity[0.4], 
        LineBox[{1188, 1218, 1217, 1431, 1189, 1428, 1430, 1429, 1197, 1046, 
         1356, 1357, 1355, 1110, 1435, 1194, 1434, 1193, 1220, 1219, 1196, 
         1470, 1195}]},
       "70"],
      Annotation[#, 70, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {GrayLevel[0], Opacity[0.4], 
        LineBox[{1257, 1062, 1277, 1276, 1275, 1172, 1247, 1246, 1038, 1458, 
         1179, 1416, 1292, 1103, 1348, 1415, 1414, 1065, 1037, 1457, 1178, 
         1251, 1250, 1041, 1461, 1182, 1420, 1294, 1105, 1349, 1419, 1418, 
         1066, 1040, 1460, 1181, 1253, 1252, 1043, 1463, 1187, 1427, 1295, 
         1107, 1351, 1426, 1425, 1067, 1042, 1462, 1186, 1256, 1255, 1045, 
         1464, 1192, 1271, 1262, 1109, 1266, 1270, 1269, 1068, 1260, 1259}]},
       "60"],
      Annotation[#, 60, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {GrayLevel[0], Opacity[0.4], 
        LineBox[{120, 1336, 1092, 397, 1465, 1288, 133, 1339, 1096, 402, 1466,
          1289, 146, 1342, 1099, 406, 1467, 1290, 159, 1347, 1102, 414, 1468, 
         1291, 1346, 1345, 1413, 1064, 1036, 1456, 1177, 1104, 1249, 1039, 
         1459, 1180, 1417, 1293, 185, 1350, 1106, 1184, 1183, 1216, 1215, 
         1424, 1185, 1421, 1423, 1422, 1254, 1044, 1353, 1354, 1352, 1108, 
         1433, 1191, 1432, 1190, 1268, 1267, 1261, 211}]},
       "50"],
      Annotation[#, 50, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {GrayLevel[0], Opacity[0.4], LineBox[CompressedData["
1:eJwV0NkqhHEcx+GfZcpyDdKEOKIojGaaiSLixCVwTsTIMrZRluyyXIr9LiSh
HLsH5fkfPH1+9a1533eyM/PTczURMctfXURXJiJXH9Gpg7rMEi3cs8KCrayL
+qa19LgL2q153WCdVh7YTL9lq2hZ3zVDn7ukvVrUXXbI8sgeq7aqrumHNjDg
HtF+HdYD9mnjiSMqtsP0bP3URobcY5rTUT3hmHaeOWPLdqrb+qVNFNwTmtdx
veCcDl64Su9tu0zfoN/aTMk9pUWd1Buu0//LK3dUbbfpW/VHf/kHucct9w==

         "]]},
       "40"],
      Annotation[#, 40, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {GrayLevel[0], Opacity[0.4], LineBox[CompressedData["
1:eJwVzs0qhGEYBuBnfN/MHAHlJxnFiiImC6Us5gSs2QwLlBmh/BYbNo6C/P+e
iSRJjoIFEQvXu7i67+6eeb+p1JtTjUJEzPKRRRwX9TxiRgZttDJNu/3dzZFe
10d44Mt2alvQ52QLXXSmt+iwf7o50ef1Ko/82M5tDX1RZlToSW+l39u/3Zzp
S/oYT/zZLm2r+rLM6aePZvq2/dfNhb6ij/NMgWvbllyTRQYZSG/RbQ+u9E05
wQs5t7Y9uSFLDDPEevq/9owbfVdO8kqZe9uB3JFlqoyyTa+9xJ2+L2u8ccg/
LmcsBw==
         "]]},
       "30"],
      Annotation[#, 30, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {GrayLevel[0], Opacity[0.4], LineBox[CompressedData["
1:eJwVzEtKAlAUBuAT2QaqgQUqPSYZREQ0aBeZAzNBE9LooTVrVZrZYwmBEBEt
I6GEIGhQfXfw8Z/7c89ZanZLnamIKDOejnjKRLzLTznhgw0OqdKnR3kmoib3
5D4lRum/3TnzPLNs6hrUGXCTbumPZEVWOeDZ+8vugnmRLFu6FscMuaWpb6d7
6QYNXry/7ebNBXJs68445Z47TvTn6V66QYtX7x+7K+ZVltnRXdLlkQc6+qt0
U16kO7x5/9otmtdZY1d3zZ/+H6ukKpg=
         "]]},
       "20"],
      Annotation[#, 20, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {GrayLevel[0], Opacity[0.4], 
        LineBox[{1011, 1303, 1073, 1281, 1374, 1124, 1443, 1010, 1227, 1228, 
         1117, 1439, 1005, 1048, 1365, 1366, 1297, 1071, 1279, 1367, 1118, 
         1440, 1006, 1224, 1225, 1111, 1436, 1002, 1047, 1358, 1359, 1296, 
         1069, 1278, 1360, 1437, 1438, 1272, 1273, 1274, 1221, 1222, 1113, 
         1469, 1112}]},
       "10"],
      Annotation[#, 10, "Tooltip"]& ], {}, {}, {}}}],
  AspectRatio->1,
  Frame->True,
  ImageSize->{188., Automatic},
  PlotRange->{{0, 5}, {0, 5}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{3.512137934519608*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Perfect Complements (Leontief Preferences)\
\>", "Subsubsection",
 CellChangeTimes->{{3.512137449860845*^9, 3.512137463524724*^9}}],

Cell["utility=U(x,y)=min(\[Alpha]x , \[Beta]y)", "Item",
 CellChangeTimes->{{3.512137469316641*^9, 3.512137482300579*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ContourPlot", "[", 
  RowBox[{
   RowBox[{"Min", "[", 
    RowBox[{
     RowBox[{"5", "x"}], ",", 
     RowBox[{"10", "y"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", "0", ",", "3"}], "}"}], ",", 
   RowBox[{"ContourShading", "\[Rule]", "None"}]}], "]"}]], "Input"],

Cell[BoxData[
 GraphicsBox[GraphicsComplexBox[CompressedData["
1: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
fK6SfEPXWUK+cw/qOHWMabxazscojm/ifMvPa1jK7Pe3cjxDfGxzWn7bwnk7
837FVUG/G+T9BMTDOo4sNnGMxP+IP7X+rTbnp+QcG/onPjRz/zgnhP6Rr9r6
stq/6i3xJvQUGPzB+HodYafqeT50lf0l4scang/xPVPna3lxHe/ye9jNjInO
lNPyluohzhK/a+2o9idrnPYPa7i9fu8jYb771WHisg0mjhS7i+f1vgrsdaax
v5nGnmYa+5hp7FmWsU9Zxt5kGfuRZfQ9bvQ3bvQxbvxZ3PifhPEnCeMXEkbP
08/VaHuba+wn6urFaXkh9VPOeSEw5AryhjxEx+mCIcewJ7pOWGn236o5v1Pn
TN8WDDutz91JPo78CfKu7Y3UI0j+FzAmvc/negT0Teet5UyP1nfUrZu4XmL3
XYj+Ara7dF3K+9GwO+AfMPUHfyyY2uH8ntSfiH9rGCMfh333890sU+M/nEPV
/dWzPwCG/af24g+Iv/VMP+iAvdV1EFkf/J3Wo4znTXxbYfi1gvmM9Rkd/DHW
U+9LLDD7AgtMXX6BqYsvMHXpBaYuvIDlDZjWtd3Un7rYT+l9hlIeD1jXN0pN
vaLUyHepyfdLuT4DfdT79yvNfv1KUxev5P6B0T+wjjvruD2wjmsaGMO/wN/B
TpC/Q91eMOQF/o/ut7I+0v1WUy9sc6pf3k9s4XMgut+qtH0oyDvJaQPLOzD0
FutN4xby+XjYTWB9f6G5v9CcT2jh+AFxhvYXzWafo5X5hThA2/NWw89Wk8cA
NzFd0EPMGxjzhn5p+5Xk9sBob/cF6fk2tp/A8Ceb3rfr4vbAaA/5Q7wB+w49
hB8ERp1By+8a9kfANo+G/Pr7wxAnNDEGH2meso/j/54X1/sRefG0fRTwU+tL
GWPIs9b3RqfHnWPmXcB0YX2A7frY+rHmf8rwX97fhT2DvdH5frupI8h3XfU5
g2wT72WbfSV5XwX1Wug1MPSa6JPvQ9H6xLk9MNpjPJXn9Jb3MTA+MPQT/en6
pf1epeSRNi7TcQbyzFxur+2uvD9B889h/QXW9i+X7QPJW47W9zxpD3qRx2A8
YL2vU8l6o/1DLccnGFfb/xRjvS9Xb+rL+U7LRb753k6+03XFfKfraPlO143y
jb/KN/5KztNAX/S53kIzfokZv8SMX2LGLzHjl5jxS1ifgXVeU8n+HPzV5+lW
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
zQXjPvwasPYLJW7rHV+6YctBv7iioI8Hpnrf0atC9C95yG07HX+Z/M7o/KqV
yeQ8+e7yRUdu/s3R177N8eL5x0969fxbqt1noylezJ0y9vwfhqzm+U1edNHL
E/+UdKv7Ny7d9qBX+FrT/OtrqZ9/dk0HHHbVYXtNdQvu3GLHMX/61V3z+nnv
vzJ8lrviyzGffXHnKvf6/pefuN+IQlc1+MXxgyc0u4djvYqytip3L864+ZQZ
/+5wA/9V9dSNNdXugr3PWt9vyAbXVvr9SaWzV7O/u+DyDw85/8f2YM+muK9v
7t/RNfsxzpd3+nTrzW+d2+4GP7Xfd5fduNg9ecDxbz/66Y/u8/qXt7v8+i53
6rNvPDllfY078sCvRlS93Z2/jz3hzV6j5f3Ji/e6fVL5oN/cBROO63whWuYW
BjrKF09+rui9CvfW1T8krv12oZsa5Hz2uoP+9E3XMrfnPueP7H9hvbsiPPdO
8SeZSz5uctl7Hv/lnsfifFqbm1h/03fzila5HzMTozJzWt2IwJcrT3liximP
t7sfntrpX+N2gN1Y54YMPfO2Y6bWu7tuKNvrhvI1brcwzu7Trrlh2tXr3X1r
k/3XNcvvm8VWbrdjwc/NbuL1paMaL82M6gKfr3l6z2e2fSMr2sk/J+cRVky8
r+WxI1rdTf3OOHXSvHg0K8zrb6eOu37OVokodd2iwaMK5PfNzp100zEX/PSN
2y7j+ot/WtLulm3o8/ebB1e7n0afts2A6evdU6M3xMr64fsYXa7Xn59c/WZW
HevTPwYNODd3tfweyHFdbxz07XD5bs1Vc669a8ftZ3Dd/6EtF5yx51e/cz1n
1gPnrr3x2kVsd+5IDbrk7i/wHaIWt9Mh2Ue8M05+j+XgK3bfrv5Z1L873PxX
VtT96Tr5fZTKX7vmXnyj/B7A/Vt89ea9J69mfZ2/W913FZPkPAjJf5sbXvDq
14smFrvlQe4HTzl7yMkP1LpvXzvix41//8eg+PLxu6bcK8ffOmGj3DxRtHrw
PXfFovcX7bNPnxOTbuS4S/YeWJuIHn/i+diSj9vcUbc+9dghR+ZEI+cO+en8
DW3unmjjl3Bj0Qwvt8kgb6Vuu4OaHkvs/ItrXfRyZ/Z5wS/+4ff1bm856LPS
QUvdp0Xvf3ZjtnxPidq1upbKm7a5ZN1Kd+z6zmfWd3S5l0966IyN826ZNrLf
wNqM6PUgt0+/tXnTjks73d6nb/3PK0bVOMrvM6JRPr9vcteFuOqcKZ8edUT/
WnfrZ4kPcicnorEvX7z45Rva3DUnPziydMUaVxzi2vHBP7x73pk/zy2qc1sN
/WSbvS/F/oP8Ht8hZdu5XYY2u7ptdqtfmi+/Z0Trmx31evG+nX//OeWSNw/Z
d8fhiWjBg8dc5fq0uUWjijIaLoxHD4/fbdlGvsO+HfzStWsnHP2p+3Hxk7cN
+MuMYwfECk/85/lPsv1oLL5y19u/etvdeWrntVs25ES5N2x50Kp+Ha7vwcWn
r3h5njvjp+e7rtz6C7YPR2ctqP9rtuj/pGUPD931q+Ws348P3/2qu76Q3yeM
5nbtXPus6Oeav9RV738UvuOdHRUuvGh2+STRr+oFW9/Suep7N7D/h2P/VNqd
tzw5fNTUrt/dkMzDbrttcLMbOHWzhp+LVjjMs3HPVW8dMbXKfb20euU5mRvc
m+O+G/rWuEb3ztkndWzRmBUVT8oZcOj0FvfMCVnXPXnCXPfPd//21Wbzvna9
r7ttzt0nd8dJ2XOWLtt3kXN9dvzLh+ub3NAb3aThN5a5w6YX7H7nnKzoG9+v
nNu74rvtCl484SeuLx875oWLV+9Zy/p9+81HP/LR3aLf5+337pUj6uX7W1fN
PmGfon0Xs75We/0rdwPeOvGIG5rwPkq3vP9rkXt9XJHbKHW3njnXFV936U3n
Zda6Z7685qqaPYvdf718Jl0fL58V7kMvn7FouJfPpLvP50uJ6HSfL7W5wv2+
ic/Pi0UvHfeeaxsv+vT+BVf+a+SZv7ndD3vvmdOzl7oh33WM3Mgn6NNOh+28
/KTsUvef1GNH3vtFnXvu2MP77FW4hPVp1kPXvrNN6SrXVvX6OQfNSLn7trjF
8/V2r7+JaK7X3zaW39Q1/1l1wFGt7pJ7E5dMu0jk+7M+Jy9968ecaETwA0cd
9e+jRv0kv1960zGfXnFHwc8s1ycdvt95ycSvQY5nus32uzLRNUXi/hOunXXi
i7evYjwza8svR36KdSlzhXseV/TFC80s10+O23Fc/5vl91NOXNdy0nNnyrmQ
pklnrS5+Q76bnhXkctSsdc/eNOtHlsO+Xx0x49kXitxH63955JFpLW7O6W29
j+pf4X5Ysuv/Xts2JyI5bmd/fajX93aXGezMqWuzb/vl9O68y69b0n3u112+
67oyb+a8O7b+lP1D5S+r9viyS76HdN77Lz/13KfL2f7/4/t97z5qaiXb/9eO
L7z359PlOy07eH8h51zIvjex/V91ZlPro0eI/f8++9IF0Vut7r65L967vtt+
nxzGSTzxcWH1W4nI3fHjS98tbXN95v7Wbcc73DN7zfv7FjfUuCVHfvCfH5Zs
cP38d8eb3KoVv5V98ueqYBcWM99/e631uc9WFLl9S3/of/K19veLW9yrfv4V
ruEvhd9c3pAd0XfM29zqzQdUT/5xIfMJ6z77kf8M+eTcn4I/yYgoDmpie3yb
95/1bH8pfmp2f+9/wRnjurqCfNUFeiX+X3nxzqtn37/IfVE18YpxZ/3sRi//
pG3L6xa7/n99tffKffPcxe1PdEdeGRH5kSY3ee+JW5x3TSwacdTmQ395PenW
3jdt94veXepWTX5h+AW/zXWZft1L3V8n7jSs/Yl5rn34ufXNNd1x1a8Lb++/
2zz3t4qKHyvyXuY6MfmhLlcSvvt+/dDb8+dv/D51+K7CNiOurZjcna+cum3l
Ow9+3uS6J9U9s4xoqv/e+2pX7/kXi/Ad+DkLB3WPnBNl3DPrkmR3/jvvnDOe
v6xR3jc7NeTHJ1a+emtVTZvbsO6+mZX9qtxef3/iwztPLnTkp1tCfFnmBnj5
7XRFwW4hX/7l0isGXt4h52v+6vvD/BIRyUmr2/ukF1/aoXShu6abimj3WW5V
NxX1L091C7ut4j6DXnLXhr9Xhr+fGuoR07/+eEzVvm3uiF5f/muH4fJ72ovC
c2UHHtu/u2u30TqenT3Hjeie5aSHp7pF3dz4S+F8t69fv1nBrq5yWX5dCt1p
np5m94Wnp9wdte/3S6c2vePGDvyoKyd1L+c5t7T1/myzHz53rz79+JMX3BOP
DpjxmreLg8e/Gx8zeIUrCOOcEvi0T6Bzsbfry9xzu5w/9tsV8/m7F6c8v9vC
2UULgx1odEWhHdYR/S6ZUbv7b6fUuy//uZHCZW5wWPel/u8rgr9odXsEusb7
76q0uaz1tI59vb6m3LNeX1c5yMH4vX8qPL5Pdzzu+1vrisM4J3t+rHPTw7ym
+fVf707ydDW4sd7/dMc3gW93e/3LiqYFORno84+saL3PP1rc8FvP7I7/sqN+
YR5Dvf5kB/1pdd1JzC2/zolHS/13Zlrds3uctVnLs7+5yd3ScuQHX3Oc12vC
nUteefd3rucdf8yf3z7uY9kPIHtXFfzfejfPx8NSr/tk1vkrv3+9xW3r5TEe
5DHpZng6K12x5/8i94yfV3OQkzKX6fnV6Z72/Kpxwzw9GRGts3wvb7dXep3z
6oXye1XXHnzoS4fc1Rb0Lxb0L+kGh/w+e9olT2yxX9JdX3x0t8TVuyf3GfSX
C9eVBH1vDfq+0mX6dawL+riE66lXjnzl77Enl7jpnu8pd7KfTwXtL3T73eq9
Jl+yes+VQd+WBH3L433Qul1/+fasD/LYPleeVTPtvO0X837HwF03u+C2Y4rZ
Pr+3/W/b7nR1Oe93nL12+eXv314RvucTj572cpdyT744Yeaxk+LRuZPvb7ty
VCqsfyKsv/w+7s3bLvqofZs2d5qX82o3KtjZei8H3Xzy3xuSenNz9VXjW776
3n3u9WCRW5uT2nbEtT8wP1JXP9DviotQ50i5Q954Je/VnFWcX294tzHj/QEd
bvAdW7XvevCsYLemuIw77qh7M0t+33vU+YdefPcXqzmOGr3TvysOmNHGcV7f
h86aOPEZ+f3thjHP7fPAkTjf0ex+PiQWP3YSzneE93W67ceg2+bErtrpW5bn
Ezrfuz511yKW5wtrD26smlDmKG/vcDd4uah2U/33cja4vt5urHZ5HwwYu9vQ
RJSVv/zpqmfxPZFYdNPDx0UPNSddw8QXui1NTkTf2Wl3Dyw7/81tSuW7M7cP
T+TeOlh+j32jtube/IPbKG0zaj8OvzdS7tb53xtZwH6d1me5W+LXp92N8utT
GexRR7BT1W681591wR515wd3b5T7DW6c15/VbpKPZ7Oi0d7PtbgdVt24vLm3
vM8wYucJv519XCw6+om6Nasypf51rJeXZNgvyI7ITrW6Yq/Hne5UL0d4H7vT
DfHyWeMO9/YoFq3zfE0G/5gV9fF0Jbl+usezA148/tok19+vf7x88uX7tLtT
vZ1e4rK6pXziC/OCHahzNy7+auV7WUtdo+835Z7267WS5/vJkV/fcva9Sfem
t2+JYN/auV4++MQhD+1U2MZ10sGH521+z9Xz3DnePsait0Ie8FyIs6aHvIH6
r3GTJlz1oDt8SeBvMvC3guv/j3755JgtWyv4vMch0zbWz2t4v+0Rfx/fQ5Zz
uLCDL3p/9RPHB8f7ekZ78G81rn+wK6jfV/Z/eM1TLyxxsKvkv/C936R7L/O1
AUf0X8nv28e8/WtiuSH/Vhziyxb3X093Bdfrb/LrL/X63f16NYXx1gQ7Uh9+
/2Zt8KN17mdvfzOj9Z5Pza7R60dm0I9m9+H5d2328jNr3FFjhtxTv2ed+6Rs
/xUPHJkZ3Zbc3ueNS0O9fNq8ga1jJ/zgFp7yjw8XnLLG1T37iM+bKP7PjJDH
Im4qD3EI2f+MYP/l92s+8vLR5B7tyBv8UGuJu6h2r6L5+b+wnr7u6va/Zlae
2/yqPU+68B5bD17qMsa+ucP8m+dyvffCzvsP3P/KfFfiv7u1zO3tf28on+R9
dIgHJ8n3kPpu3K+KIS9a4/Z+v+bV82+R80yjvPzL+bDTNsrr8yneNzjgtL+3
fzB5Ju/TzDjwsSkPvVHA+/vPPPB6r0MPKHP9enWv23j5XbElYz4ZMWLUeq4z
oP5bcvWEnY5f3sL7D6f0vu+w2Z/MdqeE/YVxK9sfOn7rIt4P2XDZhXf0qih3
fcZ8M+fQ/0xlew47dnSI456evFHuV7B9X/fgg9tdsq6B7fvnh+z2112WtLJ9
H/1qZ/uj0+RcYu+HRi6+c04m2/f644r+d9hAse+wk18HO0rxVxf77be8/mdE
ZDcRL8WjqcFvj4QdDXVd2MVlwQ5fF+zucyEu6hPsaizkFacFO/hliGOO3Bi2
bpsd3RDiiGHenuREFCe2uydC3bhXNzri4C+CPatwN3l7VuBQN6a4ZIWbFvwI
+Z8qN9LPb70r8vNrdNv6fCQr5CMtjuK+tRzX0PiZEeKqiRM2/ivmOj8w/KK+
X8cYflK3TzFGHAiMvAQY50SAkacAI07U/ccZI24BRlxR8Nddu/9j3nnusY87
uv/XMn5jq9rXt6ptYnzXjxd2/08xvtD/oZ3xYYdv/LeG8ZYbH399PeN/D8m5
ZUgO5p3nyvf/pvt/FmN/+5Y44298gwTjA/wfciI93y7my1VXb/wnfHrNzz+D
6ab5CJ/u9PQIn2o23t5K+ET05TDG9f5j3uv+X+Hy5238lxF5sg+vcEdv/PP9
WYzf9Q3jjLe/rLn7fzZj6ieHMfo/1vdTy7jDE9rEmNZN5Ocj30Dk5/8XXzw5
2+dE1/j+25y/PaHTbeP7a2Q83LeT/SLbHvpCuCbMpzTws8v8XfCunhHgp5yr
A0YdDfICOw78uOdTgtvTNRbt5vttZfyib9/qaN4J8/24Ru4P84J9gN7i79Bb
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
f6vD35L1QbvW3b//87wxS9z/AZjUseQ=
   
   "], {{{}, {}, {}, {}, {}, {}, {}, {}, {}}, {{}, {}, {}, 
     TagBox[
      TooltipBox[
       {GrayLevel[0], Opacity[0.4], 
        LineBox[{2472, 3420, 3421, 3307, 3423, 3422, 2659, 3418, 3419, 3306, 
         3417, 3416, 2675, 2469, 3365, 3277, 3384, 3383, 2565, 3451, 3456}], 
        LineBox[{3415, 3411, 3412, 3305, 3414, 3413, 2658, 3409, 3410, 3304, 
         3408, 3407, 3228, 3170, 3171, 3167, 3169, 3168, 3226, 3150, 3151, 
         3147, 3149, 3148, 3224, 3130, 3131, 3127, 3129, 3128, 3222, 3110, 
         3111, 3107, 3109, 3108, 3220, 3090, 3091, 3087, 3089, 3088, 3218, 
         3390, 3391, 3299, 3393, 3392, 2484, 3436, 2651, 3302, 2652, 3401, 
         2650, 3427, 2661, 3308, 2660, 3426, 2674, 3376, 2568, 3289, 2569, 
         3377, 2564, 3197, 2570, 3196, 3453}]},
       "14"],
      Annotation[#, 14, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {GrayLevel[0], Opacity[0.4], 
        LineBox[{2492, 3045, 3046, 3042, 3044, 3043, 3209, 2481, 2994, 2993, 
         3208, 3207, 2491, 3040, 3041, 3037, 3039, 3038, 3200, 2477, 2731, 
         2730, 2733, 3327, 2732, 3328, 2478, 3398, 2646, 3301, 2647, 3399, 
         2643, 3397, 2645, 3300, 2644, 3396, 2673, 3364, 3363, 3276, 3450, 
         3459}], LineBox[{3229, 3185, 3186, 3182, 3184, 3183, 3227, 3165, 
         3166, 3162, 3164, 3163, 3225, 3145, 3146, 3142, 3144, 3143, 3223, 
         3125, 3126, 3122, 3124, 3123, 3221, 3105, 3106, 3102, 3104, 3103, 
         3219, 3085, 3086, 3082, 3084, 3083, 3217, 3070, 3071, 3067, 3069, 
         3068, 3216, 3388, 2635, 3298, 2636, 3389, 3432, 3434, 3435, 3284, 
         3374, 2483, 2683, 2482, 3373, 3283, 3425, 3424, 2566, 3194, 3195, 
         2971, 2972, 3444, 3445, 3446, 3441, 3443, 3442, 3428, 2721, 3452}]},
       "12"],
      Annotation[#, 12, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {GrayLevel[0], Opacity[0.4], 
        LineBox[{2601, 3335, 2863, 3293, 2862, 2720, 2511, 2789, 2600, 3241, 
         2630, 3239, 2629, 3240, 2654, 3006, 3005, 3004, 2594, 3215, 2490, 
         3029, 2510, 3027, 2509, 3028, 2588, 2992, 2991, 2990, 2587, 3206, 
         2489, 3026, 2508, 3024, 2507, 3025, 2580, 2728, 2727, 2800, 2578, 
         3291, 2729, 2867, 3260, 2642, 2980, 2981, 2982, 2682, 2979, 2978, 
         3259, 2641, 3188, 3375, 3457}], 
        LineBox[{2619, 3181, 2563, 3179, 2562, 3180, 2617, 3161, 2557, 3159, 
         2556, 3160, 2615, 3141, 2551, 3139, 2550, 3140, 2613, 3121, 2545, 
         3119, 2544, 3120, 2611, 3101, 2539, 3099, 2538, 3100, 2609, 3081, 
         2533, 3079, 2532, 3080, 2607, 3066, 2527, 3064, 2526, 3065, 2605, 
         3056, 2521, 3054, 2520, 3055, 2603, 3250, 2634, 2965, 2966, 2967, 
         2648, 3406, 2657, 3303, 2656, 3405, 2679, 3372, 3371, 3282, 2649, 
         3400, 2666, 3193, 2567, 2968, 2969, 2970, 2790, 3463}]},
       "10"],
      Annotation[#, 10, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {GrayLevel[0], Opacity[0.4], 
        LineBox[{2598, 3334, 2861, 3292, 2860, 2716, 2504, 2787, 2597, 2859, 
         2858, 2715, 2503, 2786, 2596, 2857, 2856, 2714, 2502, 2785, 2595, 
         3238, 2628, 3236, 2627, 3237, 2653, 3003, 3002, 3001, 2593, 3214, 
         2488, 3020, 2501, 3018, 2500, 3019, 2586, 2989, 2988, 2987, 2585, 
         3205, 2487, 3017, 2499, 3015, 2498, 3016, 2579, 2725, 2724, 2799, 
         2577, 3290, 2726, 2866, 3257, 3258, 2976, 2977, 2476, 2681, 2475, 
         2975, 2974, 3187, 3462}], LineBox[CompressedData["
1:eJwNzL1KgmEYBuBHyKCyPd1cCkQlQiKcqi2KhrAOoCkbdNLcOog6hqLNDqAf
O4GgoCB1sSXpb8mCWrqGm+u77+/hze7Wt2qJiNiU8mTEfioiwT0Gq1ziDv8m
Iir85TYX7asc6cv84gpL9iI/9Tw/WOCCPcOhPsMXpjlvH+ezPsYBkyzaf6Yi
+vqIPX4zb3/no/7KB74xZ+/xXn/iHbucs7e9dy5H+rGc+nehn3B2OuLW9wbX
Zc19R7+RS7mWKzlz2+SBNKQlh+7/Ad6kLtQ=
         "]]},
       "8"],
      Annotation[#, 8, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {GrayLevel[0], Opacity[0.4], LineBox[CompressedData["
1:eJwVzjsyg2EUBuBjQpEgdFKJICyAaEXsIGMFFpDYgUahSRP3HRidwkjHDAVJ
LxH3DShpJOP5i2fOOe+b/5sUtuvV2khEbLE5HnGWjhhORCzbjzMRH7yz5D7V
DXRF+5HsjVcW3Se6P92C/VD2Qp/55B1dR1ewH8ie6TGXvKNr6/L2pqzLE7Pu
R/kDX1Rk6cmIa3mLYfI9A/I0/GbHrOg2uOfW2z35lfzC/Wvm+GGGPV3dLOvW
uePGN135pfzc/W1OsSvLmin/YYxRpt0lc41P/aq5Qo19/gFo6TFP
         "]], 
        LineBox[CompressedData["
1:eJwNzT8sQ1EcR/GfmPxpIiKtiAjWTp0N1saiqgMWdFCV1FMTBsGECTuCvTbt
xmyQGDqISSKRSEwsJj7Dybnfc1/uGysnxfWOiChhPBVx1hNxihP8dUVUeiNG
9WP7CIf41Wf1Ef3A3scevvVJfVjfsbexhS89qw/pm3YdG/jQM/qgvmZXsYo3
vVNP62V7GUt41X94QF/gecyhrX9yv17kGRTwrL9wn37ZHXGBczzqKe3dOef+
2r9ucIVbNDDhvoIVPNmLvp1yznPLLvAdT3OTH7yTuL/nGu/iH0nbLiM=
         "]]},
       "6"],
      Annotation[#, 6, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {GrayLevel[0], Opacity[0.4], LineBox[CompressedData["
1:eJwVzrkyQ2EYxvE3KpxkxhZ7zLgFpSW5B3dAL2qNxigQ+0UYnQIdMxSJfR1K
boBObFH4neI/z/s+//Od7xuenp0sZyJiCsUkYrslopGNKJjXWyMe8YBB+xb3
yw2Y13T3uEO/fZP74frMq7pb3KDXvsF9cz3miu4aV+hO7+C+uLx5RXeJC3Sl
d3CfXKd5WXeOM3Skd3B1rt28pKshyUVUZZuuxlXxipKumTvQH+LPPoQGCqj4
piwnuHGc4tj/n/X7+l17PX0vPpDHAjcjx7hRnODImSf9nn7H/iazmNclMuMN
77JJ5uSILMoXfs68iH95+DjG
         "]], LineBox[CompressedData["
1:eJwNzr8rhAEcx/Hv2Y5zkpB06VaTv0BMfhRXV8hwlPJcBncWZ7ozIQNGbiI2
dRt2sZgYDDLdpJSJxSSv4dXn+b6f7unya9ViJRURy+S7I066Io454i8dkWQi
RvQD9z57/OpFPafvuhvU+dbH9WF9x11jmy99VB/Sq+4Km3zoA/qgXnYnrNPW
O/R+fdW9Qol3/cf26Ut2kQVe9U/bqxfsPHO86G+2R5+1M0zzpD/brN7sjDjj
lHs9o7U9j3l/4T9Mej63E7Zlp+yDfSTx3KBOjWu/v7KX3Hp/w5224ZtbHPIP
M7gwGg==
         "]]},
       "4"],
      Annotation[#, 4, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {GrayLevel[0], Opacity[0.4], LineBox[CompressedData["
1:eJwNzrsuw3EYx+G3o2LTCzBpXYEmutRpcIjT1k60iYQwqCqtQ7AxkJjQqsMd
uAY2QuJwCaxcgWd48vu+n//y711Ym11NRESR/Y6Ie046I44pd0WU2NPuONIO
mdGm2dVuaWh1ctogO9oNFW2djJamobVZ0ZZJaT3UtWtK2iIJLdjWWhS1An/8
sqU1mbfn+OGbmnbFhD3OF59sapeM2aO88ExVu2DEHuaJRza0c86SEad88E5F
y/o+QMv/5bSm/WAPdUdMud/sjN1PzZ329vGqT7rz9pL3wPsPGKExNQ==
         "]], 
        LineBox[CompressedData["
1:eJwVz9kug1EUhuFdcyeuwT0YQlyFS5CICKkTwoGEtsbWlSCIGmoeey2mGKoO
cMKzD96s7//elZX9d49MDecSIYQc5lMhbCRDGDfHMINpDGErE8I2NjGYDWEA
XekQyva/dJ3ymr0a7pH1XeIaXEZe1d3hFmnf69wnl5JXdDe4RjLe4epch7ys
u8Il2uMd7oNrk5d0FzhHa7zDvXMtclF3hlM0xzvcG9ckF3QnqCIR73CvXJDz
umOk/N+R+YciX+P7+QNUcKj74X7xjTJfwqRc4PrsLMoV7GMv/q/ZQD3u2M1j
Qs5zvfYX5F3sxKl7NJ/wgFnveTHnzGdz1OyJbzf/AXm1Qso=
         "]]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], {}, {}, {}}}],
  AspectRatio->1,
  Frame->True,
  ImageSize->{181., Automatic},
  PlotRange->{{0, 3}, {0, 3}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{3.512138033157117*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["CES Utility", "Subsubsection",
 CellChangeTimes->{{3.5121374948440933`*^9, 3.5121374966276608`*^9}}],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{"utilty", "=", 
   RowBox[{
    RowBox[{"U", 
     RowBox[{"(", 
      RowBox[{"x", ",", "y"}], ")"}]}], "=", 
    RowBox[{
     RowBox[{
      FractionBox[
       SuperscriptBox["x", "\[Delta]"], "\[Delta]"], "+", 
      FractionBox[
       SuperscriptBox["y", "\[Delta]"], "\[Delta]"]}], "=", 
     RowBox[{
      RowBox[{"ln", "(", "x", ")"}], "+", 
      RowBox[{"ln", "(", "y", ")"}]}]}]}]}], TraditionalForm]],
 FormatType->"TraditionalForm"]], "Item",
 CellChangeTimes->{{3.5121375006437817`*^9, 3.512137532612385*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ContourPlot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Log", "[", "x", "]"}], "+", 
    RowBox[{"Log", "[", "y", "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "1", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", "1", ",", "5"}], "}"}], ",", 
   RowBox[{"ContourShading", "\[Rule]", "None"}]}], "]"}]], "Input"],

Cell[BoxData[
 GraphicsBox[GraphicsComplexBox[CompressedData["
1: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
uUHOkHua/mhO22Hq3zv8H/Q2zo4=
   "], {{{}, {}, {}, {}, {}, {}, {}, {}}, {{}, 
     TagBox[
      TooltipBox[
       {GrayLevel[0], Opacity[0.4], 
        LineBox[{1052, 1121, 943, 1081, 1054, 1307, 1053, 1112, 915, 1287, 
         1057, 1082, 1059, 1309, 1058, 1117, 919, 1290, 1064, 1085, 1066, 
         1310, 1065, 1118, 921, 1291, 1067, 1086, 945, 1126, 1125}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {GrayLevel[0], Opacity[0.4], LineBox[CompressedData["
1:eJwV0L1KQgEYh/H3eEysJgsTbWqp1YZyqHtIgpyauoC6CAcbokCwa0iI0taC
PqBFqlvQmgqvoILod4aH5/+8nuEcVw6Odg+TiGiinUZc5yMGuMKD/sE31nUd
H/jVY37HBDs4drvhJx7yI+e4PBOR8IXu4M9O8WzPchF9e4PnUfH8HO/hxD3R
JXsTi6jqBW7h1O+pLtsNXOoz5N2W9MiucU1Xs2/SXRT0sn6xb/mV7/gLn9hH
z63ouVV7C9s4z97Zbc1+s++z78z+J0zxDzXoJtk=
         "]]},
       "2.5`"],
      Annotation[#, 2.5, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {GrayLevel[0], Opacity[0.4], LineBox[CompressedData["
1:eJwV0LsrR2EcwOFXbptLJINCMWJg8Be4loRSbP4AFmVQxKBkIddNkUtJ2VzC
yKBQLguby+AyoH5+lMvzDp+e73ve95zOOaU9fW29KSGEfi2khjCfFsKcZnWo
A824vqUy85PK1a0uFasoPYSSeE7TOnF2j1PcVK25UOnOTVp3mh/0qB0du7bN
I+YwODdh3lBWvNc6mx1qV4YKXMtkTXyu/jTufGucmW8/mKv1a/3DMbbwk3n2
k6yyTvCbo2zmO3Ptf7DS+o1fHGEjm/RqTnKIK3qO7+6eF+5rLf47rnOYDbzS
vfkyfj8ruMQL3nGVu5zgdfw/5gQHWcd63ZjfOcBFncZnaDl+v850rlt7/4vs
Q64=
         "]]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {GrayLevel[0], Opacity[0.4], LineBox[CompressedData["
1:eJwV0MkrRWEYwOHPtCMlZW1v5T9AlhbuztbWcM3XdEumhTKukVuGEqtrSMqG
uJZYGEIZyrC6CzcLlOcsnn7v+53Td+pUNsdj7XkhhAQ9BSHUFIbQrR3aSRtx
2hljlFZ2vNOiab3ikoz9jEmWWOQ0qmddZM0XWqe19JlTuq8ruqc3XLNMlbM7
LSkK4Vbr7YOa0+fomzrFGqvR3aScD/BlftJDPih1x7uukuTb80894sH8yD1Z
+zojbNm3mWGWnLMy93xpg31cf/RXq3VDJ/g1/+kxafOJ7mghLzQSo4RXitn0
zhS70X9gjnkWmHae77vl5oz5QM+1Vyt4Y4jh6J/ST4IkTTTzD7PySys=
         "]]},
       "1.5`"],
      Annotation[#, 1.5, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {GrayLevel[0], Opacity[0.4], 
        LineBox[{881, 1088, 880, 1129, 1130, 1127, 946, 1128, 1153, 1152, 976,
          1263, 1221, 1157, 1179, 1178, 1220, 923, 879, 1262, 975, 949, 981, 
         1292, 980, 925, 885, 1265, 982, 952, 991, 1294, 990, 928, 888, 1267, 
         992, 954, 1240, 1241, 1239, 999, 931, 892, 1193, 1194, 1164, 1165, 
         1243, 1007, 1242, 1006, 1145, 1311, 959, 1195, 1138, 1140, 1139, 
         1146, 1100, 1120}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {GrayLevel[0], Opacity[0.4], 
        LineBox[{989, 1119, 1092, 1226, 1227, 1225, 1229, 1228, 1160, 1159, 
         1183, 1182, 877, 922, 1218, 1176, 1177, 1156, 1219, 1260, 1261, 1150,
          1151, 878, 1087, 1124, 1123}]},
       "0.5`"],
      Annotation[#, 0.5, "Tooltip"]& ], {}, {}, {}}}],
  AspectRatio->1,
  Frame->True,
  ImageSize->{179., Automatic},
  PlotRange->{{1, 5}, {1, 5}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{3.5121381041697197`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"ContourPlot", "[", 
  RowBox[{
   RowBox[{
    SuperscriptBox["x", ".4"], 
    SuperscriptBox["y", ".6"]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", "0", ",", "5"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.512137820234446*^9, 3.51213782045745*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Utility Maximization and Consumer Choice - Chapter 4\
\>", "Section",
 CellChangeTimes->{{3.51199744789476*^9, 3.511997450926343*^9}, 
   3.511997634174554*^9, {3.512136900312512*^9, 3.512136909824399*^9}, 
   3.51213821246797*^9, {3.5121429751981688`*^9, 3.512142979614596*^9}}],

Cell[CellGroupData[{

Cell["What is a Budget Constraint?", "Subsection",
 CellChangeTimes->{{3.512135647931047*^9, 3.512135654819335*^9}}],

Cell[CellGroupData[{

Cell[TextData[{
 "B is the budget constraint and it is all combinations of x and y that \
satisfy ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{
      SubscriptBox["p", "x"], "x"}], "+", 
     RowBox[{
      SubscriptBox["p", "y"], "y"}]}], "=", 
    RowBox[{"I", ".", " "}]}], TraditionalForm]]]
}], "Item",
 CellChangeTimes->{{3.512135657874339*^9, 3.512135693879884*^9}}],

Cell[TextData[{
 "The slope of all budget constraints is ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"-", 
     FractionBox[
      SubscriptBox["p", "x"], 
      SubscriptBox["p", "y"]]}], ",", " ", "when"}], TraditionalForm]]],
 "x is on the x axis and y on the y. This is also known as the relative price \
of x with respect to y or the ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["MC", "x"], " ", "in"}], TraditionalForm]]],
 " units of u. "
}], "Item",
 CellChangeTimes->{{3.512135694097933*^9, 3.512135758598938*^9}, {
  3.512138405764658*^9, 3.5121384057647457`*^9}}],

Cell["\<\
What happens to the budget constraint when the price of one good changes? It \
simply rotates about the point on the axis of the good that didn\
\[CloseCurlyQuote]t change.\
\>", "Item",
 CellChangeTimes->{{3.512135758968182*^9, 3.512135861150515*^9}, {
  3.512135908333582*^9, 3.512135938386415*^9}, {3.512146140032804*^9, 
  3.5121461406731462`*^9}}],

Cell[TextData[{
 "The intercepts of a budget constraint are ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox["I", 
     SubscriptBox["p", "y"]], "and", " ", 
    FractionBox["I", 
     SubscriptBox["p", "x"]]}], TraditionalForm]]],
 "."
}], "Item",
 CellChangeTimes->{{3.5121359394525747`*^9, 3.512135958804528*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Theory about maximization", "Subsection",
 CellChangeTimes->{{3.51213834151657*^9, 3.51213834711729*^9}}],

Cell[CellGroupData[{

Cell["\<\
Utility is maximized subject to a budget constraint at the point of \
tangencyConsumer between the budget line and indifference curve.\
\>", "Item",
 CellChangeTimes->{{3.512138350019145*^9, 3.5121383883673162`*^9}, {
  3.512146141361116*^9, 3.512146149465179*^9}}],

Cell[TextData[{
 "At this point the slope of both lines are equal, that is to say that ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"-", 
     FractionBox[
      SubscriptBox["p", "x"], 
      SubscriptBox["p", "y"]]}], "=", 
    RowBox[{"MRS", "=", 
     FractionBox[
      RowBox[{
       RowBox[{"\[PartialD]", "U"}], "/", 
       RowBox[{"\[PartialD]", "x"}]}], 
      RowBox[{
       RowBox[{"\[PartialD]", "u"}], "/", 
       RowBox[{"\[PartialD]", "y"}]}]]}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "."
}], "Item",
 CellChangeTimes->{3.512138489685032*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
The Method of LaGrange for Consumer Theory\
\>", "Subsection",
 CellChangeTimes->{{3.512134272623271*^9, 3.512134281454946*^9}, {
   3.512138511617844*^9, 3.5121385235190067`*^9}, 3.512146150576486*^9}],

Cell[CellGroupData[{

Cell["\<\
This is how we optimize subject to some constraint (a budget, a level of \
production, a level of Utility)\
\>", "Item",
 CellChangeTimes->{{3.512134283438685*^9, 3.512134304290461*^9}}],

Cell["\<\
There are two basic forms from this class and are as follows. \
\>", "Item",
 CellChangeTimes->{{3.5121343063984413`*^9, 3.512134322933865*^9}, {
  3.51213855781715*^9, 3.512138559041286*^9}}],

Cell["\<\
The Lagrangian multiplier \[Lambda] represents the marginal utility of one \
more dollar of income. \
\>", "Item",
 CellChangeTimes->{{3.512138559550518*^9, 3.512138588054008*^9}, 
   3.512146151752776*^9}],

Cell[CellGroupData[{

Cell[TextData[{
 "Expenditure minimization subject to a level of Utility ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      OverscriptBox["U", "-"], ")"}], "  ", "L"}], "=", 
    RowBox[{
     RowBox[{"Expenditure", "+", 
      RowBox[{"\[Lambda]", "(", 
       RowBox[{"Utility", "-", 
        RowBox[{"U", "(", 
         RowBox[{"x", ",", "y"}], ")"}]}], ")"}]}], "=", 
     FormBox[
      RowBox[{
       RowBox[{
        RowBox[{
         SubscriptBox["p", "x"], "x"}], "+", 
        RowBox[{
         SubscriptBox["p", "y"], "y"}], "+", 
        RowBox[{"\[Lambda]", "(", 
         RowBox[{
          OverscriptBox["U", "-"], "-", 
          RowBox[{"U", "(", 
           RowBox[{"x", ",", "y"}], ")"}]}], ")"}]}], "\[IndentingNewLine]", 
       RowBox[{
        FractionBox[
         RowBox[{"\[PartialD]", "L"}], 
         RowBox[{"\[PartialD]", "x"}]], "=", 
        RowBox[{
         RowBox[{
          SubscriptBox["p", "x"], "-", 
          RowBox[{"\[Lambda]", "(", 
           RowBox[{
            SubscriptBox["U", "x"], "(", 
            RowBox[{"x", ",", "y"}], ")"}], ")"}]}], "=", "0"}]}], 
       "\[IndentingNewLine]", 
       RowBox[{
        FractionBox[
         RowBox[{"\[PartialD]", "L"}], 
         RowBox[{"\[PartialD]", "y"}]], "=", 
        RowBox[{
         RowBox[{
          SubscriptBox["p", "y"], "-", 
          RowBox[{"\[Lambda]", "(", 
           RowBox[{
            SubscriptBox["U", "y"], "(", 
            RowBox[{"x", ",", "y"}], ")"}], ")"}]}], "=", "0"}]}], 
       "\[IndentingNewLine]", 
       RowBox[{
        FractionBox[
         RowBox[{"\[PartialD]", "L"}], 
         RowBox[{"\[PartialD]", "\[Lambda]"}]], "=", 
        RowBox[{
         RowBox[{
          OverscriptBox["U", "-"], "-", 
          RowBox[{"U", "(", 
           RowBox[{"x", ",", "y"}], ")"}]}], "=", "0"}]}]}],
      TraditionalForm]}]}], TraditionalForm]]]
}], "Subitem",
 CellChangeTimes->{{3.512134365541197*^9, 3.5121345067081423`*^9}, {
  3.512134674493402*^9, 3.512134676346101*^9}, {3.512134820583721*^9, 
  3.512134878273221*^9}, {3.5121349098760843`*^9, 3.512134915179544*^9}, {
  3.512136438389489*^9, 3.512136502860586*^9}, {3.5121365464716797`*^9, 
  3.512136546527832*^9}}],

Cell[TextData[{
 "Utility Maximization subject to Income Level: ",
 Cell[BoxData[{
  FormBox[
   RowBox[{"L", "=", 
    RowBox[{
     RowBox[{"U", "(", 
      RowBox[{"x", ",", "y"}], ")"}], 
     FormBox[
      RowBox[{
       RowBox[{"+", "\[Lambda]"}], 
       RowBox[{"(", 
        RowBox[{"I", "-", 
         RowBox[{
          SubscriptBox["p", "x"], "x"}], "-", 
         RowBox[{
          SubscriptBox["p", "y"], "y"}]}], ")"}]}],
      TraditionalForm]}]}], TraditionalForm], "\[IndentingNewLine]", 
  FormBox[
   RowBox[{
    FractionBox[
     RowBox[{"\[PartialD]", "L"}], 
     RowBox[{"\[PartialD]", "x"}]], "=", 
    RowBox[{
     RowBox[{
      RowBox[{
       SubscriptBox["U", "x"], "(", 
       RowBox[{"x", ",", "y"}], ")"}], "-", 
      SubscriptBox["\[Lambda]p", "x"]}], "=", "0"}]}], 
   TraditionalForm], "\[IndentingNewLine]", 
  FormBox[
   RowBox[{
    FractionBox[
     RowBox[{"\[PartialD]", "L"}], 
     RowBox[{"\[PartialD]", "y"}]], "=", 
    RowBox[{
     RowBox[{
      SubscriptBox["U", "y"], "(", 
      RowBox[{"x", ",", "y"}], ")"}], "-", 
     RowBox[{
      SubscriptBox["\[Lambda]p", "y"], "0"}]}]}], 
   TraditionalForm], "\[IndentingNewLine]", 
  FormBox[
   RowBox[{
    FractionBox[
     RowBox[{"\[PartialD]", "L"}], 
     RowBox[{"\[PartialD]", "\[Lambda]"}]], "=", 
    RowBox[{
     RowBox[{"I", "-", 
      RowBox[{
       SubscriptBox["p", "x"], "x"}], "-", 
      RowBox[{
       SubscriptBox["p", "y"], "y"}]}], "=", "0"}]}], TraditionalForm]}]]
}], "Subitem",
 CellChangeTimes->{{3.512134879970503*^9, 3.5121349971099777`*^9}, {
  3.5121365094202957`*^9, 3.512136557105136*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "The Indirect Utility function ",
 Cell[BoxData[
  FormBox[
   RowBox[{"V", "(", 
    RowBox[{
     SubscriptBox["p", "x"], ",", 
     SubscriptBox["p", "y"], ",", "I"}], ")"}], TraditionalForm]],
  FormatType->"TraditionalForm"]
}], "Subsection",
 CellChangeTimes->{{3.512138610149569*^9, 3.512138627816456*^9}}],

Cell[CellGroupData[{

Cell[TextData[{
 "The indirect Utility function V is the Utility function evaluated at the \
optimum. In other words maximum utility = ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"U", "(", 
     RowBox[{
      SuperscriptBox[
       SubscriptBox["x", "1"], "*"], ",", 
      SuperscriptBox[
       SubscriptBox["x", "2"], "*"], ",", " ", "...", " ", ",", 
      SuperscriptBox[
       SubscriptBox["x", "n"], "*"]}], ")"}], "=", 
    RowBox[{"V", "(", 
     RowBox[{
      SubscriptBox["p", "1"], ",", 
      SubscriptBox["p", "2"], ",", " ", "...", " ", ",", 
      SubscriptBox["p", "n"]}], ")"}]}], TraditionalForm]],
  FormatType->"TraditionalForm"]
}], "Item",
 CellChangeTimes->{{3.5121386428849363`*^9, 3.51213873474269*^9}, {
  3.512146152441345*^9, 3.5121461529615498`*^9}}],

Cell["\<\
We can use the idea of the indirect utility function to learn what is called \
the lump sum principle. the principle is that is it beneficial for consumers \
of they are taxed on their income rather than on specific goods. In general \
the best thing to do is not distort natural price relationships. \
\>", "Item",
 CellChangeTimes->{{3.5121387354909153`*^9, 3.512138806361792*^9}, {
  3.512146153617188*^9, 3.5121461543456182`*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Other topics not covered in text, but covered in class.\
\>", "Subsection",
 CellChangeTimes->{{3.512141853428336*^9, 3.512141867299819*^9}}],

Cell[CellGroupData[{

Cell["The Envelope Theorem:", "Subsubsection",
 CellChangeTimes->{{3.512134178633298*^9, 3.512134187049115*^9}}],

Cell["\<\
This is the idea of viewing what happens to an optimizing function when an \
exogenous variable changes. The main idea is that you can optimize at the \
optimal points, or you can optimize and then plug in the optimal points to \
get the same answer. \
\>", "Item",
 CellChangeTimes->{{3.512134188489039*^9, 3.512134249611508*^9}, 
   3.512146155889217*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["The Budget constraint for Labor", "Subsubsection",
 CellChangeTimes->{{3.512135989604246*^9, 3.512135995526513*^9}}],

Cell[CellGroupData[{

Cell[TextData[{
 "U(x,y), where x is leisure and y is other goods, ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["p", "x"], " ", "wil", " ", "lbe", " ", "wage", " ", "and", 
    " ", 
    SubscriptBox["p", "y"], " ", "will", " ", "be", " ", "price", " ", "of", 
    " ", "other", " ", "goods"}], TraditionalForm]]]
}], "Item",
 CellChangeTimes->{{3.512136001955221*^9, 3.512136013008626*^9}, {
  3.512136062794078*^9, 3.51213607515786*^9}}],

Cell[TextData[Cell[BoxData[{
 FormBox[
  RowBox[{"I", "=", 
   RowBox[{
    RowBox[{
     SubscriptBox["p", "x"], "x"}], "+", 
    RowBox[{
     SubscriptBox["p", "y"], "y"}]}]}], 
  TraditionalForm], "\[IndentingNewLine]", 
 FormBox[
  RowBox[{
   RowBox[{"24", "*", "w"}], "=", 
   RowBox[{
    RowBox[{"24", "*", "x"}], "+", 
    RowBox[{
     SubscriptBox["p", "y"], "y"}]}]}], TraditionalForm]}]]], "Item",
 CellChangeTimes->{{3.5121360229224653`*^9, 3.512136036868767*^9}, {
  3.512136081803876*^9, 3.5121361045193863`*^9}}],

Cell["\<\
This says that total income (in this case it is time multiplied by what wage \
you could be making in a day) is equal to the amount of time spent on leisure \
and the amount of time spent on other goods. \
\>", "Item",
 CellChangeTimes->{{3.512136104817121*^9, 3.5121361478643103`*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Linear vs. Non-linear pricing", "Subsubsection",
 CellChangeTimes->{{3.512136151088421*^9, 3.512136158528079*^9}}],

Cell[CellGroupData[{

Cell["Linear Pricing", "Item",
 CellChangeTimes->{{3.512136162104025*^9, 3.512136165603993*^9}}],

Cell[CellGroupData[{

Cell[TextData[{
 "Average price = ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox[
     SubscriptBox["p", 
      RowBox[{"x", " ", 
       RowBox[{"(", "x", ")"}]}]], "x"], "=", 
    SubscriptBox["p", "x"]}], TraditionalForm]]]
}], "Subitem",
 CellChangeTimes->{{3.5121361693602333`*^9, 3.51213619556559*^9}}],

Cell[TextData[{
 "Marginal Price = ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"\[PartialD]", 
        SubscriptBox["p", "x"]}], "x"}], ")"}], 
     RowBox[{"\[PartialD]", "x"}]], "=", 
    SubscriptBox["p", "x"]}], TraditionalForm]]]
}], "Subitem",
 CellChangeTimes->{{3.512136196007148*^9, 3.5121362287205973`*^9}}]
}, Open  ]],

Cell["Non-Linear Pricing", "Item",
 CellChangeTimes->{{3.512136233047468*^9, 3.512136239966037*^9}}],

Cell[CellGroupData[{

Cell[TextData[{
 "Average Price = ",
 Cell[BoxData[
  FormBox[
   FractionBox[
    RowBox[{"(", 
     RowBox[{
      SubscriptBox["p", "x"], "x"}], ")"}], "x"], TraditionalForm]]]
}], "Subitem",
 CellChangeTimes->{{3.512136243030175*^9, 3.5121362689316998`*^9}}],

Cell[TextData[{
 "Marginal Price = ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox[
     RowBox[{"\[PartialD]", 
      RowBox[{"(", 
       RowBox[{
        SubscriptBox["p", "x"], "x"}], ")"}]}], 
     RowBox[{"\[PartialD]", "x"}]], "*", 
    FractionBox["1", 
     SubscriptBox["p", "x"]]}], TraditionalForm]]]
}], "Subitem",
 CellChangeTimes->{{3.5121362695497437`*^9, 3.5121363193113823`*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Income-Substitution Effects - Chapters 5,6\
\>", "Section",
 CellChangeTimes->{{3.511997452687031*^9, 3.511997456466406*^9}, 
   3.511997634174725*^9, 3.5121382124681797`*^9, {3.512142981094244*^9, 
   3.5121429860066233`*^9}}],

Cell[CellGroupData[{

Cell["\<\
Demand Functions and their Properties\
\>", "Subsection",
 CellChangeTimes->{{3.5121388377695436`*^9, 3.512138842953958*^9}}],

Cell[CellGroupData[{

Cell[TextData[{
 "Marshillian Demand functions are what we have labeled ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox[
     SubscriptBox["x", "1"], "*"], ",", 
    SuperscriptBox[
     SubscriptBox["x", "2"], "*"], ",", " ", 
    RowBox[{"...", " ", 
     RowBox[{
      SuperscriptBox[
       SubscriptBox["x", "n"], "*"], "."}]}]}], TraditionalForm]],
  FormatType->"TraditionalForm"]
}], "Item",
 CellChangeTimes->{{3.512138847648799*^9, 3.5121388923747683`*^9}, {
  3.512139325031858*^9, 3.512139326423758*^9}}],

Cell["\<\
They are always functions of the price of all goods being considered and \
Income. \
\>", "Item",
 CellChangeTimes->{{3.512138892703782*^9, 3.5121389107005*^9}, {
  3.512139530626844*^9, 3.51213953063046*^9}}],

Cell["\<\
When deriving a demand curve we always hold income, prices of other goods, \
and preferences constant. \
\>", "Item",
 CellChangeTimes->{{3.512139530946768*^9, 3.5121395496345997`*^9}}],

Cell["\<\
Homogeneity: To be a true demand function is must be homogeneous to degree \
zero in all prices and income. This means that if we were to scale all prices \
and income, nothing would change in our consumption patterns. (It is easy to \
tell if you have a demand function that is just a product of other things - \
the sum of the exponents must be equal to 0)\
\>", "Item",
 CellChangeTimes->{{3.5121389116797323`*^9, 3.512138999813786*^9}, {
  3.5121395278513002`*^9, 3.5121395281872396`*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Compensated (Hicksian) Demand ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["x", "c"], TraditionalForm]],
  FormatType->"TraditionalForm"]
}], "Subsection",
 CellChangeTimes->{{3.512139300519369*^9, 3.51213931911491*^9}}],

Cell[CellGroupData[{

Cell["\<\
The main theory behind a Hicksian demand curve is that when the price of one \
good changes we will compensate that individual enough to remain on the \
original indifference curve. That means that if the price of x rises (budget \
constraint comes in along x-axis) we will take the slope of the second budget \
constraint and make it just tangent to the original indifference curve.\
\>", "Item",
 CellChangeTimes->{{3.5121393295110493`*^9, 3.5121394198339043`*^9}, {
  3.5121461683534937`*^9, 3.512146174201388*^9}}],

Cell["\<\
The theoretical value of talking about a Hicksian demand curve is that we can \
eliminate the income effect and analyze the effect of substitution in \
response to the price change. \
\>", "Item",
 CellChangeTimes->{{3.512139420052949*^9, 3.512139450180563*^9}, {
   3.512139485405937*^9, 3.512139492077703*^9}, 3.512146175776636*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["The Slutsky equation", "Subsection",
 CellChangeTimes->{{3.512139590730466*^9, 3.5121396001213427`*^9}}],

Cell[CellGroupData[{

Cell["\<\
The main theory is that the Total effect =Substitution effect - Income Effect \
 (the (-) is for normal goods and just reminds us that for a normal good \
those two effects are in opposition to each other)\
\>", "Item",
 CellChangeTimes->{{3.512139797813346*^9, 3.512139847804812*^9}, 
   3.512146179969018*^9}],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   FractionBox[
    RowBox[{"\[PartialD]", 
     SuperscriptBox["x", "*"]}], 
    SubscriptBox["p", "x"]], "=", 
   RowBox[{
    FractionBox[
     RowBox[{"\[PartialD]", 
      SuperscriptBox["x", "c"]}], 
     SubscriptBox["p", "x"]], "-", 
    RowBox[{
     FractionBox[
      RowBox[{"\[PartialD]", 
       SuperscriptBox["x", "*"]}], 
      RowBox[{"\[PartialD]", "I"}]], 
     SuperscriptBox["x", "*"]}]}]}], TraditionalForm]],
 FormatType->"TraditionalForm"]], "Item",
 CellChangeTimes->{{3.512139612025401*^9, 3.51213962799465*^9}, {
  3.51213969126068*^9, 3.5121397272780533`*^9}}],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   SubscriptBox["e", 
    RowBox[{
     SuperscriptBox["x", "*"], ",", 
     SubscriptBox["p", "x"]}]], "=", 
   RowBox[{
    SubscriptBox["e", 
     RowBox[{
      SuperscriptBox["x", "c"], ",", 
      SubscriptBox["p", "x"]}]], "-", 
    RowBox[{
     SubscriptBox["e", 
      RowBox[{
       SuperscriptBox["x", "*"], ",", "I"}]], 
     SubscriptBox["s", "x"]}]}]}], TraditionalForm]],
 FormatType->"TraditionalForm"]], "Item",
 CellChangeTimes->{{3.51213972913509*^9, 3.5121397897927713`*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Elasticities", "Subsection",
 CellChangeTimes->{{3.512139871796513*^9, 3.512139873740003*^9}}],

Cell[CellGroupData[{

Cell[TextData[{
 "Own Price (Marshillian) ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["e", 
    RowBox[{
     SuperscriptBox["x", "*"], ",", 
     SubscriptBox["p", "x"]}]], TraditionalForm]],
  FormatType->"TraditionalForm"]
}], "Subsubsection",
 CellChangeTimes->{{3.512139879203919*^9, 3.512139887099613*^9}, {
  3.512139999625506*^9, 3.5121400082316236`*^9}}],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   SubscriptBox["e", 
    RowBox[{
     SuperscriptBox["x", "*"], ",", 
     SubscriptBox["p", "x"]}]], "=", 
   RowBox[{
    RowBox[{
     FractionBox[
      RowBox[{"\[PartialD]", 
       SuperscriptBox["x", "*"]}], 
      RowBox[{"\[PartialD]", 
       SubscriptBox["p", "x"]}]], "\[Cross]", 
     FractionBox[
      SubscriptBox["p", "x"], 
      SuperscriptBox["x", "*"]]}], "=", 
    FractionBox[
     RowBox[{"\[PartialD]", 
      RowBox[{"ln", "(", 
       SuperscriptBox["x", "*"], ")"}]}], 
     RowBox[{"\[PartialD]", 
      RowBox[{"ln", "(", 
       SubscriptBox["p", "x"], ")"}]}]]}]}], TraditionalForm]]]], "Item",
 CellChangeTimes->{{3.5121400140573378`*^9, 3.512140065639902*^9}, {
  3.512140443577235*^9, 3.512140507091667*^9}}],

Cell[TextData[{
 Cell[BoxData[
  FormBox[GridBox[{
     {"\[Placeholder]", 
      SubscriptBox["e", 
       RowBox[{
        SuperscriptBox["x", "*"], ",", 
        SubscriptBox["p", "x"]}]]},
     {"Inelastic", 
      RowBox[{
       RowBox[{"|", 
        SubscriptBox["e", 
         RowBox[{
          SuperscriptBox["x", "*"], ",", 
          SubscriptBox["p", "x"]}]], "|"}], " ", ":", " ", 
       RowBox[{"[", 
        RowBox[{"0", ",", "1"}], "]"}]}]},
     {"Elastic", 
      RowBox[{"|", 
       SubscriptBox["e", 
        RowBox[{
         SuperscriptBox["x", "*"], ",", 
         SubscriptBox["p", "x"]}]], "|", " ", 
       RowBox[{">", " ", "1"}]}]},
     {
      RowBox[{"Unit", " ", "Elastic"}], 
      RowBox[{
       RowBox[{"|", 
        SubscriptBox["e", 
         RowBox[{
          SuperscriptBox["x", "*"], ",", 
          SubscriptBox["p", "x"]}]], "|"}], " ", "=", "1"}]},
     {
      SuperscriptBox["Giffen", "*"], 
      RowBox[{
       SubscriptBox["e", 
        RowBox[{
         SuperscriptBox["x", "*"], ",", 
         SubscriptBox["p", "x"]}]], " ", ">", "0"}]}
    }], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "    , *: For a Giffen good the own price must be >0 in real terms (not abs) \
and it must be inferior. "
}], "Item",
 CellChangeTimes->{{3.512140068745364*^9, 3.512140168798051*^9}, {
  3.512140227896056*^9, 3.5121402607475357`*^9}}],

Cell["\<\
If a good is inelastic, a price increase will result in an increase in \
expenditures on that good.\
\>", "Item",
 CellChangeTimes->{{3.512140261132263*^9, 3.5121402826887903`*^9}, 
   3.5121461827362213`*^9}],

Cell["\<\
If a good is elastic, a price increase will result in a decrease in \
expenditures on that good.\
\>", "Item",
 CellChangeTimes->{{3.5121402829717083`*^9, 3.512140296289051*^9}}],

Cell["\<\
If a good is unit elastic, a price increase will not change total expenditure \
on that good.\
\>", "Item",
 CellChangeTimes->{{3.512140296595449*^9, 3.512140314224551*^9}}],

Cell["\<\
If a good is a Giffen good, a price increase will actually cause the \
individual to consume more of it. \
\>", "Item",
 CellChangeTimes->{{3.512140314579009*^9, 3.512140336690508*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Cross price (",
 Cell[BoxData[
  FormBox[
   SubscriptBox["e", 
    RowBox[{
     SuperscriptBox["x", "*"], ",", 
     SubscriptBox["p", "y"]}]], TraditionalForm]]],
 ")"
}], "Subsubsection",
 CellChangeTimes->{{3.5121401715505037`*^9, 3.512140186454077*^9}}],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   SubscriptBox["e", 
    RowBox[{
     SuperscriptBox["x", "*"], ",", 
     SubscriptBox["p", "y"]}]], "=", 
   RowBox[{
    RowBox[{
     FractionBox[
      RowBox[{"\[PartialD]", 
       SuperscriptBox["x", "*"]}], 
      RowBox[{"\[PartialD]", 
       SubscriptBox["p", "y"]}]], "\[Cross]", 
     FractionBox[
      SubscriptBox["p", "y"], 
      SuperscriptBox["x", "*"]]}], "=", 
    FractionBox[
     RowBox[{"\[PartialD]", 
      RowBox[{"ln", "(", 
       SuperscriptBox["x", "*"], ")"}]}], 
     RowBox[{"\[PartialD]", 
      RowBox[{"ln", "(", 
       SubscriptBox["p", "y"], ")"}]}]]}]}], TraditionalForm]]]], "Item",
 CellChangeTimes->{{3.512140196809455*^9, 3.512140213694161*^9}, {
  3.512140467945195*^9, 3.512140469838521*^9}, {3.5121405122903757`*^9, 
  3.5121405237725887`*^9}}],

Cell[TextData[Cell[BoxData[
 FormBox[GridBox[{
    {"\[Placeholder]", 
     FormBox[
      SubscriptBox["e", 
       RowBox[{
        SuperscriptBox["x", "*"], ",", 
        SubscriptBox["p", "y"]}]],
      TraditionalForm]},
    {"Substitutes", 
     RowBox[{
      SubscriptBox["e", 
       RowBox[{
        SuperscriptBox["x", "*"], ",", 
        SubscriptBox["p", "y"]}]], ">", "0"}]},
    {"Complements", 
     RowBox[{
      SubscriptBox["e", 
       RowBox[{
        SuperscriptBox["x", "*"], ",", 
        SubscriptBox["p", "y"]}]], "<", "0"}]}
   }], TraditionalForm]],
 FormatType->"TraditionalForm"]], "Item",
 CellChangeTimes->{{3.512140215207448*^9, 3.5121402405229263`*^9}, {
  3.5121403401336308`*^9, 3.512140375656343*^9}}],

Cell["\<\
If two goods are complements then an increase in the price of one good will \
cause a decrease in the consumption of the other one.\
\>", "Item",
 CellChangeTimes->{{3.512140376249791*^9, 3.51214039690355*^9}}],

Cell["\<\
If two goods are substitutes then an increase in the price of one good will \
cause an increase in the consumption of the other good. \
\>", "Item",
 CellChangeTimes->{{3.512140397193658*^9, 3.5121404218494473`*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Income Elasticity ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["e", 
    RowBox[{
     SuperscriptBox["x", "*"], ",", "I"}]], TraditionalForm]]]
}], "Subsubsection",
 CellChangeTimes->{{3.5121404262169*^9, 3.5121404322644043`*^9}}],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   SubscriptBox["e", 
    RowBox[{
     SuperscriptBox["x", "*"], ",", "i"}]], "=", 
   RowBox[{
    RowBox[{
     FractionBox[
      RowBox[{"\[PartialD]", 
       SuperscriptBox["x", "*"]}], 
      RowBox[{"\[PartialD]", "I"}]], "\[Cross]", 
     FractionBox["I", 
      SuperscriptBox["x", "*"]]}], "=", 
    FractionBox[
     RowBox[{"\[PartialD]", 
      RowBox[{"ln", "(", 
       SuperscriptBox["x", "*"], ")"}]}], 
     RowBox[{"\[PartialD]", 
      RowBox[{"ln", "(", "I", ")"}]}]]}]}], TraditionalForm]]]], "Item",
 CellChangeTimes->{{3.51214043660706*^9, 3.512140439035137*^9}, {
  3.51214053312875*^9, 3.512140546340392*^9}}],

Cell[TextData[Cell[BoxData[
 FormBox[GridBox[{
    {"\[Placeholder]", 
     SubscriptBox["e", 
      RowBox[{
       SuperscriptBox["x", "*"], ",", "I"}]]},
    {"Inferior", 
     RowBox[{
      SubscriptBox["e", 
       RowBox[{
        SuperscriptBox["x", "*"], ",", "I"}]], "<", "0"}]},
    {"Normal", 
     RowBox[{
      SubscriptBox["e", 
       RowBox[{
        SuperscriptBox["x", "*"], ",", "I"}]], ">", "0"}]},
    {"Necessity", 
     RowBox[{
      SubscriptBox["e", 
       RowBox[{
        SuperscriptBox["x", "*"], ",", "I"}]], " ", "[", 
      RowBox[{"0", ",", "1"}], "]"}]},
    {"Luxury", 
     RowBox[{
      SubscriptBox["e", 
       RowBox[{
        SuperscriptBox["x", "*"], ",", "I"}]], ">", "1"}]}
   }], TraditionalForm]],
 FormatType->"TraditionalForm"]], "Item",
 CellChangeTimes->{{3.512140561237816*^9, 3.512140623690548*^9}, {
  3.512140656492495*^9, 3.5121406564985943`*^9}}],

Cell["\<\
If a good is normal, then an increase in Income will result in an increase in \
consumption of x.\
\>", "Item",
 CellChangeTimes->{{3.512140657124352*^9, 3.5121406745926943`*^9}}],

Cell["\<\
If a good is inferior, an increase in income will result in a decrease in \
consumption of x. \
\>", "Item",
 CellChangeTimes->{{3.512140675206822*^9, 3.512140699051416*^9}, 
   3.512146189999734*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Engel Aggregation", "Subsubsection",
 CellChangeTimes->{{3.512140734058717*^9, 3.512140737077256*^9}}],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    RowBox[{
     SubscriptBox["s", "x"], 
     SubscriptBox["e", 
      RowBox[{
       SuperscriptBox["x", "*"], ",", "I"}]]}], "+", 
    RowBox[{
     SubscriptBox["s", "y"], 
     SubscriptBox["e", 
      RowBox[{
       SuperscriptBox["y", "*"], ",", "I"}]]}]}], "=", "1"}], 
  TraditionalForm]],
 FormatType->"TraditionalForm"]], "Item",
 CellChangeTimes->{{3.512140743026767*^9, 3.512140787232026*^9}}],

Cell["\<\
This just means that a persons income elasticity of demand for all goods \
multiplied by their budget shares must add up to one. \
\>", "Item",
 CellChangeTimes->{{3.512140787497506*^9, 3.512140818345237*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Carnot Aggregation", "Subsubsection",
 CellChangeTimes->{{3.512140823161315*^9, 3.512140828856596*^9}}],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    RowBox[{
     SubscriptBox["s", "x"], 
     SubscriptBox["e", 
      RowBox[{
       SuperscriptBox["x", "*"], ",", 
       SubscriptBox["p", "x"]}]]}], "+", 
    RowBox[{
     SubscriptBox["s", "y"], 
     SubscriptBox["e", 
      RowBox[{
       SuperscriptBox["y", "*"], ",", 
       SubscriptBox["p", "x"]}]]}]}], "=", 
   RowBox[{"-", 
    SubscriptBox["s", "x"]}]}], TraditionalForm]],
 FormatType->"TraditionalForm"]], "Item",
 CellChangeTimes->{{3.512140866552002*^9, 3.512140900334138*^9}}],

Cell["\<\
This just says that the own price elasticity of x and the cross price \
elasticities of all other goods (y) each multiplied by their budget shares is \
equal to (-) the budget share of x. \
\>", "Item",
 CellChangeTimes->{{3.512140900739128*^9, 3.512140950518405*^9}, 
   3.51214619260065*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Consumer Surpluses", "Subsection",
 CellChangeTimes->{{3.512141060446348*^9, 3.512141064379489*^9}}],

Cell[CellGroupData[{

Cell["Consumer Surplus (CS)", "Subsubsection",
 CellChangeTimes->{{3.512141067347742*^9, 3.512141075955659*^9}}],

Cell[CellGroupData[{

Cell[TextData[{
 "\[CapitalDelta]CS=",
 Cell[BoxData[
  RowBox[{
   SubsuperscriptBox["\[Integral]", 
    SubscriptBox["p", "x1"], 
    SubscriptBox["p", "x2"]], 
   RowBox[{
    SuperscriptBox["x", "*"], 
    RowBox[{"\[DifferentialD]", 
     SubscriptBox["p", "x"]}]}]}]]]
}], "Item",
 CellChangeTimes->{{3.5121411110923*^9, 3.512141153824676*^9}}],

Cell["\<\
This measures the area under the Marshillian demand curve, above the price of \
the good. It represents the additional willingness to pay total consumers had \
above the price of the good.\
\>", "Item",
 CellChangeTimes->{{3.512141154242206*^9, 3.512141229709363*^9}}],

Cell["\<\
It is the sum of all the extra amount individuals were willing to pay for the \
good above the price they actually had to pay for it. \
\>", "Item",
 CellChangeTimes->{{3.512141230216717*^9, 3.5121412533917713`*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Compensating Variation (CV)", "Subsubsection",
 CellChangeTimes->{{3.512141255287952*^9, 3.5121412617680817`*^9}}],

Cell[CellGroupData[{

Cell[TextData[{
 "\[CapitalDelta]CV=",
 Cell[BoxData[
  RowBox[{"-", " ", 
   RowBox[{
    SubsuperscriptBox["\[Integral]", 
     SubscriptBox["p", "x1"], 
     SubscriptBox["p", "x2"]], 
    RowBox[{
     SuperscriptBox["x", "c"], 
     RowBox[{"\[DifferentialD]", 
      SubscriptBox["p", "x"]}]}]}]}]]]
}], "Item",
 CellChangeTimes->{{3.5121412965910187`*^9, 3.5121413621342707`*^9}, {
  3.512141416711426*^9, 3.5121414576283903`*^9}, {3.5121415378180037`*^9, 
  3.51214154286224*^9}}],

Cell[CellGroupData[{

Cell["\<\
This measures the area under the Hicksian demand curve, above the price of \
the good.\
\>", "Subitem",
 CellChangeTimes->{{3.5121412965910187`*^9, 3.5121413621342707`*^9}, {
  3.512141416711426*^9, 3.5121414576283903`*^9}, {3.5121415378180037`*^9, 
  3.512141542858048*^9}}],

Cell["\<\
 It represents the amount to consumers are willing to pay to have a price \
reduction, or the amount they must be paid (compensated) in order to be \
indifferent to the rise in price. \
\>", "Subitem",
 CellChangeTimes->{{3.5121412965910187`*^9, 3.5121413621342707`*^9}, {
   3.512141416711426*^9, 3.5121414576283903`*^9}, 3.5121415378180037`*^9}]
}, Open  ]],

Cell[TextData[{
 "\[CapitalDelta]CV is found ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"V", "(", 
     RowBox[{
      SubscriptBox["p", "x2"], ",", 
      RowBox[{"I", "-", "CV"}]}], ")"}], " ", "=", " ", 
    RowBox[{
     RowBox[{"V", "(", 
      RowBox[{
       SubscriptBox["p", "x1"], ",", "I"}], ")"}], "=", 
     SubscriptBox["U", "1"]}]}], TraditionalForm]],
  FormatType->"TraditionalForm"]
}], "Item",
 CellChangeTimes->{{3.5121413627097063`*^9, 3.512141411524826*^9}, {
  3.512141460925002*^9, 3.5121415504781923`*^9}, {3.51214165810454*^9, 
  3.512141661007949*^9}}],

Cell[CellGroupData[{

Cell["\<\
This one is a little more vague, but it really just means that the \
willingness to pay for a price reduction, or the minimum amount to be paid \
for a price increase is calculated by saying that V before and after the \
change is equal to the original utility level. \
\>", "Subitem",
 CellChangeTimes->{{3.5121413627097063`*^9, 3.512141411524826*^9}, {
  3.512141460925002*^9, 3.512141550474003*^9}, {3.5121461934165154`*^9, 
  3.5121461941045103`*^9}}],

Cell["\<\
Calculating it is actually quite easy. You simply find the original utility \
level using V for all initial conditions. Then you set that equal to V where \
you have the new price of good 1 in place of the old one and (I-CV) in place \
of I wherever it would normally appear in V.\
\>", "Subitem",
 CellChangeTimes->{{3.5121413627097063`*^9, 3.512141411524826*^9}, {
   3.512141460925002*^9, 3.512141604281391*^9}, 3.512146194776416*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Equivalent Variation (EV)", "Subsubsection",
 CellChangeTimes->{{3.5121416106730328`*^9, 3.512141621288761*^9}}],

Cell[CellGroupData[{

Cell[TextData[{
 "\[CapitalDelta]EV is calculated ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"V", "(", 
     RowBox[{
      SubscriptBox["p", "x2"], ",", 
      SubscriptBox["p", "y"], ",", "I"}], ")"}], "=", 
    RowBox[{
     RowBox[{"V", "(", 
      RowBox[{
       SubscriptBox["p", "x1"], ",", 
       SubscriptBox["p", "y"], ",", 
       RowBox[{"I", "+", "EV"}]}], ")"}], "=", 
     SubscriptBox["U", "2"]}]}], TraditionalForm]],
  FormatType->"TraditionalForm"]
}], "Item",
 CellChangeTimes->{{3.512141641160573*^9, 3.512141698294098*^9}}],

Cell["\<\
This one is a bit more difficult for me to understand, but calculating it is \
very simple. You simply need to find the second Utility level using all \
values at the end and set that equal to V using the first prices and make the \
substitution I-(I+EV)\
\>", "Subitem",
 CellChangeTimes->{{3.512141698831099*^9, 3.512141761030052*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Great interactive model to see Income and Substitution effects. \
\>", "Subsection",
 CellChangeTimes->{{3.512139272497916*^9, 3.5121392882618837`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "rho", ",", "utility", ",", "initsolution", ",", "ustar", ",", "xstar", 
       ",", "ystar", ",", "initind", ",", "uncomputil", ",", "marshall", ",", 
       "hicks", ",", "xinit", ",", "marshallian", ",", "hmin", ",", "mmin", 
       ",", "hicksian", ",", "hplot", ",", "mplot", ",", "sol", ",", "u", ",",
        "ind", ",", "indstar", ",", "sub", ",", "pseudo", ",", "mainplot"}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
      "Convert", " ", "the", " ", "elasticity", " ", "parameter", " ", "to", 
       " ", 
       RowBox[{"rho", ".", "  ", "This"}], " ", "is", " ", "for", " ", 
       "notational", " ", 
       RowBox[{"simplicity", "."}]}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"rho", "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"sigma", "-", "1"}], ")"}], "/", "sigma"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"First", ",", " ", 
        RowBox[{"an", " ", "error", " ", 
         RowBox[{"trap", ".", " ", "This"}], " ", "sets", " ", "any", " ", 
         "rho", " ", "close", " ", "to", " ", "zero", " ", "to", " ", "be", 
         " ", "equal", " ", "to", " ", 
         RowBox[{"zero", "."}]}]}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"rho", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"rho", ">", 
            RowBox[{"-", ".2"}]}], ")"}], "&&", 
          RowBox[{"(", 
           RowBox[{"rho", "<", ".2"}], ")"}]}], ",", "0", ",", "rho"}], 
        "]"}]}], ";", 
      RowBox[{"cobbdouglas", "=", 
       RowBox[{"(", 
        RowBox[{"rho", "\[Equal]", "0"}], ")"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
          "Utility", " ", "function", " ", "has", " ", "a", " ", "special", 
           " ", "case", " ", "when", " ", "rho", " ", "equals", " ", "zero"}],
           "..."}], " ", "Cobb"}], "-", 
        RowBox[{"Douglas", " ", 
         RowBox[{"utility", "."}]}]}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"utility", "=", 
       RowBox[{"If", "[", 
        RowBox[{"cobbdouglas", ",", 
         RowBox[{"x", " ", "y"}], ",", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"x", "^", "rho"}], "+", 
            RowBox[{"y", "^", "rho"}]}], ")"}], "^", 
          RowBox[{"(", 
           RowBox[{"1", "/", "rho"}], ")"}]}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"original", " ", "optimum"}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"initsolution", "=", 
       RowBox[{"FindMaximum", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"utility", ",", 
           RowBox[{
            RowBox[{"x", "+", "y"}], "\[Equal]", "20"}], ",", 
           RowBox[{"x", "\[GreaterEqual]", "0"}], ",", 
           RowBox[{"y", "\[GreaterEqual]", "0"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", "10"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"y", ",", "10"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"ustar", ",", "xstar", ",", "ystar"}], "}"}], "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"initsolution", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{"x", "/.", 
          RowBox[{"initsolution", "[", 
           RowBox[{"[", 
            RowBox[{"2", ",", "1"}], "]"}], "]"}]}], ",", 
         RowBox[{"y", "/.", 
          RowBox[{"initsolution", "[", 
           RowBox[{"[", 
            RowBox[{"2", ",", "2"}], "]"}], "]"}]}]}], "}"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"initind", "=", 
       RowBox[{"If", "[", 
        RowBox[{"cobbdouglas", ",", 
         RowBox[{"ustar", "/", "x"}], ",", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"rho", "<", "0"}], ",", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"ustar", "^", "rho"}], ">", 
              RowBox[{"x", "^", "rho"}]}], ",", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"ustar", "^", "rho"}], "-", 
                RowBox[{"x", "^", "rho"}]}], ")"}], "^", 
              RowBox[{"(", 
               RowBox[{"1", "/", "rho"}], ")"}]}], ",", "21"}], "]"}], ",", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"D", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"ustar", "^", "rho"}], "-", 
                   RowBox[{"x", "^", "rho"}]}], ")"}], "^", 
                 RowBox[{"(", 
                  RowBox[{"1", "/", "rho"}], ")"}]}], ",", "x"}], "]"}], "<", 
              "0"}], ",", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"ustar", "^", "rho"}], "-", 
                RowBox[{"x", "^", "rho"}]}], ")"}], "^", 
              RowBox[{"(", 
               RowBox[{"1", "/", "rho"}], ")"}]}], ",", "0"}], "]"}]}], 
          "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{
        "The", " ", "next", " ", "section", " ", "computes", " ", "the", " ", 
         "compensated", " ", 
         RowBox[{"(", "Hicksian", ")"}], " ", "and", " ", "uncompensated", 
         " ", 
         RowBox[{"(", "Marshallian", ")"}], " ", "demand", " ", 
         RowBox[{"functions", ".", " ", "The"}], " ", "method", " ", "of", 
         " ", "construction", " ", "is", " ", "deliberately", " ", "chosen", 
         " ", "for", " ", "speed", " ", "of", " ", "operation", " ", "in", 
         " ", "the", " ", 
         RowBox[{"demonstration", ".", " ", "This"}], " ", "must", " ", "be", 
         " ", "recalculated", " ", "whenever", " ", "rho", " ", "is", " ", 
         RowBox[{"modified", " ", ".", " ", "The"}], " ", "Marshallian", " ", 
         "demand", " ", "curve", " ", "is", " ", "constructed", " ", "by", 
         " ", "starting", " ", "at", " ", "the", " ", "original", " ", 
         "price", " ", "of", " ", "1", " ", "and", " ", "original", " ", 
         "quantity", " ", "of", " ", "10", " ", "and", " ", "solving", " ", 
         "a", " ", "sequence", " ", "of", " ", "nonlinear", " ", "equations", 
         " ", "corresponding", " ", "to", " ", "different", " ", "prices", 
         " ", "moving", " ", "away", " ", "from", " ", "1", " ", "in", " ", 
         "either", " ", 
         RowBox[{"direction", ".", " ", "The"}], " ", "initial", " ", "guess",
          " ", "for", " ", "each", " ", "successive", " ", "FindMinimum", " ",
          "is", " ", "the", " ", "solution", " ", "to", " ", "the", " ", 
         "previous", " ", 
         RowBox[{"one", ".", " ", "This"}], " ", "is", " ", "considerably", 
         " ", "faster", " ", "than", " ", "constructing", " ", "each", " ", 
         "point", " ", "from", " ", "the", " ", "same", " ", "initial", " ", 
         RowBox[{"guess", ".", " ", "Also"}]}], ",", " ", 
        RowBox[{
        "there", " ", "are", " ", "some", " ", "error", " ", "traps", " ", 
         "in", " ", "this", " ", 
         RowBox[{"code", ".", " ", "It"}], " ", "checks", " ", "to", " ", 
         "make", " ", "sure", " ", "that", " ", "the", " ", "function", " ", 
         "is", " ", "does", " ", "not", " ", "have", " ", "any", " ", "spots",
          " ", "that", " ", "are", " ", "vertical", " ", "as", " ", "this", 
         " ", "is", " ", "a", " ", "problem", " ", "for", " ", 
         RowBox[{"Interpolation", "."}]}]}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"uncomputil", "=", 
       RowBox[{"If", "[", 
        RowBox[{"cobbdouglas", ",", 
         RowBox[{"x1", " ", 
          RowBox[{"(", 
           RowBox[{"20", "-", 
            RowBox[{"price", " ", "x1"}]}], ")"}]}], ",", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"x1", "^", "rho"}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"20", "-", 
               RowBox[{"price", " ", "x1"}]}], ")"}], "^", "rho"}]}], ")"}], 
          "^", 
          RowBox[{"(", 
           RowBox[{"1", "/", "rho"}], ")"}]}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"marshall", "=", 
       RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"hicks", "=", 
       RowBox[{"{", "}"}]}], ";", 
      RowBox[{"Do", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"marshall", "=", 
          RowBox[{"Append", "[", 
           RowBox[{"marshall", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"x1", "/.", 
               RowBox[{
                RowBox[{"FindMinimum", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Abs", "[", 
                    RowBox[{"D", "[", 
                    RowBox[{"uncomputil", ",", "x1"}], "]"}], "]"}], "+", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"x1", "<", ".001"}], ")"}], "||", 
                    RowBox[{"(", 
                    RowBox[{"x1", ">", "10000"}], ")"}]}], ",", "9999999", 
                    ",", "0"}], "]"}]}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"x1", ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"price", "\[Equal]", "1"}], ",", "10", ",", 
                    "xinit"}], "]"}]}], "}"}], ",", 
                  RowBox[{"AccuracyGoal", "\[Rule]", "3"}], ",", 
                  RowBox[{"Method", "\[Rule]", "\"\<PrincipalAxis\>\""}]}], 
                 "]"}], "[", 
                RowBox[{"[", "2", "]"}], "]"}]}], ",", "price"}], "}"}]}], 
           "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"Length", "[", 
            RowBox[{"marshall", ">", "1"}], "]"}], ",", 
           RowBox[{"marshall", "=", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"Last", "[", "marshall", "]"}], "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "\[Equal]", 
                RowBox[{
                 RowBox[{"Last", "[", 
                  RowBox[{"Most", "[", "marshall", "]"}], "]"}], "[", 
                 RowBox[{"[", "1", "]"}], "]"}]}], ")"}], ",", 
              RowBox[{"Most", "[", "marshall", "]"}], ",", "marshall"}], 
             "]"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"xinit", "=", 
          RowBox[{
           RowBox[{"Last", "[", "marshall", "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}]}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"price", ",", "1", ",", "3.1", ",", ".075"}], "}"}]}], "]"}],
       ";", "\[IndentingNewLine]", 
      RowBox[{"Do", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"marshall", "=", 
          RowBox[{"Prepend", "[", 
           RowBox[{"marshall", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"x1", "/.", 
               RowBox[{
                RowBox[{"FindMinimum", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Abs", "[", 
                    RowBox[{"D", "[", 
                    RowBox[{"uncomputil", ",", "x1"}], "]"}], "]"}], "+", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"x1", "<", ".001"}], ")"}], "||", 
                    RowBox[{"(", 
                    RowBox[{"x1", ">", "10000"}], ")"}]}], ",", "9999999", 
                    ",", "0"}], "]"}]}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"x1", ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"price", "\[Equal]", ".95"}], ",", "10", ",", 
                    "xinit"}], "]"}]}], "}"}], ",", 
                  RowBox[{"AccuracyGoal", "\[Rule]", "3"}], ",", 
                  RowBox[{"Method", "\[Rule]", "\"\<PrincipalAxis\>\""}]}], 
                 "]"}], "[", 
                RowBox[{"[", "2", "]"}], "]"}]}], ",", "price"}], "}"}]}], 
           "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"marshall", "=", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"First", "[", "marshall", "]"}], "[", 
               RowBox[{"[", "1", "]"}], "]"}], "\[Equal]", 
              RowBox[{
               RowBox[{"First", "[", 
                RowBox[{"Rest", "[", "marshall", "]"}], "]"}], "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], ")"}], ",", 
            RowBox[{"Rest", "[", "marshall", "]"}], ",", "marshall"}], 
           "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"xinit", "=", 
          RowBox[{
           RowBox[{"First", "[", "marshall", "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}]}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"price", ",", ".9", ",", ".1", ",", 
          RowBox[{"-", ".075"}]}], "}"}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"marshallian", "=", 
       RowBox[{"Interpolation", "[", "marshall", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{
        "The", " ", "Hicksian", " ", "demand", " ", "curve", " ", "is", " ", 
         "somewhat", " ", "more", " ", "straightforward", " ", "to", " ", 
         "compute"}], ",", " ", 
        RowBox[{
        "but", " ", "you", " ", "still", " ", "need", " ", "to", " ", "check",
          " ", "for", " ", "any", " ", "vertical", " ", 
         RowBox[{"spots", "."}]}]}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"Do", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"hicks", "=", 
         RowBox[{"Append", "[", 
          RowBox[{"hicks", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"If", "[", 
              RowBox[{"cobbdouglas", ",", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"ustar", "/", "price"}], ")"}], "^", 
                RowBox[{"(", 
                 RowBox[{"1", "/", "2"}], ")"}]}], ",", 
               RowBox[{"ustar", " ", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"price", "^", 
                    RowBox[{"(", 
                    RowBox[{"rho", "/", 
                    RowBox[{"(", 
                    RowBox[{"rho", "-", "1"}], ")"}]}], ")"}]}], "+", "1"}], 
                  ")"}], "^", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "1"}], "/", "rho"}], ")"}]}], " ", 
                RowBox[{"(", 
                 RowBox[{"price", "^", 
                  RowBox[{"(", 
                   RowBox[{"1", "/", 
                    RowBox[{"(", 
                    RowBox[{"rho", "-", "1"}], ")"}]}], ")"}]}], ")"}]}]}], 
              "]"}], ",", "price"}], "}"}]}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"price", ",", ".1", ",", "3.1", ",", ".1"}], "}"}]}], "]"}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"Length", "[", 
         RowBox[{"hicks", ">", "1"}], "]"}], ",", 
        RowBox[{"hicks", "=", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"Last", "[", "hicks", "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}], "\[Equal]", 
             RowBox[{
              RowBox[{"Last", "[", 
               RowBox[{"Most", "[", "hicks", "]"}], "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], ")"}], ",", 
           RowBox[{"Most", "[", "hicks", "]"}], ",", "hicks"}], "]"}]}]}], 
       "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"hmin", "=", 
       RowBox[{
        RowBox[{"Last", "[", "hicks", "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"mmin", "=", 
       RowBox[{
        RowBox[{"Last", "[", "marshall", "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"hicksian", "=", 
       RowBox[{"Interpolation", "[", "hicks", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
       "Create", " ", "the", " ", "plot", " ", "of", " ", "the", " ", 
        "demand", " ", "curves", " ", 
        RowBox[{"here", ".", " ", "They"}], " ", "are", " ", "not", " ", 
        "actually", " ", "drawn", " ", "until", " ", 
        RowBox[{"later", "."}]}], "*)"}], 
      RowBox[{"hplot", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"hmin", "<", "20"}], ",", 
         RowBox[{"Plot", "[", 
          RowBox[{
           RowBox[{"Tooltip", "[", 
            RowBox[{
             RowBox[{"hicksian", "[", "x2", "]"}], ",", 
             "\"\<Hicksian demand curve\>\""}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"x2", ",", "hmin", ",", "20"}], "}"}], ",", 
           RowBox[{"PlotRange", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{".1", ",", "5"}], "}"}]}], ",", 
           RowBox[{"PlotStyle", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"RGBColor", "[", 
              RowBox[{".6", ",", ".73", ",", ".36"}], "]"}], "}"}]}]}], "]"}],
          ",", "hplot"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"mplot", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"mmin", "<", "20"}], ",", 
         RowBox[{"Plot", "[", 
          RowBox[{
           RowBox[{"Tooltip", "[", 
            RowBox[{
             RowBox[{"marshallian", "[", "x2", "]"}], ",", 
             "\"\<Marshallian demand curve\>\""}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"x2", ",", "mmin", ",", "20"}], "}"}], ",", 
           RowBox[{"PlotRange", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{".1", ",", "5"}], "}"}]}], ",", 
           RowBox[{"PlotStyle", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"RGBColor", "[", 
              RowBox[{"1", ",", ".47", ",", "0"}], "]"}], "}"}]}]}], "]"}], 
         ",", "mplot"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
       "Compute", " ", "the", " ", "optimum", " ", "given", " ", "the", " ", 
        "new", " ", 
        RowBox[{"price", "."}]}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"sol", "=", 
       RowBox[{"FindMaximum", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"utility", ",", 
           RowBox[{
            RowBox[{
             RowBox[{"p", " ", "x"}], "+", "y"}], "\[Equal]", "20"}], ",", 
           RowBox[{"x", "\[GreaterEqual]", "0"}], ",", 
           RowBox[{"y", "\[GreaterEqual]", "0"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", "10"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"y", ",", "10"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"u", "=", 
       RowBox[{"sol", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"ind", "=", 
       RowBox[{"If", "[", 
        RowBox[{"cobbdouglas", ",", 
         RowBox[{"u", "/", "x"}], ",", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"rho", "<", "0"}], ",", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"u", "^", "rho"}], ">", 
              RowBox[{"x", "^", "rho"}]}], ",", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"u", "^", "rho"}], "-", 
                RowBox[{"x", "^", "rho"}]}], ")"}], "^", 
              RowBox[{"(", 
               RowBox[{"1", "/", "rho"}], ")"}]}], ",", "21"}], "]"}], ",", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"D", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"u", "^", "rho"}], "-", 
                   RowBox[{"x", "^", "rho"}]}], ")"}], "^", 
                 RowBox[{"(", 
                  RowBox[{"1", "/", "rho"}], ")"}]}], ",", "x"}], "]"}], "<", 
              "0"}], ",", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"u", "^", "rho"}], "-", 
                RowBox[{"x", "^", "rho"}]}], ")"}], "^", 
              RowBox[{"(", 
               RowBox[{"1", "/", "rho"}], ")"}]}], ",", "0"}], "]"}]}], 
          "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"indstar", "=", 
       RowBox[{"If", "[", 
        RowBox[{"cobbdouglas", ",", 
         RowBox[{"ustar", "/", "x"}], ",", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"ustar", "^", "rho"}], "-", 
            RowBox[{"x", "^", "rho"}]}], ")"}], "^", 
          RowBox[{"(", 
           RowBox[{"1", "/", "rho"}], ")"}]}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"substitution", " ", "effect"}], "*)"}], 
      RowBox[{"sub", "=", 
       RowBox[{
        RowBox[{"FindMinimum", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Abs", "[", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"D", "[", 
                RowBox[{"indstar", ",", "x"}], "]"}], "+", "p"}], ")"}], 
             "]"}], "^", "2"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"x", ",", "10"}], "}"}], ",", 
          RowBox[{"AccuracyGoal", "\[Rule]", "4"}], ",", 
          RowBox[{"Method", "\[Rule]", "\"\<PrincipalAxis\>\""}], ",", 
          RowBox[{"WorkingPrecision", "\[Rule]", "MachinePrecision"}]}], 
         "]"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"pseudo", "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"initind", "/.", 
          RowBox[{"(", "sub", ")"}]}], ")"}], "+", 
        RowBox[{"p", " ", 
         RowBox[{"(", 
          RowBox[{"x", "/.", "sub"}], ")"}]}], "-", 
        RowBox[{"p", " ", "x"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"Create", " ", "the", " ", "main", " ", "plot"}], "*)"}], 
      RowBox[{"mainplot", "=", 
       RowBox[{"Plot", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Tooltip", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"20", "-", 
               RowBox[{"p", " ", "x"}]}], ")"}], ",", 
             "\"\<new budget constraint\>\""}], "]"}], ",", 
           RowBox[{"Tooltip", "[", 
            RowBox[{"ind", ",", "\"\<new indifference curve\>\""}], "]"}], 
           ",", 
           RowBox[{"Tooltip", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"20", "-", "x"}], ")"}], ",", 
             "\"\<original budget constraint\>\""}], "]"}], ",", 
           RowBox[{"Tooltip", "[", 
            RowBox[{"initind", ",", "\"\<original indifference curve\>\""}], 
            "]"}], ",", 
           RowBox[{"Tooltip", "[", 
            RowBox[{
            "pseudo", ",", "\"\<'compensated' budget constraint\>\""}], 
            "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", "0", ",", "20"}], "}"}], ",", 
         RowBox[{"PlotStyle", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"Thick", ",", 
              RowBox[{"RGBColor", "[", 
               RowBox[{"1", ",", ".47", ",", "0"}], "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"Thick", ",", 
              RowBox[{"ColorData", "[", 
               RowBox[{"\"\<HTML\>\"", ",", "\"\<SlateBlue\>\""}], "]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"Thin", ",", 
              RowBox[{"RGBColor", "[", 
               RowBox[{".48", ",", ".11", ",", ".56"}], "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"Thin", ",", 
              RowBox[{"RGBColor", "[", 
               RowBox[{".33", ",", ".6", ",", ".7"}], "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"Thin", ",", 
              RowBox[{"RGBColor", "[", 
               RowBox[{".6", ",", ".73", ",", ".36"}], "]"}]}], "}"}]}], 
           "}"}]}], ",", 
         RowBox[{"PlotRange", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", "20"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "20"}], "}"}]}], "}"}]}], ",", 
         RowBox[{"AspectRatio", "\[Rule]", ".75"}], ",", 
         RowBox[{"ImageSize", "\[Rule]", "250"}], ",", 
         RowBox[{"Ticks", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", "5", ",", "10", ",", "15", ",", "20"}], "}"}], 
            ",", 
            RowBox[{"{", 
             RowBox[{"5", ",", "10", ",", "15", ",", "20"}], "}"}]}], "}"}]}],
          ",", 
         RowBox[{"AxesLabel", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Row", "[", 
             RowBox[{"{", 
              RowBox[{"\"\<quantity of \>\"", ",", " ", "x"}], "}"}], "]"}], 
            ",", 
            RowBox[{"Row", "[", 
             RowBox[{"{", 
              RowBox[{"\"\<quantity of \>\"", ",", "y"}], "}"}], "]"}]}], 
           "}"}]}], ",", 
         RowBox[{"PlotLabel", "\[Rule]", 
          RowBox[{"Style", "[", 
           RowBox[{
           "\"\<indifference curves and budget constraints\>\"", ",", "14"}], 
           "]"}]}], ",", 
         RowBox[{"Epilog", "\[Rule]", 
          RowBox[{"{", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"Tooltip", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"Thin", ",", "Dashed", ",", 
                RowBox[{"Line", "[", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"x", "/.", "sub"}], ")"}], ",", "0"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"x", "/.", "sub"}], ")"}], ",", 
                    RowBox[{"(", 
                    RowBox[{"initind", "/.", "sub"}], ")"}]}], "}"}]}], "}"}],
                  "]"}]}], "}"}], ",", "\"\<substitution effect on x\>\""}], 
             "]"}], ",", "\[IndentingNewLine]", 
            RowBox[{"Tooltip", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"Thin", ",", "Dashed", ",", 
                RowBox[{"Line", "[", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"x", "/.", 
                    RowBox[{"sol", "[", 
                    RowBox[{"[", 
                    RowBox[{"2", ",", "1"}], "]"}], "]"}]}], ",", "0"}], 
                    "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"x", "/.", 
                    RowBox[{"sol", "[", 
                    RowBox[{"[", 
                    RowBox[{"2", ",", "1"}], "]"}], "]"}]}], ",", 
                    RowBox[{"y", "/.", 
                    RowBox[{"sol", "[", 
                    RowBox[{"[", 
                    RowBox[{"2", ",", "2"}], "]"}], "]"}]}]}], "}"}]}], "}"}],
                  "]"}]}], "}"}], ",", 
              "\"\<income+substitution effect on x\>\""}], "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"Tooltip", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"Thin", ",", "Dashed", ",", 
                RowBox[{"Line", "[", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"0", ",", 
                    RowBox[{"y", "/.", 
                    RowBox[{"sol", "[", 
                    RowBox[{"[", 
                    RowBox[{"2", ",", "2"}], "]"}], "]"}]}]}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"x", "/.", 
                    RowBox[{"sol", "[", 
                    RowBox[{"[", 
                    RowBox[{"2", ",", "1"}], "]"}], "]"}]}], ",", 
                    RowBox[{"y", "/.", 
                    RowBox[{"sol", "[", 
                    RowBox[{"[", 
                    RowBox[{"2", ",", "2"}], "]"}], "]"}]}]}], "}"}]}], "}"}],
                  "]"}], ",", 
                RowBox[{"PointSize", "[", ".01", "]"}], ",", 
                RowBox[{"Point", "[", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"x", "/.", 
                    RowBox[{"sol", "[", 
                    RowBox[{"[", 
                    RowBox[{"2", ",", "1"}], "]"}], "]"}]}], ",", 
                   RowBox[{"y", "/.", 
                    RowBox[{"sol", "[", 
                    RowBox[{"[", 
                    RowBox[{"2", ",", "2"}], "]"}], "]"}]}]}], "}"}], "]"}]}],
                "}"}], ",", "\"\<income+substitution effect on y\>\""}], 
             "]"}], ",", "\[IndentingNewLine]", 
            RowBox[{"Tooltip", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"Thin", ",", "Dashed", ",", 
                RowBox[{"Line", "[", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"0", ",", 
                    RowBox[{"initind", "/.", "sub"}]}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"x", "/.", "sub"}], ",", 
                    RowBox[{"initind", "/.", "sub"}]}], "}"}]}], "}"}], "]"}],
                 ",", 
                RowBox[{"PointSize", "[", ".01", "]"}], ",", 
                RowBox[{"Point", "[", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"x", "/.", "sub"}], ",", 
                   RowBox[{"initind", "/.", "sub"}]}], "}"}], "]"}]}], "}"}], 
              ",", "\"\<substitution effect on y\>\""}], "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"Tooltip", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"PointSize", "[", ".01", "]"}], ",", 
                RowBox[{"Point", "[", 
                 RowBox[{"{", 
                  RowBox[{"xstar", ",", "ystar"}], "}"}], "]"}]}], "}"}], 
              ",", "\"\<original optimum\>\""}], "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"Text", "[", 
             RowBox[{
              RowBox[{"NumberForm", "[", 
               RowBox[{
                RowBox[{"x", "/.", 
                 RowBox[{"sol", "[", 
                  RowBox[{"[", 
                   RowBox[{"2", ",", "1"}], "]"}], "]"}]}], ",", 
                RowBox[{"{", 
                 RowBox[{"4", ",", "2"}], "}"}]}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"x", "/.", 
                 RowBox[{"sol", "[", 
                  RowBox[{"[", 
                   RowBox[{"2", ",", "1"}], "]"}], "]"}]}], ",", 
                RowBox[{"-", "5"}]}], "}"}]}], "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"Text", "[", 
             RowBox[{
              RowBox[{"NumberForm", "[", 
               RowBox[{
                RowBox[{"x", "/.", "sub"}], ",", 
                RowBox[{"{", 
                 RowBox[{"4", ",", "2"}], "}"}]}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"x", "/.", "sub"}], ",", 
                RowBox[{"-", "8"}]}], "}"}]}], "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"Text", "[", 
             RowBox[{
              RowBox[{"NumberForm", "[", 
               RowBox[{
                RowBox[{"y", "/.", 
                 RowBox[{"sol", "[", 
                  RowBox[{"[", 
                   RowBox[{"2", ",", "2"}], "]"}], "]"}]}], ",", 
                RowBox[{"{", 
                 RowBox[{"4", ",", "2"}], "}"}]}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", "5"}], ",", 
                RowBox[{"y", "/.", 
                 RowBox[{"sol", "[", 
                  RowBox[{"[", 
                   RowBox[{"2", ",", "2"}], "]"}], "]"}]}]}], "}"}]}], "]"}], 
            ",", "\[IndentingNewLine]", 
            RowBox[{"Text", "[", 
             RowBox[{
              RowBox[{"NumberForm", "[", 
               RowBox[{
                RowBox[{"initind", "/.", "sub"}], ",", 
                RowBox[{"{", 
                 RowBox[{"4", ",", "2"}], "}"}]}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", "9"}], ",", 
                RowBox[{"initind", "/.", "sub"}]}], "}"}]}], "]"}], ",", 
            RowBox[{"Style", "[", 
             RowBox[{
              RowBox[{"Text", "[", 
               RowBox[{"\"\<original budget constraint\>\"", ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"-", "8"}], ",", 
                  RowBox[{"-", "2"}]}], "}"}]}], "]"}], ",", 
              RowBox[{"RGBColor", "[", 
               RowBox[{".48", ",", ".11", ",", ".56"}], "]"}], ",", "10"}], 
             "]"}], ",", "\[IndentingNewLine]", 
            RowBox[{"Style", "[", 
             RowBox[{
              RowBox[{"Text", "[", 
               RowBox[{"\"\<original indifference curve\>\"", ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"-", "8"}], ",", 
                  RowBox[{"-", "4.5"}]}], "}"}]}], "]"}], ",", 
              RowBox[{"RGBColor", "[", 
               RowBox[{".33", ",", ".6", ",", ".7"}], "]"}], ",", "10"}], 
             "]"}], ",", 
            RowBox[{"Style", "[", 
             RowBox[{
              RowBox[{"Text", "[", 
               RowBox[{"\"\<new budget constraint\>\"", ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"-", "9"}], ",", 
                  RowBox[{"-", "7"}]}], "}"}]}], "]"}], ",", 
              RowBox[{"RGBColor", "[", 
               RowBox[{"1", ",", ".47", ",", "0"}], "]"}], ",", "10"}], "]"}],
             ",", "\[IndentingNewLine]", 
            RowBox[{"Style", "[", 
             RowBox[{
              RowBox[{"Text", "[", 
               RowBox[{"\"\<new indifference curve\>\"", ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"-", "9"}], ",", 
                  RowBox[{"-", "9.5"}]}], "}"}]}], "]"}], ",", 
              RowBox[{"ColorData", "[", 
               RowBox[{"\"\<HTML\>\"", ",", "\"\<SlateBlue\>\""}], "]"}], ",",
               "10"}], "]"}], ",", "\[IndentingNewLine]", 
            RowBox[{"Style", "[", 
             RowBox[{
              RowBox[{"Text", "[", 
               RowBox[{"\"\<compensated budget constraint\>\"", ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"-", "6.5"}], ",", 
                  RowBox[{"-", "12"}]}], "}"}]}], "]"}], ",", 
              RowBox[{"RGBColor", "[", 
               RowBox[{".6", ",", ".73", ",", ".36"}], "]"}], ",", "10"}], 
             "]"}]}], "\[IndentingNewLine]", "}"}]}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"Display", " ", "the", " ", "graphics"}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"GraphicsGrid", "[", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"Show", "[", 
           RowBox[{"mainplot", ",", 
            RowBox[{"PlotRange", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"-", "16"}], ",", "22"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"-", "14"}], ",", "21"}], "}"}]}], "}"}]}], ",", 
            RowBox[{"ImageSize", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"350", ",", "225"}], "}"}]}]}], "]"}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"Show", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"hplot", ",", "mplot"}], "}"}], ",", 
            RowBox[{"PlotRange", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"-", "13"}], ",", "20"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"-", "1"}], ",", "3.1"}], "}"}]}], "}"}]}], ",", 
            RowBox[{"ImageSize", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"350", ",", "195"}], "}"}]}], ",", 
            RowBox[{"AxesOrigin", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0"}], "}"}]}], ",", 
            RowBox[{"AxesLabel", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Row", "[", 
                RowBox[{"{", 
                 RowBox[{"\"\<quantity of \>\"", ",", " ", "x"}], "}"}], 
                "]"}], ",", "P"}], "}"}]}], ",", 
            RowBox[{"PlotLabel", "\[Rule]", 
             RowBox[{"Style", "[", 
              RowBox[{
               RowBox[{"Row", "[", 
                RowBox[{"{", 
                 RowBox[{"\"\<demand curves for good \>\"", ",", "x"}], "}"}],
                 "]"}], ",", "14"}], "]"}]}], ",", 
            RowBox[{"Ticks", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"0", ",", "5", ",", "10", ",", "15", ",", "20"}], 
                "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"1", ",", "2", ",", "3"}], "}"}]}], "}"}]}], ",", 
            RowBox[{"Epilog", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Tooltip", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"Thin", ",", "Dashed", ",", 
                   RowBox[{"Line", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"x", "/.", "sub"}], ")"}], ",", "3"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"x", "/.", "sub"}], ")"}], ",", "p"}], "}"}]}], 
                    "}"}], "]"}], ",", 
                   RowBox[{"PointSize", "[", ".01", "]"}], ",", 
                   RowBox[{"Point", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"x", "/.", "sub"}], ",", "p"}], "}"}], "]"}]}], 
                  "}"}], ",", "\"\<substitution effect\>\""}], "]"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"Tooltip", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"Thin", ",", "Dashed", ",", 
                   RowBox[{"Line", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"x", "/.", 
                    RowBox[{"sol", "[", 
                    RowBox[{"[", 
                    RowBox[{"2", ",", "1"}], "]"}], "]"}]}], ",", "3"}], 
                    "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"x", "/.", 
                    RowBox[{"sol", "[", 
                    RowBox[{"[", 
                    RowBox[{"2", ",", "1"}], "]"}], "]"}]}], ",", "p"}], 
                    "}"}]}], "}"}], "]"}], ",", 
                   RowBox[{"PointSize", "[", ".01", "]"}], ",", 
                   RowBox[{"Point", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"x", "/.", 
                    RowBox[{"sol", "[", 
                    RowBox[{"[", 
                    RowBox[{"2", ",", "1"}], "]"}], "]"}]}], ",", "p"}], 
                    "}"}], "]"}]}], "}"}], ",", 
                 "\"\<income+substitution effect\>\""}], "]"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"Tooltip", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"Thin", ",", "Dashed", ",", 
                   RowBox[{"Line", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", "p"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Max", "[", 
                    RowBox[{
                    RowBox[{"x", "/.", "sub"}], ",", 
                    RowBox[{"x", "/.", 
                    RowBox[{"sol", "[", 
                    RowBox[{"[", 
                    RowBox[{"2", ",", "1"}], "]"}], "]"}]}]}], "]"}], ",", 
                    "p"}], "}"}]}], "}"}], "]"}]}], "}"}], ",", 
                 "\"\<price\>\""}], "]"}], ",", "\[IndentingNewLine]", 
               RowBox[{"Text", "[", 
                RowBox[{
                 RowBox[{"NumberForm", "[", 
                  RowBox[{"p", ",", 
                   RowBox[{"{", 
                    RowBox[{"4", ",", "1"}], "}"}]}], "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"-", "4"}], ",", "p"}], "}"}]}], "]"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"Style", "[", 
                RowBox[{
                 RowBox[{"Text", "[", 
                  RowBox[{"\"\<Hicksian\>\"", ",", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "5"}], ",", 
                    RowBox[{"-", ".3"}]}], "}"}]}], "]"}], ",", 
                 RowBox[{"RGBColor", "[", 
                  RowBox[{".6", ",", ".73", ",", ".36"}], "]"}], ",", "10"}], 
                "]"}], ",", "\[IndentingNewLine]", 
               RowBox[{"Style", "[", 
                RowBox[{
                 RowBox[{"Text", "[", 
                  RowBox[{"\"\<Marshallian\>\"", ",", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "5"}], ",", 
                    RowBox[{"-", ".7"}]}], "}"}]}], "]"}], ",", 
                 RowBox[{"RGBColor", "[", 
                  RowBox[{"1", ",", ".47", ",", "0"}], "]"}], ",", "10"}], 
                "]"}]}], "\[IndentingNewLine]", "}"}]}], ",", 
            RowBox[{"ImageSize", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"300", ",", "195"}], "}"}]}]}], "]"}], "}"}]}], "}"}], 
       "]"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"(*", "controls", "*)"}], "\[IndentingNewLine]", 
   "\"\<price of x relative to y, P\>\"", ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"p", ",", "1", ",", "\"\<\>\""}], "}"}], ",", ".1", ",", "3", 
     ",", ".1", ",", 
     RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "Tiny"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   "\"\<elasticity of substitution, \[Sigma]=\!\(\*FractionBox[\(1\), \(1 - \
\[Rho]\)]\)\>\"", ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"sigma", ",", "1.6", ",", "\"\<\>\""}], "}"}], ",", ".2", ",", 
     "5", ",", ".2", ",", 
     RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "Tiny"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"TrackedSymbols", "\[Rule]", "True"}], ",", 
   RowBox[{"ControlPlacement", "\[Rule]", "Left"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.4169246229681187`*^9, 3.416924640969949*^9}, {
   3.4169246720640182`*^9, 3.416924741094413*^9}, {3.416924792169735*^9, 
   3.4169247938374367`*^9}, {3.4169248287812486`*^9, 
   3.4169248408292265`*^9}, {3.4169249347504625`*^9, 
   3.4169249753987503`*^9}, {3.4169250756790743`*^9, 
   3.4169251194757347`*^9}, {3.4169252511462626`*^9, 
   3.4169252520502505`*^9}, {3.4169253737457385`*^9, 
   3.4169254007718625`*^9}, {3.4169254378977146`*^9, 
   3.4169255496025763`*^9}, {3.4169255984802723`*^9, 
   3.4169256015818863`*^9}, {3.4169257088447385`*^9, 
   3.4169257113073263`*^9}, {3.4169257719836245`*^9, 
   3.4169258187883825`*^9}, {3.4169258493525286`*^9, 
   3.4169258619148445`*^9}, {3.4169259390811305`*^9, 
   3.4169259948166666`*^9}, {3.4169260424318967`*^9, 
   3.4169260628339705`*^9}, {3.416928881285003*^9, 3.4169289939542475`*^9}, {
   3.4169351750709734`*^9, 3.4169352669192715`*^9}, {3.4169353941789613`*^9, 
   3.4169353956596313`*^9}, {3.416935434609045*^9, 3.4169354358715115`*^9}, 
   3.416935543274637*^9, {3.4169357644867353`*^9, 3.416935794723575*^9}, 
   3.4169358490407853`*^9, {3.4169359581895432`*^9, 3.4169359635511274`*^9}, {
   3.416936139844373*^9, 3.4169362193329735`*^9}, {3.416936249943877*^9, 
   3.416936274616515*^9}, {3.416936325504805*^9, 3.416936326050315*^9}, {
   3.416936356505359*^9, 3.4169363568326654`*^9}, {3.416936402094409*^9, 
   3.4169364343730154`*^9}, {3.416951990704491*^9, 3.4169519918767033`*^9}, {
   3.4169522162538056`*^9, 3.416952275599017*^9}, {3.4169523061078014`*^9, 
   3.416952318767696*^9}, {3.4169523937736664`*^9, 3.4169524095594616`*^9}, {
   3.416952440005728*^9, 3.41695244024017*^9}, {3.416952541300517*^9, 
   3.416952548896454*^9}, 3.416952592940385*^9, 3.416952626700105*^9, {
   3.4169527635676365`*^9, 3.416952764052151*^9}, {3.4169528071270533`*^9, 
   3.4169528728803596`*^9}, {3.4169529343980713`*^9, 
   3.4169529350857697`*^9}, {3.416953049040454*^9, 3.416953060575025*^9}, {
   3.4169532972838025`*^9, 3.4169533505803976`*^9}, {3.4169534760696535`*^9, 
   3.4169535040464582`*^9}, {3.4169536228775463`*^9, 
   3.4169536715165505`*^9}, {3.416953710730966*^9, 3.4169537646058526`*^9}, {
   3.4169538485362673`*^9, 3.416953926761915*^9}, {3.416953964335233*^9, 
   3.4169541254441195`*^9}, {3.41695422358175*^9, 3.416954224378854*^9}, {
   3.4169543129824896`*^9, 3.4169543134357452`*^9}, {3.4169544667923994`*^9, 
   3.4169544946910563`*^9}, {3.416954575386165*^9, 3.416954581637965*^9}, {
   3.4169546791347857`*^9, 3.4169548225979667`*^9}, {3.416954876457224*^9, 
   3.416954983206709*^9}, {3.4169550903313017`*^9, 3.4169550982241993`*^9}, {
   3.4169551447532206`*^9, 3.4169553338545413`*^9}, {3.416955378257951*^9, 
   3.416955419004057*^9}, {3.4169554673148413`*^9, 3.416955470346965*^9}, {
   3.41695550487253*^9, 3.416955505169491*^9}, {3.416955577643482*^9, 
   3.416955598837084*^9}, 3.4169556308931885`*^9, {3.4169556692636113`*^9, 
   3.4169556787194586`*^9}, 3.4169557372050476`*^9, {3.416955840781744*^9, 
   3.41695605378057*^9}, {3.416956173752612*^9, 3.416956405381802*^9}, {
   3.4169564437834835`*^9, 3.4169565592542295`*^9}, {3.416956820704506*^9, 
   3.4169568258309813`*^9}, 3.416957619334605*^9, {3.4169577405299373`*^9, 
   3.4169578069098988`*^9}, {3.416958061516463*^9, 3.416958115756525*^9}, {
   3.4169581676139493`*^9, 3.4169581735004673`*^9}, {3.4169582192222085`*^9, 
   3.4169582461320066`*^9}, {3.416958284487813*^9, 3.4169582848771334`*^9}, {
   3.4169583185103245`*^9, 3.4169584014490523`*^9}, {3.416958556388505*^9, 
   3.4169585586789417`*^9}, {3.416958640457862*^9, 3.4169587039171314`*^9}, {
   3.4169587684517174`*^9, 3.4169587690906734`*^9}, 3.4169588328304605`*^9, {
   3.4169604787658715`*^9, 3.4169604799036493`*^9}, {3.4169606018640995`*^9, 
   3.416960602394024*^9}, {3.4169609586588116`*^9, 3.416960965547824*^9}, {
   3.4169620231981974`*^9, 3.4169620920727315`*^9}, {3.4169621247098155`*^9, 
   3.4169621249903636`*^9}, {3.4169621656698236`*^9, 
   3.4169621707508593`*^9}, {3.4169622048062696`*^9, 
   3.4169622181167135`*^9}, {3.4169622738678355`*^9, 
   3.4169622758628435`*^9}, {3.4169624436461334`*^9, 
   3.4169624502857695`*^9}, {3.4169626199705515`*^9, 
   3.4169626331095495`*^9}, {3.4169628708116355`*^9, 3.416962877326584*^9}, 
   3.4169629456400213`*^9, {3.4169630433798275`*^9, 3.4169630557083535`*^9}, {
   3.4169631360230117`*^9, 3.4169631369893436`*^9}, {3.416963466586486*^9, 
   3.4169634830453014`*^9}, {3.416963586068762*^9, 3.416963595654152*^9}, {
   3.4169636812368774`*^9, 3.4169636861776395`*^9}, {3.4169637265765514`*^9, 
   3.4169638022933397`*^9}, {3.4169638550987077`*^9, 
   3.4169638797090015`*^9}, {3.4169641794433675`*^9, 3.4169641899171596`*^9}, 
   3.4169643896517496`*^9, {3.4169647867206855`*^9, 3.4169647871103354`*^9}, {
   3.417020437787739*^9, 3.4170206390147285`*^9}, {3.4170208275938463`*^9, 
   3.417020827921959*^9}, 3.4170210133541946`*^9, {3.417021188599968*^9, 
   3.4170213006297836`*^9}, {3.417021385191201*^9, 3.417021499143262*^9}, {
   3.417021635643262*^9, 3.417021705362012*^9}, {3.417021803971387*^9, 
   3.417021804315137*^9}, {3.417022026346387*^9, 3.417022044502637*^9}, {
   3.417022075877637*^9, 3.417022163283887*^9}, {3.417022256330762*^9, 
   3.417022354502637*^9}, {3.417022420612012*^9, 3.417022435908887*^9}, {
   3.417022483221387*^9, 3.417022493393262*^9}, {3.417022561643262*^9, 
   3.417022578158887*^9}, {3.417022620612012*^9, 3.417022633377637*^9}, {
   3.417022664033887*^9, 3.417022664612012*^9}, {3.417022812799512*^9, 
   3.417022891627637*^9}, {3.417022991487012*^9, 3.417023006237012*^9}, {
   3.417023073502637*^9, 3.417023110893262*^9}, {3.417023167674512*^9, 
   3.417023173377637*^9}, 3.417023226190137*^9, {3.417023489408887*^9, 
   3.417023493018262*^9}, {3.417023531565137*^9, 3.417023556721387*^9}, {
   3.417023593518262*^9, 3.417023641612012*^9}, {3.417023704705762*^9, 
   3.417023713112012*^9}, {3.417023770487012*^9, 3.417023772268262*^9}, {
   3.417023842487012*^9, 3.417023847330762*^9}, {3.417023907924512*^9, 
   3.417023910987012*^9}, {3.417023967721387*^9, 3.417023976549512*^9}, {
   3.417024168362012*^9, 3.417024192455762*^9}, {3.417024451237012*^9, 
   3.417024452533887*^9}, {3.417024483049512*^9, 3.417024488721387*^9}, {
   3.417024568737012*^9, 3.417024598674512*^9}, {3.417024667830762*^9, 
   3.417024674080762*^9}, {3.417025347112819*^9, 3.4170254318993626`*^9}, {
   3.4170254864529123`*^9, 3.417025516171103*^9}, {3.4170255609745903`*^9, 
   3.4170255677169533`*^9}, {3.417025644643526*^9, 3.417025661923907*^9}, {
   3.417025771257047*^9, 3.4170257767049723`*^9}, {3.417025813326267*^9, 
   3.4170258413463964`*^9}, {3.417025894615243*^9, 3.4170259468427353`*^9}, {
   3.417026060933635*^9, 3.4170260792177467`*^9}, {3.417026172824276*^9, 
   3.4170262327980337`*^9}, {3.4170266019513397`*^9, 3.417026623484976*^9}, {
   3.417026779092437*^9, 3.4170267877121377`*^9}, {3.4170270000510664`*^9, 
   3.4170270119344616`*^9}, {3.417027110686884*^9, 3.4170271481640835`*^9}, {
   3.417027180628708*^9, 3.417027191871868*^9}, {3.4170272236181793`*^9, 
   3.417027323416912*^9}, {3.417027395529753*^9, 3.417027396123146*^9}, {
   3.417027438191572*^9, 3.4170274640978527`*^9}, {3.4170275042143292`*^9, 
   3.4170276160532565`*^9}, {3.4170277082321434`*^9, 
   3.4170277297816715`*^9}, {3.417027786169603*^9, 3.4170277935713973`*^9}, {
   3.417027839574955*^9, 3.4170278405275064`*^9}, {3.4170278831580944`*^9, 
   3.4170279066595726`*^9}, {3.4170279553021665`*^9, 3.417028001196415*^9}, {
   3.4170280599423018`*^9, 3.4170280842870226`*^9}, {3.41702812195185*^9, 
   3.4170282018256435`*^9}, {3.4170283701149645`*^9, 
   3.4170283905089383`*^9}, {3.417028424550946*^9, 3.4170284906673965`*^9}, {
   3.417028831056246*^9, 3.4170288876627955`*^9}, {3.417031079228425*^9, 
   3.4170310869823847`*^9}, {3.4170311175032477`*^9, 3.417031192573302*^9}, {
   3.417031407178013*^9, 3.4170314713914347`*^9}, {3.417031521612221*^9, 
   3.4170315237937007`*^9}, {3.417031711869641*^9, 3.417031748493216*^9}, {
   3.4170318304676857`*^9, 3.417031830701453*^9}, {3.417032060654411*^9, 
   3.417032061480442*^9}, {3.4170320922462196`*^9, 3.4170321688180337`*^9}, {
   3.417034828591106*^9, 3.41703493323551*^9}, {3.417034986321426*^9, 
   3.417035030040156*^9}, {3.417035065997058*^9, 3.4170351029982224`*^9}, {
   3.417035141745018*^9, 3.41703515206295*^9}, {3.417035243646286*^9, 
   3.417035248197398*^9}, {3.417035333203442*^9, 3.4170353344191504`*^9}, {
   3.4170356031529617`*^9, 3.417035626594306*^9}, {3.417035660104206*^9, 
   3.417035670749444*^9}, {3.417035703059222*^9, 3.417035704991886*^9}, 
   3.4170357645771637`*^9, {3.4170358031681004`*^9, 3.4170358555994043`*^9}, {
   3.4170359777313004`*^9, 3.4170359995361137`*^9}, {3.4170360611787443`*^9, 
   3.417036167475264*^9}, {3.417036333964916*^9, 3.417036362954876*^9}, {
   3.417036395763406*^9, 3.41703651513658*^9}, {3.4170365698901978`*^9, 
   3.417036580270474*^9}, {3.4170366309561462`*^9, 3.41703666686629*^9}, {
   3.417036709712204*^9, 3.4170367418037777`*^9}, {3.417036928196752*^9, 
   3.4170369484741383`*^9}, {3.417037067130356*^9, 3.4170371599294*^9}, {
   3.4170432589379053`*^9, 3.4170432792495313`*^9}, {3.4170435370028677`*^9, 
   3.4170435464015923`*^9}, {3.417043689068618*^9, 3.417043696937318*^9}, {
   3.4170438685069113`*^9, 3.4170438916096306`*^9}, {3.4170440438157825`*^9, 
   3.417044181884966*^9}, {3.4170442672356005`*^9, 3.417044283233962*^9}, {
   3.4170443860046873`*^9, 3.4170444954527173`*^9}, {3.417044536513797*^9, 
   3.4170445538102293`*^9}, {3.417044756851906*^9, 3.417044760679933*^9}, {
   3.4170448781932397`*^9, 3.4170449220520535`*^9}, {3.4170449593797007`*^9, 
   3.417044976910726*^9}, {3.417045034081869*^9, 3.417045075737586*^9}, {
   3.41704510628407*^9, 3.4170451583775897`*^9}, {3.4170452038619647`*^9, 
   3.4170452475338397`*^9}, {3.4170453217525897`*^9, 
   3.4170453488150897`*^9}, {3.4170454286744647`*^9, 
   3.4170454632525897`*^9}, {3.4170454942994647`*^9, 
   3.4170455742994647`*^9}, {3.4170456161900897`*^9, 
   3.4170456171432147`*^9}, {3.4170458171588397`*^9, 
   3.4170458684713397`*^9}, {3.4170459223932147`*^9, 
   3.4170463411275897`*^9}, {3.4170463795963397`*^9, 
   3.4170463876900897`*^9}, {3.4170465875182147`*^9, 
   3.4170466465650897`*^9}, {3.4170467060338397`*^9, 
   3.4170467220494647`*^9}, {3.4170468610338397`*^9, 
   3.4170469939088397`*^9}, {3.4170470457682147`*^9, 
   3.4170471393619647`*^9}, {3.4170471872213397`*^9, 
   3.4170472821588397`*^9}, {3.4170473257838397`*^9, 
   3.4170473489869647`*^9}, {3.4170473990025897`*^9, 
   3.4170475078932147`*^9}, {3.4170475742994647`*^9, 
   3.4170475851432147`*^9}, {3.4170476221900897`*^9, 
   3.4170477573932147`*^9}, {3.4170478013932147`*^9, 
   3.4170478678150897`*^9}, {3.4170478989713397`*^9, 
   3.4170478991744647`*^9}, {3.4170479869869647`*^9, 
   3.4170480826119647`*^9}, {3.4170481676588397`*^9, 
   3.4170482338463397`*^9}, {3.4170482785963397`*^9, 
   3.4170485030025897`*^9}, {3.4170485870182147`*^9, 
   3.4170486345095034`*^9}, {3.4170486656145706`*^9, 3.417048686278008*^9}, {
   3.4170487519425173`*^9, 3.4170488006805944`*^9}, {3.417048836810206*^9, 
   3.4170489808597355`*^9}, {3.417049015069188*^9, 3.4170491240697412`*^9}, {
   3.417049474310857*^9, 3.4170495511252728`*^9}, {3.417049641961137*^9, 
   3.4170497231082964`*^9}, {3.417050271540773*^9, 3.4170502780510807`*^9}, {
   3.4170505399431806`*^9, 3.4170505975342526`*^9}, {3.417050662776087*^9, 
   3.417050710600233*^9}, {3.4170507521915274`*^9, 3.4170507527681017`*^9}, {
   3.4170508404074564`*^9, 3.41705084907166*^9}, {3.4170509201773453`*^9, 
   3.4170509456089644`*^9}, {3.4170512509769716`*^9, 
   3.4170513035155597`*^9}, {3.4170513402978115`*^9, 
   3.4170513464229918`*^9}, {3.417051474490689*^9, 3.417051568238689*^9}, {
   3.4170517472731266`*^9, 3.4170517528217072`*^9}, {3.4170518907569222`*^9, 
   3.417051946741475*^9}, {3.417051992002932*^9, 3.4170520787234364`*^9}, {
   3.4170521314041157`*^9, 3.4170522893214684`*^9}, {3.41705235286559*^9, 
   3.41705245199255*^9}, {3.4170525127779503`*^9, 3.4170526542209*^9}, {
   3.417052700386632*^9, 3.417052703597348*^9}, {3.417052889008404*^9, 
   3.417052889538328*^9}, {3.4170529806384983`*^9, 3.41705303031108*^9}, {
   3.4170530795316677`*^9, 3.417053133381298*^9}, {3.417061352569081*^9, 
   3.417061460396085*^9}, {3.4170614995375853`*^9, 3.417061504171939*^9}, {
   3.417061574094314*^9, 3.417061692802655*^9}, {3.4170617627406874`*^9, 
   3.4170620190392294`*^9}, {3.417062151869824*^9, 3.4170621654284396`*^9}, {
   3.417062221479068*^9, 3.4170622345053587`*^9}, {3.417062296677717*^9, 
   3.4170623329540596`*^9}, {3.4170624067749286`*^9, 
   3.4170624392154036`*^9}, {3.4170625426742163`*^9, 3.417062547668672*^9}, {
   3.417062581158139*^9, 3.4170625869823947`*^9}, {3.417062888168409*^9, 
   3.4170630596530437`*^9}, {3.41706324619775*^9, 3.4170632735034323`*^9}, {
   3.417063327216857*^9, 3.417063331321256*^9}, {3.4170633914313483`*^9, 
   3.417063393104085*^9}, 3.4170634721253915`*^9, {3.417063522911527*^9, 
   3.417063551100233*^9}, {3.41706358403673*^9, 3.4170636294139643`*^9}, {
   3.417063664869788*^9, 3.4170637107601995`*^9}, {3.4170638853527365`*^9, 
   3.417063914272355*^9}, {3.417063959948844*^9, 3.417063974463159*^9}, 
   3.417064012088252*^9, {3.417064081794343*^9, 3.4170641012453947`*^9}, {
   3.4170642618589296`*^9, 3.4170642927101016`*^9}, {3.417064325758251*^9, 
   3.417064404911763*^9}, {3.4170652322182927`*^9, 3.417065263670235*^9}, {
   3.4170653009044724`*^9, 3.4170653195293837`*^9}, {3.417105129345556*^9, 
   3.417105161470556*^9}, {3.417105221939306*^9, 3.417105287095556*^9}, {
   3.417105454314306*^9, 3.417105469204931*^9}, {3.417105502658056*^9, 
   3.417105508751806*^9}, {3.417105629423681*^9, 3.417105667845556*^9}, {
   3.417105829298681*^9, 3.417105942189306*^9}, {3.417105977361181*^9, 
   3.417105984939306*^9}, {3.417106066189306*^9, 3.417106066892431*^9}, {
   3.417106115267431*^9, 3.417106116626806*^9}, {3.417106178048681*^9, 
   3.417106178908056*^9}, {3.417106212642431*^9, 3.417106218236181*^9}, {
   3.417106495954931*^9, 3.417106497517431*^9}, {3.417106570767431*^9, 
   3.417106773111181*^9}, {3.417106803658056*^9, 3.417106805236181*^9}, {
   3.417106913486181*^9, 3.417106937017431*^9}, {3.417106990486181*^9, 
   3.417106995892431*^9}, {3.417107043501806*^9, 3.417107077439306*^9}, {
   3.417199022013609*^9, 3.417199142234603*^9}, {3.417199203806546*^9, 
   3.417199233173774*^9}, {3.417201476996008*^9, 3.4172015399269423`*^9}, {
   3.417201834270753*^9, 3.4172018777364187`*^9}, {3.4172019223149805`*^9, 
   3.4172020500478477`*^9}, {3.4172020832792516`*^9, 3.417202301913702*^9}, {
   3.4172026803804426`*^9, 3.417202716535263*^9}, {3.4172027560259094`*^9, 
   3.417202758563542*^9}, {3.4172027941060658`*^9, 3.41720282491794*^9}, {
   3.4181404593653536`*^9, 3.418140530687712*^9}, 3.418140647077445*^9, {
   3.41814186700932*^9, 3.4181418869888206`*^9}, {3.4181419335140753`*^9, 
   3.41814236631614*^9}, {3.4181424799885335`*^9, 3.4181425887634068`*^9}, {
   3.41814367297157*^9, 3.4181436795691853`*^9}, {3.418143723756053*^9, 
   3.4181437283104353`*^9}, {3.418143926410473*^9, 3.4181439372037354`*^9}, {
   3.418144042983946*^9, 3.4181441229195957`*^9}, {3.4181441898627777`*^9, 
   3.4181442976550274`*^9}, {3.4181444511470723`*^9, 
   3.4181444528783617`*^9}, {3.4181445272458115`*^9, 
   3.4181445560382423`*^9}, {3.4181446027362595`*^9, 
   3.4181446659829054`*^9}, {3.4181449526906357`*^9, 
   3.4181449590075016`*^9}, {3.4181449952242002`*^9, 
   3.4181449971894474`*^9}, {3.418145618238757*^9, 3.41814562290232*^9}, {
   3.4181574983603926`*^9, 3.4181575189601803`*^9}, {3.418157724411854*^9, 
   3.418157795871333*^9}, {3.4181578606518393`*^9, 3.418157869406805*^9}, {
   3.418158398216115*^9, 3.418158402304887*^9}, {3.4181584772605047`*^9, 
   3.4181584823324547`*^9}, {3.418158555540201*^9, 3.418158555867927*^9}, {
   3.418159218951261*^9, 3.418159243686771*^9}, {3.418160117170197*^9, 
   3.418160147617503*^9}, {3.418160197556703*^9, 3.4181602004438133`*^9}, {
   3.418160480789997*^9, 3.418160482928019*^9}, {3.418160533148127*^9, 
   3.418160547833373*^9}, {3.418160598506055*^9, 3.418160608727985*^9}, {
   3.418160791411821*^9, 3.418160796655437*^9}, {3.418161449688507*^9, 
   3.418161453043797*^9}, {3.418161532915305*^9, 3.418161551174325*^9}, {
   3.4181618415395613`*^9, 3.4181618693962708`*^9}, {3.4181693548486605`*^9, 
   3.418169416962325*^9}, {3.418169612034504*^9, 3.4181696277723837`*^9}, {
   3.4181697189097075`*^9, 3.4181697442053895`*^9}, {3.4181716167982907`*^9, 
   3.418171656604679*^9}, 3.4181717037520266`*^9, {3.41817176216798*^9, 
   3.418171823919652*^9}, {3.418171971441142*^9, 3.4181719868712816`*^9}, {
   3.418172055153548*^9, 3.4181721005867376`*^9}, {3.418172152612806*^9, 
   3.418172202519178*^9}, {3.4181724380703955`*^9, 3.418172445037338*^9}, {
   3.418172487446844*^9, 3.418172493977378*^9}, {3.418172539394982*^9, 
   3.41817257108132*^9}, {3.41817346688667*^9, 3.418173482145364*^9}, {
   3.4181736053526936`*^9, 3.418173664891214*^9}, {3.4181737851372037`*^9, 
   3.4181738410441856`*^9}, {3.418173981411702*^9, 3.4181739840301495`*^9}, {
   3.4181740166360617`*^9, 3.418174020298772*^9}, {3.4181740771876717`*^9, 
   3.418174115622748*^9}, {3.4181741616949635`*^9, 3.4181741657161517`*^9}, {
   3.41817421891117*^9, 3.418174222043956*^9}, {3.418174354634058*^9, 
   3.4181743640012436`*^9}, {3.41817455003574*^9, 3.4181745781528835`*^9}, {
   3.418174613377244*^9, 3.4181746376446457`*^9}, {3.418174730147556*^9, 
   3.4181747724012017`*^9}, {3.41817486222332*^9, 3.418174901765002*^9}, {
   3.4181749921170435`*^9, 3.41817503943614*^9}, {3.4181751123006897`*^9, 
   3.418175122151042*^9}, {3.4181751544296474`*^9, 3.4181752021072216`*^9}, {
   3.418175299348276*^9, 3.4181753791953535`*^9}, {3.4181754110998955`*^9, 
   3.4181754337307677`*^9}, {3.4181754649651117`*^9, 
   3.4181754692824335`*^9}, {3.4181755527298775`*^9, 
   3.4181755610372157`*^9}, {3.418175594874422*^9, 3.41817560894858*^9}, {
   3.418175710912192*^9, 3.4181757614108315`*^9}, {3.418175817146368*^9, 
   3.41817582395745*^9}, {3.418175899253416*^9, 3.4181759121897955`*^9}, 
   3.4181759586984196`*^9, {3.41817611385705*^9, 3.418176121930598*^9}, {
   3.4181761660233917`*^9, 3.4181761899634876`*^9}, {3.418176238794426*^9, 
   3.418176260069316*^9}, {3.4181764621418056`*^9, 3.418176468532066*^9}, {
   3.418176563404048*^9, 3.418176569326728*^9}, {3.418176752228438*^9, 
   3.4181767764802537`*^9}, {3.418176910862746*^9, 3.418176917206248*^9}, {
   3.418176951401932*^9, 3.4181769840546017`*^9}, {3.418177022972844*^9, 
   3.418177080718974*^9}, {3.4181771367662296`*^9, 3.41817727049411*^9}, {
   3.418177376260706*^9, 3.418177434022422*^9}, {3.4181776728466997`*^9, 
   3.418177710783024*^9}, {3.4181786921710997`*^9, 3.418178728112416*^9}, {
   3.418179018588698*^9, 3.4181791055274057`*^9}, {3.418179400211908*^9, 
   3.4181796862617655`*^9}, {3.4181801987138596`*^9, 3.418180240983092*^9}, {
   3.418180285590224*^9, 3.418180308065236*^9}, 3.418180518554166*^9, {
   3.418390356262446*^9, 3.4183903572468204`*^9}, {3.4183903915593204`*^9, 
   3.418390462481196*^9}, {3.418390571387446*^9, 3.418390648762446*^9}, {
   3.4183907608718204`*^9, 3.4183908100280704`*^9}, {3.4183908505280704`*^9, 
   3.418390909981196*^9}, {3.4183909508093204`*^9, 3.418390951574946*^9}, {
   3.4184036115407205`*^9, 3.4184036426208344`*^9}, {3.4184036857329683`*^9, 
   3.4184037001401405`*^9}, {3.4184037317515383`*^9, 
   3.4184037337672925`*^9}, {3.418403877424876*^9, 3.418403897704698*^9}, {
   3.4184039321866455`*^9, 3.418404016258851*^9}, {3.418404082301077*^9, 
   3.4184041100491233`*^9}, {3.418406330119429*^9, 3.4184063507592616`*^9}, {
   3.4184064093820105`*^9, 3.4184064237877073`*^9}, {3.418479173916346*^9, 
   3.4184791793696456`*^9}, {3.4196420755240602`*^9, 3.419642076368021*^9}, {
   3.4196422393618193`*^9, 3.4196423550781946`*^9}, {3.419642392540668*^9, 
   3.4196424182345796`*^9}, {3.4196424783589582`*^9, 3.419642641399643*^9}, {
   3.41964272256052*^9, 3.4196427750423665`*^9}, {3.4196428441377335`*^9, 
   3.419642877349146*^9}, {3.4196430088350816`*^9, 3.4196430158993444`*^9}, {
   3.419643068662511*^9, 3.4196431110793457`*^9}, {3.419643177252108*^9, 
   3.41964338807034*^9}, {3.4196434419744167`*^9, 3.419643470590932*^9}, {
   3.419643572460102*^9, 3.4196436140173473`*^9}, {3.4196436487291346`*^9, 
   3.41964376430485*^9}, {3.419643813957865*^9, 3.419643834650529*^9}, {
   3.4196438884295735`*^9, 3.4196439008389206`*^9}, {3.4196439769047766`*^9, 
   3.4196439772486124`*^9}, {3.419644042389868*^9, 3.419644059347224*^9}, {
   3.4196441268428435`*^9, 3.419644240382657*^9}, {3.419644307458866*^9, 
   3.4196443393696604`*^9}, {3.419644382842111*^9, 3.419644387724044*^9}, {
   3.4196445513324814`*^9, 3.4196446236915503`*^9}, {3.4196446598710847`*^9, 
   3.41964476076484*^9}, {3.4196448484031143`*^9, 3.4196448505212603`*^9}, {
   3.419644952254547*^9, 3.4196450326420517`*^9}, {3.4196451264295073`*^9, 
   3.4196451353423543`*^9}, {3.4196451917176685`*^9, 3.419645229815414*^9}, {
   3.4196453791159797`*^9, 3.419645386799138*^9}, 3.419645422534397*^9, {
   3.4196454532202773`*^9, 3.419645471843755*^9}, {3.4196455144206085`*^9, 
   3.4196455675637536`*^9}, 3.41964559806262*^9, 3.4196458959627094`*^9, {
   3.419646074637947*^9, 3.419646085532421*^9}, {3.419646124590436*^9, 
   3.4196461308559275`*^9}, {3.419646218588705*^9, 3.4196462348603845`*^9}, {
   3.4196463660313187`*^9, 3.4196464340170145`*^9}, {3.419646464035458*^9, 
   3.4196464825515895`*^9}, {3.4196465302291636`*^9, 
   3.4196465431811295`*^9}, {3.4196465918250356`*^9, 
   3.4196466046834855`*^9}, {3.4196471562408533`*^9, 3.4196471684914494`*^9}, 
   3.419889332504865*^9, {3.419890143118463*^9, 3.419890169446027*^9}, {
   3.5062175403054695`*^9, 3.506217689063344*^9}},
 CellID->361327311],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`p$$ = 
    1.5000000000000002`, $CellContext`sigma$$ = 1.4000000000000001`, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{
      Hold["price of x relative to y, P"], 
      Manipulate`Dump`ThisIsNotAControl}, {{
       Hold[$CellContext`p$$], 1, ""}, 0.1, 3, 0.1}, {
      Hold[
      "elasticity of substitution, \[Sigma]=\!\(\*FractionBox[\(1\), \(1 - \
\[Rho]\)]\)"], Manipulate`Dump`ThisIsNotAControl}, {{
       Hold[$CellContext`sigma$$], 1.6, ""}, 0.2, 5, 0.2}}, Typeset`size$$ = {
    266., {172., 173.60000000000002`}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`p$18418$$ = 0, $CellContext`sigma$18419$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`p$$ = 1, $CellContext`sigma$$ = 1.6}, 
      "ControllerVariables" :> {
        Hold[$CellContext`p$$, $CellContext`p$18418$$, 0], 
        Hold[$CellContext`sigma$$, $CellContext`sigma$18419$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Module[{$CellContext`rho$, $CellContext`utility$, \
$CellContext`initsolution$, $CellContext`ustar$, $CellContext`xstar$, \
$CellContext`ystar$, $CellContext`initind$, $CellContext`uncomputil$, \
$CellContext`marshall$, $CellContext`hicks$, $CellContext`xinit$, \
$CellContext`marshallian$, $CellContext`hmin$, $CellContext`mmin$, \
$CellContext`hicksian$, $CellContext`hplot$, $CellContext`mplot$, \
$CellContext`sol$, $CellContext`u$, $CellContext`ind$, $CellContext`indstar$, \
$CellContext`sub$, $CellContext`pseudo$, $CellContext`mainplot$}, \
$CellContext`rho$ = ($CellContext`sigma$$ - 
           1)/$CellContext`sigma$$; $CellContext`rho$ = If[
           And[$CellContext`rho$ > -0.2, $CellContext`rho$ < 0.2], 
           0, $CellContext`rho$]; $CellContext`cobbdouglas = \
$CellContext`rho$ == 0; $CellContext`utility$ = 
         If[$CellContext`cobbdouglas, $CellContext`x $CellContext`y, \
($CellContext`x^$CellContext`rho$ + $CellContext`y^$CellContext`rho$)^(
            1/$CellContext`rho$)]; $CellContext`initsolution$ = 
         FindMaximum[{$CellContext`utility$, $CellContext`x + $CellContext`y == 
            20, $CellContext`x >= 0, $CellContext`y >= 0}, {$CellContext`x, 
            10}, {$CellContext`y, 
            10}]; {$CellContext`ustar$, $CellContext`xstar$, \
$CellContext`ystar$} = {
           Part[$CellContext`initsolution$, 1], 
           ReplaceAll[$CellContext`x, 
            Part[$CellContext`initsolution$, 2, 1]], 
           ReplaceAll[$CellContext`y, 
            Part[$CellContext`initsolution$, 2, 2]]}; $CellContext`initind$ = 
         If[$CellContext`cobbdouglas, $CellContext`ustar$/$CellContext`x, 
           If[$CellContext`rho$ < 0, 
            
            If[$CellContext`ustar$^$CellContext`rho$ > \
$CellContext`x^$CellContext`rho$, ($CellContext`ustar$^$CellContext`rho$ - \
$CellContext`x^$CellContext`rho$)^(1/$CellContext`rho$), 21], 
            If[
            D[($CellContext`ustar$^$CellContext`rho$ - \
$CellContext`x^$CellContext`rho$)^(1/$CellContext`rho$), $CellContext`x] < 
             0, ($CellContext`ustar$^$CellContext`rho$ - \
$CellContext`x^$CellContext`rho$)^(1/$CellContext`rho$), 
             0]]]; $CellContext`uncomputil$ = 
         If[$CellContext`cobbdouglas, $CellContext`x1 (
            20 - $CellContext`price $CellContext`x1), \
($CellContext`x1^$CellContext`rho$ + (
              20 - $CellContext`price $CellContext`x1)^$CellContext`rho$)^(
            1/$CellContext`rho$)]; $CellContext`marshall$ = {}; \
$CellContext`hicks$ = {}; 
        Do[$CellContext`marshall$ = Append[$CellContext`marshall$, {
              ReplaceAll[$CellContext`x1, 
               Part[
                FindMinimum[{Abs[
                    D[$CellContext`uncomputil$, $CellContext`x1]] + If[
                    Or[$CellContext`x1 < 0.001, $CellContext`x1 > 10000], 
                    9999999, 0]}, {$CellContext`x1, 
                  If[$CellContext`price == 1, 10, $CellContext`xinit$]}, 
                 AccuracyGoal -> 3, Method -> "PrincipalAxis"], 
                2]], $CellContext`price}]; If[
            Length[$CellContext`marshall$ > 1], $CellContext`marshall$ = 
            If[Part[
                Last[$CellContext`marshall$], 1] == Part[
                Last[
                 Most[$CellContext`marshall$]], 1], 
              
              Most[$CellContext`marshall$], $CellContext`marshall$]]; \
$CellContext`xinit$ = Part[
             Last[$CellContext`marshall$], 1], {$CellContext`price, 1, 3.1, 
           0.075}]; Do[$CellContext`marshall$ = 
           Prepend[$CellContext`marshall$, {
              ReplaceAll[$CellContext`x1, 
               Part[
                FindMinimum[{Abs[
                    D[$CellContext`uncomputil$, $CellContext`x1]] + If[
                    Or[$CellContext`x1 < 0.001, $CellContext`x1 > 10000], 
                    9999999, 0]}, {$CellContext`x1, 
                  If[$CellContext`price == 0.95, 10, $CellContext`xinit$]}, 
                 AccuracyGoal -> 3, Method -> "PrincipalAxis"], 
                2]], $CellContext`price}]; $CellContext`marshall$ = If[Part[
               First[$CellContext`marshall$], 1] == Part[
               First[
                Rest[$CellContext`marshall$]], 1], 
             
             Rest[$CellContext`marshall$], $CellContext`marshall$]; \
$CellContext`xinit$ = Part[
             First[$CellContext`marshall$], 1], {$CellContext`price, 0.9, 
           0.1, -0.075}]; $CellContext`marshallian$ = 
         Interpolation[$CellContext`marshall$]; 
        Do[$CellContext`hicks$ = Append[$CellContext`hicks$, {
             
             If[$CellContext`cobbdouglas, \
($CellContext`ustar$/$CellContext`price)^(1/
               2), $CellContext`ustar$ \
($CellContext`price^($CellContext`rho$/($CellContext`rho$ - 1)) + 
                1)^((-1)/$CellContext`rho$) $CellContext`price^(
                1/($CellContext`rho$ - 
                1))], $CellContext`price}], {$CellContext`price, 0.1, 3.1, 
           0.1}]; If[
          Length[$CellContext`hicks$ > 1], $CellContext`hicks$ = If[Part[
              Last[$CellContext`hicks$], 1] == Part[
              Last[
               Most[$CellContext`hicks$]], 1], 
            
            Most[$CellContext`hicks$], $CellContext`hicks$]]; \
$CellContext`hmin$ = Part[
           Last[$CellContext`hicks$], 1]; $CellContext`mmin$ = Part[
           Last[$CellContext`marshall$], 1]; $CellContext`hicksian$ = 
         Interpolation[$CellContext`hicks$]; $CellContext`hplot$ = 
         If[$CellContext`hmin$ < 20, 
           Plot[
            Tooltip[
             $CellContext`hicksian$[$CellContext`x2], 
             "Hicksian demand curve"], {$CellContext`x2, $CellContext`hmin$, 
             20}, PlotRange -> {0.1, 5}, PlotStyle -> {
              RGBColor[
              0.6, 0.73, 0.36]}], $CellContext`hplot$]; $CellContext`mplot$ = 
         If[$CellContext`mmin$ < 20, 
           Plot[
            Tooltip[
             $CellContext`marshallian$[$CellContext`x2], 
             "Marshallian demand curve"], {$CellContext`x2, \
$CellContext`mmin$, 20}, PlotRange -> {0.1, 5}, PlotStyle -> {
              RGBColor[1, 0.47, 0]}], $CellContext`mplot$]; $CellContext`sol$ = 
         FindMaximum[{$CellContext`utility$, $CellContext`p$$ $CellContext`x + \
$CellContext`y == 20, $CellContext`x >= 0, $CellContext`y >= 
            0}, {$CellContext`x, 10}, {$CellContext`y, 10}]; $CellContext`u$ = 
         Part[$CellContext`sol$, 1]; $CellContext`ind$ = 
         If[$CellContext`cobbdouglas, $CellContext`u$/$CellContext`x, 
           If[$CellContext`rho$ < 0, 
            
            If[$CellContext`u$^$CellContext`rho$ > \
$CellContext`x^$CellContext`rho$, ($CellContext`u$^$CellContext`rho$ - \
$CellContext`x^$CellContext`rho$)^(1/$CellContext`rho$), 21], 
            If[
            D[($CellContext`u$^$CellContext`rho$ - \
$CellContext`x^$CellContext`rho$)^(1/$CellContext`rho$), $CellContext`x] < 
             0, ($CellContext`u$^$CellContext`rho$ - \
$CellContext`x^$CellContext`rho$)^(1/$CellContext`rho$), 
             0]]]; $CellContext`indstar$ = 
         If[$CellContext`cobbdouglas, $CellContext`ustar$/$CellContext`x, \
($CellContext`ustar$^$CellContext`rho$ - $CellContext`x^$CellContext`rho$)^(
            1/$CellContext`rho$)]; $CellContext`sub$ = Part[
           
           FindMinimum[{
            Abs[D[$CellContext`indstar$, $CellContext`x] + \
$CellContext`p$$]^2}, {$CellContext`x, 10}, AccuracyGoal -> 4, Method -> 
            "PrincipalAxis", WorkingPrecision -> MachinePrecision], 
           2]; $CellContext`pseudo$ = 
         ReplaceAll[$CellContext`initind$, $CellContext`sub$] + \
$CellContext`p$$ 
           ReplaceAll[$CellContext`x, $CellContext`sub$] - $CellContext`p$$ \
$CellContext`x; $CellContext`mainplot$ = Plot[{
            Tooltip[
            20 - $CellContext`p$$ $CellContext`x, "new budget constraint"], 
            Tooltip[$CellContext`ind$, "new indifference curve"], 
            Tooltip[20 - $CellContext`x, "original budget constraint"], 
            Tooltip[$CellContext`initind$, "original indifference curve"], 
            
            Tooltip[$CellContext`pseudo$, 
             "'compensated' budget constraint"]}, {$CellContext`x, 0, 20}, 
           PlotStyle -> {{Thick, 
              RGBColor[1, 0.47, 0]}, {Thick, 
              ColorData["HTML", "SlateBlue"]}, {Thin, 
              RGBColor[0.48, 0.11, 0.56]}, {Thin, 
              RGBColor[0.33, 0.6, 0.7]}, {Thin, 
              RGBColor[0.6, 0.73, 0.36]}}, PlotRange -> {{0, 20}, {0, 20}}, 
           AspectRatio -> 0.75, ImageSize -> 250, 
           Ticks -> {{0, 5, 10, 15, 20}, {5, 10, 15, 20}}, AxesLabel -> {
             Row[{"quantity of ", $CellContext`x}], 
             Row[{"quantity of ", $CellContext`y}]}, PlotLabel -> 
           Style["indifference curves and budget constraints", 14], Epilog -> {
             Tooltip[{Thin, Dashed, 
               Line[{{
                  ReplaceAll[$CellContext`x, $CellContext`sub$], 0}, {
                  ReplaceAll[$CellContext`x, $CellContext`sub$], 
                  ReplaceAll[$CellContext`initind$, $CellContext`sub$]}}]}, 
              "substitution effect on x"], 
             Tooltip[{Thin, Dashed, 
               Line[{{
                  ReplaceAll[$CellContext`x, 
                   Part[$CellContext`sol$, 2, 1]], 0}, {
                  ReplaceAll[$CellContext`x, 
                   Part[$CellContext`sol$, 2, 1]], 
                  ReplaceAll[$CellContext`y, 
                   Part[$CellContext`sol$, 2, 2]]}}]}, 
              "income+substitution effect on x"], 
             Tooltip[{Thin, Dashed, 
               Line[{{0, 
                  ReplaceAll[$CellContext`y, 
                   Part[$CellContext`sol$, 2, 2]]}, {
                  ReplaceAll[$CellContext`x, 
                   Part[$CellContext`sol$, 2, 1]], 
                  ReplaceAll[$CellContext`y, 
                   Part[$CellContext`sol$, 2, 2]]}}], 
               PointSize[0.01], 
               Point[{
                 ReplaceAll[$CellContext`x, 
                  Part[$CellContext`sol$, 2, 1]], 
                 ReplaceAll[$CellContext`y, 
                  Part[$CellContext`sol$, 2, 2]]}]}, 
              "income+substitution effect on y"], 
             Tooltip[{Thin, Dashed, 
               Line[{{0, 
                  ReplaceAll[$CellContext`initind$, $CellContext`sub$]}, {
                  ReplaceAll[$CellContext`x, $CellContext`sub$], 
                  ReplaceAll[$CellContext`initind$, $CellContext`sub$]}}], 
               PointSize[0.01], 
               Point[{
                 ReplaceAll[$CellContext`x, $CellContext`sub$], 
                 ReplaceAll[$CellContext`initind$, $CellContext`sub$]}]}, 
              "substitution effect on y"], 
             Tooltip[{
               PointSize[0.01], 
               Point[{$CellContext`xstar$, $CellContext`ystar$}]}, 
              "original optimum"], 
             Text[
              NumberForm[
               ReplaceAll[$CellContext`x, 
                Part[$CellContext`sol$, 2, 1]], {4, 2}], {
               ReplaceAll[$CellContext`x, 
                Part[$CellContext`sol$, 2, 1]], -5}], 
             Text[
              NumberForm[
               ReplaceAll[$CellContext`x, $CellContext`sub$], {4, 2}], {
               ReplaceAll[$CellContext`x, $CellContext`sub$], -8}], 
             Text[
              NumberForm[
               ReplaceAll[$CellContext`y, 
                Part[$CellContext`sol$, 2, 2]], {4, 2}], {-5, 
               ReplaceAll[$CellContext`y, 
                Part[$CellContext`sol$, 2, 2]]}], 
             Text[
              NumberForm[
               ReplaceAll[$CellContext`initind$, $CellContext`sub$], {4, 
               2}], {-9, 
               ReplaceAll[$CellContext`initind$, $CellContext`sub$]}], 
             Style[
              Text["original budget constraint", {-8, -2}], 
              RGBColor[0.48, 0.11, 0.56], 10], 
             Style[
              Text["original indifference curve", {-8, -4.5}], 
              RGBColor[0.33, 0.6, 0.7], 10], 
             Style[
              Text["new budget constraint", {-9, -7}], 
              RGBColor[1, 0.47, 0], 10], 
             Style[
              Text["new indifference curve", {-9, -9.5}], 
              ColorData["HTML", "SlateBlue"], 10], 
             Style[
              Text["compensated budget constraint", {-6.5, -12}], 
              RGBColor[0.6, 0.73, 0.36], 10]}]; GraphicsGrid[{{
            
            Show[$CellContext`mainplot$, PlotRange -> {{-16, 22}, {-14, 21}}, 
             ImageSize -> {350, 225}]}, {
            
            Show[{$CellContext`hplot$, $CellContext`mplot$}, 
             PlotRange -> {{-13, 20}, {-1, 3.1}}, ImageSize -> {350, 195}, 
             AxesOrigin -> {0, 0}, AxesLabel -> {
               Row[{"quantity of ", $CellContext`x}], $CellContext`P}, 
             PlotLabel -> Style[
               Row[{"demand curves for good ", $CellContext`x}], 14], 
             Ticks -> {{0, 5, 10, 15, 20}, {1, 2, 3}}, Epilog -> {
               Tooltip[{Thin, Dashed, 
                 Line[{{
                    ReplaceAll[$CellContext`x, $CellContext`sub$], 3}, {
                    
                    ReplaceAll[$CellContext`x, $CellContext`sub$], \
$CellContext`p$$}}], 
                 PointSize[0.01], 
                 Point[{
                   
                   ReplaceAll[$CellContext`x, $CellContext`sub$], \
$CellContext`p$$}]}, "substitution effect"], 
               Tooltip[{Thin, Dashed, 
                 Line[{{
                    ReplaceAll[$CellContext`x, 
                    Part[$CellContext`sol$, 2, 1]], 3}, {
                    ReplaceAll[$CellContext`x, 
                    Part[$CellContext`sol$, 2, 1]], $CellContext`p$$}}], 
                 PointSize[0.01], 
                 Point[{
                   ReplaceAll[$CellContext`x, 
                    Part[$CellContext`sol$, 2, 1]], $CellContext`p$$}]}, 
                "income+substitution effect"], 
               Tooltip[{Thin, Dashed, 
                 Line[{{0, $CellContext`p$$}, {
                    Max[
                    ReplaceAll[$CellContext`x, $CellContext`sub$], 
                    ReplaceAll[$CellContext`x, 
                    Part[$CellContext`sol$, 2, 1]]], $CellContext`p$$}}]}, 
                "price"], 
               Text[
                NumberForm[$CellContext`p$$, {4, 1}], {-4, $CellContext`p$$}], 
               Style[
                Text["Hicksian", {-5, -0.3}], 
                RGBColor[0.6, 0.73, 0.36], 10], 
               Style[
                Text["Marshallian", {-5, -0.7}], 
                RGBColor[1, 0.47, 0], 10]}, ImageSize -> {300, 195}]}}]], 
      "Specifications" :> {
       "price of x relative to y, P", {{$CellContext`p$$, 1, ""}, 0.1, 3, 0.1,
          Appearance -> "Labeled", ImageSize -> Tiny}, 
        "elasticity of substitution, \[Sigma]=\!\(\*FractionBox[\(1\), \(1 - \
\[Rho]\)]\)", {{$CellContext`sigma$$, 1.6, ""}, 0.2, 5, 0.2, Appearance -> 
         "Labeled", ImageSize -> Tiny}}, 
      "Options" :> {TrackedSymbols -> True, ControlPlacement -> Left}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{418., {195.875, 200.125}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.51213923109684*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Producer Theory", "Subtitle",
 CellChangeTimes->{{3.5119975507546597`*^9, 3.5119975562669983`*^9}}],

Cell[CellGroupData[{

Cell["\<\
Production Functions - Chapter 9\
\>", "Section",
 CellChangeTimes->{{3.511997467854076*^9, 3.5119974719495497`*^9}, {
  3.512142940762409*^9, 3.512142946790579*^9}, {3.5121429885100822`*^9, 
  3.512142991894382*^9}}],

Cell[CellGroupData[{

Cell["Production Functions", "Subsection",
 CellChangeTimes->{{3.512143007190125*^9, 3.5121430092008343`*^9}}],

Cell[CellGroupData[{

Cell["\<\
q(k,l). q represents output, k represents capital, and l represents labor. \
The main idea is that it takes capital and labor to produce and output. \
\>", "Item",
 CellChangeTimes->{{3.5121430125899076`*^9, 3.5121430580273523`*^9}, {
  3.5121461956636877`*^9, 3.512146196240006*^9}}],

Cell["\<\
The marginal Physical Product when q=f(k,l)\
\>", "Item",
 CellChangeTimes->{{3.512143058580185*^9, 3.512143076076289*^9}}],

Cell[CellGroupData[{

Cell[TextData[{
 "Marginal physical product of capital = ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["MP", "k"], "=", 
    RowBox[{
     FractionBox[
      RowBox[{"\[PartialD]", "q"}], 
      RowBox[{"\[PartialD]", "k"}]], "=", 
     SubscriptBox["f", "k"]}]}], TraditionalForm]],
  FormatType->"TraditionalForm"]
}], "Subitem",
 CellChangeTimes->{{3.51214307966049*^9, 3.512143108810911*^9}, 
   3.51214619681602*^9}],

Cell[TextData[{
 "Marginal physical product of labor= ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["MP", "l"], "=", 
    RowBox[{
     FractionBox[
      RowBox[{"\[PartialD]", "q"}], 
      RowBox[{"\[PartialD]", "l"}]], "=", 
     SubscriptBox["f", "l"]}]}], TraditionalForm]],
  FormatType->"TraditionalForm"]
}], "Subitem",
 CellChangeTimes->{{3.512143109339562*^9, 3.512143134925435*^9}}]
}, Open  ]],

Cell["\<\
Diminishing Marginal productivity\
\>", "Item",
 CellChangeTimes->{{3.512143154002215*^9, 3.5121431662826767`*^9}, 
   3.512146197295391*^9}],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   FractionBox[
    RowBox[{"\[PartialD]", 
     SubscriptBox["MP", "k"]}], 
    RowBox[{"\[PartialD]", "k"}]], "=", 
   RowBox[{
    FractionBox[
     RowBox[{
      SuperscriptBox["\[PartialD]", "2"], "f"}], 
     RowBox[{"\[PartialD]", 
      SuperscriptBox["k", "2"]}]], "=", 
    RowBox[{
     SubscriptBox["f", "kk"], "<", "0"}]}]}], TraditionalForm]],
 FormatType->"TraditionalForm"]], "Subitem",
 CellChangeTimes->{{3.51214316957843*^9, 3.512143210507162*^9}}],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   FractionBox[
    RowBox[{"\[PartialD]", 
     SubscriptBox["MP", "l"]}], 
    RowBox[{"\[PartialD]", "l"}]], "=", 
   RowBox[{
    FractionBox[
     RowBox[{
      SuperscriptBox["\[PartialD]", "2"], "f"}], 
     RowBox[{"\[PartialD]", 
      SuperscriptBox["l", "2"]}]], "=", 
    RowBox[{
     SubscriptBox["f", "ll"], "<", "0"}]}]}], TraditionalForm]],
 FormatType->"TraditionalForm"]], "Subitem",
 CellChangeTimes->{{3.512143210724319*^9, 3.512143220823835*^9}}]
}, Open  ]],

Cell["Average physical productivity:", "Item",
 CellChangeTimes->{{3.512143232985572*^9, 3.5121432386489964`*^9}}],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   SubscriptBox["AP", "k"], "=", 
   FractionBox["q", "k"]}], TraditionalForm]],
 FormatType->"TraditionalForm"]], "Subitem",
 CellChangeTimes->{{3.5121432463687696`*^9, 3.5121432545917664`*^9}}],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   SubscriptBox["AP", "l"], "=", 
   FractionBox["q", "l"]}], TraditionalForm]],
 FormatType->"TraditionalForm"]], "Subitem",
 CellChangeTimes->{{3.512143255624793*^9, 3.5121432587346077`*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Isoquants and the MRTS (rate of marginal substitution)\
\>", "Subsection",
 CellChangeTimes->{{3.512143268697053*^9, 3.512143282008334*^9}}],

Cell[CellGroupData[{

Cell["\<\
An Isoquant is all possible combinations of capital and labor that will lead \
to the same level of production. \
\>", "Item",
 CellChangeTimes->{{3.512143327487027*^9, 3.5121433449664917`*^9}}],

Cell["\<\
The general production function used is the Cobb Douglas production function \
and it has isoquant just like the indifference curve for the Cobb-Douglas \
Utility function.\
\>", "Item",
 CellChangeTimes->{{3.512143286400676*^9, 3.512143322783537*^9}, {
  3.512146207432283*^9, 3.512146213271755*^9}}],

Cell[TextData[{
 "The MRTS is the marginal rate of substitution and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"=", 
    FractionBox[
     RowBox[{
      RowBox[{"\[PartialD]", "q"}], "/", 
      RowBox[{"\[PartialD]", "l"}]}], 
     RowBox[{
      RowBox[{"\[PartialD]", "q"}], "/", 
      RowBox[{"\[PartialD]", "k"}]}]]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", its interpretation is how much capital we are willing to give up for one \
more unit of labor. "
}], "Item",
 CellChangeTimes->{{3.512143359262828*^9, 3.5121434105496473`*^9}, 
   3.512146218168085*^9}],

Cell["\<\
As would be expected, the optimum level of production is when the MRTS is \
equal to the ratio of marginal productivity for each input. \
\>", "Item",
 CellChangeTimes->{{3.512143416429619*^9, 3.5121434483710546`*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Returns to scale", "Subsection",
 CellChangeTimes->{{3.5121434573253736`*^9, 3.512143462740738*^9}}],

Cell[CellGroupData[{

Cell["Constant Returns to scale", "Subsubsection",
 CellChangeTimes->{{3.5121434690530376`*^9, 3.512143472620471*^9}}],

Cell[CellGroupData[{

Cell["f(tk,tl)=tf(k,l)", "Item",
 CellChangeTimes->{{3.512143496604328*^9, 3.512143503017524*^9}}],

Cell["\<\
This means that if you scale both inputs by a common factor, outputs are \
scaled by that same factor.\
\>", "Item",
 CellChangeTimes->{{3.512143503227865*^9, 3.512143526515531*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Decreasing Returns to scale:", "Subsubsection",
 CellChangeTimes->{{3.512143529011415*^9, 3.51214353732341*^9}}],

Cell[CellGroupData[{

Cell["f(tk,tl) < tf(k,l)", "Item",
 CellChangeTimes->{{3.5121435407789717`*^9, 3.5121435504004993`*^9}}],

Cell["\<\
This means that if you scale inputs by a factor t, you will increase outputs \
by less than that factor t. \
\>", "Item",
 CellChangeTimes->{{3.512143550594761*^9, 3.512143571057193*^9}, {
  3.512146229431139*^9, 3.51214623081516*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Increasing returns to scale", "Subsubsection",
 CellChangeTimes->{{3.512143572698514*^9, 3.512143576962088*^9}}],

Cell[CellGroupData[{

Cell["f(tk,tl)> t f(k,l)", "Item",
 CellChangeTimes->{{3.512143581362398*^9, 3.5121436014789953`*^9}}],

Cell["\<\
This means that if you scale inputs by a factor t, you will increase outputs \
by more than that factor t. \
\>", "Item",
 CellChangeTimes->{{3.512143601873864*^9, 3.512143629705068*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Cost Functions - Chapter 10", "Section",
 CellChangeTimes->{{3.511997473277903*^9, 3.511997477365642*^9}, {
  3.5121429521028767`*^9, 3.512142956062467*^9}, {3.512142993661325*^9, 
  3.512142995710423*^9}}],

Cell[CellGroupData[{

Cell["Definitions", "Subsection",
 CellChangeTimes->{{3.5121436938501368`*^9, 3.512143696207629*^9}, {
  3.512146244422357*^9, 3.512146246958256*^9}}],

Cell[CellGroupData[{

Cell["\<\
Labor cost is the wage payed for units of labor and is denoted (w)\
\>", "Item",
 CellChangeTimes->{{3.512143698999752*^9, 3.5121437136041117`*^9}}],

Cell["\<\
The cost of capital is known as the rental rate of capital is and denoted by \
the variable (v). The theoretical idea behind the rental rate of capital is \
how much it is costing you not to use it in its next best alternative. \
\>", "Item",
 CellChangeTimes->{{3.512143714215629*^9, 3.512143769397258*^9}, {
  3.5121462413940907`*^9, 3.512146242207283*^9}}],

Cell["Total cost: TC=C=wl + kv", "Item",
 CellChangeTimes->{{3.5121437776786633`*^9, 3.512143793067666*^9}}],

Cell["\<\
Economic profits: \[Pi]= Total Revenue - Total Costs=TR - TC = pq- wl  -kv= = \
p f(k,l) -wl - kv, where f(k,l)=q(k,l)\
\>", "Item",
 CellChangeTimes->{{3.512143793462044*^9, 3.512143861636848*^9}, {
   3.5121440394651127`*^9, 3.5121440394710693`*^9}, 3.5121462541432657`*^9}],

Cell[TextData[{
 "Average cost: ",
 Cell[BoxData[
  FormBox[
   RowBox[{"AC", "=", 
    RowBox[{
     FractionBox["TC", "q"], "=", 
     FractionBox[
      RowBox[{"c", "(", 
       RowBox[{"v", ",", "w", ",", "q"}], ")"}], "q"]}]}], TraditionalForm]],
  FormatType->"TraditionalForm"]
}], "Item",
 CellChangeTimes->{{3.512144039721394*^9, 3.5121440821357727`*^9}}],

Cell[TextData[{
 "Marginal Cost: ",
 Cell[BoxData[
  FormBox[
   RowBox[{"MC", "=", 
    RowBox[{
     FractionBox[
      RowBox[{"\[PartialD]", "TC"}], 
      RowBox[{"\[PartialD]", "q"}]], "=", 
     FractionBox[
      RowBox[{"\[PartialD]", 
       RowBox[{"c", "(", 
        RowBox[{"v", ",", "w", ",", "q"}], ")"}]}], 
      RowBox[{"\[PartialD]", "q"}]]}]}], TraditionalForm]],
  FormatType->"TraditionalForm"]
}], "Item",
 CellChangeTimes->{{3.512144082528736*^9, 3.51214410916704*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Differences in time", "Subsection",
 CellChangeTimes->{{3.512144123416051*^9, 3.512144126959236*^9}}],

Cell[CellGroupData[{

Cell["Short run", "Subsubsection",
 CellChangeTimes->{{3.512144128199842*^9, 3.512144131031537*^9}, {
  3.512144364099063*^9, 3.51214436577905*^9}}],

Cell[CellGroupData[{

Cell["\<\
In the short run the quantity of capital is fixed and production decisions \
must be made based on quantity of labor.\
\>", "Item",
 CellChangeTimes->{{3.512144132703368*^9, 3.512144147031053*^9}, {
  3.512144374402875*^9, 3.512144398504513*^9}}],

Cell["\<\
The production decision is made by the following logic: If price is below AVC \
(average variable cost) then the firm will choose not to produce. If it is \
above AVC they will produce, but might not make any profits. \
\>", "Item",
 CellChangeTimes->{3.512144482691176*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Long Run", "Subsubsection",
 CellChangeTimes->{{3.512144484528686*^9, 3.5121444872806263`*^9}}],

Cell[CellGroupData[{

Cell["\<\
In the long run both captial and labor are variable. A firm makes it \
production decisions by optimizing over both variables.\
\>", "Item",
 CellChangeTimes->{{3.512144489968317*^9, 3.512144509182383*^9}}],

Cell["\<\
A firm will exit the market if its ATC is less than price.\
\>", "Item",
 CellChangeTimes->{{3.512144510088125*^9, 3.512144527957078*^9}}],

Cell["\<\
A firm\[CloseCurlyQuote]s long run total cost curve is the lower envelope of \
all of its short run total cost curves. \
\>", "Item",
 CellChangeTimes->{{3.512144528183917*^9, 3.512144555798908*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Maximizing profits", "Subsection",
 CellChangeTimes->{{3.512143873526471*^9, 3.512143879484133*^9}}],

Cell[CellGroupData[{

Cell["\<\
It should be noted that the goal of a producer is not to maximize production \
it is essentially to maximize profits. We can solve this problem by \
minimizing profits subject to a particular level of output.\
\>", "Item",
 CellChangeTimes->{{3.512143880836649*^9, 3.512143919108005*^9}, {
  3.5121439879222813`*^9, 3.51214398792834*^9}}],

Cell["\<\
A firms expansion path is the line starting at the origin that is created by \
calculating various optimization points for different levels of output and \
then drawing a line though them. \
\>", "Item",
 CellChangeTimes->{{3.512143988170368*^9, 3.512144030793725*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Method of LaGrange for producer Theory\
\>", "Subsubsection",
 CellChangeTimes->{{3.512138538456373*^9, 3.512138545998622*^9}}],

Cell[CellGroupData[{

Cell[TextData[{
 "Cost minimization subject to output level: ",
 Cell[BoxData[{
  FormBox[
   RowBox[{"L", "=", 
    RowBox[{
     RowBox[{"TC", "+", 
      RowBox[{"\[Lambda]", "(", 
       RowBox[{
        OverscriptBox["q", "-"], "-", 
        RowBox[{"q", "(", 
         RowBox[{"k", ",", "l"}], ")"}]}], ")"}]}], "=", 
     RowBox[{"wl", "+", "kv", "+", 
      RowBox[{"\[Lambda]", "(", 
       RowBox[{
        OverscriptBox["q", "-"], "-", 
        RowBox[{"q", "(", 
         RowBox[{"k", ",", "l"}], ")"}]}], ")"}]}]}]}], 
   TraditionalForm], "\[IndentingNewLine]", 
  FormBox[
   RowBox[{
    FractionBox[
     RowBox[{"\[PartialD]", "L"}], 
     RowBox[{"\[PartialD]", "l"}]], "=", 
    RowBox[{
     RowBox[{"w", "-", 
      RowBox[{"\[Lambda]", "(", 
       RowBox[{
        SubscriptBox["q", "l"], "(", 
        RowBox[{"k", ",", "l"}], ")"}], ")"}]}], "=", "0"}]}], 
   TraditionalForm], "\[IndentingNewLine]", 
  FormBox[
   RowBox[{
    FractionBox[
     RowBox[{"\[PartialD]", "L"}], 
     RowBox[{"\[PartialD]", "k"}]], "=", 
    RowBox[{
     RowBox[{"v", "-", 
      RowBox[{"\[Lambda]", "(", 
       RowBox[{
        SubscriptBox["q", "k"], "(", 
        RowBox[{"k", ",", "l"}], ")"}], ")"}]}], "=", "0"}]}], 
   TraditionalForm], "\[IndentingNewLine]", 
  FormBox[
   RowBox[{
    FractionBox[
     RowBox[{"\[PartialD]", "L"}], 
     RowBox[{"\[PartialD]", "\[Lambda]"}]], "=", 
    RowBox[{
     RowBox[{
      OverscriptBox["q", "-"], "-", 
      RowBox[{"q", "(", 
       RowBox[{"k", ",", "l"}], ")"}]}], "=", "0"}]}], TraditionalForm]}]]
}], "Item",
 CellChangeTimes->{{3.512134999200245*^9, 3.512135093388021*^9}, {
  3.5121365626518297`*^9, 3.512136619764011*^9}, {3.512143936646928*^9, 
  3.512143941195877*^9}}],

Cell["\<\
It should be noted that \[Lambda] in this case is equal to the marginal cost \
of output. (the cost of one more unit of output)\
\>", "Item",
 CellChangeTimes->{{3.512143975386739*^9, 3.512143984851997*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Properties of cost functions", "Subsection",
 CellChangeTimes->{{3.512144155447055*^9, 3.5121441598227997`*^9}}],

Cell[CellGroupData[{

Cell["\<\
Homogeneity: All cost functions are homogeneous to degree one in input \
prices. That means that if you double input prices you will double total \
cost. \
\>", "Item",
 CellChangeTimes->{{3.5121441633509893`*^9, 3.5121442097802896`*^9}, 
   3.512146256727325*^9}],

Cell["\<\
Non-decreasing in q,v,w: This means that as any of q,v,w increase you will \
never get a decrease in total cost (marginal or average might go down \
though...)\
\>", "Item",
 CellChangeTimes->{{3.512144212638111*^9, 3.512144250139285*^9}}],

Cell["\<\
Total cost functions are concave in input prices: \
\>", "Item",
 CellChangeTimes->{{3.512144251773307*^9, 3.512144287890211*^9}}],

Cell["\<\
Homogeneity of Average and Marginal costs: It depends on the returns to scale \
the firm faces. \
\>", "Item",
 CellChangeTimes->{{3.512144289604603*^9, 3.512144326037018*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Profit Maximization - Chapter 11\
\>", "Section",
 CellChangeTimes->{{3.512142960374505*^9, 3.5121429664506474`*^9}, {
  3.51214299759788*^9, 3.5121429999897423`*^9}}],

Cell[CellGroupData[{

Cell["Definitions", "Subsection",
 CellChangeTimes->{{3.5121452746596003`*^9, 3.5121452797222958`*^9}}],

Cell[CellGroupData[{

Cell[TextData[{
 "A firm will always try to maximize profits. One way this is calculated is \
to say that ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     FractionBox[
      RowBox[{"\[PartialD]", "\[Pi]"}], 
      RowBox[{"\[PartialD]", "q"}]], "=", 
     RowBox[{
      RowBox[{
       RowBox[{
        FractionBox[
         RowBox[{"\[PartialD]", "p"}], 
         RowBox[{"\[PartialD]", "q"}]], "q"}], "-", 
       FractionBox[
        RowBox[{"\[PartialD]", "C"}], 
        RowBox[{"\[PartialD]", "q"}]]}], "=", 
      RowBox[{
       RowBox[{
        FractionBox[
         RowBox[{"\[PartialD]", "TR"}], 
         RowBox[{"\[PartialD]", "q"}]], "-", 
        FractionBox[
         RowBox[{"\[PartialD]", "TC"}], 
         RowBox[{"\[PartialD]", "q"}]]}], "=", "0"}]}]}], ",", " ", 
    RowBox[{
     RowBox[{"or", " ", "that", 
      FractionBox[
       RowBox[{"\[PartialD]", "TR"}], 
       RowBox[{"\[PartialD]", "q"}]]}], "=", 
     FractionBox[
      RowBox[{"\[PartialD]", "TC"}], 
      RowBox[{"\[PartialD]", "q"}]], " "}]}], TraditionalForm]],
  FormatType->"TraditionalForm"]
}], "Item",
 CellChangeTimes->{{3.512144609310368*^9, 3.5121447153234158`*^9}, 
   3.512146257632167*^9}],

Cell[TextData[{
 "Marginal Revenue is ",
 Cell[BoxData[
  FormBox[
   RowBox[{"p", "=", 
    RowBox[{"q", "*", 
     FractionBox[
      RowBox[{"\[PartialD]", "p"}], 
      RowBox[{"\[PartialD]", "q"}]]}]}], TraditionalForm]],
  FormatType->"TraditionalForm"]
}], "Item",
 CellChangeTimes->{{3.512144715636251*^9, 3.512144752346702*^9}}],

Cell["\<\
A firm\[CloseCurlyQuote]s short run supply curve is the marginal cost curve \
above average variable cost. \
\>", "Item",
 CellChangeTimes->{{3.512144780237165*^9, 3.51214478091238*^9}, {
  3.512145064757308*^9, 3.512145064763715*^9}}],

Cell["Producer surplus PS", "Item",
 CellChangeTimes->{{3.512145065117605*^9, 3.512145077477149*^9}}],

Cell[TextData[{
 "\[CapitalDelta]PS = ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["\[Pi]", "2"], "-", 
     SubscriptBox["\[Pi]", "1"]}], "=", 
    RowBox[{
     SubsuperscriptBox["\[Integral]", 
      SubscriptBox["P", "1"], 
      SubscriptBox["P", "2"]], 
     RowBox[{
      RowBox[{"q", "(", "P", ")"}], 
      RowBox[{"\[DifferentialD]", "P"}]}]}]}], TraditionalForm]],
  FormatType->"TraditionalForm"]
}], "Subitem",
 CellChangeTimes->{{3.512145084757848*^9, 3.5121451255485153`*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Profit Function", "Subsection",
 CellChangeTimes->{{3.512144782091049*^9, 3.512144788242659*^9}}],

Cell["\[Pi]=Pq-C=pf(k,l)-wl - vk", "Item",
 CellChangeTimes->{{3.5121447945546494`*^9, 3.512144810138364*^9}}],

Cell[CellGroupData[{

Cell["\<\
Properties of the profit Function\
\>", "Subsubsection",
 CellChangeTimes->{{3.512144822986047*^9, 3.512144849505704*^9}}],

Cell[CellGroupData[{

Cell["\<\
Homogeneity: the profit function is homogeneous to degree 1 in all prices. \
That means if you double input prices and selling price you will double \
profits. \
\>", "Item",
 CellChangeTimes->{{3.512144857897403*^9, 3.512144900454466*^9}, 
   3.51214626531917*^9}],

Cell["\<\
Non-decreasing in output price p: This means that if price increases, a firm \
will choose to produce more. \
\>", "Item",
 CellChangeTimes->{{3.512144900904674*^9, 3.5121449329654207`*^9}}],

Cell["\<\
Profit Functions are non increasing in input prices v,w: this means that if \
input prices rise, profits cannot increase. \
\>", "Item",
 CellChangeTimes->{{3.512144961791471*^9, 3.5121449642971687`*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["The Envelope theorem results", "Subsubsection",
 CellChangeTimes->{{3.512144974446163*^9, 3.5121449810310802`*^9}, 
   3.512146266150688*^9}],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   FractionBox[
    RowBox[{"\[PartialD]", 
     RowBox[{"\[Pi]", "(", 
      RowBox[{"P", ",", "v", ",", "w"}], ")"}]}], 
    RowBox[{"\[PartialD]", "P"}]], "=", 
   RowBox[{"q", "(", 
    RowBox[{"P", ",", "v", ",", "w"}], ")"}]}], TraditionalForm]],
 FormatType->"TraditionalForm"]], "Item",
 CellChangeTimes->{{3.512144984279028*^9, 3.5121450306646347`*^9}}],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   FractionBox[
    RowBox[{"\[PartialD]", 
     RowBox[{"\[Pi]", "(", 
      RowBox[{"P", ",", "v", ",", "w"}], ")"}]}], 
    RowBox[{"\[PartialD]", "v"}]], "=", 
   RowBox[{"k", "(", 
    RowBox[{"P", ",", "v", ",", "w"}], ")"}]}], TraditionalForm]]]], "Item",
 CellChangeTimes->{{3.512145023278902*^9, 3.512145044399198*^9}}],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   FractionBox[
    RowBox[{"\[PartialD]", 
     RowBox[{"\[Pi]", "(", 
      RowBox[{"P", ",", "v", ",", "w"}], ")"}]}], 
    RowBox[{"\[PartialD]", "w"}]], "=", 
   RowBox[{"l", "(", 
    RowBox[{"P", ",", "v", ",", "w"}], ")"}]}], TraditionalForm]]]], "Item",
 CellChangeTimes->{{3.512145044531348*^9, 3.512145052014414*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Input Demand", "Subsection",
 CellChangeTimes->{{3.5121451465883904`*^9, 3.512145152387583*^9}}],

Cell[CellGroupData[{

Cell[TextData[{
 "These are called ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SuperscriptBox["k", "*"], "(", 
     RowBox[{"P", ",", "v", ",", "w"}], ")"}], " ", "and", " ", 
    RowBox[{
     SuperscriptBox["l", "*"], "(", 
     RowBox[{"P", ",", "v", ",", "w"}], ")"}]}], TraditionalForm]],
  FormatType->"TraditionalForm"]
}], "Item",
 CellChangeTimes->{{3.512145205748879*^9, 3.512145221202085*^9}}],

Cell["\<\
They are found by solving the Lagrangian problem for cost minimization\
\>", "Item",
 CellChangeTimes->{{3.5121452468415813`*^9, 3.512145265044335*^9}, 
   3.512146266814226*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Partial Competitive Equilibrium and Applications", "Section",
 CellChangeTimes->{{3.511997478461596*^9, 3.511997493780924*^9}}],

Cell[CellGroupData[{

Cell["Definitions", "Subsection",
 CellChangeTimes->{{3.512145291161016*^9, 3.512145292406649*^9}}],

Cell[CellGroupData[{

Cell["\<\
Market Demand is the sum of all the individual\[CloseCurlyQuote]s demands for \
a particular good\
\>", "Item",
 CellChangeTimes->{{3.512145294184688*^9, 3.5121453075418*^9}}],

Cell[TextData[{
 "Market ",
 Cell[BoxData[
  FormBox[
   RowBox[{"Supply", "(", 
    SubscriptBox["Q", "s"], ")"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " is the sum of all the firm\[CloseCurlyQuote]s supply of a good ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    SubscriptBox["q", "s"], ")"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " at a price level. In a competitive market with n firms ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["Q", "s"], "=", 
    RowBox[{
     SubscriptBox["q", "s"], "*", "n"}]}], TraditionalForm]],
  FormatType->"TraditionalForm"]
}], "Item",
 CellChangeTimes->{{3.512145308089876*^9, 3.512145361044675*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Differences in time", "Subsection",
 CellChangeTimes->{{3.5121453827362823`*^9, 3.512145388022834*^9}}],

Cell[CellGroupData[{

Cell["The Very short run", "Subsubsection",
 CellChangeTimes->{{3.5121453895116177`*^9, 3.512145394326798*^9}}],

Cell["\<\
In the very short run suppliers are fixed in their level of captial, output, \
and the number of firms n. A change in price will result in no change from \
suppliers. \
\>", "Item",
 CellChangeTimes->{{3.5121453953827133`*^9, 3.512145444390623*^9}, 
   3.512146267918483*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["The short run", "Subsubsection",
 CellChangeTimes->{{3.512145460125594*^9, 3.512145463629603*^9}}],

Cell["\<\
In the short run the amount of capital per firm and the number of firms are \
fixed, but quantity output is variable because they can shift labor inputs to \
respond to changes in price. \
\>", "Item",
 CellChangeTimes->{{3.512145506372294*^9, 3.512145541812056*^9}, 
   3.512146268678852*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Finding an equilibrium", "Subsection",
 CellChangeTimes->{{3.512145554163784*^9, 3.5121455611714897`*^9}}],

Cell[CellGroupData[{

Cell["No taxes", "Subsubsection",
 CellChangeTimes->{{3.512145563987631*^9, 3.5121455694594316`*^9}}],

Cell[CellGroupData[{

Cell[TextData[{
 "two main conditions: ",
 Cell[BoxData[{
  FormBox[
   RowBox[{
    SubscriptBox["Q", "D"], "=", 
    SubscriptBox["Q", "S"]}], TraditionalForm], "\[IndentingNewLine]", 
  FormBox[
   RowBox[{
    SubscriptBox["P", "D"], "=", 
    SubscriptBox["P", "S"]}], TraditionalForm]}],
  FormatType->"TraditionalForm"]
}], "Item",
 CellChangeTimes->{{3.512145571363267*^9, 3.512145605521837*^9}}],

Cell["\<\
Note that the prices are all equal and so are the quantities. Suppliers get \
what demanders pay. You can assume that in a competitive firm MC=p and for a \
market is just that times n. \
\>", "Item",
 CellChangeTimes->{{3.512145606395043*^9, 3.512145638434087*^9}, {
  3.5121456856252203`*^9, 3.512145715616794*^9}, {3.5121462735424*^9, 
  3.512146278718717*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["With taxes", "Subsubsection",
 CellChangeTimes->{{3.512145642130686*^9, 3.512145643617834*^9}}],

Cell[CellGroupData[{

Cell[TextData[{
 "two main conditions:",
 Cell[BoxData[{
  FormBox[
   RowBox[{
    SubscriptBox["Q", "D"], "=", 
    SubscriptBox["Q", "S"]}], TraditionalForm], "\[IndentingNewLine]", 
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["P", "D"], "-", "t"}], " ", "=", 
    SubscriptBox["P", "S"]}], TraditionalForm]}],
  FormatType->"TraditionalForm"],
 ", where t is the tax rate"
}], "Item",
 CellChangeTimes->{{3.512145645777853*^9, 3.512145663849016*^9}}],

Cell["\<\
The main effect of a tax is to distort the price demanders pay and the price \
suppliers get. \
\>", "Item",
 CellChangeTimes->{{3.512145665121725*^9, 3.512145683497199*^9}, 
   3.512146285342299*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Ricardian Rent", "Subsection",
 CellChangeTimes->{{3.512145735704832*^9, 3.512145739095001*^9}}],

Cell[CellGroupData[{

Cell["\<\
This is why LeBron makes so much darn money!!\
\>", "Item",
 CellChangeTimes->{{3.512145740656167*^9, 3.512145758357101*^9}}],

Cell["\<\
It is the idea that there are different qualities of inputs that can be used \
in production of outputs. The higher quality the more expensive and the owner \
can charge rents to others for their use. \
\>", "Item",
 CellChangeTimes->{{3.512145759351404*^9, 3.512145807654374*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Welfare Analysis", "Subsection",
 CellChangeTimes->{{3.5121458219103403`*^9, 3.512145823768197*^9}}],

Cell[CellGroupData[{

Cell["\<\
Consumer surplus and producer surplus have already been defined. Total \
surplus is the sum of PS and CS.\
\>", "Item",
 CellChangeTimes->{{3.512145875749399*^9, 3.512145897173177*^9}, 
   3.5121462934458637`*^9}],

Cell["Tax revenues is Q*t.", "Item",
 CellChangeTimes->{{3.5121458992211447`*^9, 3.5121459067087173`*^9}, {
  3.512146298557411*^9, 3.512146300077764*^9}}],

Cell["\<\
The excess burden of a tax is also known as the deadwieght loss. It is the \
amount of total surplus lost that was not collected as tax revenues. On a \
graph it is the little triangle by the original equilibrium. \
\>", "Item",
 CellChangeTimes->{{3.512145826598406*^9, 3.512145873125024*^9}, 
   3.5121463053586407`*^9}],

Cell["\<\
Tax incidence is most often shown in percentage terms and is calculated as \
follows.\
\>", "Item",
 CellChangeTimes->{{3.512145915532619*^9, 3.512145936756424*^9}}],

Cell[CellGroupData[{

Cell[TextData[{
 "Consumer tax incidence = ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox[
     SubscriptBox["\[CapitalDelta]P", "D"], 
     RowBox[{"t", "="}]], 
    FractionBox[
     RowBox[{"(", 
      RowBox[{
       SubscriptBox["P", 
        RowBox[{"D", " "}]], "-", 
       SuperscriptBox["P", "*"]}], ")"}], "t"]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", it is the percentage of the burden of the tax consumers had to deal \
with."
}], "Subitem",
 CellChangeTimes->{{3.5121459391486797`*^9, 3.512146022373241*^9}}],

Cell[TextData[{
 "Producer Tax incidence = ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox[
     SubscriptBox["\[CapitalDelta]P", "S"], 
     RowBox[{"t", "="}]], 
    FractionBox[
     RowBox[{"(", 
      RowBox[{
       SubscriptBox[
        SuperscriptBox["P", "*"], " "], "-", 
       SubscriptBox["P", "S"]}], ")"}], "t"]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", it is the percentage of the burden of the tax producers had to deal \
with."
}], "Subitem",
 CellChangeTimes->{{3.512146022502013*^9, 3.512146049811097*^9}}],

Cell["\<\
The tax incidence will be the greatest for the group (consumer or producer) \
that has a more inelastic curve. On a graph this more vertical. \
\>", "Subitem",
 CellChangeTimes->{{3.512146058962058*^9, 3.5121460880975313`*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Equations", "Subtitle",
 CellChangeTimes->{{3.511997669544739*^9, 3.5119976708870373`*^9}}],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   SuperscriptBox["x", "*"], "(", 
   RowBox[{
    SubscriptBox["p", "x"], ",", 
    SubscriptBox["p", "y"], ",", "I"}], ")"}], TraditionalForm]]]], "Item",
 CellChangeTimes->{{3.5121336184951267`*^9, 3.512133635321815*^9}}],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   SuperscriptBox["y", "*"], "(", 
   RowBox[{
    SubscriptBox["p", "x"], ",", 
    SubscriptBox["p", "y"], ",", "I"}], ")"}], TraditionalForm]]]], "Item",
 CellChangeTimes->{{3.5121336366031427`*^9, 3.512133641408428*^9}}],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   SuperscriptBox["x", "c"], "(", 
   RowBox[{
    SubscriptBox["p", "x"], ",", 
    SubscriptBox["p", "y"], ",", 
    OverscriptBox["U", "-"]}], ")"}], TraditionalForm]]]], "Item",
 CellChangeTimes->{{3.512133642222415*^9, 3.512133663489129*^9}}],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   SuperscriptBox["y", "c"], "(", 
   RowBox[{
    SubscriptBox["p", "x"], ",", 
    SubscriptBox["p", "y"], ",", 
    OverscriptBox["U", "-"]}], ")"}], TraditionalForm]]]], "Item",
 CellChangeTimes->{{3.512133664338275*^9, 3.5121336689682817`*^9}}],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{"E", "(", 
   RowBox[{
    SubscriptBox["p", "x"], ",", 
    SubscriptBox["p", "y"], ",", "U"}], ")"}], TraditionalForm]]]], "Item",
 CellChangeTimes->{{3.512133672771926*^9, 3.512133682767703*^9}}],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{"V", "(", 
   RowBox[{
    SubscriptBox["p", "x"], ",", 
    SubscriptBox["p", "y"], ",", "I"}], ")"}], TraditionalForm]]]], "Item",
 CellChangeTimes->{{3.512133684779525*^9, 3.512133692983726*^9}}],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   SuperscriptBox["\[Pi]", "*"], "(", 
   RowBox[{"p", ",", "v", ",", "w"}], ")"}], TraditionalForm]]]], "Item",
 CellChangeTimes->{{3.512133700171698*^9, 3.5121337120157423`*^9}}],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   SuperscriptBox["l", "*"], "(", 
   RowBox[{"p", ",", "w", ",", "v"}], ")"}], TraditionalForm]]]], "Item",
 CellChangeTimes->{{3.5121337149788313`*^9, 3.512133726199318*^9}}],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   SuperscriptBox["k", "*"], "(", 
   RowBox[{"p", ",", "v", ",", "w"}], ")"}], TraditionalForm]]]], "Item",
 CellChangeTimes->{{3.512133727471263*^9, 3.512133737735219*^9}}],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   SuperscriptBox["l", "c"], "(", 
   OverscriptBox[
    RowBox[{
     RowBox[{"q", ",", "v", ",", "w"}], ")"}], "-"]}], 
  TraditionalForm]]]], "Item",
 CellChangeTimes->{{3.512133746170074*^9, 3.512133769694643*^9}}],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   SuperscriptBox["k", "c"], "(", 
   RowBox[{
    OverscriptBox["q", "-"], ",", "v", ",", "w"}], ")"}], 
  TraditionalForm]]]], "Item",
 CellChangeTimes->{{3.5121337709214*^9, 3.512133797949552*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{950, 985},
WindowMargins->{{-25, Automatic}, {Automatic, 0}},
PrintingCopies->1,
PrintingPageRange->{1, Automatic},
FrontEndVersion->"8.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (November 6, \
2010)",
StyleDefinitions->FrontEnd`FileName[{"Report"}, "ConfidentialReport.nb", 
  CharacterEncoding -> "UTF-8"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[579, 22, 104, 1, 66, "Title"],
Cell[686, 25, 139, 2, 26, "Subtitle"],
Cell[CellGroupData[{
Cell[850, 31, 158, 2, 26, "Subtitle",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[1011, 35, 309, 6, 67, "Section",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}]
}, Open  ]],
Cell[CellGroupData[{
Cell[1357, 46, 165, 2, 34, "Subsection"],
Cell[CellGroupData[{
Cell[1547, 52, 231, 5, 20, "Item"],
Cell[1781, 59, 271, 5, 20, "Item"],
Cell[2055, 66, 297, 6, 20, "Item"],
Cell[2355, 74, 194, 4, 20, "Item"],
Cell[2552, 80, 268, 5, 20, "Item"],
Cell[2823, 87, 209, 4, 20, "Item"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[3081, 97, 97, 1, 34, "Subsection"],
Cell[3181, 100, 402, 7, 33, "Item"],
Cell[CellGroupData[{
Cell[3608, 111, 108, 1, 24, "Subsubsection"],
Cell[CellGroupData[{
Cell[3741, 116, 271, 5, 20, "Item"],
Cell[4015, 123, 232, 4, 20, "Item"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[4308, 134, 166, 2, 34, "Subsection"],
Cell[CellGroupData[{
Cell[4499, 140, 126, 1, 24, "Subsubsection"],
Cell[CellGroupData[{
Cell[4650, 145, 391, 7, 33, "Item"],
Cell[5044, 154, 137, 3, 20, "Item"],
Cell[5184, 159, 136, 1, 20, "Item"],
Cell[5323, 162, 91, 1, 20, "Item"],
Cell[5417, 165, 179, 4, 20, "Item"],
Cell[5599, 171, 130, 1, 20, "Item"],
Cell[5732, 174, 116, 1, 20, "Item"],
Cell[5851, 177, 106, 1, 20, "Item"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[6006, 184, 170, 2, 24, "Subsubsection"],
Cell[CellGroupData[{
Cell[6201, 190, 453, 13, 60, "Item"],
Cell[6657, 205, 645, 18, 34, "Item"],
Cell[7305, 225, 349, 7, 33, "Item"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[7715, 239, 149, 2, 34, "Subsection"],
Cell[CellGroupData[{
Cell[7889, 245, 111, 1, 24, "Subsubsection"],
Cell[8003, 248, 391, 11, 23, "Item"],
Cell[CellGroupData[{
Cell[8419, 263, 461, 12, 33, "Input"],
Cell[8883, 277, 34940, 614, 216, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[43872, 897, 119, 1, 18, "Subsubsection"],
Cell[43994, 900, 117, 1, 20, "Item"],
Cell[CellGroupData[{
Cell[44136, 905, 403, 11, 27, "Input"],
Cell[44542, 918, 11181, 210, 211, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[55772, 1134, 141, 3, 18, "Subsubsection"],
Cell[55916, 1139, 122, 1, 20, "Item"],
Cell[CellGroupData[{
Cell[56063, 1144, 370, 11, 27, "Input"],
Cell[56436, 1157, 27912, 483, 193, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[84397, 1646, 106, 1, 18, "Subsubsection"],
Cell[84506, 1649, 574, 17, 34, "Item"],
Cell[CellGroupData[{
Cell[85105, 1670, 359, 10, 27, "Input"],
Cell[85467, 1682, 11586, 214, 202, "Output"]
}, Open  ]],
Cell[97068, 1899, 353, 10, 33, "Input"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[97470, 1915, 289, 5, 37, "Section"],
Cell[CellGroupData[{
Cell[97784, 1924, 116, 1, 34, "Subsection"],
Cell[CellGroupData[{
Cell[97925, 1929, 395, 13, 22, "Item"],
Cell[98323, 1944, 596, 18, 32, "Item"],
Cell[98922, 1964, 362, 7, 20, "Item"],
Cell[99287, 1973, 324, 11, 35, "Item"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[99660, 1990, 111, 1, 35, "Subsection"],
Cell[CellGroupData[{
Cell[99796, 1995, 275, 5, 20, "Item"],
Cell[100074, 2002, 588, 20, 36, "Item"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[100711, 2028, 212, 4, 35, "Subsection"],
Cell[CellGroupData[{
Cell[100948, 2036, 196, 4, 20, "Item"],
Cell[101147, 2042, 202, 4, 20, "Item"],
Cell[101352, 2048, 216, 5, 20, "Item"],
Cell[CellGroupData[{
Cell[101593, 2057, 2236, 65, 115, "Subitem"],
Cell[103832, 2124, 1632, 55, 105, "Subitem"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[105525, 2186, 330, 10, 40, "Subsection"],
Cell[CellGroupData[{
Cell[105880, 2200, 792, 22, 20, "Item"],
Cell[106675, 2224, 444, 7, 33, "Item"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[107168, 2237, 151, 3, 34, "Subsection"],
Cell[CellGroupData[{
Cell[107344, 2244, 112, 1, 24, "Subsubsection"],
Cell[107459, 2247, 367, 7, 33, "Item"]
}, Open  ]],
Cell[CellGroupData[{
Cell[107863, 2259, 122, 1, 24, "Subsubsection"],
Cell[CellGroupData[{
Cell[108010, 2264, 452, 11, 22, "Item"],
Cell[108465, 2277, 530, 17, 39, "Item"],
Cell[108998, 2296, 296, 5, 33, "Item"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[109343, 2307, 120, 1, 18, "Subsubsection"],
Cell[CellGroupData[{
Cell[109488, 2312, 96, 1, 20, "Item"],
Cell[CellGroupData[{
Cell[109609, 2317, 318, 11, 31, "Subitem"],
Cell[109930, 2330, 380, 13, 31, "Subitem"]
}, Open  ]],
Cell[110325, 2346, 100, 1, 20, "Item"],
Cell[CellGroupData[{
Cell[110450, 2351, 262, 9, 30, "Subitem"],
Cell[110715, 2362, 406, 14, 33, "Subitem"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[111206, 2385, 237, 5, 67, "Section"],
Cell[CellGroupData[{
Cell[111468, 2394, 135, 3, 34, "Subsection"],
Cell[CellGroupData[{
Cell[111628, 2401, 529, 16, 20, "Item"],
Cell[112160, 2419, 219, 5, 20, "Item"],
Cell[112382, 2426, 195, 4, 20, "Item"],
Cell[112580, 2432, 503, 8, 46, "Item"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[113132, 2446, 240, 7, 36, "Subsection"],
Cell[CellGroupData[{
Cell[113397, 2457, 528, 8, 46, "Item"],
Cell[113928, 2467, 344, 6, 33, "Item"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[114321, 2479, 110, 1, 35, "Subsection"],
Cell[CellGroupData[{
Cell[114456, 2484, 321, 6, 33, "Item"],
Cell[114780, 2492, 638, 20, 35, "Item"],
Cell[115421, 2514, 546, 18, 24, "Item"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[116016, 2538, 100, 1, 34, "Subsection"],
Cell[CellGroupData[{
Cell[116141, 2543, 364, 11, 29, "Subsubsection"],
Cell[CellGroupData[{
Cell[116530, 2558, 795, 25, 36, "Item"],
Cell[117328, 2585, 1390, 45, 111, "Item"],
Cell[118721, 2632, 219, 5, 20, "Item"],
Cell[118943, 2639, 188, 4, 20, "Item"],
Cell[119134, 2645, 183, 4, 20, "Item"],
Cell[119320, 2651, 195, 4, 20, "Item"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[119564, 2661, 277, 10, 31, "Subsubsection"],
Cell[CellGroupData[{
Cell[119866, 2675, 846, 26, 38, "Item"],
Cell[120715, 2703, 739, 24, 71, "Item"],
Cell[121457, 2729, 220, 4, 20, "Item"],
Cell[121680, 2735, 226, 4, 20, "Item"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[121955, 2745, 249, 8, 22, "Subsubsection"],
Cell[CellGroupData[{
Cell[122229, 2757, 686, 21, 35, "Item"],
Cell[122918, 2780, 906, 30, 105, "Item"],
Cell[123827, 2812, 189, 4, 20, "Item"],
Cell[124019, 2818, 210, 5, 20, "Item"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[124278, 2829, 108, 1, 24, "Subsubsection"],
Cell[CellGroupData[{
Cell[124411, 2834, 470, 16, 24, "Item"],
Cell[124884, 2852, 219, 4, 20, "Item"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[125152, 2862, 109, 1, 18, "Subsubsection"],
Cell[CellGroupData[{
Cell[125286, 2867, 564, 19, 24, "Item"],
Cell[125853, 2888, 303, 6, 33, "Item"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[126217, 2901, 106, 1, 34, "Subsection"],
Cell[CellGroupData[{
Cell[126348, 2906, 112, 1, 24, "Subsubsection"],
Cell[CellGroupData[{
Cell[126485, 2911, 350, 12, 30, "Item"],
Cell[126838, 2925, 278, 5, 33, "Item"],
Cell[127119, 2932, 226, 4, 20, "Item"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[127394, 2942, 120, 1, 18, "Subsubsection"],
Cell[CellGroupData[{
Cell[127539, 2947, 488, 15, 30, "Item"],
Cell[CellGroupData[{
Cell[128052, 2966, 285, 6, 20, "Subitem"],
Cell[128340, 2974, 357, 6, 33, "Subitem"]
}, Open  ]],
Cell[128712, 2983, 589, 18, 20, "Item"],
Cell[CellGroupData[{
Cell[129326, 3005, 465, 8, 33, "Subitem"],
Cell[129794, 3015, 447, 7, 33, "Subitem"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[130302, 3029, 118, 1, 24, "Subsubsection"],
Cell[CellGroupData[{
Cell[130445, 3034, 557, 18, 26, "Item"],
Cell[131005, 3054, 347, 6, 33, "Subitem"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[131413, 3067, 162, 3, 34, "Subsection"],
Cell[CellGroupData[{
Cell[131600, 3074, 66482, 1384, 1827, "Input",
 CellID->361327311],
Cell[198085, 4460, 17146, 341, 502, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[215292, 4808, 105, 1, 26, "Subtitle"],
Cell[CellGroupData[{
Cell[215422, 4813, 227, 5, 67, "Section"],
Cell[CellGroupData[{
Cell[215674, 4822, 110, 1, 34, "Subsection"],
Cell[CellGroupData[{
Cell[215809, 4827, 294, 5, 20, "Item"],
Cell[216106, 4834, 133, 3, 20, "Item"],
Cell[CellGroupData[{
Cell[216264, 4841, 433, 14, 31, "Subitem"],
Cell[216700, 4857, 406, 13, 31, "Subitem"]
}, Open  ]],
Cell[217121, 4873, 151, 4, 20, "Item"],
Cell[CellGroupData[{
Cell[217297, 4881, 517, 16, 35, "Subitem"],
Cell[217817, 4899, 518, 16, 35, "Subitem"]
}, Open  ]],
Cell[218350, 4918, 114, 1, 20, "Item"],
Cell[CellGroupData[{
Cell[218489, 4923, 244, 6, 28, "Subitem"],
Cell[218736, 4931, 242, 6, 28, "Subitem"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[219039, 4944, 150, 3, 35, "Subsection"],
Cell[CellGroupData[{
Cell[219214, 4951, 204, 4, 20, "Item"],
Cell[219421, 4957, 311, 6, 33, "Item"],
Cell[219735, 4965, 582, 17, 33, "Item"],
Cell[220320, 4984, 228, 4, 20, "Item"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[220597, 4994, 106, 1, 34, "Subsection"],
Cell[CellGroupData[{
Cell[220728, 4999, 118, 1, 24, "Subsubsection"],
Cell[CellGroupData[{
Cell[220871, 5004, 98, 1, 20, "Item"],
Cell[220972, 5007, 192, 4, 20, "Item"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[221213, 5017, 118, 1, 24, "Subsubsection"],
Cell[CellGroupData[{
Cell[221356, 5022, 104, 1, 20, "Item"],
Cell[221463, 5025, 245, 5, 20, "Item"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[221757, 5036, 118, 1, 24, "Subsubsection"],
Cell[CellGroupData[{
Cell[221900, 5041, 102, 1, 20, "Item"],
Cell[222005, 5044, 197, 4, 20, "Item"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[222275, 5056, 212, 3, 67, "Section"],
Cell[CellGroupData[{
Cell[222512, 5063, 150, 2, 34, "Subsection"],
Cell[CellGroupData[{
Cell[222687, 5069, 158, 3, 20, "Item"],
Cell[222848, 5074, 369, 6, 33, "Item"],
Cell[223220, 5082, 108, 1, 20, "Item"],
Cell[223331, 5085, 286, 5, 20, "Item"],
Cell[223620, 5092, 365, 12, 32, "Item"],
Cell[223988, 5106, 493, 16, 33, "Item"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[224530, 5128, 107, 1, 34, "Subsection"],
Cell[CellGroupData[{
Cell[224662, 5133, 148, 2, 24, "Subsubsection"],
Cell[CellGroupData[{
Cell[224835, 5139, 256, 5, 20, "Item"],
Cell[225094, 5146, 284, 5, 33, "Item"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[225427, 5157, 101, 1, 18, "Subsubsection"],
Cell[CellGroupData[{
Cell[225553, 5162, 216, 4, 20, "Item"],
Cell[225772, 5168, 148, 3, 20, "Item"],
Cell[225923, 5173, 209, 4, 20, "Item"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[226193, 5184, 106, 1, 27, "Subsection"],
Cell[CellGroupData[{
Cell[226324, 5189, 348, 6, 33, "Item"],
Cell[226675, 5197, 279, 5, 33, "Item"]
}, Open  ]],
Cell[CellGroupData[{
Cell[226991, 5207, 137, 3, 24, "Subsubsection"],
Cell[CellGroupData[{
Cell[227153, 5214, 1746, 56, 110, "Item"],
Cell[228902, 5272, 217, 4, 20, "Item"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[229180, 5283, 118, 1, 26, "Subsection"],
Cell[CellGroupData[{
Cell[229323, 5288, 274, 6, 20, "Item"],
Cell[229600, 5296, 249, 5, 20, "Item"],
Cell[229852, 5303, 140, 3, 20, "Item"],
Cell[229995, 5308, 186, 4, 20, "Item"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[230242, 5319, 177, 4, 67, "Section"],
Cell[CellGroupData[{
Cell[230444, 5327, 103, 1, 34, "Subsection"],
Cell[CellGroupData[{
Cell[230572, 5332, 1206, 38, 33, "Item"],
Cell[231781, 5372, 337, 11, 33, "Item"],
Cell[232121, 5385, 245, 5, 20, "Item"],
Cell[232369, 5392, 101, 1, 20, "Item"],
Cell[232473, 5395, 519, 17, 31, "Subitem"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[233041, 5418, 103, 1, 34, "Subsection"],
Cell[233147, 5421, 110, 1, 20, "Item"],
Cell[CellGroupData[{
Cell[233282, 5426, 132, 3, 24, "Subsubsection"],
Cell[CellGroupData[{
Cell[233439, 5433, 275, 6, 20, "Item"],
Cell[233717, 5441, 200, 4, 20, "Item"],
Cell[233920, 5447, 214, 4, 20, "Item"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[234183, 5457, 147, 2, 24, "Subsubsection"],
Cell[CellGroupData[{
Cell[234355, 5463, 411, 11, 31, "Item"],
Cell[234769, 5476, 377, 10, 31, "Item"],
Cell[235149, 5488, 377, 10, 31, "Item"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[235587, 5505, 102, 1, 34, "Subsection"],
Cell[CellGroupData[{
Cell[235714, 5510, 419, 13, 20, "Item"],
Cell[236136, 5525, 188, 4, 20, "Item"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[236385, 5536, 133, 1, 67, "Section"],
Cell[CellGroupData[{
Cell[236543, 5541, 99, 1, 34, "Subsection"],
Cell[CellGroupData[{
Cell[236667, 5546, 185, 4, 20, "Item"],
Cell[236855, 5552, 687, 22, 20, "Item"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[237591, 5580, 109, 1, 34, "Subsection"],
Cell[CellGroupData[{
Cell[237725, 5585, 111, 1, 24, "Subsubsection"],
Cell[237839, 5588, 285, 6, 20, "Item"]
}, Open  ]],
Cell[CellGroupData[{
Cell[238161, 5599, 104, 1, 24, "Subsubsection"],
Cell[238268, 5602, 303, 6, 33, "Item"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[238620, 5614, 112, 1, 35, "Subsection"],
Cell[CellGroupData[{
Cell[238757, 5619, 101, 1, 24, "Subsubsection"],
Cell[CellGroupData[{
Cell[238883, 5624, 404, 13, 36, "Item"],
Cell[239290, 5639, 374, 7, 33, "Item"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[239713, 5652, 101, 1, 24, "Subsubsection"],
Cell[CellGroupData[{
Cell[239839, 5657, 464, 15, 36, "Item"],
Cell[240306, 5674, 210, 5, 20, "Item"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[240577, 5686, 102, 1, 34, "Subsection"],
Cell[CellGroupData[{
Cell[240704, 5691, 135, 3, 20, "Item"],
Cell[240842, 5696, 291, 5, 33, "Item"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[241182, 5707, 106, 1, 35, "Subsection"],
Cell[CellGroupData[{
Cell[241313, 5712, 223, 5, 20, "Item"],
Cell[241539, 5719, 155, 2, 20, "Item"],
Cell[241697, 5723, 332, 6, 33, "Item"],
Cell[242032, 5731, 175, 4, 20, "Item"],
Cell[CellGroupData[{
Cell[242232, 5739, 551, 18, 34, "Subitem"],
Cell[242786, 5759, 553, 18, 34, "Subitem"],
Cell[243342, 5779, 237, 4, 20, "Subitem"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[243664, 5792, 97, 1, 26, "Subtitle"],
Cell[CellGroupData[{
Cell[243786, 5797, 273, 7, 26, "Item"],
Cell[244062, 5806, 273, 7, 26, "Item"],
Cell[244338, 5815, 296, 8, 33, "Item"],
Cell[244637, 5825, 298, 8, 33, "Item"],
Cell[244938, 5835, 246, 6, 26, "Item"],
Cell[245187, 5843, 246, 6, 26, "Item"],
Cell[245436, 5851, 229, 5, 20, "Item"],
Cell[245668, 5858, 225, 5, 20, "Item"],
Cell[245896, 5865, 223, 5, 20, "Item"],
Cell[246122, 5872, 267, 8, 33, "Item"],
Cell[246392, 5882, 249, 7, 31, "Item"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
