(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 8.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[    140871,       2785]
NotebookOptionsPosition[    137982,       2685]
NotebookOutlinePosition[    138392,       2703]
CellTagsIndexPosition[    138349,       2700]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<`*\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.543329765047514*^9, 3.543329772153619*^9}}],

Cell[CellGroupData[{

Cell["Final Exam", "Title",
 CellChangeTimes->{{3.543017434119787*^9, 3.543017436684534*^9}, {
  3.543330290400745*^9, 3.543330293406127*^9}}],

Cell["Spencer Lyon", "Subtitle",
 CellChangeTimes->{{3.543036426442772*^9, 3.543036430441557*^9}}],

Cell[CellGroupData[{

Cell["Part 1: OLS Estimation", "Section",
 CellChangeTimes->{{3.543017446381339*^9, 3.543017448332693*^9}, {
  3.543330296127112*^9, 3.543330301386572*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"SetDirectory", "[", "\"\</Users/spencerlyon2/Desktop\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"data", " ", "=", " ", 
   RowBox[{"Import", "[", "\"\<gmm_data.xlsx\>\"", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.543017450391576*^9, 3.543017525196208*^9}, 
   3.543017680839686*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "s1b1", ",", " ", "s1b2", ",", " ", "s1b3", ",", " ", "s2b1", ",", " ", 
     "s2b2", ",", " ", "s2b3", ",", " ", "rmark", ",", " ", "rf"}], "}"}], 
   " ", "=", " ", 
   RowBox[{"newData", "=", 
    RowBox[{"Rest", "[", 
     RowBox[{"Transpose", "[", 
      RowBox[{"Rest", "[", 
       RowBox[{"data", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}], "]"}]}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.5430175313395863`*^9, 3.5430176771201353`*^9}, 
   3.543017830386492*^9, {3.5430345232382393`*^9, 3.543034523927134*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"r1", " ", "=", " ", 
   RowBox[{"s1b1Excess", " ", "=", " ", 
    RowBox[{"s1b1", "-", "rf"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"r2", " ", "=", " ", 
   RowBox[{"s1b2Excess", " ", "=", " ", 
    RowBox[{"s1b2", "-", "rf"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"r3", " ", "=", " ", 
   RowBox[{"s1b3Excess", " ", "=", " ", 
    RowBox[{"s1b3", "-", "rf"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"r4", " ", "=", " ", 
   RowBox[{"s2b1Excess", " ", "=", " ", 
    RowBox[{"s2b1", "-", "rf"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"r5", " ", "=", " ", 
   RowBox[{"s2b2Excess", " ", "=", " ", 
    RowBox[{"s2b2", "-", "rf"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"r6", " ", "=", " ", 
   RowBox[{"s2b3Excess", " ", "=", " ", 
    RowBox[{"s2b3", "-", "rf"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rm", "=", " ", 
   RowBox[{"marketExcess", " ", "=", " ", 
    RowBox[{"rmark", "-", "rf"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"excessList", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
    "s1b1Excess", ",", "s1b2Excess", ",", "s1b3Excess", ",", "s2b1Excess", 
     ",", "s2b2Excess", ",", "s2b3Excess", ",", "marketExcess"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"n", " ", "=", " ", 
   RowBox[{"Length", "[", "r1", "]"}]}], ";", 
  RowBox[{"means", " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"Mean", "[", "#", "]"}], "&"}], "/@", 
    RowBox[{"excessList", "[", 
     RowBox[{"[", 
      RowBox[{"1", ";;", "6"}], "]"}], "]"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.543017691346681*^9, 3.54301776285117*^9}, {
   3.543017839585722*^9, 3.543017884162105*^9}, {3.543034489908969*^9, 
   3.543034536411541*^9}, {3.543034578252743*^9, 3.543034584807229*^9}, 
   3.543322846915681*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"lms", " ", "=", " ", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "lm1", ",", "lm2", ",", "lm3", ",", "lm4", ",", "lm5", ",", "lm6"}], 
     "}"}], "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"LinearModelFit", "[", 
       RowBox[{
        RowBox[{"Transpose", "[", 
         RowBox[{"{", 
          RowBox[{"marketExcess", ",", 
           RowBox[{"excessList", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}], "}"}], "]"}], ",", "\[Beta]", 
        ",", "\[Beta]"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "6"}], "}"}]}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Beta]s", " ", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"lms", "[", 
        RowBox[{"[", "i", "]"}], "]"}], "[", "\"\<BestFitParameters\>\"", 
       "]"}], "[", 
      RowBox[{"[", "2", "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "6"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Lambda]lm", " ", "=", " ", 
   RowBox[{"LinearModelFit", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{"\[Beta]s", ",", "means"}], "}"}], "]"}], ",", "\[Lambda]", 
     ",", "\[Lambda]", ",", 
     RowBox[{"IncludeConstantBasis", "\[Rule]", "False"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AppendTo", "[", 
   RowBox[{"lms", ",", "\[Lambda]lm"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Lambda]1", "  ", "=", " ", 
   RowBox[{
    RowBox[{"\[Lambda]lm", "[", "\"\<BestFitParameters\>\"", "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.543017765267993*^9, 3.543017776548011*^9}, {
  3.543017822777399*^9, 3.543017827081985*^9}, {3.54303345626192*^9, 
  3.543033584145792*^9}, {3.543033923577124*^9, 3.543033924608953*^9}, {
  3.543328562922492*^9, 3.543328592814165*^9}, {3.543329757195508*^9, 
  3.543329762293687*^9}, {3.5433298273681602`*^9, 3.54332982921036*^9}, {
  3.5433312348872747`*^9, 3.543331235686549*^9}, {3.543331400519107*^9, 
  3.5433314744590178`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"info", " ", "=", " ", "\"\<ParameterTable\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"Print", "[", 
    RowBox[{
     RowBox[{"\"\<OLS Regression info for data set \>\"", " ", "<>", 
      RowBox[{"ToString", "[", "i", "]"}], "<>", "\"\<   \>\""}], ",", 
     RowBox[{
      RowBox[{"lms", "[", 
       RowBox[{"[", "i", "]"}], "]"}], "[", "info", "]"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "1", ",", 
     RowBox[{"Length", "[", "lms", "]"}], ",", "1"}], "}"}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.543033590010602*^9, 3.5430336507650633`*^9}, {
  3.543033690773657*^9, 3.5430340855094843`*^9}, {3.543328701568646*^9, 
  3.5433287141426563`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 FormBox[
  InterpretationBox[
   RowBox[{"\<\"OLS Regression info for data set 1   \"\>", 
    "\[InvisibleSpace]", 
    StyleBox[
     TagBox[GridBox[{
        {"\<\"\"\>", "\<\"Estimate\"\>", "\<\"Standard Error\"\>", "\<\"t\
\[Hyphen]Statistic\"\>", "\<\"P\[Hyphen]Value\"\>"},
        {"1", 
         RowBox[{"-", "0.001683303878145911`"}], "0.0013322241993329153`", 
         RowBox[{"-", "1.2635289758201298`"}], "0.20687099390896646`"},
        {"\[Beta]", "1.3391881837054556`", "0.02936494099403166`", 
         "45.60500169156279`", "7.614813379562576`*^-201"}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
       GridBoxDividers->{
        "ColumnsIndexed" -> {2 -> GrayLevel[0.7]}, 
         "RowsIndexed" -> {2 -> GrayLevel[0.7]}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
       
       GridBoxSpacings->{
        "ColumnsIndexed" -> {2 -> 1}, "RowsIndexed" -> {2 -> 0.75}}],
      "Grid"], "DialogStyle",
     StripOnInput->False]}],
   SequenceForm["OLS Regression info for data set 1   ", 
    Style[
     Grid[{{
       "", "Estimate", "Standard Error", "t\[Hyphen]Statistic", 
        "P\[Hyphen]Value"}, {
       1, -0.001683303878145911, 0.0013322241993329153`, -1.2635289758201298`,
         0.20687099390896646`}, {$CellContext`\[Beta], 1.3391881837054556`, 
        0.02936494099403166, 45.60500169156279, 7.614813379562576*^-201}}, 
      Alignment -> {Left, Automatic}, 
      Dividers -> {{2 -> GrayLevel[0.7]}, {2 -> GrayLevel[0.7]}}, 
      Spacings -> {{2 -> 1}, {2 -> 0.75}}], "DialogStyle"]],
   Editable->False], TraditionalForm]], "Print",
 CellChangeTimes->{{3.5430340338173723`*^9, 3.543034085762617*^9}, 
   3.543034545658361*^9, 3.543328604398347*^9, 3.54332864515064*^9, {
   3.5433286949216623`*^9, 3.543328714819291*^9}, 3.543329835385723*^9, 
   3.5433303056026087`*^9, 3.543331435874971*^9, 3.543755505549505*^9, 
   3.543757314599524*^9, 3.543770619559602*^9}],

Cell[BoxData[
 FormBox[
  InterpretationBox[
   RowBox[{"\<\"OLS Regression info for data set 2   \"\>", 
    "\[InvisibleSpace]", 
    StyleBox[
     TagBox[GridBox[{
        {"\<\"\"\>", "\<\"Estimate\"\>", "\<\"Standard Error\"\>", "\<\"t\
\[Hyphen]Statistic\"\>", "\<\"P\[Hyphen]Value\"\>"},
        {"1", "0.003423703798729747`", "0.0010260625019539958`", 
         "3.3367400058083896`", "0.0008980185722250684`"},
        {"\[Beta]", "1.0681730291053557`", "0.022616512176520075`", 
         "47.22978595321641`", "3.3305071928461584`*^-208"}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
       GridBoxDividers->{
        "ColumnsIndexed" -> {2 -> GrayLevel[0.7]}, 
         "RowsIndexed" -> {2 -> GrayLevel[0.7]}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
       
       GridBoxSpacings->{
        "ColumnsIndexed" -> {2 -> 1}, "RowsIndexed" -> {2 -> 0.75}}],
      "Grid"], "DialogStyle",
     StripOnInput->False]}],
   SequenceForm["OLS Regression info for data set 2   ", 
    Style[
     Grid[{{
       "", "Estimate", "Standard Error", "t\[Hyphen]Statistic", 
        "P\[Hyphen]Value"}, {
       1, 0.003423703798729747, 0.0010260625019539958`, 3.3367400058083896`, 
        0.0008980185722250684}, {$CellContext`\[Beta], 1.0681730291053557`, 
        0.022616512176520075`, 47.22978595321641, 3.3305071928461584`*^-208}},
       Alignment -> {Left, Automatic}, 
      Dividers -> {{2 -> GrayLevel[0.7]}, {2 -> GrayLevel[0.7]}}, 
      Spacings -> {{2 -> 1}, {2 -> 0.75}}], "DialogStyle"]],
   Editable->False], TraditionalForm]], "Print",
 CellChangeTimes->{{3.5430340338173723`*^9, 3.543034085762617*^9}, 
   3.543034545658361*^9, 3.543328604398347*^9, 3.54332864515064*^9, {
   3.5433286949216623`*^9, 3.543328714819291*^9}, 3.543329835385723*^9, 
   3.5433303056026087`*^9, 3.543331435874971*^9, 3.543755505549505*^9, 
   3.543757314599524*^9, 3.5437706195636387`*^9}],

Cell[BoxData[
 FormBox[
  InterpretationBox[
   RowBox[{"\<\"OLS Regression info for data set 3   \"\>", 
    "\[InvisibleSpace]", 
    StyleBox[
     TagBox[GridBox[{
        {"\<\"\"\>", "\<\"Estimate\"\>", "\<\"Standard Error\"\>", "\<\"t\
\[Hyphen]Statistic\"\>", "\<\"P\[Hyphen]Value\"\>"},
        {"1", "0.005079148657776187`", "0.0011955799357862556`", 
         "4.2482719103478095`", "0.000024829879828347773`"},
        {"\[Beta]", "1.056647029470751`", "0.02635302247594005`", 
         "40.09585733232138`", "7.937591571867959`*^-175"}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
       GridBoxDividers->{
        "ColumnsIndexed" -> {2 -> GrayLevel[0.7]}, 
         "RowsIndexed" -> {2 -> GrayLevel[0.7]}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
       
       GridBoxSpacings->{
        "ColumnsIndexed" -> {2 -> 1}, "RowsIndexed" -> {2 -> 0.75}}],
      "Grid"], "DialogStyle",
     StripOnInput->False]}],
   SequenceForm["OLS Regression info for data set 3   ", 
    Style[
     Grid[{{
       "", "Estimate", "Standard Error", "t\[Hyphen]Statistic", 
        "P\[Hyphen]Value"}, {
       1, 0.005079148657776187, 0.0011955799357862556`, 4.2482719103478095`, 
        0.000024829879828347773`}, {$CellContext`\[Beta], 1.056647029470751, 
        0.02635302247594005, 40.09585733232138, 7.937591571867959*^-175}}, 
      Alignment -> {Left, Automatic}, 
      Dividers -> {{2 -> GrayLevel[0.7]}, {2 -> GrayLevel[0.7]}}, 
      Spacings -> {{2 -> 1}, {2 -> 0.75}}], "DialogStyle"]],
   Editable->False], TraditionalForm]], "Print",
 CellChangeTimes->{{3.5430340338173723`*^9, 3.543034085762617*^9}, 
   3.543034545658361*^9, 3.543328604398347*^9, 3.54332864515064*^9, {
   3.5433286949216623`*^9, 3.543328714819291*^9}, 3.543329835385723*^9, 
   3.5433303056026087`*^9, 3.543331435874971*^9, 3.543755505549505*^9, 
   3.543757314599524*^9, 3.543770619628789*^9}],

Cell[BoxData[
 FormBox[
  InterpretationBox[
   RowBox[{"\<\"OLS Regression info for data set 4   \"\>", 
    "\[InvisibleSpace]", 
    StyleBox[
     TagBox[GridBox[{
        {"\<\"\"\>", "\<\"Estimate\"\>", "\<\"Standard Error\"\>", "\<\"t\
\[Hyphen]Statistic\"\>", "\<\"P\[Hyphen]Value\"\>"},
        {"1", 
         RowBox[{"-", "0.0003113093205794003`"}], "0.00048017442647229974`", 
         RowBox[{"-", "0.6483254905233049`"}], "0.517012945354009`"},
        {"\[Beta]", "1.0076395921779915`", "0.01058402460131149`", 
         "95.20382181019616`", 
         "8.21062324021932663357451366813769634884073088332756`12.\
725681403085149*^-374"}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
       GridBoxDividers->{
        "ColumnsIndexed" -> {2 -> GrayLevel[0.7]}, 
         "RowsIndexed" -> {2 -> GrayLevel[0.7]}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
       
       GridBoxSpacings->{
        "ColumnsIndexed" -> {2 -> 1}, "RowsIndexed" -> {2 -> 0.75}}],
      "Grid"], "DialogStyle",
     StripOnInput->False]}],
   SequenceForm["OLS Regression info for data set 4   ", 
    Style[
     Grid[{{
       "", "Estimate", "Standard Error", "t\[Hyphen]Statistic", 
        "P\[Hyphen]Value"}, {
       1, -0.0003113093205794003, 
        0.00048017442647229974`, -0.6483254905233049, 
        0.517012945354009}, {$CellContext`\[Beta], 1.0076395921779915`, 
        0.01058402460131149, 95.20382181019616, 
        8.21062324021932663357451366813769634884073088332756`12.\
725681403085149*^-374}}, Alignment -> {Left, Automatic}, 
      Dividers -> {{2 -> GrayLevel[0.7]}, {2 -> GrayLevel[0.7]}}, 
      Spacings -> {{2 -> 1}, {2 -> 0.75}}], "DialogStyle"]],
   Editable->False], TraditionalForm]], "Print",
 CellChangeTimes->{{3.5430340338173723`*^9, 3.543034085762617*^9}, 
   3.543034545658361*^9, 3.543328604398347*^9, 3.54332864515064*^9, {
   3.5433286949216623`*^9, 3.543328714819291*^9}, 3.543329835385723*^9, 
   3.5433303056026087`*^9, 3.543331435874971*^9, 3.543755505549505*^9, 
   3.543757314599524*^9, 3.543770619632279*^9}],

Cell[BoxData[
 FormBox[
  InterpretationBox[
   RowBox[{"\<\"OLS Regression info for data set 5   \"\>", 
    "\[InvisibleSpace]", 
    StyleBox[
     TagBox[GridBox[{
        {"\<\"\"\>", "\<\"Estimate\"\>", "\<\"Standard Error\"\>", "\<\"t\
\[Hyphen]Statistic\"\>", "\<\"P\[Hyphen]Value\"\>"},
        {"1", "0.0009691962385090452`", "0.000626325533244362`", 
         "1.5474321052961313`", "0.12226607580793014`"},
        {"\[Beta]", "0.9020660915826831`", "0.013805493351633712`", 
         "65.34109782291371`", "2.9587382911221704`*^-281"}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
       GridBoxDividers->{
        "ColumnsIndexed" -> {2 -> GrayLevel[0.7]}, 
         "RowsIndexed" -> {2 -> GrayLevel[0.7]}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
       
       GridBoxSpacings->{
        "ColumnsIndexed" -> {2 -> 1}, "RowsIndexed" -> {2 -> 0.75}}],
      "Grid"], "DialogStyle",
     StripOnInput->False]}],
   SequenceForm["OLS Regression info for data set 5   ", 
    Style[
     Grid[{{
       "", "Estimate", "Standard Error", "t\[Hyphen]Statistic", 
        "P\[Hyphen]Value"}, {
       1, 0.0009691962385090452, 0.000626325533244362, 1.5474321052961313`, 
        0.12226607580793014`}, {$CellContext`\[Beta], 0.9020660915826831, 
        0.013805493351633712`, 65.34109782291371, 2.9587382911221704`*^-281}},
       Alignment -> {Left, Automatic}, 
      Dividers -> {{2 -> GrayLevel[0.7]}, {2 -> GrayLevel[0.7]}}, 
      Spacings -> {{2 -> 1}, {2 -> 0.75}}], "DialogStyle"]],
   Editable->False], TraditionalForm]], "Print",
 CellChangeTimes->{{3.5430340338173723`*^9, 3.543034085762617*^9}, 
   3.543034545658361*^9, 3.543328604398347*^9, 3.54332864515064*^9, {
   3.5433286949216623`*^9, 3.543328714819291*^9}, 3.543329835385723*^9, 
   3.5433303056026087`*^9, 3.543331435874971*^9, 3.543755505549505*^9, 
   3.543757314599524*^9, 3.543770619635693*^9}],

Cell[BoxData[
 FormBox[
  InterpretationBox[
   RowBox[{"\<\"OLS Regression info for data set 6   \"\>", 
    "\[InvisibleSpace]", 
    StyleBox[
     TagBox[GridBox[{
        {"\<\"\"\>", "\<\"Estimate\"\>", "\<\"Standard Error\"\>", "\<\"t\
\[Hyphen]Statistic\"\>", "\<\"P\[Hyphen]Value\"\>"},
        {"1", "0.002233313414882614`", "0.0009079305792857778`", 
         "2.4597843335549365`", "0.014172132004491675`"},
        {"\[Beta]", "0.911814011658146`", "0.020012643443013556`", 
         "45.56189762009984`", "1.1990281686081942`*^-200"}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
       GridBoxDividers->{
        "ColumnsIndexed" -> {2 -> GrayLevel[0.7]}, 
         "RowsIndexed" -> {2 -> GrayLevel[0.7]}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
       
       GridBoxSpacings->{
        "ColumnsIndexed" -> {2 -> 1}, "RowsIndexed" -> {2 -> 0.75}}],
      "Grid"], "DialogStyle",
     StripOnInput->False]}],
   SequenceForm["OLS Regression info for data set 6   ", 
    Style[
     Grid[{{
       "", "Estimate", "Standard Error", "t\[Hyphen]Statistic", 
        "P\[Hyphen]Value"}, {
       1, 0.002233313414882614, 0.0009079305792857778, 2.4597843335549365`, 
        0.014172132004491675`}, {$CellContext`\[Beta], 0.911814011658146, 
        0.020012643443013556`, 45.56189762009984, 1.1990281686081942`*^-200}},
       Alignment -> {Left, Automatic}, 
      Dividers -> {{2 -> GrayLevel[0.7]}, {2 -> GrayLevel[0.7]}}, 
      Spacings -> {{2 -> 1}, {2 -> 0.75}}], "DialogStyle"]],
   Editable->False], TraditionalForm]], "Print",
 CellChangeTimes->{{3.5430340338173723`*^9, 3.543034085762617*^9}, 
   3.543034545658361*^9, 3.543328604398347*^9, 3.54332864515064*^9, {
   3.5433286949216623`*^9, 3.543328714819291*^9}, 3.543329835385723*^9, 
   3.5433303056026087`*^9, 3.543331435874971*^9, 3.543755505549505*^9, 
   3.543757314599524*^9, 3.543770619639179*^9}],

Cell[BoxData[
 FormBox[
  InterpretationBox[
   RowBox[{"\<\"OLS Regression info for data set 7   \"\>", 
    "\[InvisibleSpace]", 
    StyleBox[
     TagBox[GridBox[{
        {"\<\"\"\>", "\<\"Estimate\"\>", "\<\"Standard Error\"\>", "\<\"t\
\[Hyphen]Statistic\"\>", "\<\"P\[Hyphen]Value\"\>"},
        {"\[Lambda]", "0.005928865694583657`", "0.000996231028312269`", 
         "5.951295960564332`", "0.0019146596248671977`"}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
       GridBoxDividers->{
        "ColumnsIndexed" -> {2 -> GrayLevel[0.7]}, 
         "RowsIndexed" -> {2 -> GrayLevel[0.7]}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
       
       GridBoxSpacings->{
        "ColumnsIndexed" -> {2 -> 1}, "RowsIndexed" -> {2 -> 0.75}}],
      "Grid"], "DialogStyle",
     StripOnInput->False]}],
   SequenceForm["OLS Regression info for data set 7   ", 
    Style[
     Grid[{{
       "", "Estimate", "Standard Error", "t\[Hyphen]Statistic", 
        "P\[Hyphen]Value"}, {$CellContext`\[Lambda], 0.005928865694583657, 
        0.000996231028312269, 5.951295960564332, 0.0019146596248671977`}}, 
      Alignment -> {Left, Automatic}, 
      Dividers -> {{2 -> GrayLevel[0.7]}, {2 -> GrayLevel[0.7]}}, 
      Spacings -> {{2 -> 1}, {2 -> 0.75}}], "DialogStyle"]],
   Editable->False], TraditionalForm]], "Print",
 CellChangeTimes->{{3.5430340338173723`*^9, 3.543034085762617*^9}, 
   3.543034545658361*^9, 3.543328604398347*^9, 3.54332864515064*^9, {
   3.5433286949216623`*^9, 3.543328714819291*^9}, 3.543329835385723*^9, 
   3.5433303056026087`*^9, 3.543331435874971*^9, 3.543755505549505*^9, 
   3.543757314599524*^9, 3.5437706196427107`*^9}]
}, Open  ]],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{
   "Null", ",", "Null", ",", "Null", ",", "Null", ",", "Null", ",", "Null", 
    ",", "Null"}], "}"}], TraditionalForm]], "Output",
 CellChangeTimes->{3.543770619645864*^9}]
}, Open  ]],

Cell[TextData[{
 "Note that in the above output, data set 7 really mens the 2nd half of the \
two step process where we estimate \[Lambda].\nAlso note that where 1 appears \
in the tables, the row represents the statistics for the constant term ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Alpha]", "i"], TraditionalForm]]],
 " in the regresion. "
}], "Text",
 CellChangeTimes->{{3.543331377211261*^9, 3.543331424719798*^9}, {
  3.543331479375462*^9, 3.5433315318458443`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"smlPlot", " ", "=", " ", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"\[Lambda]1", "*", "\[Beta]"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Beta]", ",", "0", ",", "1.5"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", ".005"}], ",", ".0125"}], "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Brown", ",", "Thick"}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pointsPlot", " ", "=", " ", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\[Beta]s", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", 
          RowBox[{"Mean", "[", "r1", "]"}]}], "}"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\[Beta]s", "[", 
           RowBox[{"[", "2", "]"}], "]"}], ",", 
          RowBox[{"Mean", "[", "r2", "]"}]}], "}"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\[Beta]s", "[", 
           RowBox[{"[", "3", "]"}], "]"}], ",", 
          RowBox[{"Mean", "[", "r3", "]"}]}], "}"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\[Beta]s", "[", 
           RowBox[{"[", "4", "]"}], "]"}], ",", 
          RowBox[{"Mean", "[", "r4", "]"}]}], "}"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\[Beta]s", "[", 
           RowBox[{"[", "5", "]"}], "]"}], ",", 
          RowBox[{"Mean", "[", "r5", "]"}]}], "}"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\[Beta]s", "[", 
           RowBox[{"[", "6", "]"}], "]"}], ",", 
          RowBox[{"Mean", "[", "r6", "]"}]}], "}"}], "}"}]}], 
      "\[IndentingNewLine]", "}"}], ",", 
     RowBox[{"PlotMarkers", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<s1b1\>\"", ",", "\"\<s1b2\>\"", ",", "\"\<s1b3\>\"", ",", 
        "\"\<s2b1\>\"", ",", "\"\<s2b2\>\"", ",", "\"\<s2b3\>\""}], "}"}]}], 
     ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "1.5"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", ".005"}], ",", ".01"}], "}"}]}], "}"}]}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.5433288333664293`*^9, 3.5433288544541616`*^9}, {
   3.543328926163842*^9, 3.54332892684205*^9}, {3.543329076788042*^9, 
   3.543329101842629*^9}, {3.543329152458111*^9, 3.5433291585228567`*^9}, {
   3.543329260086227*^9, 3.5433292667021112`*^9}, {3.543329403372663*^9, 
   3.543329484907064*^9}, {3.543329674601368*^9, 3.543329704761011*^9}, {
   3.543329842480567*^9, 3.543329843507744*^9}, {3.543330168154724*^9, 
   3.543330187033903*^9}, {3.543330243211299*^9, 3.5433302602718897`*^9}, {
   3.543330391261264*^9, 3.543330432423069*^9}, {3.543330468142982*^9, 
   3.543330474401761*^9}, {3.54333051523944*^9, 3.5433306086455097`*^9}, {
   3.543330936844335*^9, 3.543330958367035*^9}, {3.54333122340417*^9, 
   3.543331239598925*^9}, {3.5433312744889193`*^9, 3.5433312851562843`*^9}, {
   3.543331326988133*^9, 3.543331348818569*^9}, 3.543331416213581*^9, {
   3.543331572729447*^9, 3.543331606462553*^9}, {3.543331649664146*^9, 
   3.5433317004933233`*^9}, {3.5437640403082247`*^9, 3.543764044515606*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"smlPlot", ",", "pointsPlot"}], "]"}]], "Input",
 CellChangeTimes->{{3.543330976073825*^9, 3.543331015839493*^9}, {
  3.543331202615608*^9, 3.5433312033227177`*^9}, {3.543331300055715*^9, 
  3.543331321822257*^9}}],

Cell[BoxData[
 FormBox[
  GraphicsBox[{{{}, {}, 
     {RGBColor[0.6, 0.4, 0.2], Thickness[Large], LineBox[CompressedData["
1:eJwVxX041AcAB/Ar5cxLpUdXeXsUrldTSy+XuW9hUZFenc5L3smu85L3I+53
XaWcHL2Q5WXNYldbq5yxSZfiVnOSG7O6rjPZOfKeX2Wy7Y/P81kWGrs/YjaF
QvH+z/+/2829ujc2mHn82nhF+6jW5VT4ipVtdCYMPl9U2aRpZrYO9caI6Htg
8y5eJtZ0MkfuuOVy6EFw8C1vS9X0MQnauGUAnYsNwlpfjmaS+aRl1+sD9BOQ
WrqZR2r0EVue/KsPPQ8pWoN/QjU0yHJzf/aml8JPMcAJ0dAxVz+B2h/zA4aW
dRvXdW3GzqwQYY1vLVhVgR/WSrejNi1CVdl+DxlSk1tHwzzQzf7SMSGlCeN3
ecXPznnD1EMUKdvWgppLyteCyn1YoIy4vdn/Ccx3Py66++AgbG041cLQNvSk
l3H821nYojr2ZHtBO6qjlOHREjZkH7K9lCUdKPLSJhs1BSK6US6/R/wOd/Km
r+GBYBSHXTdfFNyFN0LW7F0NIXDw00x+jOiGJH+k/uCOMLwc91Fs2/kc2rQ6
4cKacIypl66jHVJhqzo+sMQ1EvmS9CgWSw2X2Ve+UMujQJ9v4J1a8goyvTF0
Oh2FNC5bklemAZvP8ChqjIHSvpC6r6AH8apbwSbrOLATdKwMLP4LpTWLT3s3
HgNjr9qprKQXmbuHGjw9YqGKEzJFua8xdCRdwGPH4TbjsMkjcR9W+CV9+pNN
PGi+Ld1Vwr9RjjOhiu54oIcifpCoxdjcDmvX8wkopkWb0FP7sefsxRCLg8dB
lB49vTFGB910rIPCKBFXFUXNeXEDEDs+yOp7lohMbuGIVcIgFmzzYgdcSsJA
yMolh0PfoA1DDRKvZJyb1s15GTmEomlqVfDCFNQPegzPYw/j6+8YFsOPU9Bp
v6Vnq90IiE3XaM+zUhG9KsyxsHIE3OyTRWvd0yDz9edttx5FcV3mNdZUGjb4
6arNKkahuDXkpJWlgyPY0eViMQa3yyk++3k8nIk0+DCrcAzigC1jS9dnoMEq
ZEZnNg6dOs7CYzIDdR9P6a3OGwexX9bq/X0mFHfcdCLTCdgLcvTrk07gkU1k
c27BBMoLcloEjCycrD1UoTF8iwBxhemKkSwELH8R5C96C9PrS0YX+2djSupo
sYY6CbPMQauc2mxk6PX/dvHEJASuL+atWsgHzY4RYk8hQfZRm3iJfKRwfScM
00gYCRqdnZ/yYbkpXE7nkbi8aI5W2c7H/en4r1wzSdhWeV7gdvBhKBK5p/NJ
OLe2D1Z08lEqeXihP4cEZ3HvVQMVH83azzbKr5BokxhQOvv5MAubnyz8hUSB
ct/DOD0CdautdlXcI2EddSnOcC6BoLHV1g33SUje/2n5jT6BKv6O5omHJJqs
w5O6PiHgXJ5JC28lMRGdTGcuIBCqGpC6viRxaPrKGSMrAtTK92eDXpHQnFc7
VVoTuMGhHknvIcFdbqdh2hCYnFpOvd1H4pTHTUaCLYGz5mzWsmESteJG3R+r
CDj2RK1xGSXhbjfncsIaAsrqpBm/cRJPpZ5uxg4ErBni6/kkif7n7SVYR6CJ
Usa78Z5EEpfm2b2eQLT8ho98isSsWf4TCRsIGOfX2/ZOkxAVlpUbbyTwI0tO
zsyQWErv9fp2E4F/ATt+Vg4=
       "]]}}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGCQAGIQ/db18LSA3K/2+uYTPVb/KLRH559boD7LRvyjfY6v
qv+Btw0Y/B8P9Lezvfhgf76Yr8bTrAWDv/FTxkYv+Q/2/jOPnA/IL8Tgt292
3brz7hv7NxUn9uvvKMHgn09jnjJF9639M1bHFdwiVRj8oe5+ABmOv0I=
     "], {
      {Hue[0.67, 0.6, 0.6], 
       TagBox[InsetBox["s1b1", 13],
        "InsetString"], 
       TagBox[InsetBox["s1b1", 14],
        "InsetString"]}, 
      {Hue[0.9060679774997897, 0.6, 0.6], 
       TagBox[InsetBox["s1b2", 15],
        "InsetString"], 
       TagBox[InsetBox["s1b2", 16],
        "InsetString"]}, 
      {Hue[0.1421359549995791, 0.6, 0.6], 
       TagBox[InsetBox["s1b3", 17],
        "InsetString"], 
       TagBox[InsetBox["s1b3", 18],
        "InsetString"]}, 
      {Hue[0.37820393249936934`, 0.6, 0.6], 
       TagBox[InsetBox["s2b1", 19],
        "InsetString"], 
       TagBox[InsetBox["s2b1", 20],
        "InsetString"]}, 
      {Hue[0.6142719099991583, 0.6, 0.6], 
       TagBox[InsetBox["s2b2", 21],
        "InsetString"], 
       TagBox[InsetBox["s2b2", 22],
        "InsetString"]}, 
      {Hue[0.8503398874989481, 0.6, 0.6], 
       TagBox[InsetBox["s2b3", 23],
        "InsetString"], 
       TagBox[InsetBox["s2b3", 24],
        "InsetString"]}, {}}]},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->True,
   AxesOrigin->{0, 0},
   PlotRange->{{0, 1.5}, {-0.005, 0.0125}},
   PlotRangeClipping->True,
   PlotRangePadding->{
     Scaled[0.02], Automatic}], TraditionalForm]], "Output",
 CellChangeTimes->{
  3.543330306901834*^9, {3.54333039220113*^9, 3.543330436312511*^9}, 
   3.5433304796594067`*^9, {3.5433305275365543`*^9, 3.5433305726018744`*^9}, 
   3.543330663529261*^9, {3.543330955895568*^9, 3.5433309597810497`*^9}, {
   3.543331006587864*^9, 3.5433310163088903`*^9}, 3.5433312040185328`*^9, {
   3.5433312950320177`*^9, 3.543331352384231*^9}, {3.543331582791501*^9, 
   3.54333160008709*^9}, {3.543331679621551*^9, 3.543331701338087*^9}, 
   3.54375732127957*^9, 3.543764047139901*^9, 3.543770620913125*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["means"], "Input",
 CellChangeTimes->{{3.543770623364238*^9, 3.543770625281501*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{
   "0.004387539936102232`", ",", "0.008265974440894573`", ",", 
    "0.009869169329073472`", ",", "0.004256549520766774`", ",", 
    "0.00505846645367412`", ",", "0.006366773162939298`"}], "}"}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{3.543770625712502*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"StandardDeviation", "[", "#", "]"}], "&"}], "/@", 
  RowBox[{"{", 
   RowBox[{"r1", ",", "r2", ",", "r3", ",", "r4", ",", "r5", ",", "r6"}], 
   "}"}]}]], "Input",
 CellChangeTimes->{{3.543770718245191*^9, 3.543770741389905*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{
   "0.06898173187517405`", ",", "0.054590698185761885`", ",", 
    "0.05624223317000209`", ",", "0.04706294267292626`", ",", 
    "0.043629103683257946`", ",", "0.04697789929542255`"}], "}"}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{{3.543770726892942*^9, 3.543770742342902*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Part2: GMM Estimation: No Serial Correlation", "Section",
 CellChangeTimes->{{3.543034294678877*^9, 3.543034297470379*^9}, {
  3.5437577310196733`*^9, 3.543757737115798*^9}, {3.543763431706942*^9, 
  3.543763433994795*^9}}],

Cell[CellGroupData[{

Cell["The Code", "Subsection",
 CellChangeTimes->{{3.5430343006356077`*^9, 3.543034303555142*^9}}],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzsvQt0U9ed/6uQmbSr63Y67b+z5nZmzX/1zp0b/jPrjv+3eXWakE6dTuh/
rTxMw/z7NEmhjZM2TXGYNo0yhRSRAVwowQ0PJ1RxDYiAHWIbbAQ2NsZgIgOy
QcaWsY0tY2xANsfoyEdHb929z5FkWTrnSNYDJPv7WS453traL7nnq9/e++zv
/7Vi5XNFC1Qq1X98mvzz3PJf569atVy99M/IL0+of/niinvJxT7yz6skD70u
BwAAAECyFAEAAAAgWQIAAAAAAAAAAEC66enpSbEEv2+yw1T1p7Yjl23ORNIB
YeLa8dKGre+ePDLhu9tNAQAAkAKpy+i55oKHtV9ZVvHAo9o1V73x0yVxTBxf
pn36+X3L6E/Fsl9Ubz01xqTYsGym1/AqGZyvagt78BUDAABymZRl1HFw30P/
q6nP5z73iPapCFGQS5fGfu1DIiuRP+Rd7bc94QxOJ8s6XVJvdTF2W/QLPpfN
zpB0OfX2OJlJbkab5MufHZyTc8iXE1Evu7/qoX/R/qxPcmR8DtopH83viA5X
Z9dfjmNYp1e44CLT09VfAACY56Qso97Wxq8SyXul8ulHtRsu28YnOa9iuhyu
T5pfINHZqRvj1ptn1+9+kChp1YiNvMAz59bve1DU1scrd/bZqbZeMKx9tuLp
V6s3/HL3AySd6NGJMZtYb3fnH54JafHj+3YOCjrl91m27HuGvOX359oN50vE
VysHb8mVL8nktUNCyPx0UUOLl5Y5smPfMyR8XlLxq3bGeXvs5OrdwXKWVu7s
Fqay5et1fFz18Ne0v7rEmLfQQp7+39WVE0ItV3rKn4n4OrGm42oS/Y3q17J9
D5CxFSU78f4CAACIS+qTukQBu037fqp9QLwzbzANxUuXptfwKrnVtzO228yl
LYIe7R22+eznlmkf+FrFrw73nG3pLCfXRJSvugOXO/8gFruocsPOhtfF6NVI
FcFx+PALy6u3Ng12nTjzW5L+SwPtoN93fU/1M+E49/XqZVShOofkypfEPnZ8
mdCd/zzZNnSt89JY1659D5FfH61Y80l/vVi4puGDHYefF5Wuh5OtV5TRR7Vr
WnrLxVf/s6mFJe1095IRI/J66tqQ0UTbs+ZcP6l6tv0V+0V+Xan/YG/zb8X2
EBmdVX8BAADEJfVo9PyZX4t3+OeqtxpGmHjpsvQafh05qUsCq1F3YOD8G+Sa
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
uXqFPmNtFAAAcp554vAiylyjlrfb/Px1z0U6VUtbKufkcpseWT/FegU30i1O
n6CebW0eGo0KvqXdHW77dU8XzW+zWP2+EVpOb7+PaOjVenrc/bk2j0e+XgE4
wgAAQM4zXxxeiNyb+YawY8v37UNDwTBQwsklZAdzaJVD1MSufi/1Vrufvcn5
L3zfdnT9VNAvZrG9LxhO+gQJFhJfsouzu21C0CpXbwCOMAAAkPvMH4cXEZfN
5+Ikgr6EnVwEz+4h6ZwezsdLFa5QLxxhAAAgp8FhgLPiVgsnBpVNL9n7cXIC
AADMeyCjs2Kq32Wud15u5M01eNITAAAAZBQAAABIHsgoAAAAkDSQUQAAACBp
IKMAAABA0kBGAQAAgKSBjAIAAABJAxkFAAAAkgYyCgAAACQNZBQAAABIGsgo
AAAAkDSQUQAAACBpIKMAAABA0kBGAQAAgKSBjAIAAABJAxkFAAAAkiZpGdUD
AAAA8x4io8oZ4uqp3zfZYar6U9uRyzZnIumKeJ1OzuWjF8K/ceA4NpFsd4xs
aw8AAIBMk/qk7rnmgoe1X1lW8cCj2jVXvfHT5ZgcO/7L3Q+Qt4g//7qv0qGY
3+e4sEz7wMttGZmUvtL1h0cqnnp+3zLy8/PKX21ra5lwx3lLRtsDAAAgO0lZ
Rh0H9z30v5r6fO5zj2if6nHGTZfG7xtZraUa+u3KDWuqHiQX36icIaNOJ8s6
XZFvcd08RLL90tA3ywa7GLvNFS/TpTM/Cgu6+PPNQyemvwv4XDY7Q8qJ/Hag
1B6p/AAAAOYAKcuot7Xxq0QoX6l8+lHthsu28UnOq5gujWuiiWjQ17S/6qNB
H7t730Nfr9jLCi/xzLn1+x4Utezxyp19dg9JnGJ6qxt/TlKWVmtP9p48bjpz
zUnLF6PIFw81OAOTe6qff6bigS2dQyT9gmHtsxVPv1q9QQx4/0X7sxNjNoX2
+N3Xd+17iLS/+cb1i+dLxdpPTJBvA97uzj88E9LWx/ftHBS+Ici1Ry4/AACA
uUE6duq6uk37fqoNzsduMA3FS5fA5zgnas3XKn713slKfWfLsJ3qjc9+bpn2
AZJ4uOdsS2c5uSaifNUd6DW8GhUt7h2hsnit5z1xQtgVYPdXPUSu/0OYZb3c
+Qcx26LKDTsbXicXRCKNgiLL4Pi46mGitoKsBz5pfIFWMXiLpB8+/MLy6q1N
g10nzvxWCD9p+XLtkcsPAABgbpB6NHr+zK9F4XiueqthhImXLlvOYO9HvwxF
nTRwq9DeDAQGzr8R0tYPPjgZjAr3DlOFujH4J3L90skOl8/lmJ7vdRH5E9dV
xVnW/wguVtJ0IsE3hV/ON1NZfKd7TL49QRkVp6PFZmygga2rr/ejDdWvvLDv
Z8sqHogoX7Y9cvkBAADMAVKPRpmblr5hPYkTn933NJGJnf1W5XRJHBN6olnG
2yQ8dF3pLRfnXYmE9Rp+Lc7lHu9pPG5qbDTVvteg6+NoFGkf+yhyLTKkXA4S
hP7rvr2CjEZmcIgyOirspBWjyw+UmkRl92vaXw166brtlt1U36tGOIdQKWnP
uWv9PQMfPRPRAMn2KOQHAAAwB0jL8QuOax8SxbnMMUR6vnXSFDc9FlGDHq1Y
0zoclBtxQtXNtFJJrfjZQVNbR+/xHYefD0eIPuclotHkpffaPlgjhLEtjEeU
UXL9u5O69cJWJVKmiaozlVH6675fbT38SlCmOdn23Bz8SJxkflW/cZkwL/14
xc4bvoD92ofk+t+r954dPLNX/0qofKdcexTyAwAAmAOkRUb9bosYrz2ifarh
Bhc3PRZRbsI/JP+B3qviSxPXZjwI8/bJttAOXtep5p+H0/+zqUXcknRjIFRU
RfClmjEuLKOvV1Mte65y60VGScvEKFj8+WpF4brmmlEhu985sCU08/xc9YY1
Vc+Eypduj2J+AAAAOU/6DgN0MXaGlXi4Ui49OpvNbnP5XDaOPhgSc4iBl+NY
luNiDzfwuh2cM2YTsNvBOiOlysvZLbv2PfR4hfaG05n6CQmkMQ639MZjyfYo
5AcAAJDTzIczdf3u3mciQt0PhpUedQEAAAASZz7IaCDAmnqOHzedPNlzkvw7
rPgEKwAAAJA480NGAQAAgIyQKzLqdbtmtaY52/x3i1xpJwAAAEnSIaNe61jX
hcF+NoNy4Phw90PfPNQQ9yzcJPKPDnxUot9a2rC1ul/hNIYMkWg7bw4cIo1s
l9pdfFfbDwAA853UZfSS4dVHtE8tq3jg8T9qJ+Jndxyupg+ePFux7HnhWIY1
5/oTqIS+66Wm9shFTX9gcrv2wSMTks+tSOSX4+bw8fI23fp9D/5A8cnWzJBo
OyeGD0UcMDiDu9p+AACY76Qso66Dux9a2z/lD4yv0S6L6+RCQte+3uN605E/
Vj/0WMUGchFzTqDX4Uwo6PT7BpZpH6gam91RBi63Q/LZkwHDj35wMg3z23Ll
iyQ+hRtTjovErTr5zsq13+nkHM7Y9lBfV2y0AgCA1En9TN2m6ke+2dBgGvjo
Ue2abpuNlbhpS0Bu+z9smz4Wzz526BntU2/od64Wjmv4RvXeG6FHTR3C0bjP
VjwterWI3L55od5Aj9gtbqg8aWrUdzZeCZ0zL5mfMHlNvyx0Tv6LDfWTM9tz
6UwiMuo4fPjZgn3LntUWnr7tsXSu/aq2kIThYkAtWb7fbVktHG10bGSoWTic
gUTup4W52Vm20/HhvofebKvZUf08SV+pr7zCzThXP7b9PHMh7IxDxnM4pMCj
g4fC5T8jnHAYr9cAAABkSX1S1+8eP9Y8febPO6aribwr6rbv900e1T9L3n6g
v39s7MxPtQ+Ez+D1uyctNwcO6x+JzH9zUL9BOI/o25VvlTVsLdFvNYbWDSXz
i2/5k6HFwjA3x07GykdiMkrkm7btm4caHIGAx2nZon3wG9WVw5xTvnzX2M1O
8Sin/32osutaZ1WzrkdQ/Fm2M3gK07Zzbf3Xzm7Z9yD50hLpuRbVfp/jEmnn
a00tE06X02HZX/3woj/unKAz4dfXax8U3Ha8pHySR3KiGAAAQIKkHo12ny99
RvAuoSf4dSey0EmJla1ew48WN3SI1+cavxq10tcbk98fsBAVqJGZ54zNf3P4
+AbhLD7xkMCqmfKRoIzSks+/KkqSz07N3YSDfJXLdx3c99B/GKQXLhNuJ41G
14TiVr/P8kuigBHnSES1f1ywm1E36HQnPyhvq9pS9VDIPJ36x/2L9mclDWXl
bbp9bbVRUS0AAIBZkQaHl4mRweFDX9UWftTTSCKdNR0JRaOx8hGZovyqiM/Z
K6yNSs9JRuX32T8hsvLHbvMkic6cIySKjIpGY8uXQ6y3coTpal3yxMcN3vjl
0+24cmu4CbeTyuiGkLObGFRGymhUOTcG3iO6ebCn7UwPPXTiTP/Zc4Nm8czh
seEzLaYjRF4/aN5KOvJkQ3sivQYAACBJehxexj58VLuBBGidzQXfaoqzX5Sz
MwzHnGku+LcjJ8jFZHAt1dXaWPBkg3jsvKOVvtom7DTy2uzjJBtJ+V5DG7kY
t9vEN4g7ddeb+jknOzh4fGv1RsFnTTq/a6KJyFPDGON0jhs76aKqtndI3MnE
caH2NAjt4eLvWbp0JmjS3RjaJyxbvs9ls1tIO3f0DtnspPCwts6unX73yK59
NIo8Njw0brMca/552HZcsv1uG5Xj7Z1mhy/gcbN9A4d+W7l10E3PRSTSuaXT
LPTd1aR/JL+yPuHHiAAAAESTHoeXwGSd/oWgC5hdeZKQRlWRZi4vCzbWolEa
XVrtHbN0rRWvq0ZsfvfAL7UPROYnYW94P7BFcCYVf9Y1H5mgMiGXnz0srL2S
n8cq3xJnTQXb7uj2PKpdczXeJinRE+2JjyMFSLr8cL9ChQcNT2fbzl7Dq5GZ
iZ6eGJue7JVs/83h6a1EpPBdnR2OmHppOYrOOwAAAJTJlVOMZPG5HG5Xgs9u
OJ0sm9jTNPGL4hhHzKMr6SpfqRzSX2ei/SUxL8vZoh7A8QrD5XU7WA7PvAAA
QKrkvIwCAAAAdw/IKAAAAJA0kFEAAAAgaSCjAAAAQNKkLqMj7ZXr1m0mfNQ+
mpYmpQXe2n+0+sDuXbvPDYYfrvSOmts/PrC7su7UjZj9O1L5AQAAgDikLqM3
TA27du/+7dLPPPv+xbQ0KXUsp3eoVKovPffG5s3bWvtEWfS2bf8OSfyOWv3C
Pff+tUoz7FLODwAAAMQnXZO6fQe+++z73bHpTo6Tea7Cy3EZee7fx3Y8es+C
p7a1zqyV0977mVfrrtAMXNeSexZU9NxWzA8AAADEJ10yatoTLaP8WAcJUVUC
/7CyYlh4yp/tr3lMtei1ddtef/xTYnrs/OrMQrrqqusiqa4+ZrEpnfAwVLdK
DDa93hnCOMVYxYMGfEwbqfrjninl/Ar4uaGDu7Zrqw1sgm8AAAAwR8mQjPrY
rhfuufen25rGOaeTHdpb/Pm/Vb1LHUa8k/Vvf4Oo2L72vtH+0yTPu4abCsVO
DrVs27xt1zTbtm/e3c0oyChX8+Z/U4V4edvRyZgcbdu/8xeq5d1TieaP5eqJ
/xLz1w3Ozu0UAADAHCNDMjpu1BKVWbW5YjeRvt37N6747H2qRaJy9Rz47v+3
6byYzbD5/1ReUeWt5mN1dcciqKtrvqZ0+g5XXfwFopLnxmwTQy1L7lkQJdND
J7aQhh3ssSWYXxI30/Wu+s312w5PYiIYAADmN+mS0Z6ZMnq9fQfRzcrmU6dO
UE63t5819rAxOXtipoKjmOw/sXnd5m0RbN78vnI0Wrn0c/+saRWuvdUrPv/g
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
4hFvZ/+PL2rTtRMW5/P/cQNl1Ds6OQ5qZ+T6RB4ywNmHUpfZqmb+0ilm+lOp
XdOwiNcoZnIVw3NMc9DvwG1khUxheN51mOOPyZZL53X6aYuVQBm7UwpmQd87
5fu/EPpl/e037MaJvnjy9+519Tz1rR+bXwXLKL3+r8K/1mNyMlKaa72/F14c
phRVPg2kmvllNNDJhftpZuWKIvObr5xY0vmvX4QjDDEqrIVMRlSMie1HOLmY
9X45hcxAkcBAZnBsWeD5Ep21kst1KkQU+GGyRSvyvAIdaiKOy7Hoexm5Pn52
z//04tFgz+Z5Gk/6Hj1p//QXllHWftW5e3j5d6J2U0L1t+Qnf/d9ss2zxeZf
3/x7+wXNQfhnWYPH+y9rv3jJdrK9l95x860f/+n4War7aJ/u4O1QfaQf5EOs
r75i7WjvvrjvJ5405ex+v0z4/sBC+OnJG4+8prs9Ozp59J8/bv/K3X7L/cdB
+19/ohmrS2PwE5/AOHsc/GFURv/91/7+tPHm34f6+dHrM4mxTtWr0e+4c+XZ
kH62k+MQvzgI+3XO+s4J/U9pEv2xoVdyQ5a1wY4/pJrvJUes1El2uuIbi/ve
O+13vzWfl/uvHv0Pa/bub1/+48/k0Z/I9930zPv21ee9UYvfvHzuiynx7rMR
DPfR371/sPsx9u4/BmR9zb8XhxWlyU/9cAfOTSljXhkNcXLx7KZfZEgs1xr1
Gu/nC/T+K9QRhkJsw9AVcXiwJcwpJszJpW2K7GGjwR5a6LXccD38cWI7tiz2
fL2mwuy8K/Umk2WhoOlavlOvOOS8Qhxqoo7LFFyhbynT2L6Q1zRt3HnXvfv7
n7/8T/fz3/9U+9VLroVt96/kb//z8/Nvj92vfu7LDTn+5x9Z9/j5X964f2ED
sH/bfv2SX85XX9EEx/3yT+RzuvHB8U9PqJi2j+3XtHv8G/vsibv/ir7u5BTe
8f67rKtsfub9+6uf77714073Ceb3/+PWfvXToz+9pKL51Dn59/6bY56l0n1q
/0leUb0+8nb8Htg5CY2zy5iMvqHh3f8zi9jlx/3b3wOz0mkZtySgd4D89kaW
2C1grldnmrhOU+k48pQbrV4xEM+s0t84msUYw02FOP7wLrrT1fOue7aFw8l9
7z4j15k28vlvmBpu//qo8dufPn/3p06q69Dj/nj3dz+7Ryee433JBoRf8DOj
X/SrHX5Ptf2fL5/9/dWXv3v5bLoB60DS9r20qvQQueZ0OgrnprQxp4yGO7lw
W5ZKN8/y9Fy/NH2AI0y/weHfyQinmEAnF3Zfl+PpIBXHEqWiR6aWcR1bFn2+
RC/RPzB6eL2YEdh2r5zx2w8+r0iHmtDj2qwg/3R/s+S1+tbRU95h0g7t4O8s
o3zln/oD8vmv/aecXO8G5MbtDAn++NVX/Y2+jH61TWhn2HjQ286eav2tI20n
X/2q/4SLyeVv/UO1n/62/wSTbf/1i/3tl+rwcO73f3Q7Xa7NBiH3v+0GEx5n
O0BGj79kO7uf//bF3/7wsvkH8v18d/zj3bX/DK4gl4oi/X6ytf7Da3anlJUr
xRxLTLq/gn4WQ3/PvUYxK4hVq9uNhzj+DHXXNMOaWUaT+t59xrN+GjhVzC+H
U8if/vqCPT/97cvm79n13+EH6n7L7Nfj7v8kMw8qbd8L4SI+5Qg8nJvSxrwy
GurkwgZGCjWz+0ar0JOVIEeYfoMjMhruFBPo5EIxG2qtqjBZkSV2XyhpEfHH
dWxZ9PkyGRVKpL+dlJiMumHnFeVQE37cJqvom4sc7e4FRLtT93tysv+u+/mf
Pe8Jqb119JxeHvtn2r81tl//RLMGnv0NZnndJ2s/7mz3r6T3FeuKj9monfev
/hU8af6CZpp+rzssowMd7+hrPjzo7nuvjrzPf/XiX/5Bjl6rvFc/+D1NRUmn
H4+Mc6Rln38/+PkffyasG//dT2z0sivlkXiWoetN3Ry7ZxsbPORzszu3f+zW
S+jPTiG6pjHTWaupNbt3asTIC0Pkhx95+EcfcPwZzHQIHzwcnBgTGucoyX3v
PuPXufN9Dcuo+xmT0S+3f36y/fM/6H8/e/XPv75+2XmT3XGFPUsNYV2+lzbh
XhsxHo/CuSlNzCmj4U4uLsvbhGylrlumXmGjnL3JbwGOMPzBv8WcUOSO7wn9
wYtqP8TJheuaqPiZFmGDHzklwYGPRZ+vyerYy/Rv1n/C4vG/blFthZ1XpENN
4HH59WIl67PT1Np99S3LR/7Rfcj1r202cPfk25Nj1q/++OirY+/ozdM/sY2N
v/C/au/k+23WE9Luzttn+2h/ePWKb//XX+j2F8/t45fD38eTd5nquUcn/37A
Hrpt//ZnHuXJk99SCfv5lf/6dz/W3uXbvWO6ne7zk3P8k3Py8gkL72k3J6Up
T63zRK8TcGic9NRYC8f//B07it8av7Ssb//8T6/9GP5BY/v1FDPJ3IY/kDc0
vTPQ2Yc/UBNyZYvQ3wBdnMI31mOTxxzLbFXpL3yu0u1nQx1/bHaArGYRp8kS
nOqgG3xgnEEk9r3TpuzudX6XX+f+AAKbqXv/z/Re6Pj5X8nOb37650H7+IDJ
9M6fXr/y2sfk+PvPyP1f8xnd3slL26P77/zFe2l3v6yJrMv30vXgUMLm1Y+e
F5yb0sX8U4winFyyotS5Z8vkq3r/SUaAI4w/G3yITj8f2H6ok8toO7mqkfBE
8gWer93dmK/U+eOYsu4/Bsk17dDzinCoCXTeaXdt5or1Sc+WSGeeCc1Evqd/
sLwL5bNNXr5qHz96tzsP5NdH/ijf59tv2Iirn4989sYfoGMLJf7kPWfTfrr7
v/vz4JDfy7+T7d5bb/njhCd8BPhH/1nbv/581N1+/H1XKAcXzvyr15nwBIeK
8kDvEhwnS21+NdyOn231T9n/5+7vT+6xHX+tRHFoylagsw+7qKZW6G8tTvfr
2fdF6k4ti3D8catd86NCZWjkMDDOAJL73sev8+CyFH5n1dl+/3ed2enug/4U
Jnr9G39ictz7fej+G/jSw1mX76XNZs7Tv+9CpMfTwHnBuSllJLTgZdzJhTCv
7fFxjv4nAh1hpm8/omHWrMfdXxZ2s7bo8w1sIOK8wh1qgo/Lc+dCdc7r4x0d
vzyKNcgW1tDJq0TaYRfi+NX41YkT5zFhS13of186wWtexqkXsyzRiDHjxfOt
eqb/QCARjj98eGN0e/w4g0nse2/zr54EXOeX9HucexRpXb4Xqu3y8OLTaODc
lDYWVH6hVeO3fNl8Ppevtjb/+1678yUtNll3ZGQJzASroRG4eihlrEucSbE2
52vXpWnnKjDg3JQ6FiSjtq7yCbCKUhlZsbiZrOP5mg21YSb43BgAMAt2U9XW
4d4bhJGymroAAADAOgEZBQAAAGYGMgoAAADMDGQUAAAAmBnIKAAAADAzkFEA
AABgZiCjAAAAwMxARgEAAICZgYwCAAAAMwMZBQAAAGYGMgoAAADMDGQUAAAA
mBnIKAAAADAzkFEAAABgZiCjAAAAwMxARgEAAICZgYwCAAAAMwMZBQAAAGYG
MgoAAADMDGQUAAAAmBnIKAAAADAzkFEAAABgZiCjAAAAwMxARgEAAICZgYwC
AAAAMwMZBQAAAGYGMgoAAADMDGQUAAAAmBnIKAAAADAzkFEAAABgZpKQUe/g
2cOdr/cO38zexOGzTy9vS9f2n84dDAAAALA85pfR3Z382a1zF6+fObv1/sGk
nZ9/c/X8Ft3zzPnrFy4q5+iLs9fzt38gR/b9S3TjZw/ni8W7d+cCC0a5wI7y
yUdH8zUHAAAARDO3jJKPr595Z5/q1cGlrQsPyYS9d+sXzt5475b+6QefUAGV
bukfvbN15oNvD+lbj3cunK/v0RdHJKAVQo6OiDcxmqff3L258x5V58v1j27t
741/wHtNyOuAdsK2AwAAABHMLaPebSqIdz59uL91dkt8eHh4GCl2u/Vzvlb2
RPPa9Y6M7tGsVhEvsaz2zNlbW09fdz5Cfti5rPCNLMG8+niSUrff7F3curA3
NsJME95eO+dvXX38Imr73gPx7NaF4oMbxU9oenvm7e2rey8gsgAAAEZJ4Nno
64Nb9wodmaNp4O6TiH2f7IoXP9tt87T0PHtBrinnPv6OSeMeHxy+tr//9Nnt
t7fOFL+22QdePKSv3753+4AQ8mL/GpXsrfcmDB2/3r04nhe7989vnbl456PH
7uFz+2HxBm1HevImdLvn7l7mgn555/bDr29znRX3Jio4AACAU8b82ejugyvn
/RRy69yH+t6UH+vKaJ+9+oWz9zrPRu/d6jwnff71+7Tld+5c/fCz9z+ob8lM
5s5NGDoeklHvydf3H7/w9h5Qjb7S11+yc54PJodtZ4PVypm3H+x3tr/Zo2r+
wTeHU54dAACAU8L82ehz+8njbz46u3Xhmv7pZSp5X0Rloz32gmS0t2Vvp/P6
YP89lqLqd+/pt2/rt+/t37//9e4EMeMyutsZEz76gCa23xzSBs9uvX84tA+T
xbDt9IPXrp+5pPdmDj+5BBkFAAAwRiLrRsmzq2e3JJrTPbx3rpdRhvLm6PCF
fZ/uuX37+YujbmZJ2JY7d/mPR/f4u/S1d3iXZqPyF7tHb9re68O9/Y8u3biy
9zq0bY8cPrfvnt86d/s7+9Cl//aLPLv0frhN27m0c//5a4+8eHpz+9zZrcIu
aYdtpzF8zDLfCx9/vXfww97H22wC8L1DPB4FAAAwRELlF+ybTGjOnL0u7rgT
tObo2VbvQSr9d8tmonXw6Ir/44ffHT39ovOk9cNv2YKVg28+utjf/0Lxi53w
ZSzk1q0zg437/z5+5rdzo9/Oden+Dx0BD9l+dE05c3H7yjud7YVbz+wkLhQA
AICNYk2qGHmHLw6PEliQ4h29ODx8Ma7D49vJtetU0+c+IAAAgI1mTWR02TzR
eXasFN65Ubhlo4oDAACAYCCjgTx/dvfmF5/e2r1x88Gne5OGqQEAAJxaIKMA
AADAzKxKRj3SnqK2HwDx8AjB7xUAYJksSEYP9ePL4vE17SRsh2uZN/9ROB6s
o/BUYx+RpahPgXFMrSyKEqWsmauOZeW45YwgFKqxyk1Z/AIWlcbM8uu5tl6v
1RrW4EZiGY0ezRYqYAGwqSxIRo9aJ/8lvPllMVQQb+bfXJRPBjuug8ZxqXR8
ORv1qbXDMRp1I+5KGVsWhMrU/a7VqBZLJTErZIqNuOGlBNfS1ZrabNnedNsj
WlLyQlbWYgmi3azmBEHIlJzpP0OsutbwwyJ6WeBkis3BXZqlrNAnr0NHAdhQ
Fjeo+7j85pclJohHbsxPBckoceO1Q1xKaG8aNvQ3vp1tCR8lnDiE2CxmWAeb
LzZaU3fSnk7731JItxsWj1HOjnTjPnGvA6EfCD4lj74R1H7w3tHHHd5Vz3fF
Rm44k7fPSHD8PqaSEzLlqX6/PKeu8C9VEBpuZ4vtOPViZuT666XgbwQAsGFM
lFF1mMG3PPPkbeHNxeybi9Kx32N+nH/zS5pOFo6P2u298pv/yL75r8yb/xDY
+O3TXrki45hu+WXmzWUlQC53S6MySswTmqKyRui//PHjSZ0dMetiLw/Ilwy3
c9QC07Oc0jRqcs7PHmomCd1OE5uW1msnUygZTmQ7YXg27XVz3Uaa1oToHaOu
lCW6c04q16pVRanq3VQsOJ4uzbFOO951oIduKr3ds5Lip9CuXsnQuwBRLmQ6
7fTOdbD9fCGXyVfciOOG47JsLqOadrNWbQ7knWHbwyBGhZ1MJiMqxkAj4fFb
jWKBBZoTZRZwdqKMus1ayW8mJxZHBhnGRZNuESTVts2WOX02DQBYP2JloyMy
Svlfiarb8Z7Tfm6cPLbZWO5F4c3lGtNBJqPCm2vayVP9mKrtf9e7nyHtx8bJ
TTE46xyVUYcp9dvy8YHbJs7JtTw7XJTDi9Og2pCTa5ZLiGOUWT4j80dWxDTq
UsbXoHKjWS/LJT4qF7Ld1jJMTSqG7ditBhccseVFtBMNMZtqkXflWbFihe9u
1RUxz4cYcwVZkkRR0vx+PzSeDqMyGvs6sEMXyzXDtC29Rt8vNbmqeHZVZHuX
NN3UVdqmpFl++0yBaJZtmEZjYFA09LjheDr9SL6iT7s9DGIbhq6Iw4OrE+Iv
1ZvNWrnApTFKRu3OPUamqGimE3DXNH4bMzSom5Un3k4AANaUOWWUp5bHB177
v3mqSJWOSudj3r3vld78h9wRxHuFUdHcG8s6fUZk9Hmdpa7/RzouF9mTUznH
pPlheI9k14usd5RKpWKxWCpLvH/vDL61SSVLO8vxB4gB2/UK63H7/b9bp31x
selEthOFa+kViferuaI5QXUNeuzy8KBuZDyMkW58hutgNapiztdX9p9St3G9
TLOqzj1QXeo8gW1VqfQUWt3PkpYqF1Uy4bjBWPWSLzWVpqlJ2VxZj94eTUBW
GBS/MXw9G8Vs9KCuqRX9NLSi6YFj1eMy6pq6zkfyPadJL1ZeaQV8DACw/kw/
qNsOktF2++QyzTTLx7/kg67lIhu/9buZQaHcG3viGSajI9sPNCaj12on92rH
/1s7vqed3K+fRPisWJpM++1yTVVrDFXTtHpPbNg0zqBnjgHbWd8rFPsqRZrs
584TurB2AiFGXfFHFPNyRZ80qMubb/Jno0N7RsbDdxjuxmNfB1tleWOtadMs
0m1JvWx0uOXea0PJD8n6VMcNxKIfyJY0zU8JhUytM7cqbPsEAgdXx+PXy1RG
5V5g7PJOfDbqubpW8cfBC8WqYQ//wkQ9CfXYo9e1nQAGAIhmzmy0zfNHqnT/
VT35X5G9KHUHb+/Lb/5DOvH7mnv0tdhZ3nJonzx32JZfSuzFgd32ZffIadMf
+aeOn/PXFM9i6a2snBx5bKnpnnb8X7njCPtsz2JyIClNl+3v0H6vkJOYYtAf
bIP2zJJqOLZtO90uM2S7Z9ZYb1nWbEL3MBU2MJhnwhLWTgjsAZmQkRXNijFR
k83ULVR113WMelXKi5rlhcZDRZHG4dianBGkms1ekxmug9eq0v0V3SauVVfY
w1lZNXjIRJVoy6p/KJUeRWRZpy+7uWLNclzH1LnWldyI44bC5DJDI+cfFDJi
9/YhbHsYnmNb9PRphBlJtfkPXnj8rl7xr6fl0Itc5vPA5CknR1u6JrPB6mx3
ipHLjit1jut0klWnwecYE8+zmlW+CgfZKACbyfwySlosYbxltZ+r7AV3GWsf
8NcsPzXaT5XOBKEyvVsnJ/9H6M4X6v7zB2mvZUe3+4PDB43jiwMb/5tKamSQ
VqMy9FBKqbud+SqDdB4shm3n7fSn3NBu3H9GGbF/MN4sxQBaarF3gIKs+BIc
GA9LLbPDEQkFw4t9HWi3z6WZkyv4o7tizeztL6omH8hl+OO9dlPJ9ZsvqN05
T4HHjTrZmtxtQ8yzDLQZvT2YgWm9vUNTmYuI36jKvavpBzzhEMN43TnOlioN
HjVX9huxBx+N5ooqHo0CsKnMM1O3x2E3o3w+/7qEEA6d9lGMhM5zHCdkKUYs
PNdhLc3dzgxHJm7Aypa48cS7DsRle0/deCeeoIUkMa8/CVkdE7Y9KeKfcNzm
acZvL/AIAIDVM002GqaeAAAAwCkHMgoAAADMDGQUAAAAmJl1l9FVOXoceyfH
61Cb5piceOsQZxjrcp1Xxbo72qzL95vU39G6nC+IxRrJaJATxyyOHqF40/dI
J1/+4sftP7xO5LCLhMVZ+8/17WjX4jp7ZlOrlEtlRY2oCpnEccZ/PxfraBPo
XONHEueAEazF99tO7u8o5vkmdp3BYlkjGQ1y4pjF0SMYryWy2kFDk2BNts6Q
URldtcj+HNShP4eTR7/5sfbWj9u/cNVfsRfaH3tBHTfe+vGrJ4uzrYlon0Wl
/u7VccJH5Cf7ix+137+iPzz9nctP/MfGduJyPX6d04anyVm+KqfAl/+IxuSe
L56DT/c4Ab+fCTratGqlSnOoSnCYc03brwGVV5KYv57I95vU39cS/o6Cz9es
iew6Z3LV1tBFTe46g8WyRjLajuHE4ZGYKyV4dbjRRaC8LOr/b+9sXt228j7u
/yY7L2fVjTez6cKL2XRhZlMwDMxCzCKgWWShRcEPdCHowhAYw4AgYCiPIYxp
i2lwmudxJygEp0Fp8H3qlioQhWoa3ZurOLq2n/PiV+kc2bLla8n3+yG09/rK
R9LROeeno5ffR+n2B26krF8/C59Vvv7Kf/6l/5jGlwvyw9mTeZ8Lgvatt+Yz
cTcPzicj+Xuw0UtJgT8ZhQbg2PLjSpYM5KPzzUX99p3/9S16tvDi58no7MPz
z89bt7yzn5dfjCk/EdF6Tps480tkWZ8vu9K6PL1QKPNk+B7N01tbS9okaoex
Bp/518ITT2H7jN/WREYbUy8WtPU8SxJzDYUl39Dj01NtR9LjS/pLOJbF969o
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
    "], {{0, 934}, {
    621, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSizeRaw->{621, 934},
  PlotRange->{{0, 621}, {0, 934}}]], "Input"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
9+aTvqf3wTfru2tsBHXlhZ2Na7s3Luxs2MLz71+iI643P9m7+QJ5S/Orm7ul
IC5z9j4kUnLhids88B3/xnPkp1R9SCGrz1ExWjnXrJzfWn1p66tAIgXnR9RH
xIM3XP3prVuXdlbOuPcc8vZ9FvTtr57ZvHKZdgOpP7nW1WutdkR9aC+3Hq77
t17aXHm1FxsK2yvon+nby6/nWOAxBACYE5bes4aqKouwgtlG8iQPLuB+6q2e
YzERO17tPb0Pbj69+eEbw8OM3PN9Jtnk1YNXN3WmPjfOUiHY+mSbTuOe36m+
un314s4ae2NnJNYnYnFjMOCKPJ9fHxFUVc9tr6/sGANjv60btEx39Twtv3rR
e9AbLuXUp1faRbdfVUXtjezPqdobUc8o4DEEAJgTlt6zhgrBma2NOz6JvFyn
82y3n5DHeGVlb4vESk1/bWCkkS6JGZ4HFJzPCqeBcEd9DqpUZQ7cj6lq3Fh5
cmflyW3y/493v/pkbycoqrk3Os8YdT63PmJoTdgIsLvu7zb91ae3H7E/I775
9Mntyx5VsQtbdIj1/G5bXJ+B0oZUldfeqP6csr3CekYCjyEAwJyw5J41/sHD
D7b0M9uPnIOdZu/B3rpDh4Jv3Wz5zf17l+jEX+UDtg7IP9ix/cqZzbUP/B27
tdVRYdH537DCv/Gpyujnn7SYAq5+4LfuU5VZu7S367dbXuvBx96Vc1sPwuCa
rom9cplIXuvhJ97ac1tf3W8LzxfUR9ze1p3zmyvnn2w59OSdO3Qw9h6JAT0q
bauX9lgPHtx+aVM/190vw6kPYcfeJ4XcuRCW5tqtVkR7Rf05bXuj6hkFPIYA
AHPCcnvW0OHQztIX/emdvrCndeulzvFzzWDocnVlPxgu7vvaeuSLz79MZxXZ
YhsvkJIbN/epEJxx7zfpiKjRK8etXNrtXv3RB9vdS1y54AU+BNzzxfURtPei
O3j+pn6WvcXzSwPH3fX1nkBz6jN8Pn3LxkNf3F5+f07b3uh6RgCPIQDAnHCa
PWv8Zqs/gI39fMKO0+Lv3KGbUzibR4TnH5kWuxz5/47D27QiqM9URPXPxO0d
U08+8BgCAMwL85kH+GQ9a8BiAY8hAMD8MJ+qerKeNWCxgMcQAGB+mE9VBQAA
ABaRJfOsWXR835srjxgAAABTsVyeNbPCMYuyLOdL9fGnHgnaP1KuOnwYniwA
ALAgLJdnzVGxKzkp2MojJZNJ9lJK6XXPrZUyU68ytdVEojDdDkqqqskRVYUn
CwAALApL5llDinJ5e3pI+ZNcoZpLJlJqUS9m00RE5aJOt0EGqYmtfFLKmeTF
pOX7ZjKRyJl8VfXIG3iRdkWVOLEqPFkAAGBBWA7PGtcsSAkpLauZINRM57qr
g716We5eIJ2z3LZfN4jYJ5OJpKKzQt1CmsSmkpQplHNSIJ1dDSXBY6CqNBlj
MhOWn8lHlE9wrLKWp5uDUkpep0uZeyuZnarWPT2paEOZLCxN1TgBODxZAABg
MVgSzxrfLrI35Epm3TRoiv9SI6gPTRms6g3X8xwrT1M1qY22y7bDqqZD6lS1
bM+tGTRxol6rFTNJVr1qmK/YI+paYBdiKY6lfMmqs3qqQWYnfvntRlmT02z8
O5VRFUWWlVJHhsmPsnndqtukvd2/IsYCTxYAAFgIlsazhmbyV8LotayEc6B2
OUtFXsnR7P25vMKEruIGgbPc8OnUZyKte06J/GP1RcPVERcAUvOEGs6rGpkx
5QedkaIzv8NC2KgU5ZQURuYTj+vCkwUAABaCpfGs6S+5+7pB9VfK64ahU4xS
qVQOZIzGyGo+KwXjttk0uZgvKI1Tfn5s+dQDgM2rDtaSzZCqetUmsa1bUyaO
VeHJAgAAC8GyeNZ4hiIlFIMdc8lVErJBLV8aVMUUrer6bd9zzFIhk1KC8JEu
TKKDz1V60f5c/b7rOCQaJiXodi+bsUePKIbXK1+PLj9YA5wpmq5LuqKopOVS
ww98ATTT9txGWWPD0MZE5uvwZAEAgIVgOTxrAtGh87BGvVbMBK+DyK5R6a2G
oiugtHK4eirIJNwg4ePAlGW3qIAiE7KGoYRlWm5dS3fKdyPKJ9SMbPcHGVVr
0JIcLZgwpm3NBEPBsj5+Gyw8WQAAYCE4HZ41vkMrNHy6E8TLbc92jhgD8stn
P/HckWQV03RPADxZAABgMZjPPMDwrOkHniwAALAozKeqwrOmH3iyAADAojCf
qgoAAAAsIkvmWdPyD1q88kXHAQAAgBhZLs+agxtnN1cu7o2cKjgOLxgAAACx
slyeNVQ9DYGqjh6HFwwAAIB4WTLPmo0L3FhVcBxeMAAAAGJlOTxrujy8tH3r
5sHEx+EFAwAAIE6WxLPmsMALBgAAQIwsjWfN4YAXDAAAgBhZGs+awwEvGAAA
ADGyLJ41h64wvGAAAADExnJ41hy+tvCCAQAAEB+nw7NGBLxgAAAAxMl85gE+
Hs8aeMEAAACIl/lU1ePxrIEXDAAAgHiZT1UFAAAAFpFT4lkDjgf0PwDglHM6
PGvafvMgMKhpxXJpHu7HO6svbV29tHfES8RVzkkAbyAAwGln6T1rWvd3V89u
6mfCrw97P21VzmzevMNJGnw4tq55H5JLnN3ZmX05D95ukrYYfe1aeW7nm5MP
EuENBAA47Sy7Z83BzXNEobYf2AdbN72VflX1fePMZpWXip9V6GBXEGDtNoVC
/M0ll6jh7mTlEFregc9r9mg5Q+ysP6F/Kjy3feuyt375yfrb2/oZd6M5afmj
x+mRaepJYn9uKA1vIADAKWfJPWuae0Q6r3aOPHjDDSKpnfXdW29s0dD1/M7t
y96tS96DTkqJnWue0QkAjfPeFju4yxS59NL2lSA8JIFhR4P8+3tXX3BpUS9t
rz69qT8dqiG3nLbnX6FxqHvrmn/7ghv89Pbdg4hyRDx8w125SPtk686+7+2R
6lFVFZUvvu7unV16uSDgfWHnoTOmnt980msXuWj12sDfGPAGAgCccpbds6ZV
JTp4tnlrZXfjmu864QPf/cRbfY6Kxcq5ZuX81upLW1/d7f3o6htPHt5tuTef
9FTDb62/RHWk+rH/zc0nH57ZXPt4n7WXqjYR2XvX9m6/QUdl9XOhGvLLaR98
s767djaUsI1ruzcu7GzYUeWIIH8h6E9v3bq0s3LGveeQYvdbEeWLjtu7K0z0
H9qtrTt7FRLXn9l65EeUs796ZvPKZXqGy/rh6rWJpn/hDQQAOCUsv2dNc//W
q1vdKcgrb3fHJ30iCjdGAiv3U2/1HDuZvaXaUQ2qYudDobt3fnPlVVrOw7eJ
NG91G7jxam/kVlQOHZR+evPDNwaGSSPKEUHrc257fWXHGB775ZQvOv5g8Lrt
JhXZjlByy2ndoI1yV89vX724U73oPZhsWBfeQACAU8KSe9Z4/tXzXnfZz8PL
JAzcDr9lg8PD86r2E6KAlZW9reaB3/TX+kY4H1x0AyXtf02lrVtg8G2ghuJy
giU9Q9cVliOG1oGNALvr/m7TX316+5EvLH/C67Y9NmD+aSuinG8+fXL7sld9
dfvqhS0aX5+PrmanYHgDAQBOB0vuWcOkk8Sn7J0HXw3EgHQN8JXLRJJaDz/x
1p7b+up+u3XHI2p462bLb+7fu0QnXisfBOt0Du6cJwryZDd4fWFTf+mJz+Zb
afz7xq7rkEJ2Vmhkuv3IE5fjH+zYPrnu2gf+jt3a6oxIi8oR4rdIfVbOP9ly
aCE7d+gg872msHzR8dbdJ8F1tzzyCe3foqPczfsR5TDZXb0U9udtcv65ifYf
wxsIAHBKWHLPGqaqeu/Lvd23lebRB9vdH1254DE/gBZTFvZ1rhkM4a6u7O/e
3AkOrn6w/+hyM3gdDOo+vNwrJLgWWxA1ppzO11YnwBSVw4cEqoPlEBWmRYnK
j7iu+2lv9REpJJhfFp7v+aXB/lxfn2hrEryBAACnhKX3rCGhFokSd+2We7/F
WVjjH+x6w5tE/GZrR7x9hoN3sOMcjFYmrnKOgV2nteNMVNUW664Wq+rEeSrg
DQQAOC3MZx7g4/GsAccDvIEAAKeH+VTV4/GsAccDvIEAAKeH+VRVAAAAYBFZ
Ms+aeeO0tRcAAE45y+VZcywIrrvQ7aXqf/TSRamEpz0OAAALy3J51sSCrSYS
BdHOSvF1F7W9rpXLdDIxk78BUoVDX0PkTTPtcQAAWFyWy7Nm6nI6b+sL1HyT
aEzO5KuqyCsnYOL2tj1S0Wliw+jrTlt+X3tZ3vtEsmg2nHo5w7J2NIbOnLye
Im+aaY8DAMDCsjSeNdxyCG693C2kkKU5++VijdSGKUhKq1q6mgrepNc9xypr
ebqpJ6XkdboEeWgFMue607bXqWrdeiYVrZfJwq3lZZZPSs4G9VRLXX0buq6r
ZSQpmZQSSb3h1zTaV+SbdMEUli9or1ulKY9ynVSQToWE6WnLD6pTkrshbCZn
OWOuGxQg8KaZ9jgAACwqy+JZIyinrtNSMtlSpaIxNSEiV6fhrFe3yooUSEa+
Ui3n1VzF9htlTU6z01IZVVFkWSn1bd7hXHfq9rbJJbJ53arbpJ596k/zJBAV
NMplPS8H9Wx4wus6lkFrmSmSN/uuRf8OSOctxxOXz29vNZccHLJ2TJPtAbZL
Eq1OwbIdu1ZhPUcj5YjrBoi8aaY9DgAAC8qyeNbwyxlSjRLRuFz36uwS+dGE
P1aKzmByHvSj152+ve1GpSinpDCi7ox/BoFtufNOEjL21ZPv0WPSS7PRWqaA
3YQY3PJF7aX2B0nOkLU52K62W5Y6f6iIrhteQ+BNM+1xAABYUJbGs4ZbDlXV
ZL4rRxWlP3Kkl+DMn7pVNq/Kec6PXnfq9rKZRFWv2q7nuTWlE0sGqmp0hoON
AfUXePQE9aza1ayUSHeSNwrKF7WXpeflZD2iDUlkezEsM0EI+5973e6JAm+a
aY8DAMCCsiSeNYJynEqO1idn1BokhsvSaDZQK99zbItEgIphObZtO/1l0TXA
maLpuqQJRSUtl8TXnba9gS+AZtqe2yhrdABVNYKB3XDVULagZTMSG0juqarI
o4epLaXrBSMsX9TewN0gqVbrjuuQt6jBhYKRc9Iu2yPvrGt0OD7dFd/R6/Z1
CN+bZtrjAACwoCyJZ42wnHatlA8X3aQyaYlVpvMw72NgeW3NyHZ/kFF785tc
r5zp2tt2tGDCmNUnGKqVg5Dct428mkmn1XyxIIf1jLgu66RgVlfrn+jllh/R
Xr9RUbrLm0hgbwSLldqNSm/VU0KS++eXedft9IbAm2ba4wAAsKAsjWeNoJwB
aoWklDMFPxyulsvZUiLwypmmvROcTv+i6B8BjvDoISHoaGunrA67gEPeMlqS
T487nMFw7nXF3jTTHgcAgEVlPvMAx+5ZUzdy6XRaCkJJoz7+DQJm6ZXj0rgt
jHfptpfjum5siLxppj0OAACLy3yqauyeNY5V0sIStfLR/FNm5pXj1yoGraRR
rjucJs+/R4/Im2ba4wAAsLjMp6oCAAAAiwhUFQAAAIgLqCoAAAAQFzNQ1UjP
FwAAAGB5iV9VIz1fRB4o3lQOLgAAAMBcEq+qRni+8DxQKF693D2ezqSk9OH9
PQEAAICTJV5VFXq+CDxQOp4v2YpVtyqjrt8AAADAIjGDeVWO54vIA6VWzNCE
dZ3DXs1QswZmZAEAACwo8asqz/NF5IFiaekBtQUAAAAWmRmtAR7yfBF6oDDn
slRWbziuUzeZ73cO86oAAAAWlFnsV+V6vog8UOyqlupZpmQMC9OqAAAAFpVZ
ZYHge76IPFDocXdKmxUAAABg3kBuJQAAACAuoKoAAABAXEBVAQAAgLiAqgIA
AABxAVUFAAAA4gKqCgAAAMQFVBUAAACIC6gqAAAAEBdQVQAAACAuoKoAAABA
XEBVAQAAgLiAqgIAAABxAVUFAAAA4gKqCgAAAMQFVBUAAACIC6gqAAAAEBeT
q+r/B+AOulo=
    "], {{0, 230}, {626, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSizeRaw->{626, 230},
  PlotRange->{{0, 626}, {0, 230}}]], "Input"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.543757327487454*^9, 3.543757328019158*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
GMM Results (Parameter Estimates and Standard Errors) These are not Correct! \
Just the last output the computer gave.\
\>", "Subsection",
 CellChangeTimes->{{3.543034415842182*^9, 3.5430344171388206`*^9}, {
  3.5430352425685387`*^9, 3.543035254853406*^9}, {3.543763735081478*^9, 
  3.5437637540451508`*^9}}],

Cell[TextData[Cell[BoxData[
 FormBox[GridBox[{
    {"Parameter", "Estimate", "SE"},
    {
     SubscriptBox["\[Alpha]", "1"], 
     RowBox[{"-", "0.0029"}], "0.0020"},
    {
     SubscriptBox["\[Alpha]", "2"], "0.0013", "0.0015"},
    {
     SubscriptBox["\[Alpha]", "3"], "0.0016", "0.0019"},
    {
     SubscriptBox["\[Alpha]", "4"], "0.0027", "0.0012"},
    {
     SubscriptBox["\[Alpha]", "5"], 
     RowBox[{"-", "0.0009"}], "0.0013"},
    {
     SubscriptBox["\[Alpha]", "6"], 
     RowBox[{"-", "0.0022"}], "0.0017"},
    {
     SubscriptBox["\[Beta]", "1"], "1.3415", "0.0316"},
    {
     SubscriptBox["\[Beta]", "2"], "1.0839", "0.0327"},
    {
     SubscriptBox["\[Beta]", "3"], "1.0765", "0.0384"},
    {
     SubscriptBox["\[Beta]", "4"], "0.9981", "0.0151"},
    {
     SubscriptBox["\[Beta]", "5"], "0.9155", "0.0188"},
    {
     SubscriptBox["\[Beta]", "6"], "0.9360", "0.0305"},
    {"\[Lambda]", "0.0045", "0.0019"}
   }], TraditionalForm]]]], "Text",
 CellChangeTimes->{{3.54303525859855*^9, 3.54303533942688*^9}, {
  3.543763407347785*^9, 3.543763425608966*^9}, {3.543763462226688*^9, 
  3.543763470580946*^9}, {3.543763508778943*^9, 3.54376353495374*^9}, {
  3.543763802513089*^9, 3.5437639014080963`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"gmmSMLPlot", " ", "=", " ", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"0.0045", "*", "\[Beta]"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Beta]", ",", "0", ",", "1.5"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", ".005"}], ",", ".0125"}], "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Brown", ",", "Thick"}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pointsPlotGmm", " ", "=", " ", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{"1.3415", ",", 
          RowBox[{"Mean", "[", "r1", "]"}]}], "}"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{"1.0839", ",", 
          RowBox[{"Mean", "[", "r2", "]"}]}], "}"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{"1.0765", ",", 
          RowBox[{"Mean", "[", "r3", "]"}]}], "}"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{"0.9981", ",", 
          RowBox[{"Mean", "[", "r4", "]"}]}], "}"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{"0.9155", ",", 
          RowBox[{"Mean", "[", "r5", "]"}]}], "}"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{"0.9360", ",", 
          RowBox[{"Mean", "[", "r6", "]"}]}], "}"}], "}"}]}], 
      "\[IndentingNewLine]", "}"}], ",", 
     RowBox[{"PlotMarkers", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<s1b1\>\"", ",", "\"\<s1b2\>\"", ",", "\"\<s1b3\>\"", ",", 
        "\"\<s2b1\>\"", ",", "\"\<s2b2\>\"", ",", "\"\<s2b3\>\""}], "}"}]}], 
     ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "1.5"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", ".005"}], ",", ".01"}], "}"}]}], "}"}]}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.5437637806228228`*^9, 3.543763793995101*^9}, {
  3.543763916669753*^9, 3.5437639476750937`*^9}, {3.543764031539812*^9, 
  3.543764034648758*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"gmmSMLPlot", ",", " ", "pointsPlotGmm"}], "]"}]], "Input",
 CellChangeTimes->{{3.5437639572519197`*^9, 3.543763968796895*^9}}],

Cell[BoxData[
 FormBox[
  GraphicsBox[{{{}, {}, 
     {RGBColor[0.6, 0.4, 0.2], Thickness[Large], LineBox[CompressedData["
1:eJwVxXk41HkAB2BHjvVUeJJOnhSTpbJbOtTDJ+rRpszowDiGMWMQkyv3LymT
ozJWaEoi2rVl2SehlEpZYjwqKxLVOEYqR+P2JY+Z3f3jfV4jTshRnoqSkpLj
f/5/9lBwnlMI26Zzt/rtNpnUOtl3o2kLzQasWVKt6VVr80r2KVBIo+PIn04S
KavVZqxiXxqf5gUH1XhZC6vPJlF/cq0nLRiNFsuiG1jjNs2NDgPHaGegbu/1
uJaljJCCqCYGLR0mrQLWM5YuatPSHjvS8lEpEm2pYRlBTT1cYzDwLljt4eyq
lVtxMMEn6b5LFUpPRPhJpLtRFcuTFLXWwD9edyTkuS263IMswqPrELAt8wcZ
3x66B4R+tXsbkTGaoJbV5ACddl75To9mmK5a8blSwMCGdfziJE4LnNl2Z6TL
jmKX5GSzbWYrzKruzi5YH0ft97OH23PbcL8+bOCdyAUBz8TimsS3OO4caPui
kYkc7u3Vy9nvMGhMf1j8zR2bmX0zcl4XtpckFx62Y6F7kvF678EPuFI5PacS
4o2JnlU/6TtL4FLtKd0zwEZGSZy/q2sPPlpZvg1bwgFNW9MxJrcXI9//SLhn
xMWD0LMl6Tf7wFyxn+vk6It2kyyNI5lS0CNPy2d9eTAWtJmycvpRsKXnjVK2
H6yceixv5n4CP6XK8vxTf0hCk2yEaQOoMzKn67YFoNzKbcmLy58RsaKpYEFx
AvoujV13kr6gjK5SMrkyCJAqXf474iv8Te7Z8TbxkaMfsIQWM4gY14vLdrie
RGL+iZTtgUPQa5bn6gQHI+/1tYb00GEsvp7HcrgRgvjgrDGD8BFgkVtHAicU
wz6mK90432D9scytZyQUlxaGFnX7yTDYlxcrSwxD9ciB0aXuo3BPZUaqaIej
w2SXdLfxGFLlr3YevxaOgB+5FllFY+De6hQ5bz6FWhcPytZwHKpfylo9Hp7C
NuZQsV7hOI64GRbrMiLAF9i/s14zAS7fzfPlhwik+ml+V86agCWD0VHPi8RT
Ax/FkN4kyr3fj/DnI/FInqxqlj6JaZ1tPatSovC6Yt+QUHcKX0bXBUcZRuPF
Or+GtMwpXMlvqtOpiMb5KufCPq1paMowfdc6Bp7rP3p5CKdhFnSoTt4Wg/kH
FmvMNWagc8H45FF2LE6rDr68cmYGFVEPJf2DsdA3tvIxUSJYlNk3ZJwQh+hg
lymtWILV9M62QC0Ka3f4imkUQZSs/H7nYgrPF8Ju2MUT/JMuvGqvTUFLKNwf
d44gtcXOY70ehfyS+uzBCwTE6S9plwGFhq9bt4uvE7w9ljj+y88U9LjaUUlP
CH5126S9kUnhkZmBQ2ENwfCc+ni2OwWvCTPDp88JDlzve6PConDnnH3DVD2B
/L1I1O1DYU9BvL7vKwK+p7KhKIgCRzL8wK6b4KB3xya1BAoaRXMXvXoJihRl
S0+do1DK1/COkxIoF1wa6xVQmJlfr1H+meBR797KJ6kULq52dzUaJTDllOyJ
yKRgIfU3tx4nEKgkG0izKbQXRyqYkwQ9t9gKxlUKhlaXb2cQgqv9y+vMb1Co
U7pJlc4RTAjGfs/JpxAgLmWI5wnoxs3JGoUUFmdUb/i0QFBcXxQQ+RuFe65i
olAQqPHOOvQXUfgX9ZtaeQ==
       "]]}}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGCQAGIQLRBhueVE2Vd7ffOJHqt/FNqj8xvVDrUtD/9on+Or
6n/gbQMG/7JvElDLR/vzxXw1nmYtGHyLdJfM/A/v7f1nHjkfkF+Iwd809/3y
Y95v7d9UnNivv6MEg3/w1ELXbZ/f2j9jdVzBLVKFwR/q7gcASkO89g==
     "], {
      {Hue[0.67, 0.6, 0.6], 
       TagBox[InsetBox["s1b1", 13],
        "InsetString"], 
       TagBox[InsetBox["s1b1", 14],
        "InsetString"]}, 
      {Hue[0.9060679774997897, 0.6, 0.6], 
       TagBox[InsetBox["s1b2", 15],
        "InsetString"], 
       TagBox[InsetBox["s1b2", 16],
        "InsetString"]}, 
      {Hue[0.1421359549995791, 0.6, 0.6], 
       TagBox[InsetBox["s1b3", 17],
        "InsetString"], 
       TagBox[InsetBox["s1b3", 18],
        "InsetString"]}, 
      {Hue[0.37820393249936934`, 0.6, 0.6], 
       TagBox[InsetBox["s2b1", 19],
        "InsetString"], 
       TagBox[InsetBox["s2b1", 20],
        "InsetString"]}, 
      {Hue[0.6142719099991583, 0.6, 0.6], 
       TagBox[InsetBox["s2b2", 21],
        "InsetString"], 
       TagBox[InsetBox["s2b2", 22],
        "InsetString"]}, 
      {Hue[0.8503398874989481, 0.6, 0.6], 
       TagBox[InsetBox["s2b3", 23],
        "InsetString"], 
       TagBox[InsetBox["s2b3", 24],
        "InsetString"]}, {}}]},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->True,
   AxesOrigin->{0, 0},
   PlotRange->{{0, 1.5}, {-0.005, 0.0125}},
   PlotRangeClipping->True,
   PlotRangePadding->{
     Scaled[0.02], Automatic}], TraditionalForm]], "Output",
 CellChangeTimes->{3.543763971148808*^9, 3.543764036524763*^9}]
}, Open  ]],

Cell["\<\
Although I didn\[CloseCurlyQuote]t get convergence, if you compare this plot \
to the one obtained through OLS you will see that they are very close. This \
is another evidence that the process in the GMM code is solid, the computer \
is just struggling with convergence. \
\>", "Text",
 CellChangeTimes->{{3.543764198560347*^9, 3.5437642429599867`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"pValueStandard", " ", "=", " ", 
   RowBox[{"1", "-", 
    RowBox[{"CDF", "[", 
     RowBox[{
      RowBox[{"ChiSquareDistribution", "[", "5", "]"}], ",", 
      "0.999999999999978"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{
  "\"\<The j-statistic ~ \!\(\*SuperscriptBox[\(\[Chi]\), \(2\)]\) (5) was \
0.999999999999978 and that has an associated p-value of \>\"", ",", " ", 
   RowBox[{"ToString", "[", "pValueStandard", "]"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.5437645002638702`*^9, 3.543764506460977*^9}, {
  3.543764594204987*^9, 3.543764754011557*^9}, {3.543765525217148*^9, 
  3.543765525680593*^9}, {3.543770285224255*^9, 3.543770291552128*^9}, {
  3.543770358751746*^9, 3.543770361749763*^9}}],

Cell[BoxData[
 FormBox[
  InterpretationBox[
   RowBox[{"\<\"The j-statistic ~ \\!\\(\\*SuperscriptBox[\\(\[Chi]\\), \
\\(2\\)]\\) (5) was 0.999999999999978 and that has an associated p-value of \
\"\>", "\[InvisibleSpace]", "\<\"0.962566\"\>"}],
   SequenceForm[
   "The j-statistic ~ \!\(\*SuperscriptBox[\(\[Chi]\), \(2\)]\) (5) was \
0.999999999999978 and that has an associated p-value of ", "0.962566"],
   Editable->False], TraditionalForm]], "Print",
 CellChangeTimes->{
  3.543765534910219*^9, {3.543770286912724*^9, 3.543770292502625*^9}, 
   3.543770363099811*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Part 3: GMM Estimation with Newey Standard Errors\
\>", "Section",
 CellChangeTimes->{{3.5437694798566513`*^9, 3.543769490622614*^9}}],

Cell["The Code", "Subsection",
 CellChangeTimes->{{3.543769493190805*^9, 3.5437694957905617`*^9}}],

Cell[CellGroupData[{

Cell["The Results", "Subsection",
 CellChangeTimes->{{3.5437694974304934`*^9, 3.543769499942178*^9}}],

Cell[TextData[Cell[BoxData[
 FormBox[GridBox[{
    {"Parameter", "Estimate", "SE"},
    {
     SubscriptBox["\[Alpha]", "1"], 
     RowBox[{"-", "0.0043"}], "0.0061"},
    {
     SubscriptBox["\[Alpha]", "2"], "0.0054", "0.0041"},
    {
     SubscriptBox["\[Alpha]", "3"], "0.0084", "0.0044"},
    {
     SubscriptBox["\[Alpha]", "4"], 
     RowBox[{"-", "0.0045"}], "0.0058"},
    {
     SubscriptBox["\[Alpha]", "5"], "0.0025", "0.0064"},
    {
     SubscriptBox["\[Alpha]", "6"], "0.0054", "0.0058"},
    {
     SubscriptBox["\[Beta]", "1"], "1.3612", "0.0236"},
    {
     SubscriptBox["\[Beta]", "2"], "1.0726", "0.0184"},
    {
     SubscriptBox["\[Beta]", "3"], "1.0553", "0.0165"},
    {
     SubscriptBox["\[Beta]", "4"], "1.0237", "0.0110"},
    {
     SubscriptBox["\[Beta]", "5"], "0.8836", "0.0106"},
    {
     SubscriptBox["\[Beta]", "6"], "0.8866", "0.0100"},
    {"\[Lambda]", "0.0069", "0.0145"}
   }], TraditionalForm]]]], "Text",
 CellChangeTimes->{{3.54303525859855*^9, 3.54303533942688*^9}, {
  3.543763407347785*^9, 3.543763425608966*^9}, {3.543763462226688*^9, 
  3.543763470580946*^9}, {3.543763508778943*^9, 3.54376353495374*^9}, {
  3.543763802513089*^9, 3.5437639014080963`*^9}, {3.5437696171961412`*^9, 
  3.543769627111136*^9}, {3.543769833305237*^9, 3.543769910918495*^9}, {
  3.5437699420380573`*^9, 3.54377003424247*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"pValueStandard", " ", "=", " ", 
   RowBox[{"1", "-", 
    RowBox[{"CDF", "[", 
     RowBox[{
      RowBox[{"ChiSquareDistribution", "[", "5", "]"}], ",", 
      "0.167330676504051"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{
  "\"\<The j-statistic ~ \!\(\*SuperscriptBox[\(\[Chi]\), \(2\)]\) (5) was \
0.999999999999978 and that has an associated p-value of \>\"", ",", " ", 
   RowBox[{"ToString", "[", "pValueStandard", "]"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.5437645002638702`*^9, 3.543764506460977*^9}, {
  3.543764594204987*^9, 3.543764754011557*^9}, {3.543765525217148*^9, 
  3.543765525680593*^9}, {3.543770285224255*^9, 3.543770291552128*^9}, {
  3.543770358751746*^9, 3.543770361749763*^9}, {3.543770440694035*^9, 
  3.543770444483405*^9}}],

Cell[BoxData[
 FormBox[
  InterpretationBox[
   RowBox[{"\<\"The j-statistic ~ \\!\\(\\*SuperscriptBox[\\(\[Chi]\\), \
\\(2\\)]\\) (5) was 0.999999999999978 and that has an associated p-value of \
\"\>", "\[InvisibleSpace]", "\<\"0.999426\"\>"}],
   SequenceForm[
   "The j-statistic ~ \!\(\*SuperscriptBox[\(\[Chi]\), \(2\)]\) (5) was \
0.999999999999978 and that has an associated p-value of ", "0.999426"],
   Editable->False], TraditionalForm]], "Print",
 CellChangeTimes->{
  3.543765534910219*^9, {3.543770286912724*^9, 3.543770292502625*^9}, 
   3.543770363099811*^9, 3.5437704458028383`*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Part 4: Discussion", "Section",
 CellChangeTimes->{{3.543035384340127*^9, 3.543035385480235*^9}, {
  3.543770971887273*^9, 3.5437709736126757`*^9}}],

Cell[CellGroupData[{

Cell["4a.) ", "Subsection",
 CellChangeTimes->{{3.543770985637372*^9, 3.543770993499749*^9}}],

Cell["\<\
The main reason there are differences between my 2-stage OLS and GMM \
estimates for the \[Alpha]\[CloseCurlyQuote]s and \[Beta]\[CloseCurlyQuote]s \
is that the GMM code in MatLab never quite converged. To remedy this I would \
have to provide my program with more sophistocated measures of the \
derivatives for the objective function. 

Another possible explanation is that 2sls is consistent, but biased whereas \
GMM is both consistent and unbiased. This means that for convergent \
solutions, the GMM results should be closer to the actual values than the the \
OLS estimates will be.\
\>", "Text",
 CellChangeTimes->{{3.543771113671994*^9, 3.543771199821048*^9}, {
  3.5437712369882727`*^9, 3.543771309393697*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["4b.) ", "Subsection",
 CellChangeTimes->{{3.543771094881584*^9, 3.543771096752194*^9}}],

Cell["\<\
The standard errors were different. One reason for this was that the standard \
\[OpenCurlyDoubleQuote]iid\[CloseCurlyDoubleQuote] GMM estimation makes the \
assumption that there is no serial correlation in the data. With time series \
this is highly unlikely. The newey procedure, however, allows for \
autocorrelative effects up to a certain lag. In this example that lag was set \
to 5. 

We would expect the standard errors to be smaller with the Newey case because \
when computing the S matrix, the newey procedure includes the iid case and \
additional factors. This leads to a larger S matrix in the newey case than \
that in the iid one. When computing the standard errors we take the inverse \
of the S matrix and the inverse of a matrix decreases as the size of its \
elements increase. We see this result hold true for the \[Beta]\
\[CloseCurlyQuote]s, but not as much for the \[Alpha]\[CloseCurlyQuote]s.\
\>", "Text",
 CellChangeTimes->{{3.5437713291217337`*^9, 3.543771475102734*^9}, {
  3.543771538323833*^9, 3.543771615287754*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{798, 1156},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
PrintingCopies->1,
PrintingPageRange->{1, Automatic},
FrontEndVersion->"8.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (February 23, \
2011)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[557, 20, 133, 2, 27, "Input"],
Cell[CellGroupData[{
Cell[715, 26, 142, 2, 76, "Title"],
Cell[860, 30, 98, 1, 46, "Subtitle"],
Cell[CellGroupData[{
Cell[983, 35, 156, 2, 67, "Section"],
Cell[1142, 39, 349, 8, 43, "Input"],
Cell[1494, 49, 608, 16, 27, "Input"],
Cell[2105, 67, 1890, 49, 163, "Input"],
Cell[3998, 118, 2173, 58, 103, "Input"],
Cell[CellGroupData[{
Cell[6196, 180, 754, 19, 58, "Input"],
Cell[CellGroupData[{
Cell[6975, 203, 2022, 42, 58, "Print"],
Cell[9000, 247, 1991, 41, 58, "Print"],
Cell[10994, 290, 1985, 41, 58, "Print"],
Cell[12982, 333, 2152, 46, 58, "Print"],
Cell[15137, 381, 1984, 41, 58, "Print"],
Cell[17124, 424, 1984, 41, 58, "Print"],
Cell[19111, 467, 1754, 37, 40, "Print"]
}, Open  ]],
Cell[20880, 507, 225, 6, 27, "Output"]
}, Open  ]],
Cell[21120, 516, 479, 10, 41, "Text"],
Cell[21602, 528, 3683, 92, 163, "Input"],
Cell[CellGroupData[{
Cell[25310, 624, 261, 5, 27, "Input"],
Cell[25574, 631, 3818, 81, 228, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[29429, 717, 97, 1, 27, "Input"],
Cell[29529, 720, 321, 8, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[29887, 733, 276, 7, 27, "Input"],
Cell[30166, 742, 342, 8, 27, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[30557, 756, 229, 3, 67, "Section"],
Cell[CellGroupData[{
Cell[30811, 763, 98, 1, 34, "Subsection"],
Cell[30912, 766, 73535, 1210, 949, "Input"],
Cell[104450, 1978, 18586, 309, 245, "Input"],
Cell[123039, 2289, 92, 1, 27, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[123168, 2295, 318, 6, 41, "Subsection"],
Cell[123489, 2303, 1228, 35, 249, "Text"],
Cell[124720, 2340, 2402, 69, 178, "Input"],
Cell[CellGroupData[{
Cell[127147, 2413, 174, 3, 27, "Input"],
Cell[127324, 2418, 3348, 74, 228, "Output"]
}, Open  ]],
Cell[130687, 2495, 364, 6, 41, "Text"],
Cell[CellGroupData[{
Cell[131076, 2505, 782, 16, 84, "Input"],
Cell[131861, 2523, 575, 12, 23, "Print"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[132497, 2542, 144, 3, 67, "Section"],
Cell[132644, 2547, 98, 1, 34, "Subsection"],
Cell[CellGroupData[{
Cell[132767, 2552, 101, 1, 26, "Subsection"],
Cell[132871, 2555, 1354, 36, 249, "Text"],
Cell[CellGroupData[{
Cell[134250, 2595, 831, 17, 84, "Input"],
Cell[135084, 2614, 599, 12, 23, "Print"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[135744, 2633, 154, 2, 67, "Section"],
Cell[CellGroupData[{
Cell[135923, 2639, 93, 1, 34, "Subsection"],
Cell[136019, 2642, 731, 13, 101, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[136787, 2660, 93, 1, 34, "Subsection"],
Cell[136883, 2663, 1059, 17, 131, "Text"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
