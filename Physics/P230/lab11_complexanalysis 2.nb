(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 8.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[    736402,      14395]
NotebookOptionsPosition[    725018,      14040]
NotebookOutlinePosition[    725522,      14059]
CellTagsIndexPosition[    725479,      14056]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["\<\
Physics 230 -- Lab 11 (Complex Analysis)\
\>", "Title",
 CellChangeTimes->{{3.399308987464324*^9, 3.399308997477577*^9}, {
   3.3996509147507887`*^9, 3.3996509168582067`*^9}, 3.4274817158062444`*^9, {
   3.427505828304313*^9, 3.427505832757467*^9}, {3.4275745555520296`*^9, 
   3.42757455564578*^9}, {3.427574731865658*^9, 3.4275747372563176`*^9}, {
   3.4294834587838097`*^9, 3.4294834590806885`*^9}, 3.430327560654002*^9, {
   3.430601265670842*^9, 3.430601266858365*^9}, 3.4311905217116194`*^9, 
   3.4318058743262105`*^9, 3.4322908055044465`*^9, 3.432910136263564*^9, {
   3.433259931559206*^9, 3.4332599434032593`*^9}, {3.433259974357177*^9, 
   3.4332599768259897`*^9}, {3.439677149771514*^9, 3.4396771505840187`*^9}, {
   3.523960219538739*^9, 3.523960220113739*^9}}],

Cell["\<\
Branton J. Campbell, BYU Physics & Astronomy, Winter 2010
R. Steven Turley, BYU Physics & Astronomy, Fall 2011\
\>", "Subtitle",
 CellChangeTimes->{{3.433259527908248*^9, 3.433259551315097*^9}, 
   3.442877770853633*^9, {3.471790437262633*^9, 3.4717904378720117`*^9}, {
   3.524861134187694*^9, 3.5248611476250377`*^9}}],

Cell["\<\
Complex numbers are essential to the mathematical analysis of physical \
systems.  Because the field of complex numbers is algebraically closed while \
the field of real numbers is not, we can't help running into them from time \
to time.  Loosely speaking, \"algebraically closed\" essentially means that \
real polynomial equations will always have complex solutions when no real \
solutions exist.  In this lab, we will explore the behavior of several \
well-known functions in the complex plane and their application to \
oscillatory phenomena.\
\>", "Text",
 CellChangeTimes->{{3.4303328171611757`*^9, 3.4303328617557817`*^9}, {
   3.430337158416401*^9, 3.430337162963363*^9}, {3.4303440447361155`*^9, 
   3.4303440608145494`*^9}, {3.430352154594947*^9, 3.430352177017253*^9}, 
   3.430497670206213*^9, {3.4306011277463193`*^9, 3.4306011281682024`*^9}, 
   3.430601271436578*^9, {3.4306013425004425`*^9, 3.430601366329025*^9}, {
   3.4307097552544365`*^9, 3.430709783676858*^9}, {3.4307694207016554`*^9, 
   3.43076964619036*^9}, {3.430769681566039*^9, 3.4307700168381014`*^9}, {
   3.4311197804732823`*^9, 3.431119796661093*^9}, {3.431190525414815*^9, 
   3.4311905257429466`*^9}, 3.4311905979787083`*^9, {3.4311907394970503`*^9, 
   3.431190742981492*^9}, {3.431492886761525*^9, 3.431492887223022*^9}, {
   3.431494062343462*^9, 3.431494337141776*^9}, {3.4317255415822144`*^9, 
   3.4317255520667906`*^9}, {3.4318058441225057`*^9, 3.431805844450637*^9}, {
   3.4318073279009933`*^9, 3.4318073289478884`*^9}, {3.4318785406526766`*^9, 
   3.431878608466479*^9}, {3.4322908285673895`*^9, 3.4322909571167326`*^9}, {
   3.4322922730482473`*^9, 3.432293150330716*^9}, {3.4329099693228593`*^9, 
   3.432909970526007*^9}, {3.4329102356092215`*^9, 3.4329102393905444`*^9}, {
   3.432910984811106*^9, 3.432911019280518*^9}, {3.4329110574843764`*^9, 
   3.4329111183292947`*^9}, {3.432911200955881*^9, 3.4329112138936296`*^9}, {
   3.4329118104050827`*^9, 3.43291181107697*^9}, {3.4329135996738105`*^9, 
   3.4329136611593657`*^9}, {3.4329142475925007`*^9, 3.432914473831219*^9}, 
   3.432916189082901*^9, 3.43291645930684*^9, {3.4329167501092978`*^9, 
   3.4329167720315933`*^9}, {3.4330158750885677`*^9, 3.433015875463575*^9}, {
   3.433072742352726*^9, 3.433073376817874*^9}}],

Cell[CellGroupData[{

Cell["Complex algebra (35 min)", "Section",
 CellChangeTimes->{{3.4306009820872726`*^9, 3.4306009986500907`*^9}, {
   3.430607504087493*^9, 3.4306075152908325`*^9}, {3.431182354054803*^9, 
   3.4311823567267294`*^9}, {3.4311825544336505`*^9, 3.431182554574278*^9}, {
   3.431190573165732*^9, 3.431190601072518*^9}, {3.431201043366756*^9, 
   3.431201044929286*^9}, 3.4314665256696043`*^9, 3.4314665763961973`*^9, 
   3.431466615222662*^9, 3.431488602552561*^9, {3.4318058304191175`*^9, 
   3.4318058361536026`*^9}, {3.431806408320838*^9, 3.431806410414628*^9}, {
   3.43180665273178*^9, 3.4318066534036684`*^9}, {3.4318077228617015`*^9, 
   3.431807724346105*^9}, {3.431808201011507*^9, 3.431808201183385*^9}, {
   3.431811172787314*^9, 3.4318111733341994`*^9}, {3.4318135733021526`*^9, 
   3.4318135734896564`*^9}, {3.431897525064046*^9, 3.431897525142172*^9}, 
   3.4319917298815885`*^9, 3.432072668283319*^9, {3.43229167834933*^9, 
   3.432291683161922*^9}, {3.4322920767788544`*^9, 3.4322920768413553`*^9}, {
   3.4324110366565547`*^9, 3.432411036828433*^9}, 3.432488565189156*^9, {
   3.432516046826768*^9, 3.432516069749083*^9}, 3.432516203673529*^9, 
   3.4325876102902927`*^9, {3.432587649744175*^9, 3.432587698635739*^9}, 
   3.432659693804842*^9, {3.4326644461611924`*^9, 3.4326644463174458`*^9}, {
   3.4329101771549745`*^9, 3.432910181076925*^9}, {3.432910213999432*^9, 
   3.432910216343227*^9}, {3.4329160468301697`*^9, 3.432916047830189*^9}, {
   3.432916726843226*^9, 3.432916730218291*^9}, {3.433081780106669*^9, 
   3.4330817803302298`*^9}, 3.433089522477521*^9, 3.43308968236663*^9, {
   3.4330909348163157`*^9, 3.433090934975607*^9}, {3.4330909799131927`*^9, 
   3.433090980408948*^9}, 3.4332003298553667`*^9, 3.433203638268185*^9}],

Cell[CellGroupData[{

Cell["(#1) Complex numbers (10 min)", "Subsection",
 CellChangeTimes->{{3.4329211263495703`*^9, 3.432921138224798*^9}, {
   3.4330121399699793`*^9, 3.4330121465794816`*^9}, {3.4330817403389797`*^9, 
   3.433081749760988*^9}, 3.433090931863811*^9, {3.433090982385178*^9, 
   3.433090983217084*^9}}],

Cell[TextData[{
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " uses a ",
 StyleBox[ButtonBox["capital \"",
  BaseStyle->"Link",
  ButtonData->"paclet://ref/I"],
  FontWeight->"Bold"],
 StyleBox[ButtonBox["I",
  BaseStyle->"Link",
  ButtonData->"paclet://ref/I"],
  FontFamily->"Courier",
  FontSize->14],
 StyleBox[ButtonBox["\"",
  BaseStyle->"Link",
  ButtonData->"paclet://ref/I"],
  FontWeight->"Bold"],
 " to represent the imaginary number ",
 Cell[BoxData[
  FormBox[
   SqrtBox[
    RowBox[{"-", "1"}]], TraditionalForm]]],
 "in standard input.  In descriptive cells like this one, however, we will \
follow standard conventions by using a lower-case italicized \"",
 StyleBox["i ",
  FontSlant->"Italic"],
 "\".  \n\n(a) In the cell below, we define the complex number, ",
 StyleBox["zzz",
  FontSlant->"Italic"],
 " = 1 + ",
 StyleBox["i , ",
  FontSlant->"Italic"],
 "and calcluate its real part (",
 StyleBox[ButtonBox["Re",
  BaseStyle->"Link",
  ButtonData->"paclet://ref/Re"],
  FontWeight->"Bold"],
 "), imaginary part (",
 StyleBox[ButtonBox["Im",
  BaseStyle->"Link",
  ButtonData->"paclet://ref/Im"],
  FontWeight->"Bold"],
 "), absolute value (",
 StyleBox[ButtonBox["Abs",
  BaseStyle->"Link",
  ButtonData->"paclet://ref/Abs"],
  FontWeight->"Bold"],
 "), phase in radians (",
 StyleBox[ButtonBox["Arg",
  BaseStyle->"Link",
  ButtonData->"paclet://ref/Arg"],
  FontWeight->"Bold"],
 "), normalized value (",
 StyleBox[ButtonBox["Sign",
  BaseStyle->"Link",
  ButtonData->"paclet://ref/Sign"],
  FontWeight->"Bold"],
 ") and complex conjugate (",
 StyleBox[ButtonBox["Conjugate",
  BaseStyle->"Link",
  ButtonData->"paclet://ref/Conjugate"],
  FontWeight->"Bold"],
 ").  Make sure that you understand the output, and then explain it to your \
TA."
}], "Text",
 CellChangeTimes->{{3.433074213475914*^9, 3.433074249626502*^9}, {
  3.4330743880551043`*^9, 3.433074395390542*^9}, {3.433074437480103*^9, 
  3.433074446927741*^9}, {3.433074524069641*^9, 3.433074555124158*^9}, {
  3.433074589542066*^9, 3.4330746689909563`*^9}, {3.433074708251258*^9, 
  3.433074958737583*^9}, {3.433075038389904*^9, 3.433075322723749*^9}, {
  3.433075423933835*^9, 3.433075484728795*^9}, {3.4330895461697206`*^9, 
  3.4330895985277433`*^9}, {3.44287171198079*^9, 3.4428717395585623`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"zzz", "=", 
  RowBox[{"1", "+", "I"}]}], "\[IndentingNewLine]", 
 RowBox[{"Re", "[", "zzz", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Im", "[", "zzz", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Abs", "[", "zzz", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Arg", "[", "zzz", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Sign", "[", "zzz", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Conjugate", "[", "zzz", "]"}]}], "Input",
 CellChangeTimes->{{3.4428716705281963`*^9, 3.442871671465684*^9}, {
  3.529241436694379*^9, 3.529241466386348*^9}}],

Cell[BoxData[
 RowBox[{"1", "+", "\[ImaginaryI]"}]], "Output",
 CellChangeTimes->{{3.5292414414108505`*^9, 3.529241466852394*^9}, 
   3.5292515699267063`*^9, 3.529759713449139*^9}],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{{3.5292414414108505`*^9, 3.529241466852394*^9}, 
   3.5292515699267063`*^9, 3.529759713459139*^9}],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{{3.5292414414108505`*^9, 3.529241466852394*^9}, 
   3.5292515699267063`*^9, 3.529759713459139*^9}],

Cell[BoxData[
 SqrtBox["2"]], "Output",
 CellChangeTimes->{{3.5292414414108505`*^9, 3.529241466852394*^9}, 
   3.5292515699267063`*^9, 3.529759713459139*^9}],

Cell[BoxData[
 FractionBox["\[Pi]", "4"]], "Output",
 CellChangeTimes->{{3.5292414414108505`*^9, 3.529241466852394*^9}, 
   3.5292515699267063`*^9, 3.529759713459139*^9}],

Cell[BoxData[
 FractionBox[
  RowBox[{"1", "+", "\[ImaginaryI]"}], 
  SqrtBox["2"]]], "Output",
 CellChangeTimes->{{3.5292414414108505`*^9, 3.529241466852394*^9}, 
   3.5292515699267063`*^9, 3.529759713459139*^9}],

Cell[BoxData[
 RowBox[{"1", "-", "\[ImaginaryI]"}]], "Output",
 CellChangeTimes->{{3.5292414414108505`*^9, 3.529241466852394*^9}, 
   3.5292515699267063`*^9, 3.529759713469138*^9}]
}, Open  ]],

Cell[TextData[{
 "\n(b)  Because ",
 StyleBox["z",
  FontSlant->"Italic"],
 " = ",
 StyleBox["x",
  FontSlant->"Italic"],
 " + ",
 StyleBox["i y",
  FontSlant->"Italic"],
 "  is a number in the complex plane, it can also be represented as a point {",
 StyleBox["x",
  FontSlant->"Italic"],
 ", ",
 StyleBox["y",
  FontSlant->"Italic"],
 "} in the traditional ",
 StyleBox["xy",
  FontSlant->"Italic"],
 " plane.  With this analogy in hand, we often use the traditional ",
 StyleBox["xy",
  FontSlant->"Italic"],
 " plane to represent the complex plane, and refer to the ",
 StyleBox["x",
  FontSlant->"Italic"],
 " and ",
 StyleBox["y",
  FontSlant->"Italic"],
 " axes as the real and imaginary axes, respectively.  In the cell below, \
create a function ",
 StyleBox["comp2pair[z_]",
  FontWeight->"Bold"],
 " that converts a complex number ",
 StyleBox["z",
  FontSlant->"Italic"],
 " into the corresponding {",
 StyleBox["x",
  FontSlant->"Italic"],
 ", ",
 StyleBox["y",
  FontSlant->"Italic"],
 "} point, and demonstrate its use."
}], "Text",
 CellChangeTimes->{{3.4330760804400883`*^9, 3.433076082216835*^9}, {
   3.433076197620494*^9, 3.43307666088288*^9}, {3.433076712726297*^9, 
   3.433076783358365*^9}, {3.433089611565016*^9, 3.4330896469700947`*^9}, 
   3.442871761792653*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"comp2pair", "[", "z_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"x", ",", "y"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"x", " ", "=", " ", 
      RowBox[{"Re", "[", "z", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"y", " ", "=", " ", 
      RowBox[{"Im", "[", "z", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"x", ",", "y"}], "}"}]}]}], "\[IndentingNewLine]", 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"comp2pair", "[", "zzz", "]"}]}], "Input",
 CellChangeTimes->{{3.4329211402873373`*^9, 3.4329215971242332`*^9}, {
   3.4330007149245167`*^9, 3.433000994179878*^9}, {3.4330734204660673`*^9, 
   3.433073423023419*^9}, {3.433073458699136*^9, 3.4330735482724247`*^9}, {
   3.433073816499959*^9, 3.4330738588278837`*^9}, {3.433073900839611*^9, 
   3.43307392468605*^9}, {3.4330739591525784`*^9, 3.4330741244237423`*^9}, 
   3.433076187264431*^9, {3.433076671124091*^9, 3.433076704868967*^9}, {
   3.4330767946032476`*^9, 3.433076805736382*^9}, 3.4332026685246105`*^9, {
   3.5292414995546637`*^9, 3.5292415962263308`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "1"}], "}"}]], "Output",
 CellChangeTimes->{3.5292415967383814`*^9, 3.5292515704966893`*^9, 
  3.529759714439109*^9}]
}, Open  ]],

Cell[TextData[{
 "\n(c) Use ",
 StyleBox[ButtonBox["RandomComplex",
  BaseStyle->"Link",
  ButtonData->"paclet://ref/RandomComplex"],
  FontWeight->"Bold"],
 " to generate 100 random complex numbers within the rectangle defined by \
corners at -1-",
 StyleBox["i",
  FontSlant->"Italic"],
 "  and 1+",
 StyleBox["i",
  FontSlant->"Italic"],
 " .  Use your comp2pair function above to convert them to ",
 StyleBox["xy",
  FontSlant->"Italic"],
 " points and ",
 StyleBox["ListPlot",
  FontWeight->"Bold"],
 " them using ",
 StyleBox["AspectRatio \[Rule] 1",
  FontWeight->"Bold"],
 "."
}], "Text",
 CellChangeTimes->{{3.433075643693678*^9, 3.433075831781397*^9}, {
   3.433075896030319*^9, 3.4330759305883827`*^9}, {3.433076000105831*^9, 
   3.433076037535781*^9}, {3.4330760924341707`*^9, 3.433076092858045*^9}, 
   3.442875162333538*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"zz", " ", "=", " ", 
   RowBox[{"RandomComplex", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "1"}], "-", "I"}], ",", 
       RowBox[{"1", "+", "I"}]}], "}"}], ",", "100"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"xy", " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"comp2pair", "[", "#", "]"}], "&"}], "/@", "zz"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", 
  RowBox[{"xy", ",", 
   RowBox[{"AspectRatio", "\[Rule]", "1"}]}], 
  "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.4330755008785057`*^9, 3.433075508298902*^9}, {
   3.4330755537085743`*^9, 3.43307562998597*^9}, {3.433075949991221*^9, 
   3.433075988183559*^9}, 3.4332026761810565`*^9, {3.5292416222099285`*^9, 
   3.529241728355542*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, 
   {Hue[0.67, 0.6, 0.6], PointBox[CompressedData["
1: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
8a3Xrn50UG7PoUkVmFrJVVvIpPg/4/djkQ==
     "]]}, {}},
  AspectRatio->1,
  Axes->True,
  AxesOrigin->{0, 0},
  PlotRange->{{-0.9907523089451811, 0.9962183255549979}, {-0.9579880592768864,
    0.9883623028886133}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{
  3.529241639078615*^9, {3.5292416732780347`*^9, 3.5292417289165983`*^9}, 
   3.5292515710266733`*^9, 3.5297597152090864`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["(#2) Euler formula (10 min)", "Subsection",
 CellChangeTimes->{{3.432920137221204*^9, 3.4329201397056265`*^9}, {
  3.433012148688897*^9, 3.4330121514702005`*^9}, {3.4330817523852673`*^9, 
  3.433081761401729*^9}}],

Cell[TextData[{
 "(a) Use ",
 StyleBox[ButtonBox["TrigToExp",
  BaseStyle->"Link",
  ButtonData->"paclet://ref/TrigToExp"],
  FontWeight->"Bold"],
 " to convert hyperbolic trig functions cosh(x) and sinh(x) into exponential \
form.  These should look familiar.  Then use ",
 StyleBox[ButtonBox["ExpToTrig",
  BaseStyle->"Link",
  ButtonData->"paclet://ref/ExpToTrig"],
  FontWeight->"Bold"],
 " to bring them back to trigonometric form."
}], "Text",
 CellChangeTimes->{{3.4303328171611757`*^9, 3.4303328617557817`*^9}, {
   3.430337158416401*^9, 3.430337162963363*^9}, {3.4303440447361155`*^9, 
   3.4303440608145494`*^9}, {3.430352154594947*^9, 3.430352177017253*^9}, 
   3.430497670206213*^9, {3.4306011277463193`*^9, 3.4306011281682024`*^9}, 
   3.430601271436578*^9, {3.4306013425004425`*^9, 3.430601366329025*^9}, {
   3.4307097552544365`*^9, 3.430709783676858*^9}, {3.4307694207016554`*^9, 
   3.43076964619036*^9}, {3.430769681566039*^9, 3.4307700168381014`*^9}, {
   3.4311197804732823`*^9, 3.431119796661093*^9}, {3.431190525414815*^9, 
   3.4311905257429466`*^9}, 3.4311905979787083`*^9, {3.4311907394970503`*^9, 
   3.431190742981492*^9}, {3.431492886761525*^9, 3.431492887223022*^9}, {
   3.431494062343462*^9, 3.431494337141776*^9}, {3.4317255415822144`*^9, 
   3.4317255520667906`*^9}, {3.4318058441225057`*^9, 3.431805844450637*^9}, {
   3.4318073279009933`*^9, 3.4318073289478884`*^9}, {3.4318785406526766`*^9, 
   3.431878608466479*^9}, {3.4322908285673895`*^9, 3.4322909571167326`*^9}, {
   3.4322922730482473`*^9, 3.432293150330716*^9}, {3.4329099693228593`*^9, 
   3.432909970526007*^9}, {3.4329102356092215`*^9, 3.4329102393905444`*^9}, {
   3.432910984811106*^9, 3.432911019280518*^9}, {3.4329110574843764`*^9, 
   3.4329111183292947`*^9}, {3.432911200955881*^9, 3.4329112138936296`*^9}, {
   3.4329118104050827`*^9, 3.43291181107697*^9}, {3.4329135996738105`*^9, 
   3.4329136611593657`*^9}, {3.4329142475925007`*^9, 3.432914473831219*^9}, 
   3.432916189082901*^9, 3.43291645930684*^9, {3.432916745640462*^9, 
   3.4329167462810993`*^9}, 3.432918455923299*^9, {3.4329200177189093`*^9, 
   3.4329200295472617`*^9}, {3.4329201734875255`*^9, 3.432920174690674*^9}, {
   3.4330771548679743`*^9, 3.433077155785262*^9}, {3.433077225749404*^9, 
   3.433077266621011*^9}, {3.4330774963861027`*^9, 3.433077496386738*^9}, {
   3.433077544376306*^9, 3.433077546645076*^9}, {3.4330776410949593`*^9, 
   3.4330776410955667`*^9}, {3.4330778044380903`*^9, 
   3.4330778207405357`*^9}, {3.433077931529765*^9, 3.4330780259910383`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"exp", " ", "=", " ", 
  RowBox[{"TrigToExp", "[", 
   RowBox[{"Cosh", "[", "x", "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"exp2", " ", "=", 
  RowBox[{"TrigToExp", "[", 
   RowBox[{"Sinh", "[", "x", "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"ExpToTrig", "[", "exp", "]"}], "\[IndentingNewLine]", 
 RowBox[{"ExpToTrig", "[", "exp2", "]"}]}], "Input",
 CellChangeTimes->{{3.433077180268805*^9, 3.433077218380033*^9}, {
   3.433077950529808*^9, 3.433077951521818*^9}, {3.433078041468444*^9, 
   3.433078061477008*^9}, 3.4332026933064947`*^9, {3.5292417434260488`*^9, 
   3.529241787779484*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox[
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", "x"}]], "2"], "+", 
  FractionBox[
   SuperscriptBox["\[ExponentialE]", "x"], "2"]}]], "Output",
 CellChangeTimes->{{3.529241767792485*^9, 3.52924178814552*^9}, 
   3.5292515714366612`*^9, 3.529759715989063*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox[
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"-", "x"}]], "2"]}], "+", 
  FractionBox[
   SuperscriptBox["\[ExponentialE]", "x"], "2"]}]], "Output",
 CellChangeTimes->{{3.529241767792485*^9, 3.52924178814552*^9}, 
   3.5292515714366612`*^9, 3.5297597159990625`*^9}],

Cell[BoxData[
 RowBox[{"Cosh", "[", "x", "]"}]], "Output",
 CellChangeTimes->{{3.529241767792485*^9, 3.52924178814552*^9}, 
   3.5292515714366612`*^9, 3.529759716019062*^9}],

Cell[BoxData[
 RowBox[{"Sinh", "[", "x", "]"}]], "Output",
 CellChangeTimes->{{3.529241767792485*^9, 3.52924178814552*^9}, 
   3.5292515714366612`*^9, 3.529759716019062*^9}]
}, Open  ]],

Cell[TextData[{
 "\n(b) Use ",
 StyleBox[ButtonBox["ExpToTrig",
  BaseStyle->"Link",
  ButtonData->"paclet://ref/ExpToTrig"],
  FontWeight->"Bold"],
 " to convert exponential function ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["\[ExponentialE]", "x"], TraditionalForm]]],
 " into trigonometric form."
}], "Text",
 CellChangeTimes->{{3.433078087550971*^9, 3.433078152878661*^9}, {
  3.433078196682399*^9, 3.433078220080944*^9}, {3.433086623011244*^9, 
  3.433086634537491*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ExpToTrig", "[", 
  RowBox[{"Exp", "[", "x", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.4329201754250627`*^9, 3.432920300864971*^9}, {
   3.432920331271805*^9, 3.432920339193832*^9}, {3.433078173889935*^9, 
   3.433078174007903*^9}, {3.43308661479539*^9, 3.433086614937471*^9}, {
   3.4332005961434336`*^9, 3.433200602362343*^9}, 3.433202696384699*^9, {
   3.529241794001106*^9, 3.5292418017298784`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Cosh", "[", "x", "]"}], "+", 
  RowBox[{"Sinh", "[", "x", "]"}]}]], "Output",
 CellChangeTimes->{3.529241802001906*^9, 3.529251571836649*^9, 
  3.529759716709041*^9}]
}, Open  ]],

Cell[TextData[{
 "\n(c) Use ",
 StyleBox[ButtonBox["ExpToTrig",
  BaseStyle->"Link",
  ButtonData->"paclet://ref/ExpToTrig"],
  FontWeight->"Bold"],
 " to convert the exponential function ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{" ", 
     RowBox[{"i", " ", "x"}]}]], TraditionalForm]]],
 " into trigonometric form.  This identity, often called ",
 StyleBox[ButtonBox["Euler's formula",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://en.wikipedia.org/wiki/Euler's_formula"], None}],
  FontWeight->"Bold",
  FontSlant->"Italic"],
 ", provides a geometric link between the complex plane and the unit circle.  \
Euler's formula is the most important concept that you will encounter in this \
lab -- commit it to memory if you haven't already done so."
}], "Text",
 CellChangeTimes->{{3.433078087550971*^9, 3.433078152878661*^9}, {
  3.433078196682399*^9, 3.433078290627386*^9}, {3.43307836862392*^9, 
  3.43307851697832*^9}, {3.43307866483902*^9, 3.433078858468082*^9}, {
  3.433200615800187*^9, 3.4332006291442785`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ExpToTrig", "[", 
  RowBox[{"Exp", "[", 
   RowBox[{"I", "*", "x"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.4329201754250627`*^9, 3.432920300864971*^9}, {
   3.432920331271805*^9, 3.432920339193832*^9}, {3.433078173889935*^9, 
   3.433078174007903*^9}, {3.4330782552350473`*^9, 3.4330782554742823`*^9}, 
   3.433202700369176*^9, {3.5292418083215375`*^9, 3.529241817027408*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Cos", "[", "x", "]"}], "+", 
  RowBox[{"\[ImaginaryI]", " ", 
   RowBox[{"Sin", "[", "x", "]"}]}]}]], "Output",
 CellChangeTimes->{3.529241817374443*^9, 3.529251572316635*^9, 
  3.5297597174590187`*^9}]
}, Open  ]],

Cell[TextData[{
 "\n(d) Use ",
 StyleBox[ButtonBox["TrigToExp",
  BaseStyle->"Link",
  ButtonData->"paclet://ref/TrigToExp"],
  FontWeight->"Bold"],
 " to convert sin(x) and cos(x) into exponential form.  You should also \
commit these identities to memory."
}], "Text",
 CellChangeTimes->{{3.4303328171611757`*^9, 3.4303328617557817`*^9}, {
   3.430337158416401*^9, 3.430337162963363*^9}, {3.4303440447361155`*^9, 
   3.4303440608145494`*^9}, {3.430352154594947*^9, 3.430352177017253*^9}, 
   3.430497670206213*^9, {3.4306011277463193`*^9, 3.4306011281682024`*^9}, 
   3.430601271436578*^9, {3.4306013425004425`*^9, 3.430601366329025*^9}, {
   3.4307097552544365`*^9, 3.430709783676858*^9}, {3.4307694207016554`*^9, 
   3.43076964619036*^9}, {3.430769681566039*^9, 3.4307700168381014`*^9}, {
   3.4311197804732823`*^9, 3.431119796661093*^9}, {3.431190525414815*^9, 
   3.4311905257429466`*^9}, 3.4311905979787083`*^9, {3.4311907394970503`*^9, 
   3.431190742981492*^9}, {3.431492886761525*^9, 3.431492887223022*^9}, {
   3.431494062343462*^9, 3.431494337141776*^9}, {3.4317255415822144`*^9, 
   3.4317255520667906`*^9}, {3.4318058441225057`*^9, 3.431805844450637*^9}, {
   3.4318073279009933`*^9, 3.4318073289478884`*^9}, {3.4318785406526766`*^9, 
   3.431878608466479*^9}, {3.4322908285673895`*^9, 3.4322909571167326`*^9}, {
   3.4322922730482473`*^9, 3.432293150330716*^9}, {3.4329099693228593`*^9, 
   3.432909970526007*^9}, {3.4329102356092215`*^9, 3.4329102393905444`*^9}, {
   3.432910984811106*^9, 3.432911019280518*^9}, {3.4329110574843764`*^9, 
   3.4329111183292947`*^9}, {3.432911200955881*^9, 3.4329112138936296`*^9}, {
   3.4329118104050827`*^9, 3.43291181107697*^9}, {3.4329135996738105`*^9, 
   3.4329136611593657`*^9}, {3.4329142475925007`*^9, 3.432914473831219*^9}, 
   3.432916189082901*^9, 3.43291645930684*^9, {3.432916745640462*^9, 
   3.4329167462810993`*^9}, 3.432918455923299*^9, {3.4329200177189093`*^9, 
   3.4329200295472617`*^9}, {3.4329201734875255`*^9, 3.432920174690674*^9}, {
   3.4330771548679743`*^9, 3.433077155785262*^9}, {3.433077225749404*^9, 
   3.433077266621011*^9}, {3.4330774963861027`*^9, 3.433077496386738*^9}, {
   3.433077544376306*^9, 3.433077546645076*^9}, {3.4330776410949593`*^9, 
   3.4330776410955667`*^9}, {3.4330778044380903`*^9, 
   3.4330778207405357`*^9}, {3.433077931529765*^9, 3.4330780259910383`*^9}, {
   3.433086649532115*^9, 3.433086710875428*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"TrigToExp", "[", 
  RowBox[{"Sin", "[", "x", "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"TrigToExp", "[", 
  RowBox[{"Cos", "[", "x", "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.433077180268805*^9, 3.433077218380033*^9}, {
   3.433077950529808*^9, 3.433077951521818*^9}, {3.433078041468444*^9, 
   3.433078061477008*^9}, {3.43308667139784*^9, 3.433086694470402*^9}, 
   3.4332027037442617`*^9, {3.5292418324019456`*^9, 3.529241863779083*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   FractionBox["1", "2"], " ", "\[ImaginaryI]", " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"-", "\[ImaginaryI]"}], " ", "x"}]]}], "-", 
  RowBox[{
   FractionBox["1", "2"], " ", "\[ImaginaryI]", " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"\[ImaginaryI]", " ", "x"}]]}]}]], "Output",
 CellChangeTimes->{{3.52924184635034*^9, 3.529241864002105*^9}, 
   3.5292515727566214`*^9, 3.5297597181589975`*^9}],

Cell[BoxData[
 RowBox[{
  FractionBox[
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"-", "\[ImaginaryI]"}], " ", "x"}]], "2"], "+", 
  FractionBox[
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"\[ImaginaryI]", " ", "x"}]], "2"]}]], "Output",
 CellChangeTimes->{{3.52924184635034*^9, 3.529241864002105*^9}, 
   3.5292515727566214`*^9, 3.5297597181689973`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["(#3) The unit circle (5 min)", "Subsection",
 CellChangeTimes->{{3.4322913386865587`*^9, 3.432291347014843*^9}, {
   3.4322914131723633`*^9, 3.4322914151880274`*^9}, 3.432470192010652*^9, {
   3.432471282219102*^9, 3.432471283576335*^9}, 3.432480755039879*^9, {
   3.432480793555401*^9, 3.4324808120161247`*^9}, 3.432480854859672*^9, {
   3.43248165598464*^9, 3.4324816571925917`*^9}, 3.4325629132540216`*^9, 
   3.4325877117453656`*^9, {3.4325880147980595`*^9, 3.432588014938687*^9}, 
   3.4326596846686373`*^9, {3.432910168545434*^9, 3.4329101705454726`*^9}, {
   3.432916829188941*^9, 3.4329168620176964`*^9}, 3.4329169445661564`*^9, {
   3.4330203714717712`*^9, 3.4330203752843447`*^9}, 3.4331659932031183`*^9, 
   3.433200326339652*^9, 3.433203493951991*^9, 3.433203586610613*^9}],

Cell[TextData[{
 "In the sciences, we will often use ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"i", " ", "\[Omega]", " ", "t"}]], TraditionalForm]]],
 " to represent a time-oscillating quantity, though it is implicitly \
understood that only the real part of the expression is physical.  The \
expression ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"i", " ", "\[Theta]"}]], TraditionalForm]]],
 " is often referred to as a complex sinusoid.  \n\nEvaluate the cell below, \
which animates the arrow pointing towards ",
 StyleBox["z",
  FontSlant->"Italic"],
 " = ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"i", " ", "\[Theta]"}]], TraditionalForm]]],
 " in the complex plane as \[Theta] is varied between 0 and 2\[Pi].  The real \
and imaginary components of ",
 StyleBox["z",
  FontSlant->"Italic"],
 " are also animated as large red and blue dots, respectively.  Explain the \
various features of the graphic to your TA."
}], "Text",
 CellChangeTimes->{{3.433104339387271*^9, 3.433104362777733*^9}, {
  3.4331044015730343`*^9, 3.433104434132139*^9}, {3.433104464837641*^9, 
  3.4331049174681787`*^9}, {3.433104951057165*^9, 3.4331049771819897`*^9}, {
  3.433158206239605*^9, 3.433158215545282*^9}, {3.4332018459879293`*^9, 
  3.4332018778481197`*^9}, {3.433203355682826*^9, 3.433203376464608*^9}, {
  3.433203450278998*^9, 3.4332035682976437`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"g", "[", "th_", "]"}], " ", ":=", 
   RowBox[{"Exp", "[", 
    RowBox[{"I", "  ", "th"}], "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"objects", "[", "th_", "]"}], " ", ":=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Circle", "[", "]"}], ",", 
     RowBox[{"Arrowheads", "[", "0.1", "]"}], ",", "Thick", ",", 
     RowBox[{"Arrow", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Cos", "[", "th", "]"}], ",", 
          RowBox[{"Sin", "[", "th", "]"}]}], "}"}]}], "}"}], "]"}], ",", " ", 
     RowBox[{"PointSize", "[", "0.05", "]"}], ",", "Red", ",", 
     RowBox[{"Point", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Cos", "[", "th", "]"}], ",", "0"}], "}"}], "]"}], ",", " ", 
     "Blue", ",", 
     RowBox[{"Point", "[", 
      RowBox[{"{", 
       RowBox[{"0", ",", 
        RowBox[{"Sin", "[", "th", "]"}]}], "}"}], "]"}]}], "}"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Manipulate", "[", " ", 
  RowBox[{
   RowBox[{"Graphics", "[", 
    RowBox[{
     RowBox[{"objects", "[", "t", "]"}], " ", ",", 
     RowBox[{"Axes", "\[Rule]", "True"}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<x\>\"", ",", "\"\<y\>\""}], "}"}]}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", 
     RowBox[{"2", "Pi"}]}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{
  3.4329168415485535`*^9, {3.433026735750213*^9, 3.43302681368921*^9}, {
   3.4330269104566927`*^9, 3.433027039287291*^9}, {3.43302707203792*^9, 
   3.4330271913683357`*^9}, {3.433027237197341*^9, 3.433027741691402*^9}, {
   3.4330277757858067`*^9, 3.4330277939267797`*^9}, {3.4330279711020565`*^9, 
   3.433028222388131*^9}, {3.433028253591855*^9, 3.4330282576075573`*^9}, {
   3.43302828951442*^9, 3.4330283863131533`*^9}, {3.433028426157668*^9, 
   3.433028467033453*^9}, {3.433028532815966*^9, 3.433028602082921*^9}, {
   3.433028644958744*^9, 3.433028650615103*^9}, {3.4330287005066857`*^9, 
   3.4330290709825487`*^9}, {3.43302912520234*^9, 3.4330291428745537`*^9}, {
   3.433070243601173*^9, 3.433070314464368*^9}, {3.433104367550991*^9, 
   3.433104393454063*^9}, 3.433201802721196*^9, {3.433533587891034*^9, 
   3.433533594234744*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`t$$ = 0, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`t$$], 0, 2 Pi}}, Typeset`size$$ = {
    360., {179., 182.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`t$29101$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`t$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`t$$, $CellContext`t$29101$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Graphics[
        $CellContext`objects[$CellContext`t$$], Axes -> True, 
        AxesLabel -> {"x", "y"}], 
      "Specifications" :> {{$CellContext`t$$, 0, 2 Pi}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{405., {220., 225.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.529241899804685*^9, 3.5292515733566036`*^9, 
  3.52975971875898*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["(#4) Complex algebra (5 min)", "Subsection",
 CellChangeTimes->{{3.4329201511433463`*^9, 3.4329201627529445`*^9}, {
  3.433012149470162*^9, 3.43301215326711*^9}, {3.433079302779764*^9, 
  3.4330793056729403`*^9}, {3.4330817641297197`*^9, 3.4330817659857283`*^9}, {
  3.4332035885169115`*^9, 3.4332035887044163`*^9}}],

Cell[TextData[{
 "(a)  Euler's formula makes it possible to express any complex number in \
terms of a magnitude and a phase.  Use ",
 StyleBox["Exp",
  FontWeight->"Bold"],
 ", ",
 StyleBox["Abs",
  FontWeight->"Bold"],
 " and ",
 StyleBox["Arg",
  FontWeight->"Bold"],
 " to define a function ",
 StyleBox["convexp[z_]",
  FontWeight->"Bold"],
 " that converts a complex number ",
 StyleBox["z",
  FontSlant->"Italic"],
 " into exponential form.  Try your new function to show that 1+",
 StyleBox["i",
  FontSlant->"Italic"],
 "  = ",
 Cell[BoxData[
  RowBox[{
   SqrtBox["2"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    FractionBox[
     RowBox[{"\[ImaginaryI]", " ", "\[Pi]"}], "4"]]}]],
  CellChangeTimes->{3.433200675223583*^9}],
 "."
}], "Text",
 CellChangeTimes->{{3.433078882974042*^9, 3.43307888589203*^9}, {
  3.433082036852902*^9, 3.433082086667053*^9}, {3.4330828011772003`*^9, 
  3.433083067951339*^9}, {3.433083101584722*^9, 3.433083111377016*^9}, {
  3.4330831461893883`*^9, 3.43308314625975*^9}, {3.433083614289933*^9, 
  3.433083674416317*^9}, {3.433083709100815*^9, 3.43308370910152*^9}, {
  3.4332006606138344`*^9, 3.433200740959641*^9}, {3.433202724916679*^9, 
  3.4332027254635677`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"convexp", "[", "z_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"r", ",", "\[Theta]"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"r", " ", "=", " ", 
      RowBox[{"Abs", "[", "z", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[Theta]", " ", "=", " ", 
      RowBox[{"Arg", "[", "z", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"r", "*", 
      RowBox[{"Exp", "[", 
       RowBox[{"I", "*", "\[Theta]"}], "]"}]}]}]}], "\[IndentingNewLine]", 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"convexp", "[", 
  RowBox[{"1", "+", "I"}], "]"}]}], "Input",
 CellChangeTimes->{
  3.433082095766203*^9, {3.4330825447223663`*^9, 3.433082792218308*^9}, {
   3.433083072433079*^9, 3.433083133946705*^9}, {3.4330837425414658`*^9, 
   3.433083753765985*^9}, {3.4332007298499813`*^9, 3.433200730178115*^9}, {
   3.4332027295886736`*^9, 3.4332027376045036`*^9}, {3.5292419638890924`*^9, 
   3.5292420783695397`*^9}}],

Cell[BoxData[
 RowBox[{
  SqrtBox["2"], " ", 
  SuperscriptBox["\[ExponentialE]", 
   FractionBox[
    RowBox[{"\[ImaginaryI]", " ", "\[Pi]"}], "4"]]}]], "Output",
 CellChangeTimes->{
  3.5292420788175845`*^9, {3.529251564536868*^9, 3.529251573576597*^9}, 
   3.5297597196589527`*^9}]
}, Open  ]],

Cell[TextData[{
 "\n(b) In the cell below, we use the exponential form to define two complex \
numbers, ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["z", "1"], TraditionalForm]]],
 " and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["z", "2"], TraditionalForm]]],
 ".  Evaluate the cell to see how their magnitudes and phases combine under \
multiplication and division.  Explain the output to your TA.  Observe that ",
 StyleBox["ComplexExpand",
  FontWeight->"Bold"],
 " separates a complex expression into overall real and imaginary parts by \
assuming that all of the variables in the expression are real numbers.  This \
is a very useful trick -- remember it."
}], "Text",
 CellChangeTimes->{{3.4330821012263308`*^9, 3.433082151932662*^9}, {
  3.4330831577247677`*^9, 3.433083338935546*^9}, {3.433083783285644*^9, 
  3.433083862990687*^9}, {3.433091048558035*^9, 3.4330910574366093`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"z1", " ", "=", " ", 
    RowBox[{
     SubscriptBox["r", "1"], "*", 
     RowBox[{"Exp", "[", 
      RowBox[{"I", " ", 
       SubscriptBox["\[Phi]", "1"]}], "]"}]}]}], ";", " ", 
   RowBox[{"z2", " ", "=", " ", 
    RowBox[{
     SubscriptBox["r", "2"], "*", 
     RowBox[{"Exp", "[", 
      RowBox[{"I", " ", 
       SubscriptBox["\[Phi]", "2"]}], "]"}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"z1", "*", "z2"}], "//", "Simplify"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"z1", "*", "z2"}], "//", "ComplexExpand"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"z1", "/", "z2"}], "//", "Simplify"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"z1", "/", "z2"}], "//", "ComplexExpand"}]}], "Input",
 CellChangeTimes->{{3.432919490521288*^9, 3.4329195593038588`*^9}, {
  3.432919621226922*^9, 3.4329197652765627`*^9}, {3.432920734576423*^9, 
  3.43292082946887*^9}, {3.43292163260929*^9, 3.4329216405469427`*^9}, {
  3.433082161937335*^9, 3.433082166917935*^9}, {3.4330821971232843`*^9, 
  3.433082408453038*^9}, {3.4330825256897917`*^9, 3.433082529848185*^9}, {
  3.4330833605324097`*^9, 3.433083412750367*^9}, {3.433083890776697*^9, 
  3.433083897896113*^9}, {3.4330861690378437`*^9, 3.4330861765332403`*^9}, {
  3.433086209532446*^9, 3.433086210181573*^9}, {3.442872146695242*^9, 
  3.442872163742008*^9}}],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{"\[ImaginaryI]", " ", 
    RowBox[{"(", 
     RowBox[{
      SubscriptBox["\[Phi]", "1"], "+", 
      SubscriptBox["\[Phi]", "2"]}], ")"}]}]], " ", 
  SubscriptBox["r", "1"], " ", 
  SubscriptBox["r", "2"]}]], "Output",
 CellChangeTimes->{
  3.5292421201807203`*^9, {3.5292515650668526`*^9, 3.529251573926586*^9}, 
   3.5297597202489347`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Cos", "[", 
    RowBox[{
     SubscriptBox["\[Phi]", "1"], "+", 
     SubscriptBox["\[Phi]", "2"]}], "]"}], " ", 
   SubscriptBox["r", "1"], " ", 
   SubscriptBox["r", "2"]}], "+", 
  RowBox[{"\[ImaginaryI]", " ", 
   RowBox[{"Sin", "[", 
    RowBox[{
     SubscriptBox["\[Phi]", "1"], "+", 
     SubscriptBox["\[Phi]", "2"]}], "]"}], " ", 
   SubscriptBox["r", "1"], " ", 
   SubscriptBox["r", "2"]}]}]], "Output",
 CellChangeTimes->{
  3.5292421201807203`*^9, {3.5292515650668526`*^9, 3.529251573926586*^9}, 
   3.5297597203089333`*^9}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"\[ImaginaryI]", " ", 
     RowBox[{"(", 
      RowBox[{
       SubscriptBox["\[Phi]", "1"], "-", 
       SubscriptBox["\[Phi]", "2"]}], ")"}]}]], " ", 
   SubscriptBox["r", "1"]}], 
  SubscriptBox["r", "2"]]], "Output",
 CellChangeTimes->{
  3.5292421201807203`*^9, {3.5292515650668526`*^9, 3.529251573926586*^9}, 
   3.5297597203189325`*^9}],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{
    RowBox[{"Cos", "[", 
     RowBox[{
      SubscriptBox["\[Phi]", "1"], "-", 
      SubscriptBox["\[Phi]", "2"]}], "]"}], " ", 
    SubscriptBox["r", "1"]}], 
   SubscriptBox["r", "2"]], "+", 
  FractionBox[
   RowBox[{"\[ImaginaryI]", " ", 
    RowBox[{"Sin", "[", 
     RowBox[{
      SubscriptBox["\[Phi]", "1"], "-", 
      SubscriptBox["\[Phi]", "2"]}], "]"}], " ", 
    SubscriptBox["r", "1"]}], 
   SubscriptBox["r", "2"]]}]], "Output",
 CellChangeTimes->{
  3.5292421201807203`*^9, {3.5292515650668526`*^9, 3.529251573926586*^9}, 
   3.529759720328933*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["(#5) Complex roots (5 min)", "Subsection",
 CellChangeTimes->{{3.4329197984646997`*^9, 3.4329198006209917`*^9}, {
   3.4330121501576753`*^9, 3.4330121546577616`*^9}, {3.433081769121841*^9, 
   3.43308177328174*^9}, 3.433089520167234*^9, {3.433203590407585*^9, 
   3.4332035906888423`*^9}}],

Cell[TextData[{
 "(a) In the cell below, we use ",
 StyleBox["Solve",
  FontWeight->"Bold"],
 " to find the two square roots of -1.  Modify the equation to find the 3 \
cube roots of ",
 StyleBox["i",
  FontSlant->"Italic"],
 ".  Then manually cube each root to make sure you get ",
 StyleBox["i",
  FontSlant->"Italic"],
 "  back again."
}], "Text",
 CellChangeTimes->{{3.4303328171611757`*^9, 3.4303328617557817`*^9}, {
   3.430337158416401*^9, 3.430337162963363*^9}, {3.4303440447361155`*^9, 
   3.4303440608145494`*^9}, {3.430352154594947*^9, 3.430352177017253*^9}, 
   3.430497670206213*^9, {3.4306011277463193`*^9, 3.4306011281682024`*^9}, 
   3.430601271436578*^9, {3.4306013425004425`*^9, 3.430601366329025*^9}, {
   3.4307097552544365`*^9, 3.430709783676858*^9}, {3.4307694207016554`*^9, 
   3.43076964619036*^9}, {3.430769681566039*^9, 3.4307700168381014`*^9}, {
   3.4311197804732823`*^9, 3.431119796661093*^9}, {3.431190525414815*^9, 
   3.4311905257429466`*^9}, 3.4311905979787083`*^9, {3.4311907394970503`*^9, 
   3.431190742981492*^9}, {3.431492886761525*^9, 3.431492887223022*^9}, {
   3.431494062343462*^9, 3.431494337141776*^9}, {3.4317255415822144`*^9, 
   3.4317255520667906`*^9}, {3.4318058441225057`*^9, 3.431805844450637*^9}, {
   3.4318073279009933`*^9, 3.4318073289478884`*^9}, {3.4318785406526766`*^9, 
   3.431878608466479*^9}, {3.4322908285673895`*^9, 3.4322909571167326`*^9}, {
   3.4322922730482473`*^9, 3.432293150330716*^9}, {3.4329099693228593`*^9, 
   3.432909970526007*^9}, {3.4329102356092215`*^9, 3.4329102393905444`*^9}, {
   3.432910984811106*^9, 3.432911019280518*^9}, {3.4329110574843764`*^9, 
   3.4329111183292947`*^9}, {3.432911200955881*^9, 3.4329112138936296`*^9}, {
   3.4329118104050827`*^9, 3.43291181107697*^9}, {3.4329135996738105`*^9, 
   3.4329136611593657`*^9}, {3.4329142475925007`*^9, 3.432914473831219*^9}, 
   3.432916189082901*^9, 3.43291645930684*^9, {3.432916745640462*^9, 
   3.4329167462810993`*^9}, 3.432918455923299*^9, {3.4329197817768793`*^9, 
   3.432919810824312*^9}, {3.433012080250083*^9, 3.4330120805782146`*^9}, {
   3.4330798940358267`*^9, 3.433079929298854*^9}, {3.43307996238834*^9, 
   3.433080459659609*^9}, {3.433080518743017*^9, 3.433080580574551*^9}, {
   3.433081260827094*^9, 3.433081278181785*^9}, {3.4330813408473387`*^9, 
   3.43308134934129*^9}, {3.4330814311280813`*^9, 3.433081501081936*^9}, {
   3.43308154720511*^9, 3.43308161584527*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"root", " ", "=", " ", 
  RowBox[{
   RowBox[{"z", "/.", 
    RowBox[{"Solve", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"z", "^", "3"}], "\[Equal]", 
       RowBox[{"-", "1"}]}], ",", "z"}], "]"}]}], "//", 
   "ComplexExpand"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"root", "[", 
   RowBox[{"[", "1", "]"}], "]"}], "^", "3"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"root", "[", 
    RowBox[{"[", "2", "]"}], "]"}], "^", "3"}], "//", 
  "Simplify"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"root", "[", 
    RowBox[{"[", "3", "]"}], "]"}], "^", "3"}], "//", "Simplify"}]}], "Input",
 CellChangeTimes->{{3.433011865386583*^9, 3.4330118890276613`*^9}, 
   3.4330119790293894`*^9, {3.4330120664685683`*^9, 3.433012070140514*^9}, {
   3.4330812820527353`*^9, 3.433081332368745*^9}, {3.4330814830670357`*^9, 
   3.4330814832109528`*^9}, {3.433081532772684*^9, 3.433081533892001*^9}, {
   3.433091421905314*^9, 3.4330914272735367`*^9}, {3.52924215857856*^9, 
   3.5292421992986317`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "1"}], ",", 
   RowBox[{
    FractionBox["1", "2"], "+", 
    FractionBox[
     RowBox[{"\[ImaginaryI]", " ", 
      SqrtBox["3"]}], "2"]}], ",", 
   RowBox[{
    FractionBox["1", "2"], "-", 
    FractionBox[
     RowBox[{"\[ImaginaryI]", " ", 
      SqrtBox["3"]}], "2"]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.5292421402217245`*^9, 3.5292421996056623`*^9}, {
   3.5292515655268383`*^9, 3.5292515742865753`*^9}, 3.5297597209389143`*^9}],

Cell[BoxData[
 RowBox[{"-", "1"}]], "Output",
 CellChangeTimes->{{3.5292421402217245`*^9, 3.5292421996056623`*^9}, {
   3.5292515655268383`*^9, 3.5292515742865753`*^9}, 3.5297597209389143`*^9}],

Cell[BoxData[
 RowBox[{"-", "1"}]], "Output",
 CellChangeTimes->{{3.5292421402217245`*^9, 3.5292421996056623`*^9}, {
   3.5292515655268383`*^9, 3.5292515742865753`*^9}, 3.5297597209389143`*^9}],

Cell[BoxData[
 RowBox[{"-", "1"}]], "Output",
 CellChangeTimes->{{3.5292421402217245`*^9, 3.5292421996056623`*^9}, {
   3.5292515655268383`*^9, 3.5292515742865753`*^9}, 3.5297597209389143`*^9}]
}, Open  ]],

Cell[TextData[{
 "\n(b) Evaluate the cell below in order to define ",
 StyleBox["circleroots[n_]",
  FontWeight->"Bold"],
 ", a function that graphically and dynamically illustrates the ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["n", "th"], TraditionalForm]]],
 "roots of complex numbers that lie on the unit circle.  The example provided \
allows you to visualize the square roots (i.e. ",
 StyleBox["n",
  FontSlant->"Italic"],
 " = 2) of unit-circle points.  Use your mouse to continuously vary the \
sample point.  After interactively exploring several different ",
 StyleBox["n",
  FontSlant->"Italic"],
 " values, demonstrate and explain one interesting case in detail for your TA."
}], "Text",
 CellChangeTimes->{{3.4303328171611757`*^9, 3.4303328617557817`*^9}, {
   3.430337158416401*^9, 3.430337162963363*^9}, {3.4303440447361155`*^9, 
   3.4303440608145494`*^9}, {3.430352154594947*^9, 3.430352177017253*^9}, 
   3.430497670206213*^9, {3.4306011277463193`*^9, 3.4306011281682024`*^9}, 
   3.430601271436578*^9, {3.4306013425004425`*^9, 3.430601366329025*^9}, {
   3.4307097552544365`*^9, 3.430709783676858*^9}, {3.4307694207016554`*^9, 
   3.43076964619036*^9}, {3.430769681566039*^9, 3.4307700168381014`*^9}, {
   3.4311197804732823`*^9, 3.431119796661093*^9}, {3.431190525414815*^9, 
   3.4311905257429466`*^9}, 3.4311905979787083`*^9, {3.4311907394970503`*^9, 
   3.431190742981492*^9}, {3.431492886761525*^9, 3.431492887223022*^9}, {
   3.431494062343462*^9, 3.431494337141776*^9}, {3.4317255415822144`*^9, 
   3.4317255520667906`*^9}, {3.4318058441225057`*^9, 3.431805844450637*^9}, {
   3.4318073279009933`*^9, 3.4318073289478884`*^9}, {3.4318785406526766`*^9, 
   3.431878608466479*^9}, {3.4322908285673895`*^9, 3.4322909571167326`*^9}, {
   3.4322922730482473`*^9, 3.432293150330716*^9}, {3.4329099693228593`*^9, 
   3.432909970526007*^9}, {3.4329102356092215`*^9, 3.4329102393905444`*^9}, {
   3.432910984811106*^9, 3.432911019280518*^9}, {3.4329110574843764`*^9, 
   3.4329111183292947`*^9}, {3.432911200955881*^9, 3.4329112138936296`*^9}, {
   3.4329118104050827`*^9, 3.43291181107697*^9}, {3.4329135996738105`*^9, 
   3.4329136611593657`*^9}, {3.4329142475925007`*^9, 3.432914473831219*^9}, 
   3.432916189082901*^9, 3.43291645930684*^9, {3.432916745640462*^9, 
   3.4329167462810993`*^9}, 3.432918455923299*^9, {3.4329197817768793`*^9, 
   3.432919810824312*^9}, {3.433012080250083*^9, 3.4330120805782146`*^9}, {
   3.4330798940358267`*^9, 3.433079929298854*^9}, {3.43307996238834*^9, 
   3.433080459659609*^9}, {3.433080518743017*^9, 3.43308056008604*^9}, 
   3.4330812517015676`*^9, {3.433089437508999*^9, 3.433089446331621*^9}, {
   3.4330894934784727`*^9, 3.433089494997398*^9}, {3.439749380297411*^9, 
   3.439749383578682*^9}, {3.4428724094123106`*^9, 3.4428725211928453`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"circleroots", "[", "rootnum_", "]"}], " ", ":=", 
   RowBox[{"DynamicModule", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"p", "=", 
        RowBox[{"{", 
         RowBox[{"1", ",", "0"}], "}"}]}], ",", "zz", ",", "pair2comp", ",", 
       "comp2pair", ",", "makeroots", ",", "setpoint", ",", "arrows", ",", 
       "objects", ",", "options"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"pair2comp", "[", 
        RowBox[{"{", 
         RowBox[{"x_", ",", "y_"}], "}"}], "]"}], " ", ":=", " ", 
       RowBox[{"x", " ", "+", " ", 
        RowBox[{"I", " ", "y"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"comp2pair", "[", "z_", "]"}], " ", ":=", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Re", "[", "z", "]"}], ",", 
         RowBox[{"Im", "[", "z", "]"}]}], "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"makeroots", "[", 
        RowBox[{"z_", ",", "n_"}], "]"}], " ", ":=", " ", 
       RowBox[{"(", 
        RowBox[{"zz", "/.", 
         RowBox[{"Solve", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"zz", "^", "n"}], "\[Equal]", "z"}], ",", "zz"}], "]"}]}],
         ")"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"setpoint", " ", "=", " ", 
       RowBox[{"Dynamic", "@", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Arrow", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "0"}], "}"}], ",", 
             RowBox[{"Normalize", "[", "p", "]"}]}], "}"}], "]"}], ",", 
          RowBox[{"PointSize", "[", "0.025", "]"}], ",", "Black", ",", 
          RowBox[{"Point", "[", 
           RowBox[{"Normalize", "[", "p", "]"}], "]"}]}], "}"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"arrows", " ", "=", " ", 
       RowBox[{"Dynamic", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Arrow", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "0"}], "}"}], ",", "#"}], "}"}], "]"}], "&"}],
          "/@", " ", 
         RowBox[{"comp2pair", "/@", " ", 
          RowBox[{"makeroots", "[", 
           RowBox[{
            RowBox[{"pair2comp", "[", 
             RowBox[{"Normalize", "[", "p", "]"}], "]"}], ",", "rootnum"}], 
           "]"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"objects", " ", "=", " ", 
       RowBox[{"Dynamic", "@", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Circle", "[", "]"}], ",", 
          RowBox[{"Arrowheads", "[", "0.1", "]"}], ",", "Thick", ",", "Blue", 
          ",", "arrows", ",", "Red", ",", "setpoint"}], "}"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"options", " ", "=", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"PlotRange", "\[Rule]", 
          RowBox[{"1.1", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "}"}]}]}], ",", 
         RowBox[{"PlotLabel", "\[Rule]", 
          RowBox[{"Dynamic", "[", 
           RowBox[{"Magnify", "[", 
            RowBox[{
             RowBox[{"pair2comp", "[", 
              RowBox[{"Normalize", "[", "p", "]"}], "]"}], ",", "2"}], "]"}], 
           "]"}]}], ",", 
         RowBox[{"Axes", "\[Rule]", "True"}], ",", 
         RowBox[{"AxesLabel", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"\"\<x(real)\>\"", ",", "\"\<y(imag)\>\""}], "}"}]}], ",", 
         RowBox[{"LabelStyle", "\[Rule]", "Medium"}]}], "}"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"LocatorPane", "[", 
       RowBox[{
        RowBox[{"Dynamic", "[", "p", "]"}], ",", 
        RowBox[{"Graphics", "[", 
         RowBox[{"objects", ",", "options"}], "]"}], ",", 
        RowBox[{"Appearance", "\[Rule]", "None"}]}], "]"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], "\n"}], "\[IndentingNewLine]", 
 RowBox[{"circleroots", "[", "150", "]"}]}], "Input",
 CellChangeTimes->{
  3.4329216967980223`*^9, {3.4330020921697087`*^9, 3.4330021060449753`*^9}, {
   3.4330021456863613`*^9, 3.4330021459519916`*^9}, {3.4330021799213934`*^9, 
   3.433002241563202*^9}, {3.4330024933649116`*^9, 3.4330025350375867`*^9}, {
   3.43300256724133*^9, 3.433002621086114*^9}, {3.43300268835303*^9, 
   3.4330027599637804`*^9}, {3.4330027953863354`*^9, 3.433002861309476*^9}, {
   3.4330029059509583`*^9, 3.433002999343376*^9}, {3.433003067891567*^9, 
   3.4330030821105905`*^9}, {3.4330031535182114`*^9, 3.433003161596492*^9}, {
   3.4330034417424955`*^9, 3.4330034557115135`*^9}, {3.4330034866027317`*^9, 
   3.4330035616354218`*^9}, {3.433003598870512*^9, 3.4330036518246536`*^9}, {
   3.4330036921848035`*^9, 3.4330039030638523`*^9}, {3.4330039970344067`*^9, 
   3.4330040138003535`*^9}, {3.4330040467072353`*^9, 
   3.4330042019289656`*^9}, {3.433004294243238*^9, 3.433004294399491*^9}, {
   3.4330044646527596`*^9, 3.4330044731841736`*^9}, {3.4330045098411274`*^9, 
   3.4330045113099055`*^9}, {3.4330045511544204`*^9, 3.433004736079846*^9}, 
   3.433004850285164*^9, {3.4330049964598455`*^9, 3.433005098154001*^9}, {
   3.433005133771896*^9, 3.4330051624532638`*^9}, {3.4330052130509377`*^9, 
   3.4330054672784853`*^9}, {3.4330055536897984`*^9, 
   3.4330056895236526`*^9}, {3.4330057410241117`*^9, 
   3.4330058833728166`*^9}, {3.433005918112586*^9, 3.43300595369851*^9}, {
   3.4330059918825884`*^9, 3.4330060322852182`*^9}, {3.4330060689069366`*^9, 
   3.433006097748102*^9}, {3.433006133448028*^9, 3.433006161461143*^9}, {
   3.433006192473989*^9, 3.433006264500307*^9}, {3.4330063714663186`*^9, 
   3.4330064328084984`*^9}, {3.433006498119326*^9, 3.4330064997442846`*^9}, 
   3.4330065311966047`*^9, {3.4330065656496453`*^9, 3.433006616806223*^9}, {
   3.4330066752909718`*^9, 3.433006755510236*^9}, {3.4330068629016895`*^9, 
   3.433006945683999*^9}, 3.4330096605004997`*^9, {3.4330097046107216`*^9, 
   3.4330097086107984`*^9}, {3.43300975790862*^9, 3.433009966037616*^9}, {
   3.433009998850746*^9, 3.4330102667933903`*^9}, {3.4330103076848*^9, 
   3.433010324481998*^9}, {3.4330103692016068`*^9, 3.4330104290933814`*^9}, {
   3.433010541517415*^9, 3.4330105638303432`*^9}, {3.433010683348263*^9, 
   3.4330107447400665`*^9}, {3.4330108049755983`*^9, 3.433010807725651*^9}, {
   3.433010849226448*^9, 3.433011023198538*^9}, {3.4330110567616825`*^9, 
   3.4330110569648113`*^9}, {3.4330111340131655`*^9, 
   3.4330111762014756`*^9}, {3.4330112347494745`*^9, 
   3.4330112380776634`*^9}, {3.4330112979694386`*^9, 3.43301141731548*^9}, {
   3.4330114504098654`*^9, 3.4330114535505505`*^9}, {3.4330115125048075`*^9, 
   3.4330116133192434`*^9}, {3.4330116507730875`*^9, 
   3.4330117338684325`*^9}, {3.4330118289796333`*^9, 
   3.4330118311671753`*^9}, {3.43301190951243*^9, 3.4330119216220374`*^9}, {
   3.4330119608571653`*^9, 3.433012027639698*^9}, {3.4330704866178513`*^9, 
   3.433070529912182*^9}, {3.4330790776512012`*^9, 3.433079200322688*^9}, {
   3.433079230658354*^9, 3.4330792309918747`*^9}, {3.433079287426455*^9, 
   3.433079287961388*^9}, {3.433080467270529*^9, 3.43308046994022*^9}, {
   3.433080652634178*^9, 3.433080654552219*^9}, {3.433089454060758*^9, 
   3.433089472927231*^9}, {3.433091441097948*^9, 3.4330914431507463`*^9}, {
   3.529242335617262*^9, 3.529242375582258*^9}}],

Cell[BoxData[
 DynamicModuleBox[{$CellContext`p$$ = {1, 
  0}, $CellContext`zz$$, $CellContext`pair2comp$$, $CellContext`comp2pair$$, \
$CellContext`makeroots$$, $CellContext`setpoint$$ = Dynamic[{
    Arrow[{{0, 0}, 
      Normalize[$CellContext`p$$]}], 
    PointSize[0.025], Black, 
    Point[
     Normalize[$CellContext`p$$]]}], $CellContext`arrows$$ = Dynamic[
   Map[Arrow[{{0, 0}, #}]& , 
    Map[$CellContext`comp2pair$$, 
     $CellContext`makeroots$$[
      $CellContext`pair2comp$$[
       Normalize[$CellContext`p$$]], 150]]]], $CellContext`objects$$ = 
  Dynamic[{
    Circle[], 
    Arrowheads[0.1], Thick, Blue, $CellContext`arrows$$, 
    Red, $CellContext`setpoint$$}], $CellContext`options$$ = {
  PlotRange -> {{-1.1, 1.1}, {-1.1, 1.1}}, PlotLabel -> Dynamic[
     Magnify[
      $CellContext`pair2comp$$[
       Normalize[$CellContext`p$$]], 2]], Axes -> True, 
   AxesLabel -> {"x(real)", "y(imag)"}, LabelStyle -> Medium}}, 
  LocatorPaneBox[Dynamic[$CellContext`p$$], 
   GraphicsBox[
    DynamicBox[Typeset`ToBoxes[{
       Circle[], 
       Arrowheads[0.1], Thick, Blue, $CellContext`arrows$$, 
       Red, $CellContext`setpoint$$}, StandardForm, Graphics],
     ImageSizeCache->{{9.988749999999992, 
      310.42488636363635`}, {-128.42488636363638`, 172.01125}}],
    Axes->True,
    AxesLabel->{
      FormBox["\"x(real)\"", TraditionalForm], 
      FormBox["\"y(imag)\"", TraditionalForm]},
    LabelStyle->Medium,
    PlotLabel->FormBox[
      DynamicBox[
       ToBoxes[
        Magnify[
         $CellContext`pair2comp$$[
          Normalize[$CellContext`p$$]], 2], TraditionalForm]], 
      TraditionalForm],
    PlotRange->{{-1.1, 1.1}, {-1.1, 1.1}}],
   Appearance->None],
  DynamicModuleValues:>{{DownValues[$CellContext`pair2comp$$] = {HoldPattern[
         $CellContext`pair2comp$$[{
           Pattern[$CellContext`x, 
            Blank[]], 
           Pattern[$CellContext`y, 
            Blank[]]}]] :> $CellContext`x + I $CellContext`y}}, {
    DownValues[$CellContext`comp2pair$$] = {HoldPattern[
         $CellContext`comp2pair$$[
          Pattern[$CellContext`z, 
           Blank[]]]] :> {
         Re[$CellContext`z], 
         Im[$CellContext`z]}}}, {
    DownValues[$CellContext`makeroots$$] = {HoldPattern[
         $CellContext`makeroots$$[
          Pattern[$CellContext`z$, 
           Blank[]], 
          Pattern[$CellContext`n$, 
           Blank[]]]] :> ReplaceAll[$CellContext`zz$$, 
         Solve[$CellContext`zz$$^$CellContext`n$ == $CellContext`z$, \
$CellContext`zz$$]]}}}]], "Output",
 CellChangeTimes->{
  3.529242205354237*^9, {3.5292423360203023`*^9, 3.529242376260326*^9}, 
   3.529251430123398*^9, {3.5292515660468225`*^9, 3.5292515748965573`*^9}, 
   3.5297597216588926`*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Complex Functions (40 min)", "Section",
 CellChangeTimes->{{3.4329160567366104`*^9, 3.4329160598772955`*^9}, {
   3.4329167224525166`*^9, 3.432916723874419*^9}, 3.433090835694138*^9, {
   3.433090918863393*^9, 3.433090919015108*^9}, {3.4330909767210827`*^9, 
   3.433090977168829*^9}, 3.433104271786031*^9, 3.433200328120948*^9, 
   3.433203710613787*^9, {3.4332040107777214`*^9, 3.4332040108558483`*^9}, {
   3.5248681695012503`*^9, 3.5248681697196503`*^9}}],

Cell[CellGroupData[{

Cell["(#6) Functions in the complex plane I (15 min)", "Subsection",
 CellChangeTimes->{{3.432916080721446*^9, 3.432916083690253*^9}, {
   3.4330121588140917`*^9, 3.433012160501624*^9}, {3.433022326540558*^9, 
   3.4330223824478817`*^9}, {3.433086219862739*^9, 3.433086221708778*^9}, 
   3.4330896905879602`*^9, 3.4331042507108088`*^9, 3.433203195631854*^9, {
   3.433203599110933*^9, 3.4332035992203107`*^9}, {3.433203643533945*^9, 
   3.4332036437839513`*^9}, 3.4332037091137486`*^9, 3.433203836632638*^9}],

Cell[TextData[{
 "(a) Plot ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["\[ExponentialE]", "x"], TraditionalForm]]],
 " over the range {",
 StyleBox["x",
  FontSlant->"Italic"],
 ", -\[Pi], \[Pi]}.  Then evaluate ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"\[Pi]", " ", "i"}]], TraditionalForm]]],
 " and use Euler's formula to explain the result.  Could ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["\[ExponentialE]", "x"], TraditionalForm]]],
 " have returned -1 for any real ",
 StyleBox["x",
  FontSlant->"Italic"],
 " value?  Obviously, if we take an otherwise \"real\" function like ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["\[ExponentialE]", "x"], TraditionalForm]]],
 " and feed it a complex number like \[Pi]",
 StyleBox["i",
  FontSlant->"Italic"],
 " , we can't always expect to get a real number out again.  "
}], "Text",
 CellChangeTimes->{{3.432916107565711*^9, 3.4329161115189123`*^9}, {
  3.4330164392087736`*^9, 3.4330164563653526`*^9}, {3.433083940882568*^9, 
  3.433084351517437*^9}, {3.4428730595643997`*^9, 3.442873122501497*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Exp", "[", "x", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Exp", "[", 
  RowBox[{"\[Pi]", "*", "I"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"ExpToTrig", "[", 
  RowBox[{"Exp", "[", "x", "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Cosh", "[", 
  RowBox[{"\[Pi]", "*", "I"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Sinh", "[", 
  RowBox[{"\[Pi]", "*", "I"}], "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.4330186702984843`*^9, 3.433018676704858*^9}, {
   3.433018706736684*^9, 3.433018715830609*^9}, {3.4330187951915073`*^9, 
   3.4330188167700467`*^9}, {3.433019620129221*^9, 3.4330196211448655`*^9}, {
   3.433019665973851*^9, 3.433019666270732*^9}, {3.4330197051777287`*^9, 
   3.4330197070840154`*^9}, {3.4330842076171913`*^9, 
   3.4330842119096518`*^9}, {3.433084824613349*^9, 3.433084846813184*^9}, 
   3.4332027801212173`*^9, {3.442872563880072*^9, 3.4428725649269404`*^9}, {
   3.5292424147381735`*^9, 3.529242526626361*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJwBcQOO/CFib1JlAgAAADYAAAACAAAASkkOQ/shCcBh4/KqIiCmPzu1fPAI
HgnAfNQTmg8rpj8sIeudFhoJwOUFU+4BNqY/DvnH+DESCcBzctXQ9kumP9Go
ga5oAgnArj/VyCF4pj9YCPUZ1uIIwGsUceB+0aY/Z8fb8LCjCMB3uhPSaIin
P4RFqZ5mJQjARWamYZkHqT9x1PoSkxMHwKGD+o48nKw/yl0a6OQTBsAve3B1
EzWwP/2+qrA6GQXAefTFlElRsj/jsvGRUQkEwApKGsMZ67Q/NqEG1I0LA8AD
8IMYga23Pzwi0i6L+AHAZdU1TaMUuz8cew59jOoAwDExS8SS5b4/0JwxWGbd
/7/M2RNJSXjBP89os+c1u/2/nVZ35z32wz+mKdE4UL37v6WOzMiwm8Y/MJrQ
cHLJ+b/VlA7d6YrJPyEwPdoWq/e/kavgIK4ozT/qukUFBrH1v3uZNicsf9A/
G2u7YXeM87/jqe0lYtzSP/7KEqXwcfG/aNx0rdKC1T9zPwxUaffuv532sCYw
Udg/uDPNwPW16r8ZvkzQpcbbP68RxrAXvea/8UiZOGhy3z9zOpkDPm/ivy/R
4JS0/OE/OoVfSOhq3L9pVSC3wIbkP+9o/I9/iNS/hQSnpqs35z+DxJs6P/jH
v8da7HoDieo/1rs8xKoDsL/F1hnAPQ/uP18sRv1Uka4/6hU+Lf378D/hSFhV
bp7IPz1XyjuqZPM/9K8/rxg71D9U4hhpzPL1P9qlHm7x0Nw/txusa24Z+T97
brtIVZ/iP0wMK0Pkofw/WKAvV5yN5j+GO7j58y8AQGaHyQLf0Oo/3bh3RW1+
AkDDhCsrjMvuP/VUBsBS8QRAXhHlwhRZ8T+G+5voYKgHQPM6xz7hdvM/pesE
puIAC0Cvbw35YnD1P5jq6NHqjA5ABH/mgWKU9z9XD7PLPnYRQIGZI0kXlPk/
KauWkhbJE0BLBH8pxIn7P9uqtDAMXRZArklt2O6p/T/nVe/KeYoZQDiav8XO
pf8/EOTU+5rpHECuYtJAFuYAQNEwZvoFiSBAZiBUK0H0AUBF/3nr8N0iQLLj
B7VG8AJAURZ2O2tWJUBKFAUmiwEEQAAVkcYjYihAdko0NqoABUDYBxCrPJ4r
QMmo8lLF+gVADDbEnpo0L0CJIUocYxQGQETmcnxyny9AnuCr7A==
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  PlotRange->
   NCache[{{-Pi, Pi}, {0., 15.811420334840598`}}, {{-3.141592653589793, 
    3.141592653589793}, {0., 15.811420334840598`}}],
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{{3.5292424228899884`*^9, 3.52924252691739*^9}, 
   3.5292515753465443`*^9, 3.5297597227588596`*^9}],

Cell[BoxData[
 RowBox[{"-", "1"}]], "Output",
 CellChangeTimes->{{3.5292424228899884`*^9, 3.52924252691739*^9}, 
   3.5292515753465443`*^9, 3.5297597227688594`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Cosh", "[", "x", "]"}], "+", 
  RowBox[{"Sinh", "[", "x", "]"}]}]], "Output",
 CellChangeTimes->{{3.5292424228899884`*^9, 3.52924252691739*^9}, 
   3.5292515753465443`*^9, 3.5297597227688594`*^9}],

Cell[BoxData[
 RowBox[{"-", "1"}]], "Output",
 CellChangeTimes->{{3.5292424228899884`*^9, 3.52924252691739*^9}, 
   3.5292515753465443`*^9, 3.5297597227688594`*^9}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{{3.5292424228899884`*^9, 3.52924252691739*^9}, 
   3.5292515753465443`*^9, 3.5297597227688594`*^9}]
}, Open  ]],

Cell[TextData[{
 "(b) Plot ln(",
 StyleBox["x",
  FontSlant->"Italic"],
 ") over the range {x, -2, 2}.  Then evaluate ln(1) and ln(-1).  While the \
second result may surprise you, recall that we have already demonstrated the \
inverse relation, ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"\[Pi]", " ", "i"}]], TraditionalForm]]],
 " = -1."
}], "Text",
 CellChangeTimes->{{3.432916107565711*^9, 3.4329161115189123`*^9}, {
   3.4330164392087736`*^9, 3.4330164563653526`*^9}, {3.433083940882568*^9, 
   3.433084351517437*^9}, {3.4330847918071938`*^9, 3.433084809571741*^9}, {
   3.4330848689764843`*^9, 3.433085163902152*^9}, {3.433085205258771*^9, 
   3.433085213617989*^9}, 3.4428731366107817`*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Log", "[", "x", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "2"}], ",", "2"}], "}"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Log", "[", "1", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Log", "[", 
  RowBox[{"-", "1"}], "]"}]}], "Input",
 CellChangeTimes->{{3.433018774066102*^9, 3.4330187887226334`*^9}, {
   3.4330196246605577`*^9, 3.433019625582451*^9}, {3.433019799117032*^9, 
   3.4330198147423325`*^9}, {3.4330850554383574`*^9, 3.4330850603852453`*^9}, 
   3.4332028077469244`*^9, {3.52925145406518*^9, 3.529251469084729*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
YAabP+I4Dptp6qJDZkL4H+75hPY=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  PlotRange->{{-2, 2}, {-3.2425218871201507`, 0.693147139743618}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{{3.529251460144997*^9, 3.529251469484717*^9}, 
   3.529251575766531*^9, 3.529759723508837*^9}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{{3.529251460144997*^9, 3.529251469484717*^9}, 
   3.529251575766531*^9, 3.5297597235388365`*^9}],

Cell[BoxData[
 RowBox[{"\[ImaginaryI]", " ", "\[Pi]"}]], "Output",
 CellChangeTimes->{{3.529251460144997*^9, 3.529251469484717*^9}, 
   3.529251575766531*^9, 3.5297597235388365`*^9}]
}, Open  ]],

Cell[TextData[{
 "\n(c) Almost any function defined over the real numbers can also operate in \
the complex plane.  In general, when we feed a function a complex argument of \
the form ",
 StyleBox["z",
  FontSlant->"Italic"],
 " = ",
 StyleBox["x ",
  FontSlant->"Italic"],
 "+ ",
 StyleBox["i y",
  FontSlant->"Italic"],
 ", we expect a complex result.  Use ",
 StyleBox["ComplexExpand",
  FontWeight->"Bold"],
 " to separate the real and imaginary parts of ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"x", "+", 
     RowBox[{"i", " ", "y"}]}]], TraditionalForm]]],
 ".  From the results, you can see that a complex function can be viewed as \
two separate functions, a real one and an imaginary one."
}], "Text",
 CellChangeTimes->{{3.433084386709207*^9, 3.433084755577489*^9}, {
   3.433085209786045*^9, 3.433085421119315*^9}, 3.4330854589847317`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ComplexExpand", "[", 
  RowBox[{"Exp", "[", 
   RowBox[{"x", "+", 
    RowBox[{"I", "*", "y"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.4330186702984843`*^9, 3.433018676704858*^9}, {
   3.433018706736684*^9, 3.433018715830609*^9}, {3.4330187951915073`*^9, 
   3.4330188167700467`*^9}, {3.433019557128011*^9, 3.433019557971778*^9}, {
   3.4330196282700024`*^9, 3.433019628426255*^9}, {3.4330196697551737`*^9, 
   3.4330197011932774`*^9}, 3.4330841582011747`*^9, 3.433084778789974*^9, {
   3.433085439217433*^9, 3.433085463719816*^9}, 3.4332028154033704`*^9, {
   3.5292514868641963`*^9, 3.52925149875634*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox["\[ExponentialE]", "x"], " ", 
   RowBox[{"Cos", "[", "y", "]"}]}], "+", 
  RowBox[{"\[ImaginaryI]", " ", 
   SuperscriptBox["\[ExponentialE]", "x"], " ", 
   RowBox[{"Sin", "[", "y", "]"}]}]}]], "Output",
 CellChangeTimes->{3.5292514991263285`*^9, 3.52925157615652*^9, 
  3.5297597240588207`*^9}]
}, Open  ]],

Cell[TextData[{
 "\n(d) Here, we use ",
 StyleBox["ComplexExpand",
  FontWeight->"Bold"],
 " to separate the real and imaginary parts of ln(",
 StyleBox["x",
  FontSlant->"Italic"],
 " + ",
 StyleBox["i y",
  FontSlant->"Italic"],
 ").  We also perform some variable substitutions and simplifications in \
order to represent the result in terms of the magnitude and the phase of ",
 StyleBox["z",
  FontSlant->"Italic"],
 " = ",
 StyleBox["x ",
  FontSlant->"Italic"],
 "+ ",
 StyleBox["i y = ",
  FontSlant->"Italic"],
 Cell[BoxData[
  FormBox[
   RowBox[{"r", " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{" ", 
      RowBox[{"i", " ", "\[Phi]"}]}]]}], TraditionalForm]]],
 ".  Evaluate the cell and use the resulting expression to explain why ln(-1) \
= \[Pi] ",
 StyleBox["i",
  FontSlant->"Italic"],
 " ."
}], "Text",
 CellChangeTimes->{{3.4330854737128763`*^9, 3.433085550865954*^9}, 
   3.433085604678664*^9, {3.433085643916246*^9, 3.4330856839333878`*^9}, {
   3.4330857322588654`*^9, 3.4330857615757923`*^9}, {3.433086308779463*^9, 
   3.43308631872086*^9}, {3.433087586029895*^9, 3.4330875875654984`*^9}, {
   3.4332008189772635`*^9, 3.4332009204329853`*^9}, {3.433202841372785*^9, 
   3.433202844154106*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Log", "[", 
   RowBox[{"x", "+", 
    RowBox[{"I", " ", "y"}]}], "]"}], "//", 
  "ComplexExpand"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"%", "/.", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"Arg", "[", 
       RowBox[{"x", "+", 
        RowBox[{"I", " ", "y"}]}], "]"}], "\[Rule]", "\[Phi]"}], ",", " ", 
     RowBox[{
      RowBox[{
       SuperscriptBox["x", "2"], "+", 
       SuperscriptBox["y", "2"]}], "\[Rule]", 
      SuperscriptBox["r", "2"]}]}], "}"}]}], "//", 
  RowBox[{
   RowBox[{"Simplify", "[", 
    RowBox[{"#", ",", 
     RowBox[{"r", ">", "0"}]}], "]"}], "&"}]}]}], "Input",
 CellChangeTimes->{{3.4330185899844427`*^9, 3.4330186054534893`*^9}, {
   3.433019540283938*^9, 3.4330195468621893`*^9}, {3.4330196537079906`*^9, 
   3.4330196616768937`*^9}, {3.433019721865549*^9, 3.4330197869917994`*^9}, 
   3.43308549473199*^9, {3.4330855693758802`*^9, 3.433085570469654*^9}, 
   3.433086249362112*^9, {3.4428732110478053`*^9, 3.4428732147821565`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[ImaginaryI]", " ", 
   RowBox[{"Arg", "[", 
    RowBox[{"x", "+", 
     RowBox[{"\[ImaginaryI]", " ", "y"}]}], "]"}]}], "+", 
  RowBox[{
   FractionBox["1", "2"], " ", 
   RowBox[{"Log", "[", 
    RowBox[{
     SuperscriptBox["x", "2"], "+", 
     SuperscriptBox["y", "2"]}], "]"}]}]}]], "Output",
 CellChangeTimes->{{3.5292515114159603`*^9, 3.5292515356502333`*^9}, 
   3.5292515770464926`*^9, 3.5297597247587996`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[ImaginaryI]", " ", "\[Phi]"}], "+", 
  RowBox[{"Log", "[", "r", "]"}]}]], "Output",
 CellChangeTimes->{{3.5292515114159603`*^9, 3.5292515356502333`*^9}, 
   3.5292515770464926`*^9, 3.5297597247587996`*^9}]
}, Open  ]],

Cell[TextData[{
 "\n(e)  Evaluate cos(",
 StyleBox["i z",
  FontSlant->"Italic"],
 ") and cosh(",
 StyleBox["i z",
  FontSlant->"Italic"],
 ").  Any surprises?  Then use ",
 StyleBox["TrigToExp",
  FontWeight->"Bold"],
 " to obtain the exponential forms of cos(z) and cosh(z), which should help \
you to see the origin of these identities."
}], "Text",
 CellChangeTimes->{{3.4330857711162643`*^9, 3.4330857743276367`*^9}, {
   3.433085816545458*^9, 3.433085899603113*^9}, {3.433085955162187*^9, 
   3.433086038203598*^9}, {3.433086074529662*^9, 3.4330861182424803`*^9}, {
   3.433086327393674*^9, 3.4330863953140993`*^9}, {3.433086480844647*^9, 
   3.433086506733759*^9}, {3.433086732479525*^9, 3.433086889601739*^9}, {
   3.43308694275844*^9, 3.433087069270968*^9}, {3.433087114905696*^9, 
   3.433087259484728*^9}, {3.433087290039892*^9, 3.433087378631572*^9}, {
   3.433087408714189*^9, 3.433087458377318*^9}, {3.433087572934869*^9, 
   3.433087573044888*^9}, {3.433087638578711*^9, 3.433087679247827*^9}, {
   3.43320287338923*^9, 3.43320288745209*^9}, 3.433203188303541*^9, 
   3.433203649299718*^9, {3.433527379665142*^9, 3.433527386055726*^9}, {
   3.4428725994735947`*^9, 3.4428728715499783`*^9}, 3.4428752638029375`*^9, {
   3.4903439875103717`*^9, 3.4903439884503717`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Cos", "[", 
  RowBox[{"I", "*", "z"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Cosh", "[", 
  RowBox[{"I", "*", "z"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"TrigToExp", "[", "#", "]"}], "&"}], "/@", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"Cosh", "[", 
     RowBox[{"I", "*", "z"}], "]"}], ",", 
    RowBox[{"Cos", "[", 
     RowBox[{"I", "*", "z"}], "]"}]}], "}"}]}]}], "Input",
 CellChangeTimes->{{3.4428725891142855`*^9, 3.4428725894736586`*^9}, {
  3.529251544507468*^9, 3.5292516219426465`*^9}}],

Cell[BoxData[
 RowBox[{"Cosh", "[", "z", "]"}]], "Output",
 CellChangeTimes->{{3.529251552032243*^9, 3.5292515899011073`*^9}, 
   3.5292516225026293`*^9, 3.5297597253787813`*^9}],

Cell[BoxData[
 RowBox[{"Cos", "[", "z", "]"}]], "Output",
 CellChangeTimes->{{3.529251552032243*^9, 3.5292515899011073`*^9}, 
   3.5292516225026293`*^9, 3.5297597253887806`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    FractionBox[
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", "\[ImaginaryI]"}], " ", "z"}]], "2"], "+", 
    FractionBox[
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"\[ImaginaryI]", " ", "z"}]], "2"]}], ",", 
   RowBox[{
    FractionBox[
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"-", "z"}]], "2"], "+", 
    FractionBox[
     SuperscriptBox["\[ExponentialE]", "z"], "2"]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.529251552032243*^9, 3.5292515899011073`*^9}, 
   3.5292516225026293`*^9, 3.5297597253987803`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
(#7-#9) Calculus in the complex plane (25 min)\
\>", "Subsection",
 CellChangeTimes->{{3.432916080721446*^9, 3.432916083690253*^9}, {
   3.4329161416444902`*^9, 3.432916144269541*^9}, {3.4329167066397133`*^9, 
   3.432916713405468*^9}, {3.433012166079856*^9, 3.433012167923641*^9}, {
   3.4330203646122646`*^9, 3.433020365581033*^9}, {3.433026002923643*^9, 
   3.433026002970519*^9}, {3.4330261055037374`*^9, 3.4330261055506134`*^9}, {
   3.433090804467703*^9, 3.433090833356823*^9}, 3.433090915631301*^9, 
   3.4330909739771852`*^9, {3.4332031629122667`*^9, 3.4332031629903936`*^9}, {
   3.4332036051110864`*^9, 3.4332036076736517`*^9}, 3.433204019324815*^9, {
   3.52486815098405*^9, 3.52486816140485*^9}}],

Cell[CellGroupData[{

Cell["(#8) Power series expansions (5 min)", "Subsubsection",
 CellChangeTimes->{{3.432916153566594*^9, 3.4329161704887943`*^9}, {
   3.4330259780481653`*^9, 3.4330259795013185`*^9}, {3.433026041236879*^9, 
   3.4330260412993803`*^9}, {3.433090551139954*^9, 3.433090554899514*^9}, {
   3.433090749340619*^9, 3.433090751113748*^9}, 3.433091130806314*^9, 
   3.433104247574733*^9, {3.433203610720605*^9, 3.433203613064415*^9}}],

Cell[TextData[{
 "(a) Use ",
 StyleBox[ButtonBox["D",
  BaseStyle->"Link",
  ButtonData->"paclet://ref/D"],
  FontWeight->"Bold"],
 " to compute the first derivative of ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["e", 
    RowBox[{" ", 
     RowBox[{"(", 
      RowBox[{"-", 
       SuperscriptBox["z", "2"]}], ")"}]}]], TraditionalForm]]],
 " with respect to complex variable ",
 StyleBox["z",
  FontSlant->"Italic"],
 ".  Observe that the result is the same whether or not you think of z as a \
complex."
}], "Text",
 CellChangeTimes->{{3.432916107565711*^9, 3.4329161115189123`*^9}, {
  3.432916161285493*^9, 3.4329161616448746`*^9}, {3.433089709629429*^9, 
  3.433089830479382*^9}, {3.433089985268371*^9, 3.433090005236478*^9}, {
  3.433090038646154*^9, 3.433090127944206*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"D", "[", 
  RowBox[{
   RowBox[{"Exp", "[", 
    RowBox[{"-", 
     SuperscriptBox["z", "2"]}], "]"}], ",", "z"}], "]"}]], "Input",
 CellChangeTimes->{{3.4329161124720554`*^9, 3.4329161129564395`*^9}, {
   3.4330214800711813`*^9, 3.433021492571421*^9}, {3.4330216022922773`*^9, 
   3.433021602542282*^9}, {3.433021634292892*^9, 3.433021636902317*^9}, {
   3.4330218362498946`*^9, 3.4330218664067235`*^9}, {3.433021906126236*^9, 
   3.4330219968623533`*^9}, {3.43302204853522*^9, 3.433022048910228*^9}, {
   3.433022140021352*^9, 3.433022171631334*^9}, {3.43302601187694*^9, 
   3.433026027455364*^9}, 3.4330901356254063`*^9, 3.433202970938602*^9, {
   3.4428734834835615`*^9, 3.442873484889803*^9}, {3.5292516384271517`*^9, 
   3.5292516477468724`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "2"}], " ", 
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{"-", 
    SuperscriptBox["z", "2"]}]], " ", "z"}]], "Output",
 CellChangeTimes->{3.5292516480468636`*^9, 3.5297597260687604`*^9}]
}, Open  ]],

Cell[TextData[{
 "\n(b) Compute the ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["10", "th"], TraditionalForm]]],
 "-order power ",
 StyleBox[ButtonBox["Series",
  BaseStyle->"Link",
  ButtonData->"paclet://ref/Series"],
  FontWeight->"Bold"],
 " expansion of ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["e", 
    RowBox[{" ", 
     RowBox[{"(", 
      RowBox[{"-", 
       SuperscriptBox["z", "2"]}], ")"}]}]], TraditionalForm]]],
 " around the point ",
 StyleBox["z",
  FontSlant->"Italic"],
 " = 0 + 0 ",
 StyleBox["i",
  FontSlant->"Italic"],
 " .  Once again, observe that the result is the same whether or not you \
think of z as a complex."
}], "Text",
 CellChangeTimes->{{3.4330898455899363`*^9, 3.43308997382664*^9}, {
  3.433090027317369*^9, 3.4330900275973883`*^9}, {3.433090143106371*^9, 
  3.4330902002583323`*^9}, {3.433090253894534*^9, 3.433090271229126*^9}, {
  3.433090351703814*^9, 3.43309036844107*^9}, {3.43309047517867*^9, 
  3.433090476266185*^9}, {3.433090527132863*^9, 3.4330905278357487`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Series", "[", 
  RowBox[{
   RowBox[{"Exp", "[", 
    RowBox[{"-", 
     SuperscriptBox["z", "2"]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"z", ",", "0", ",", "10"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.4329161124720554`*^9, 3.4329161129564395`*^9}, {
   3.4330214800711813`*^9, 3.433021492571421*^9}, {3.4330216022922773`*^9, 
   3.433021602542282*^9}, {3.433021634292892*^9, 3.433021636902317*^9}, {
   3.4330218362498946`*^9, 3.4330218664067235`*^9}, {3.433021906126236*^9, 
   3.4330219968623533`*^9}, {3.43302204853522*^9, 3.433022048910228*^9}, {
   3.433022140021352*^9, 3.433022171631334*^9}, {3.43302601187694*^9, 
   3.433026027455364*^9}, {3.433090209971775*^9, 3.433090248380548*^9}, 
   3.433202972735523*^9, {3.5292516560666227`*^9, 3.529251681685855*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"1", "-", 
   SuperscriptBox["z", "2"], "+", 
   FractionBox[
    SuperscriptBox["z", "4"], "2"], "-", 
   FractionBox[
    SuperscriptBox["z", "6"], "6"], "+", 
   FractionBox[
    SuperscriptBox["z", "8"], "24"], "-", 
   FractionBox[
    SuperscriptBox["z", "10"], "120"], "+", 
   InterpretationBox[
    SuperscriptBox[
     RowBox[{"O", "[", "z", "]"}], "11"],
    SeriesData[$CellContext`z, 0, {}, 0, 11, 1],
    Editable->False]}],
  SeriesData[$CellContext`z, 0, {1, 0, -1, 0, 
    Rational[1, 2], 0, 
    Rational[-1, 6], 0, 
    Rational[1, 24], 0, 
    Rational[-1, 120]}, 0, 11, 1],
  Editable->False]], "Output",
 CellChangeTimes->{{3.5292516704761915`*^9, 3.529251682155841*^9}, 
   3.529759726698742*^9}]
}, Open  ]],

Cell[TextData[{
 "\n(c) Compute the ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["10", "th"], TraditionalForm]]],
 "-order power series expansion of ln(",
 StyleBox["z",
  FontSlant->"Italic"],
 ") around the point ",
 StyleBox["z",
  FontSlant->"Italic"],
 " = ",
 StyleBox["i",
  FontSlant->"Italic"],
 " .  This time, you should see a result that is explicity complex."
}], "Text",
 CellChangeTimes->{{3.433090289496154*^9, 3.43309034615829*^9}, {
  3.433090378976132*^9, 3.433090387034522*^9}, {3.433090481458239*^9, 
  3.4330904823618717`*^9}, {3.433090532556641*^9, 3.4330905330675507`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Series", "[", 
  RowBox[{
   RowBox[{"Log", "[", "z", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"z", ",", "I", ",", "10"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.4330903421276627`*^9, 3.433090342702098*^9}, {
  3.5292516935879984`*^9, 3.5292517067876024`*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   FractionBox[
    RowBox[{"\[ImaginaryI]", " ", "\[Pi]"}], "2"], "-", 
   RowBox[{"\[ImaginaryI]", " ", 
    RowBox[{"(", 
     RowBox[{"z", "-", "\[ImaginaryI]"}], ")"}]}], "+", 
   RowBox[{
    FractionBox["1", "2"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"z", "-", "\[ImaginaryI]"}], ")"}], "2"]}], "+", 
   RowBox[{
    FractionBox["1", "3"], " ", "\[ImaginaryI]", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"z", "-", "\[ImaginaryI]"}], ")"}], "3"]}], "-", 
   RowBox[{
    FractionBox["1", "4"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"z", "-", "\[ImaginaryI]"}], ")"}], "4"]}], "-", 
   RowBox[{
    FractionBox["1", "5"], " ", "\[ImaginaryI]", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"z", "-", "\[ImaginaryI]"}], ")"}], "5"]}], "+", 
   RowBox[{
    FractionBox["1", "6"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"z", "-", "\[ImaginaryI]"}], ")"}], "6"]}], "+", 
   RowBox[{
    FractionBox["1", "7"], " ", "\[ImaginaryI]", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"z", "-", "\[ImaginaryI]"}], ")"}], "7"]}], "-", 
   RowBox[{
    FractionBox["1", "8"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"z", "-", "\[ImaginaryI]"}], ")"}], "8"]}], "-", 
   RowBox[{
    FractionBox["1", "9"], " ", "\[ImaginaryI]", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"z", "-", "\[ImaginaryI]"}], ")"}], "9"]}], "+", 
   RowBox[{
    FractionBox["1", "10"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"z", "-", "\[ImaginaryI]"}], ")"}], "10"]}], "+", 
   InterpretationBox[
    SuperscriptBox[
     RowBox[{"O", "[", 
      RowBox[{"z", "-", "\[ImaginaryI]"}], "]"}], "11"],
    SeriesData[$CellContext`z, 
     Complex[0, 1], {}, 0, 11, 1],
    Editable->False]}],
  SeriesData[$CellContext`z, 
   Complex[0, 1], {Complex[0, 
      Rational[1, 2]] Pi, 
    Complex[0, -1], 
    Rational[1, 2], 
    Complex[0, 
     Rational[1, 3]], 
    Rational[-1, 4], 
    Complex[0, 
     Rational[-1, 5]], 
    Rational[1, 6], 
    Complex[0, 
     Rational[1, 7]], 
    Rational[-1, 8], 
    Complex[0, 
     Rational[-1, 9]], 
    Rational[1, 10]}, 0, 11, 1],
  Editable->False]], "Output",
 CellChangeTimes->{3.5292517073075867`*^9, 3.529759727288724*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["(#11) Radius of convergence (10 min)", "Subsubsection",
 CellChangeTimes->{{3.432916153566594*^9, 3.4329161772232985`*^9}, {
   3.4329162102239323`*^9, 3.4329162145677657`*^9}, {3.433025989439009*^9, 
   3.4330259909390383`*^9}, {3.433026051455825*^9, 3.4330260518933334`*^9}, {
   3.433090772274535*^9, 3.4330907787227297`*^9}, 3.433090890665155*^9, {
   3.4330937189954977`*^9, 3.433093719400535*^9}, 3.4330940100830193`*^9, 
   3.433094257338853*^9, 3.433104244998651*^9, {3.4332036190176926`*^9, 
   3.433203619158321*^9}, {3.43320400623073*^9, 3.4332040067619934`*^9}}],

Cell[TextData[{
 "(a) Evaluate the cell below to compute the ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["6", "th"], TraditionalForm]]],
 "-order series expansion of ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["\[ExponentialE]", "x"], TraditionalForm]]],
 " around z = 0, and observe that the coefficient of the ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["z", "n"], TraditionalForm]]],
 " term is ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["a", "n"], "=", 
    FractionBox["1", 
     RowBox[{"n", "!"}]]}], TraditionalForm]]],
 "."
}], "Text",
 CellChangeTimes->{{3.432916107565711*^9, 3.4329161115189123`*^9}, {
  3.432916161285493*^9, 3.4329161616448746`*^9}, {3.433092708794242*^9, 
  3.4330927097620277`*^9}, {3.43309275421327*^9, 3.4330928178543053`*^9}, {
  3.4330928609915133`*^9, 3.4330928772230597`*^9}, {3.4330930514044647`*^9, 
  3.4330930586211977`*^9}, {3.433093735210875*^9, 3.433093744666276*^9}, {
  3.433203062831579*^9, 3.4332030637378526`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"f", " ", "=", " ", 
  RowBox[{"Exp", "[", "z", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"ser", " ", "=", " ", 
  RowBox[{"Series", "[", 
   RowBox[{"f", ",", 
    RowBox[{"{", 
     RowBox[{"z", ",", "0", ",", "6"}], "}"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.4329161124720554`*^9, 3.4329161129564395`*^9}, {
   3.4330236520503826`*^9, 3.433023787818614*^9}, {3.433023823131792*^9, 
   3.4330240379796667`*^9}, {3.4330240770897927`*^9, 
   3.4330241292470446`*^9}, {3.4330246591947193`*^9, 3.433024959981744*^9}, {
   3.4330254218812375`*^9, 3.4330254518349376`*^9}, {3.4330256315102625`*^9, 
   3.433025718933816*^9}, {3.433025752450084*^9, 3.433025867717922*^9}, {
   3.4330927350089006`*^9, 3.433092749140236*^9}, 3.433093732562429*^9}],

Cell[BoxData[
 SuperscriptBox["\[ExponentialE]", "z"]], "Output",
 CellChangeTimes->{3.529251796112435*^9, 3.529495196389411*^9, 
  3.5297597278587065`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"1", "+", "z", "+", 
   FractionBox[
    SuperscriptBox["z", "2"], "2"], "+", 
   FractionBox[
    SuperscriptBox["z", "3"], "6"], "+", 
   FractionBox[
    SuperscriptBox["z", "4"], "24"], "+", 
   FractionBox[
    SuperscriptBox["z", "5"], "120"], "+", 
   FractionBox[
    SuperscriptBox["z", "6"], "720"], "+", 
   InterpretationBox[
    SuperscriptBox[
     RowBox[{"O", "[", "z", "]"}], "7"],
    SeriesData[$CellContext`z, 0, {}, 0, 7, 1],
    Editable->False]}],
  SeriesData[$CellContext`z, 0, {1, 1, 
    Rational[1, 2], 
    Rational[1, 6], 
    Rational[1, 24], 
    Rational[1, 120], 
    Rational[1, 720]}, 0, 7, 1],
  Editable->False]], "Output",
 CellChangeTimes->{3.529251796112435*^9, 3.529495196389411*^9, 
  3.5297597278687067`*^9}]
}, Open  ]],

Cell[TextData[{
 "\n(b) A series like ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    UnderoverscriptBox["\[Sum]", 
     RowBox[{"i", "=", "0"}], "\[Infinity]"], 
    RowBox[{
     SubscriptBox["a", "n"], 
     SuperscriptBox["z", "n"]}]}], TraditionalForm]]],
 " may not converge for all complex values of z.  In general, the series will \
only converge when |z| is less than some \"radius of convergence\".  Two \
techniques for determining the radius of convergence ",
 StyleBox["R",
  FontSlant->"Italic"],
 " are the Cauchy limit test, ",
 Cell[BoxData[
  FormBox[
   FractionBox["1", "R"], TraditionalForm]]],
 "= ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    UnderscriptBox[
     RowBox[{"lim", " "}], 
     RowBox[{"n", "\[Rule]", "\[Infinity]"}]], "|", 
    FractionBox[
     SubscriptBox["a", 
      RowBox[{"n", "+", "1"}]], 
     SubscriptBox["a", "n"]], "|"}], TraditionalForm]]],
 ", and the Cauchy-Hadamard limit test, ",
 Cell[BoxData[
  FormBox[
   FractionBox["1", "R"], TraditionalForm]]],
 "= ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    UnderscriptBox[
     RowBox[{"lim", " "}], 
     RowBox[{"n", "\[Rule]", "\[Infinity]"}]], 
    SqrtBox[
     RowBox[{"|", 
      SubscriptBox["a", "n"], "|"}]]}], TraditionalForm]]],
 ".  Evaluate the cells below, where both tests agree on an infinite limit of \
convergence for the series expansion of ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["\[ExponentialE]", "z"], TraditionalForm]]],
 " at ",
 StyleBox["z",
  FontSlant->"Italic"],
 " = 0.  This simply means that the series expansion converges for any value \
of ",
 StyleBox["z",
  FontSlant->"Italic"],
 " (as we might expect)."
}], "Text",
 CellChangeTimes->{{3.433092843253105*^9, 3.433093020115192*^9}, {
  3.433093063156644*^9, 3.433093389854488*^9}, {3.433093446995777*^9, 
  3.433093518683016*^9}, {3.4330941315961227`*^9, 3.433094164165374*^9}, {
  3.442874000245879*^9, 3.442874004511477*^9}}],

Cell[BoxData[{
 RowBox[{"cauchytest", ":=", 
  RowBox[{"Limit", "[", 
   RowBox[{
    RowBox[{"Abs", "[", 
     RowBox[{
      RowBox[{"cof", "[", 
       RowBox[{"n", "+", "1"}], "]"}], "/", 
      RowBox[{"cof", "[", "n", "]"}]}], "]"}], ",", 
    RowBox[{"n", "\[Rule]", "Infinity"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"cauchyhadamardtest", " ", ":=", " ", 
  RowBox[{"Limit", "[", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"Abs", "[", 
      RowBox[{"cof", "[", "n", "]"}], "]"}], "^", 
     RowBox[{"(", 
      RowBox[{"1", "/", "n"}], ")"}]}], ",", 
    RowBox[{"n", "\[Rule]", "Infinity"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.4329161124720554`*^9, 3.4329161129564395`*^9}, {
  3.4330236520503826`*^9, 3.433023787818614*^9}, {3.433023823131792*^9, 
  3.4330240379796667`*^9}, {3.4330240770897927`*^9, 3.4330241292470446`*^9}, {
  3.4330246591947193`*^9, 3.433024959981744*^9}, {3.4330254218812375`*^9, 
  3.4330254518349376`*^9}, {3.4330256315102625`*^9, 3.433025718933816*^9}, {
  3.433025752450084*^9, 3.433025867717922*^9}, {3.4330927350089006`*^9, 
  3.433092749140236*^9}, {3.433093395033349*^9, 3.433093413779523*^9}, {
  3.433093671442987*^9, 3.433093673344874*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"cof", "[", "n_", "]"}], " ", ":=", " ", 
  RowBox[{"1", "/", 
   RowBox[{
   "n", "!"}]}]}], "\[IndentingNewLine]", "cauchytest", \
"\[IndentingNewLine]", "cauchyhadamardtest"}], "Input",
 CellChangeTimes->{{3.4330934088868523`*^9, 3.433093439114934*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "ivar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(\\(\\(2.` \[VeryThinSpace]\\)\\) + \
\\(\\(0.05`\\\\ \[ImaginaryI]\\)\\)\\)\\n\[NoBreak] is not a valid variable. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/ivar\\\", \
ButtonNote -> \\\"General::ivar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.529759729278664*^9}],

Cell[BoxData[
 RowBox[{"Limit", "[", 
  RowBox[{"0.33328704667986664`", ",", 
   RowBox[{
    RowBox[{"2.`", "\[VeryThinSpace]", "+", 
     RowBox[{"0.05`", " ", "\[ImaginaryI]"}]}], "\[Rule]", "\[Infinity]"}]}], 
  "]"}]], "Output",
 CellChangeTimes->{3.529251839781125*^9, 3.529495206278646*^9, 
  3.529759729288664*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "ivar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(\\(\\(2.` \[VeryThinSpace]\\)\\) + \
\\(\\(0.05`\\\\ \[ImaginaryI]\\)\\)\\)\\n\[NoBreak] is not a valid variable. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/ivar\\\", \
ButtonNote -> \\\"General::ivar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5297597293086634`*^9}],

Cell[BoxData[
 RowBox[{"Limit", "[", 
  RowBox[{
   RowBox[{"0.7074078618500157`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.006121184152634884`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{
    RowBox[{"2.`", "\[VeryThinSpace]", "+", 
     RowBox[{"0.05`", " ", "\[ImaginaryI]"}]}], "\[Rule]", "\[Infinity]"}]}], 
  "]"}]], "Output",
 CellChangeTimes->{3.529251839781125*^9, 3.529495206278646*^9, 
  3.5297597293086634`*^9}]
}, Open  ]],

Cell[TextData[{
 "\n(c) Consider the series,  ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    UnderoverscriptBox["\[Sum]", 
     RowBox[{"i", "=", "0"}], "\[Infinity]"], 
    RowBox[{
     SubscriptBox["a", "n"], 
     SuperscriptBox["z", "n"]}]}], TraditionalForm]]],
 ", where ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["a", "n"], "=", 
    SuperscriptBox[
     RowBox[{"(", 
      FractionBox[
       RowBox[{"n", "+", "3"}], 
       RowBox[{
        RowBox[{"2", "n"}], "+", "1"}]], ")"}], "n"]}], TraditionalForm]]],
 ".  Evaluate the cell below to see that the radius of convergence is finite \
(",
 StyleBox["R",
  FontSlant->"Italic"],
 " = 2)."
}], "Text",
 CellChangeTimes->{{3.43309354348145*^9, 3.4330936409740353`*^9}, {
   3.433093689706449*^9, 3.433093691296414*^9}, {3.433093773065126*^9, 
   3.4330938355249662`*^9}, {3.4330941990590773`*^9, 3.433094228758924*^9}, 
   3.433201570465251*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"cof", "[", "n_", "]"}], " ", ":=", " ", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"n", "+", "3"}], ")"}], "/", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"2", "n"}], "+", "1"}], ")"}]}], ")"}], "^", "n"}]}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{"1", "/", "cauchytest"}], "\[IndentingNewLine]", 
 RowBox[{"1", "/", "cauchyhadamardtest"}]}], "Input",
 CellChangeTimes->{{3.4329161124720554`*^9, 3.4329161129564395`*^9}, {
  3.4330236520503826`*^9, 3.433023787818614*^9}, {3.433023823131792*^9, 
  3.4330240379796667`*^9}, {3.4330240770897927`*^9, 3.4330241292470446`*^9}, {
  3.4330246591947193`*^9, 3.4330249118245697`*^9}, {3.433025019686015*^9, 
  3.4330251814078703`*^9}, {3.433025215064767*^9, 3.43302531887926*^9}, {
  3.4330253797554283`*^9, 3.433025404349651*^9}, {3.43302549388262*^9, 
  3.433025516664307*^9}, {3.4330255834468393`*^9, 3.433025616353721*^9}, {
  3.433025886655786*^9, 3.4330258952184505`*^9}, {3.433093646033526*^9, 
  3.433093683664667*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "ivar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(\\(\\(2.` \[VeryThinSpace]\\)\\) + \
\\(\\(0.05`\\\\ \[ImaginaryI]\\)\\)\\)\\n\[NoBreak] is not a valid variable. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/ivar\\\", \
ButtonNote -> \\\"General::ivar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5297597301386385`*^9}],

Cell[BoxData[
 FractionBox["1", 
  RowBox[{"Limit", "[", 
   RowBox[{"0.6296719270906378`", ",", 
    RowBox[{
     RowBox[{"2.`", "\[VeryThinSpace]", "+", 
      RowBox[{"0.05`", " ", "\[ImaginaryI]"}]}], "\[Rule]", "\[Infinity]"}]}],
    "]"}]]], "Output",
 CellChangeTimes->{3.5292518575305924`*^9, 3.529495278368449*^9, 
  3.5297597301386385`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "ivar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(\\(\\(2.` \[VeryThinSpace]\\)\\) + \
\\(\\(0.05`\\\\ \[ImaginaryI]\\)\\)\\)\\n\[NoBreak] is not a valid variable. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/ivar\\\", \
ButtonNote -> \\\"General::ivar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5297597301386385`*^9}],

Cell[BoxData[
 FractionBox["1", 
  RowBox[{"Limit", "[", 
   RowBox[{
    RowBox[{"1.000099921712435`", "\[VeryThinSpace]", "-", 
     RowBox[{"2.4981676890826967`*^-6", " ", "\[ImaginaryI]"}]}], ",", 
    RowBox[{
     RowBox[{"2.`", "\[VeryThinSpace]", "+", 
      RowBox[{"0.05`", " ", "\[ImaginaryI]"}]}], "\[Rule]", "\[Infinity]"}]}],
    "]"}]]], "Output",
 CellChangeTimes->{3.5292518575305924`*^9, 3.529495278368449*^9, 
  3.5297597301386385`*^9}]
}, Open  ]],

Cell[TextData[{
 "\n(d)  Here, we test the radius of converge (",
 StyleBox["R",
  FontSlant->"Italic"],
 " = 2) by numerically evaluating the series  ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    UnderoverscriptBox["\[Sum]", 
     RowBox[{"i", "=", "0"}], "\[Infinity]"], 
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       FractionBox[
        RowBox[{"n", "+", "3"}], 
        RowBox[{
         RowBox[{"2", "n"}], "+", "1"}]], ")"}], "n"], 
     SuperscriptBox["z", "n"]}]}], TraditionalForm]]],
 " for several different values of ",
 StyleBox["z",
  FontSlant->"Italic"],
 ".  Explain the output to your TA."
}], "Text",
 CellChangeTimes->{{3.4330937091523447`*^9, 3.433093711360126*^9}, {
  3.4330938413481894`*^9, 3.4330939341595497`*^9}, {3.4330939941145353`*^9, 
  3.43309399929669*^9}, {3.4332015751059947`*^9, 3.433201675639818*^9}, {
  3.433203079222624*^9, 3.43320308120705*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"cof", "[", "n_", "]"}], " ", ":=", " ", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"n", "+", "3"}], ")"}], "/", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"2", "n"}], "+", "1"}], ")"}]}], ")"}], "^", "n"}]}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"g", "[", "z_", "]"}], " ", ":=", 
   RowBox[{"NSum", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"cof", "[", "n", "]"}], "*", 
      RowBox[{"z", "^", "n"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "0", ",", "Infinity"}], "}"}]}], "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"g", "[", "I", "]"}], "\[IndentingNewLine]", 
 RowBox[{"g", "[", 
  RowBox[{"1", "+", "I"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"g", "[", "3", "]"}], " ", 
  RowBox[{"(*", 
   RowBox[{
   "outside", " ", "raduis", " ", "of", " ", "convergence", " ", "and", " ", 
    "therefore", " ", 
    RowBox[{"no", " ", "[", "finite", "]"}], " ", "solution"}], " ", 
   "*)"}]}]}], "Input",
 CellChangeTimes->{{3.4329161124720554`*^9, 3.4329161129564395`*^9}, {
   3.4330236520503826`*^9, 3.433023787818614*^9}, {3.433023823131792*^9, 
   3.4330240379796667`*^9}, {3.4330240770897927`*^9, 
   3.4330241292470446`*^9}, {3.4330246591947193`*^9, 
   3.4330249118245697`*^9}, {3.433025019686015*^9, 3.4330251814078703`*^9}, {
   3.433025215064767*^9, 3.43302531887926*^9}, {3.4330253797554283`*^9, 
   3.433025404349651*^9}, {3.43302549388262*^9, 3.433025516664307*^9}, {
   3.4330255834468393`*^9, 3.433025616353721*^9}, {3.433025886655786*^9, 
   3.4330258952184505`*^9}, {3.433093646033526*^9, 3.433093658480473*^9}, {
   3.4330939607694187`*^9, 3.433093976976737*^9}, 3.433530734096799*^9, {
   3.529251908699057*^9, 3.5292519301884127`*^9}}],

Cell[BoxData[
 RowBox[{"0.28003952714460223`", "\[VeryThinSpace]", "+", 
  RowBox[{"0.8611540352827103`", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{{3.5292518673802967`*^9, 3.529251894739476*^9}, 
   3.529495331216358*^9, 3.529759733578535*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "0.26081036497622123`"}], "+", 
  RowBox[{"2.9437329024163708`", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{{3.5292518673802967`*^9, 3.529251894739476*^9}, 
   3.529495331216358*^9, 3.529759733588535*^9}],

Cell[BoxData["ComplexInfinity"], "Output",
 CellChangeTimes->{{3.5292518673802967`*^9, 3.529251894739476*^9}, 
   3.529495331216358*^9, 3.529759733608534*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["(#13) The residue theorem (10 min)", "Subsubsection",
 CellChangeTimes->{{3.43291643250945*^9, 3.432916476479044*^9}, {
  3.4330259930328283`*^9, 3.433025994376604*^9}, {3.4330260541277514`*^9, 
  3.4330260780032096`*^9}, {3.4330261089413033`*^9, 3.4330261090038047`*^9}, {
  3.4330907954272957`*^9, 3.43309079679529*^9}, {3.433100129305299*^9, 
  3.433100132532735*^9}, {3.433203146521222*^9, 3.4332031466618505`*^9}, {
  3.4332036223459024`*^9, 3.4332036225021563`*^9}}],

Cell[TextData[{
 "An important theorem of complex analysis states that when we integrate a \
function along a right-handed closed path in the complex plane (e.g. a \
circle), the result is equal to the 2\[Pi]",
 StyleBox["i",
  FontSlant->"Italic"],
 "  times the sum of the residues of any poles enclosed by the path.  This \
theorem turns out to be a powerful tool for solving really hard definite \
integrals.  The purpose of this exercise is to obtain the residues of a \
function by computing circular path integrals in the complex plane and to \
help you to visualize the whole concept.\n\n(a) Evaluate the cells below.  \
The first cell defines ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"g", "(", "z", ")"}], " ", "=", " ", 
    FractionBox["3", 
     RowBox[{"(", " ", 
      RowBox[{"z", "+", 
       SuperscriptBox["z", "3"]}], ")"}]]}], TraditionalForm]]],
 ", which has three poles in the complex plane (",
 StyleBox["z",
  FontSlant->"Italic"],
 " = -",
 StyleBox["i",
  FontSlant->"Italic"],
 ", ",
 StyleBox["z",
  FontSlant->"Italic"],
 " = 0, ",
 StyleBox["z = i",
  FontSlant->"Italic"],
 " ), and computes its Laurent series around the pole at ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["z", "0"], TraditionalForm]]],
 " = 0.  The second cell plots g(x) in the region of the complex plane \
containing the poles and also shows the integration path (defined \
parametrically) as a thick black circle.  The third cell prepares and \
executes the path integral.\n\n(b) Now change ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["z", "0"], TraditionalForm]]],
 " and ",
 StyleBox["r",
  FontSlant->"Italic"],
 " and reevaluate the cells below in order to try the integration around each \
of the other two poles.  Make sure that the integration path encloses only \
one pole at a time.  Record (on a piece of paper) the residue of each pole.\n\
\n(c)  Change ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["z", "0"], TraditionalForm]]],
 " back to 0 and make ",
 StyleBox["r",
  FontSlant->"Italic"],
 " large enough to include all three poles.  Verify that this larger path \
integral yields the sum of the enclosed residues."
}], "Text",
 CellChangeTimes->{{3.432916484291694*^9, 3.432916573090274*^9}, {
  3.432916670060886*^9, 3.4329166849830475`*^9}, {3.43309758879572*^9, 
  3.4330975926107903`*^9}, {3.4330976636914873`*^9, 3.4330978896051817`*^9}, {
  3.433097977719325*^9, 3.433098283463173*^9}, {3.433099845433208*^9, 
  3.433099874037698*^9}, {3.43310014881365*^9, 3.4331001715901957`*^9}, {
  3.433100309450761*^9, 3.43310032905993*^9}, {3.433102644723119*^9, 
  3.433102804187496*^9}, {3.433102896502488*^9, 3.433102940648197*^9}, {
  3.433102989804809*^9, 3.433103230232378*^9}, {3.433103543103356*^9, 
  3.433103605029059*^9}, {3.4331036810092154`*^9, 3.433103967504189*^9}, {
  3.433104068942431*^9, 3.433104227190669*^9}, {3.433104449176092*^9, 
  3.4331044492935658`*^9}, {3.442874354821735*^9, 3.442874395008978*^9}, {
  3.4903721923733034`*^9, 3.490372195620303*^9}}],

Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<`*\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.5297597452281857`*^9, 3.529759750248035*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"g", "[", "z_", "]"}], " ", ":=", " ", 
   RowBox[{"3", "/", 
    RowBox[{"(", 
     RowBox[{"z", "+", 
      RowBox[{"z", "^", "3"}]}], ")"}]}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"z0", " ", "=", " ", "I"}], ";", "  ", 
  RowBox[{"r", "=", " ", 
   RowBox[{"1", "/", "2"}]}], ";", "  ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"z0", " ", "is", " ", "the", " ", "expansion", " ", "point"}], 
    ",", " ", 
    RowBox[{
     RowBox[{"r", " ", "is", " ", "the", " ", "integration"}], "-", 
     RowBox[{"path", " ", "radius"}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"Series", "[", 
   RowBox[{
    RowBox[{"g", "[", "z", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"z", ",", "z0", ",", "6"}], "}"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.432911838514997*^9, 3.432911871265626*^9}, {
   3.4329119403450775`*^9, 3.4329119508452787`*^9}, {3.432912086176002*^9, 
   3.432912086597885*^9}, {3.4329122130846887`*^9, 3.4329122610856104`*^9}, {
   3.4329123338057566`*^9, 3.4329123338526325`*^9}, {3.4329123701033287`*^9, 
   3.432912646874267*^9}, {3.432912758845167*^9, 3.4329127850331697`*^9}, {
   3.432912858112698*^9, 3.4329128939258857`*^9}, {3.433012184173953*^9, 
   3.433012213283887*^9}, {3.4330122436282196`*^9, 3.433012467023134*^9}, {
   3.433012510039585*^9, 3.4330126479328575`*^9}, {3.4330127363876805`*^9, 
   3.433012813326658*^9}, {3.433012861155701*^9, 3.433012972439088*^9}, {
   3.4330130123929796`*^9, 3.433013307304892*^9}, {3.4330133539932885`*^9, 
   3.4330134318072824`*^9}, {3.4330135014336195`*^9, 
   3.4330136989374113`*^9}, {3.4330137581260476`*^9, 
   3.4330137584698043`*^9}, {3.433013828205518*^9, 3.433013829189912*^9}, {
   3.4330141354145412`*^9, 3.4330145177656326`*^9}, {3.4330145876263485`*^9, 
   3.433014676268676*^9}, {3.433014712378744*^9, 3.4330148457719297`*^9}, {
   3.4330148781319265`*^9, 3.4330149235077977`*^9}, {3.4330149811651545`*^9, 
   3.4330149869933915`*^9}, {3.43301504447887*^9, 3.4330150773857517`*^9}, {
   3.4330151278242207`*^9, 3.433015184325305*^9}, {3.433015222138531*^9, 
   3.4330152617955427`*^9}, {3.433015306093268*^9, 3.433015406204565*^9}, {
   3.433015440611476*^9, 3.4330155431915703`*^9}, 3.433015586442401*^9, {
   3.433015620068046*^9, 3.4330156514592743`*^9}, {3.4330157239919167`*^9, 
   3.4330157439923005`*^9}, {3.433016682479069*^9, 3.4330167159015856`*^9}, {
   3.433020454301487*^9, 3.4330204561140213`*^9}, {3.433081936947554*^9, 
   3.433081953144578*^9}, {3.433097520099688*^9, 3.4330975600674667`*^9}, {
   3.433097599708685*^9, 3.4330976398839006`*^9}, {3.433097953901331*^9, 
   3.4330979727036133`*^9}, {3.433102836590602*^9, 3.433102891479381*^9}, 
   3.4331029732138653`*^9, {3.4331032911986923`*^9, 3.433103399455777*^9}, {
   3.4331034333429937`*^9, 3.43310348634026*^9}, {3.433103637110345*^9, 
   3.433103660038569*^9}, 3.433103753378821*^9, {3.433103970251843*^9, 
   3.4331039744478827`*^9}, 3.4331719969183207`*^9, {3.5292521052531605`*^9, 
   3.5292521523917465`*^9}, {3.5292521935905104`*^9, 3.529252251798764*^9}, {
   3.5297598729543533`*^9, 3.5297599368924356`*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   RowBox[{"-", 
    FractionBox["3", 
     RowBox[{"2", " ", 
      RowBox[{"(", 
       RowBox[{"z", "-", "\[ImaginaryI]"}], ")"}]}]]}], "-", 
   FractionBox[
    RowBox[{"9", " ", "\[ImaginaryI]"}], "4"], "+", 
   FractionBox[
    RowBox[{"21", " ", 
     RowBox[{"(", 
      RowBox[{"z", "-", "\[ImaginaryI]"}], ")"}]}], "8"], "+", 
   RowBox[{
    FractionBox["45", "16"], " ", "\[ImaginaryI]", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"z", "-", "\[ImaginaryI]"}], ")"}], "2"]}], "-", 
   RowBox[{
    FractionBox["93", "32"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"z", "-", "\[ImaginaryI]"}], ")"}], "3"]}], "-", 
   RowBox[{
    FractionBox["189", "64"], " ", "\[ImaginaryI]", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"z", "-", "\[ImaginaryI]"}], ")"}], "4"]}], "+", 
   RowBox[{
    FractionBox["381", "128"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"z", "-", "\[ImaginaryI]"}], ")"}], "5"]}], "+", 
   RowBox[{
    FractionBox["765", "256"], " ", "\[ImaginaryI]", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"z", "-", "\[ImaginaryI]"}], ")"}], "6"]}], "+", 
   InterpretationBox[
    SuperscriptBox[
     RowBox[{"O", "[", 
      RowBox[{"z", "-", "\[ImaginaryI]"}], "]"}], "7"],
    SeriesData[$CellContext`z, 
     Complex[0, 1], {}, -1, 7, 1],
    Editable->False]}],
  SeriesData[$CellContext`z, 
   Complex[0, 1], {
    Rational[-3, 2], 
    Complex[0, 
     Rational[-9, 4]], 
    Rational[21, 8], 
    Complex[0, 
     Rational[45, 16]], 
    Rational[-93, 32], 
    Complex[0, 
     Rational[-189, 64]], 
    Rational[381, 128], 
    Complex[0, 
     Rational[765, 256]]}, -1, 7, 1],
  Editable->False]], "Output",
 CellChangeTimes->{
  3.5292519937865047`*^9, {3.529252109903021*^9, 3.5292521541116943`*^9}, {
   3.52925219561045*^9, 3.5292522525187426`*^9}, {3.5297597345085073`*^9, 
   3.529759752017982*^9}, {3.529759874364311*^9, 3.5297599373724213`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"parametricpath", "[", "th_", "]"}], " ", ":=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"r", "*", 
       RowBox[{"Cos", "[", "th", "]"}]}], "+", 
      RowBox[{"Re", "[", "z0", "]"}]}], ",", 
     RowBox[{
      RowBox[{"r", "*", 
       RowBox[{"Sin", "[", "th", "]"}]}], "+", 
      RowBox[{"Im", "[", "z0", "]"}]}], ",", " ", 
     RowBox[{"Abs", "[", 
      RowBox[{"g", "[", 
       RowBox[{
        RowBox[{"r", "*", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Cos", "[", "th", "]"}], "+", 
           RowBox[{"I", " ", 
            RowBox[{"Sin", "[", "th", "]"}]}]}], ")"}]}], "+", "z0"}], "]"}], 
      "]"}]}], "}"}]}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Plot3D", "[", 
    RowBox[{
     RowBox[{"Abs", "[", 
      RowBox[{"g", "[", 
       RowBox[{"x", "+", 
        RowBox[{"I", " ", "y"}]}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "3"}], ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", 
       RowBox[{"-", "3"}], ",", "3"}], "}"}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<x\>\"", ",", "\"\<y\>\"", ",", "None"}], "}"}]}], ",", 
     RowBox[{"Axes", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"True", ",", "True", ",", "False"}], "}"}]}], ",", 
     RowBox[{"MeshStyle", "\[Rule]", "Gray"}], ",", 
     RowBox[{"PlotPoints", "\[Rule]", "20"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "10"}], "}"}]}], ",", 
     RowBox[{"LabelStyle", "\[Rule]", "Medium"}], ",", 
     RowBox[{"ViewPoint", "->", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "20"}], "}"}]}], ",", 
     RowBox[{"SphericalRegion", "\[Rule]", "True"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"ParametricPlot3D", "[", 
    RowBox[{
     RowBox[{"parametricpath", "[", "th", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"th", ",", "0", ",", 
       RowBox[{"2", "Pi"}]}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Thickness", "[", "0.01", "]"}], ",", "Black"}], "}"}]}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}], 
  "\[IndentingNewLine]", "]"}]}], "Input",
 CellChangeTimes->{{3.432911838514997*^9, 3.432911871265626*^9}, {
   3.4329119403450775`*^9, 3.4329119508452787`*^9}, {3.432912086176002*^9, 
   3.432912086597885*^9}, {3.4329122130846887`*^9, 3.4329122610856104`*^9}, {
   3.4329123338057566`*^9, 3.4329123338526325`*^9}, {3.4329123701033287`*^9, 
   3.432912646874267*^9}, {3.432912758845167*^9, 3.4329127850331697`*^9}, {
   3.432912858112698*^9, 3.4329128939258857`*^9}, {3.433012184173953*^9, 
   3.433012213283887*^9}, {3.4330122436282196`*^9, 3.433012467023134*^9}, {
   3.433012510039585*^9, 3.4330126479328575`*^9}, {3.4330127363876805`*^9, 
   3.433012813326658*^9}, {3.433012861155701*^9, 3.433012972439088*^9}, {
   3.4330130123929796`*^9, 3.433013307304892*^9}, {3.4330133539932885`*^9, 
   3.4330134318072824`*^9}, {3.4330135014336195`*^9, 
   3.4330136989374113`*^9}, {3.4330137581260476`*^9, 
   3.4330137584698043`*^9}, {3.433013828205518*^9, 3.433013829189912*^9}, {
   3.4330141354145412`*^9, 3.4330145177656326`*^9}, {3.4330145876263485`*^9, 
   3.433014676268676*^9}, {3.433014712378744*^9, 3.4330148457719297`*^9}, {
   3.4330148781319265`*^9, 3.4330149235077977`*^9}, {3.4330149811651545`*^9, 
   3.4330149869933915`*^9}, {3.43301504447887*^9, 3.4330150773857517`*^9}, {
   3.4330151278242207`*^9, 3.433015184325305*^9}, {3.433015222138531*^9, 
   3.4330152617955427`*^9}, {3.433015306093268*^9, 3.433015406204565*^9}, {
   3.433015440611476*^9, 3.4330155431915703`*^9}, 3.433015586442401*^9, {
   3.433015620068046*^9, 3.4330156514592743`*^9}, {3.4330157239919167`*^9, 
   3.4330157439923005`*^9}, {3.433016682479069*^9, 3.4330167159015856`*^9}, {
   3.433020454301487*^9, 3.4330204561140213`*^9}, {3.433081936947554*^9, 
   3.433081953144578*^9}, {3.433097520099688*^9, 3.4330975600674667`*^9}, {
   3.433097599708685*^9, 3.4330976108483677`*^9}, {3.4330976416130047`*^9, 
   3.433097643492508*^9}, {3.433102841346714*^9, 3.433102869109619*^9}, {
   3.433103977100994*^9, 3.433103983420609*^9}, {3.5292520178857813`*^9, 
   3.529252035645249*^9}}],

Cell[BoxData[
 Graphics3DBox[{GraphicsComplex3DBox[CompressedData["
1:eJy9vXV4FUnQ/5vgEAIEJ7i7a1igB3d3d3dYbIHF3d0liwULwQME5oQAwSEE
OECQJMjBI0hICHD55dS35p0i5977Ps997v5znnzo7emu6q6uru6pyd9nZJv+
SZycnPa5ODkl/f07ZOmWe79+pbTg9+Gwe7PdsuxUrxb3q1Z3UnLmKXctX3V2
7x7VZ1HJTXOjkzCv4b4jW97n+9XTBdE/rgx1Yv4qa94VF/r7qKMZxvq7X/2u
g0+ukqRSXOmjap+r8zxPv6/MA26nnv+6ygnlmWZZs2KHopif+nDwyIt2p1S5
9NUL9aj7hvnos0H7Jtf0UzUzHuhhbfWU+cva5341WXROVUp7+c2LyheYP2oy
ts+Xu7rKaOeK+0u8lL0e5q+onmL25zIfR8/dYm8n8zPUzt32fjG/RP06ZJeD
knJ4bJebBv6a5NbLLmfmtUnOL+x6Ye5CeqG/NalH7g/ps/mbTwWuddzD+sVv
yVHfdngkPcD6BS+zu2GHV498WL/glYPKv3zf9BjrF3xRjMv5Bb18Wb/gZwtm
Ot8m/VnWL3jLbos2Ds7oz/oF75Ei99G/1gSwfsGPjV3gsu3gRdYv+HGn4bPf
vLjE+gU/QRz65fJUD/QL3pOeC/2Ct6F2Qr/gFuoX9Au+jOQA/YJXI7lBv+Dl
Sc7QL3g50gv0K/UI/UJvRe5FtwpKtp/bAZ7kzLGkneb7sH7x26F/PtfJXY+x
fsGP+vy6M6fMKdYv+I8nlV63q6SzfsEP73185nSDANYveOtz+6ZMXRbI+gV/
55HWt3Kh66xf8NdbTi3uWvA26xd8/PEy762Dg1i/4OOIQ7/gb6ke6Bc8gp4L
/YK3o3ZCv+DHqF/QL3jSp3Y5QL/gJ0lu0C94F5Iz9AuenPQC/Uo9Qr/QT/38
a0Zudz3E+gXf/iFi7ch+R7l94F8rr/lvzERf1i9+52zRVy4orbN+wT3eZX86
J/kF1i/4A8/VnpvvXmH9sj3wiy97eett1i944VTtXDO73GP9gvcbtmzSwGUP
Wb/g/Re+Wlpk32PWL/gg4tAvc6oH+gUvTs+FfsHfUjuhX5YH9Qv6Ba9JcoB+
wReR3KBf8DiSM/QLvoP0Av1KPUK/0MOYaqkyVNl7mPULXmLPv0eKzDrB+gUv
Mvt1xO58Z7nd4EviJ0WULxTA+sVvixl7atVefoX1y/o/Hfc2c/sg1i/42JDe
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
7quiCXJ4wfzNy/LNW2x/okol8LvMl64v0eto1nCV115egUdS+SIJ/LNeJkFO
sXqa5UUv2a5Z+bngz09cnDAwWxg/F7x28MUvu2+/5ueC7622vPz5/lHK3c4V
uDdxtAe8EdVT3v5c5q/puWgnfv2KFHN/4RbK7QRfmi8yZeVKb7id4H383bvU
LfSF2wne4+T3rJu3JdXQTvBBxNFO8CFUD9oJvo6ei7/RrhQ3pof+PPmC24nf
oikvTVg3MorbCV7Ca0mpb7WcNC5H/x7YP0nXid+N9oN/eD54dEzGLNx+8Fji
+Bv/37tdrQ50T5Jaw9/49Q1xnvCsszvXA36ZOP7Gv+uiPH5vE4fcwH+I5+Lf
I0T7wb8Th5zB75Mc8Df+vRrJDX/jtwLJuYBdL8zdhF7w76vF+AEfIsYP+FAx
fsAniPEDPlaMH/Bt9Fz8jd+LYpyXsM8L9VrMR/BmYj6CHxXzEdxXzEfw1mI+
gn+k56J94NnIbqA9lex2Rn0hO4Pngq8Xdgk8nsrjueBDye55JdjnFBb8VvYo
lK7oZmMdBL+fJuO0y1671B7735qD8posDzlvT1gfnC2trUU6PE95iznfpyoe
OrBpwB3uL8oPabd6yoLDBkf5JP3fW553s7JeUL5/qex5M7W4xxzlm4Tvftd7
cAjF7/39UN4/e66BLTrfZw573vLmprkflj3ndmLdvuE1YM3f70K4PeAPhtys
Ojrdc34u+Psd578P2/aa9YX6V5C+8FzY50dpunVs3+0zr78o3y7nKH3UklC2
4/h90DOzz/DXRnwGPOvcJTvTO99l/wG84/l1szz/fsx2Ff9fnjQ5f/y8GMJ+
Bcpr7TYlGb7emNd8j+XZ25fWRy/Y30D5fO2v37jr84Hlg/KBW/zC52uRLB/w
+s1WjH/iFct+COrp57TlWreZn1gO4MWofvyNfjRLVSs86bR7LAfwW6l7/7QU
fsRyAN+ReWTvu/HPub/g/w5qUuNU0UjuL/4/l792fg2L+cD9Rfnn3m8yvOgf
z/3l+x5Tcpb6cTWO9YvyO5cPqOxkS89xS/BMrd3iqmR24bgleBTVj/GDdlUu
sWrqsRSZ2B6CVxR2G7w02W2MJ/Dz6Ru+a7MhiOUJ7rRnXK3lbR+xPHke5Let
mNc/lOUJvvvNiyrBW96yPMEvHjj0qczgGNY7eH5qP+TDz8X5GpVHfWq2dZr3
+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
DrTpmcrYR4CPFfsI8I5iHwFeR+wjpBwgTyk3yBPvvVYQ+1bwILFvBb8m9q3g
HmLfyvm0TftKG/MTtA9FfICfS/tWyFm+5ws5g+fL+tRp50ljnws+IG/1uHnb
jH1u4u2JUbL9kLPsL+Qs5QM5S3lCzsjn+kXEYcC3ijgMeBURhwF3EXEY8LQi
DgNeXsRhwJuJOIzMaw05y/KQM3gFEYcBTy/iMOBpRBxG9hdylvKBnME/izgM
8uNOEnFazhct4rHg10TcFdxXxFfBvUUcFTy9iJeCXxVxUZl3GnKW5SFn8HQi
ngl+UMQtOd+1iE+C3xBxSM5TLeKN4BNFXBH3HhEnF/FwDfFwEffWEPcW8W0N
8VURx9YQxxbxas0cr+a4tIa4tIg/c/5nEWfWzHFmjidriCeLuLH21tQejg9z
+0UcWEMcWMR7NcR7RVxXE3FdS/6nBSb6zU1pGdRPG+S0eC/L+UFpL/dJrikt
XrvbLxnT1oflvHRq6bOVV6ewNGy/c0pw+DGWc4MbR3pGu6ewjH69dGv82tMs
5x+5qiU55JnckvFLgfpxR4zx7DHia+1ih1JaToR3/lYxvxHnjzw7+cWLyikt
4eOb+g/Z489ypnwIlsxtg92PDOTxr3p0n1u8R90UltqzWh3aERrAcs5y0OW6
+9XklqONj79v5GKM59Y/r7istqa05K69c9Wi5Yac6b6tZVKXhfdb+bOdVJYt
d1u5vkxhKZNmXu/M+4+ynMd/6PzpytAUlvGjOh2I9fZhOZeu+WzN3Ojklkyj
vPZW+rHf8Evpt5Bzkbj3/bxZzu1KjZzqNzeZpcC+tIXrxB1lOaeZ8jnvJNdk
lmHznw/YM+I0y/n8tUnnK69OavH4WaR+7hn+LOdJOX/1i3ZPalmyP7K60y+e
1/rxYWd3Di2W3OJ2w5Z3aMmLLOdhfnUaFjuUzPLdZ1HT2VeusJwLJuy/klnu
Ve7v3ewx23P1qGvzxZ5+SS09G4c9KtLpBst5xf47ZXrUTWopETY5vE/7ayzn
G/HLR1hbJbcUH739gHdlf5bz7GZZ3VZbk1lar9zUdNX6syznGps3HW3VI5ll
xfrxqb1O+7Kco9/l6+D6Mqnlxoci53a15/VO2/vX7m9Xhia15G5Y7uiddSx/
S44Qn5p1JyWxuN3517l78iMsZ7Yf7jWmaUN8Wc5z/zkz02+usyU+OsuqRhfZ
vum1rmqFJ7k6W4pkqZLVqUEgy/lLjkuBlVc7WQbeD5npVtZY17ZR/ttLlMcJ
cuvQJXPEi8rOFq1i7y37krK/p1z3bVjh6edkeX5a+5FrxF2WW+PvHYPcryax
LO0WO+LWUWNdc2r6ZKy1VRJLttNDZw8fz/658t3YJ+tqq7Pl5oqg6K7ldZbb
iLc231Y9nC1Ohc7ePeXny3IrXH14V9eXTpYsyXKc9V95lOVW4miE5vryl/5o
wdaYU1WPs9zWt4mbMzf6p15Er5Zj+G7Wl47fqgU7XXOveJHlNpbegyvQ9qfV
yfkWyy28nHv7aPd4/Waf7NUm5zTi5FXofbr2lO8Lctt5+MSOVj1+6NMWp+yk
5j5nuWVs7f/6ytB4/a/tZzdviHrGcrsQm6dSj7pOlqubD3wvtc/wu76tbHSw
8upf+pnODy/PCeB9sRpYoW20t+dP/U6fo4Wj/gtguQUHda9a7NAP3bt07PvJ
L8+y3GqPHjTF0y9e/xQ2M6JQ2AnDfvpMTbHaGqdf6dVk2RkfHreWZS3nN3V9
Gas/q5qzXM9L/iy37x9XLp8b/U3vdLD30CJjr4p16vfvtxR720QEs9weJtjh
GP1IiwWvR7Q09lOl6H3G55Q/DXLb6F1vsLXVN71Q17f1Sy+LZrnZ36eI0Rfu
2pi08oU3LLfpkddK1530XQ/qUPKGh5+xL4ig9wjyV5882T1ZEMutR9mwk5VX
x+qWBa+ed5h2meV29ea7eG/Pb3rr+atqP7b6s9yqJdj5GH3D4qSP+/dmP9aS
PcE+f9F3Rb9ecVZjf8wyN8E+fNYvB85JHhJ+geVmtwOf9Ma37pZMn5P1S+d9
0fpa/6Kx2uSHLDf8vtk7PMfs7q9YboXofYQTlGcP8rHPr2j9cNsHWZyyfmb5
TEiw8191r6L7vk68YZwjvKL3Hf57ve7p/Pz3WT7tE+z5Z923WXzLuF83WD7+
CXb7k+65eMOxBi8vsHzKDp2d8pBntD7sZKHPnUJ4vFnSJ9iHSL3EjdkbK3vy
vLbEJoznCP3oh7ffmoQGsnyCEsbtB71o6JZJDRrdYfn4UB6Dk0erny5clOeL
vjRhfL7RNx8+9Sv7qfc8ftwS5td7vctit0KV4jOwfD4mjIe3+q2ZmdqebRbP
8rHbmSi9eO3GgzpHGHGMJ3SP7vb0xX0fPTHiGHZ78lHXtnT+WeSBEccYnWA3
Puhda0++2MQayPJpdrvQxqHF3um1H41q3n6GEedJmzCebfrhfLYGZWv5s3xs
CXp5qQ/vMOHqyz5XWT56gvyf61+G/pOt2Z67LJ9t9P7Uk2cu/bP/4v2ybpfz
Mz1y5lHbTlcjHviryf8ZJ+F6jpu2xjeaZWL52PdlofqhUaWyTF3lzPFAL3qf
5nK5bFc3njTiXfZx/kIPOJg/6svQuyyHngnjOVy/X3pctevtr7Ic/kpYj8L0
ndGT/BZYeH5ZPifo5ZF+ZOa8Ws1qGXFR+3s89/UZJRdNrpfeiA93S6j/jt52
dZ/lY2rcZzlUofdgHvjH9vw56znLwV7PJX33zWGZ3+w34sP2/t7WRxbfnDTy
fTYjLppgl67o7S272vhkTKahv28S9HJPX/+q7rHgVve5v5sS5B+kb67SMih7
CiMOvCth3F7TA+fGHdg2y4h/Nkio/9Qf5wINE+b1zj/OBTom8NV/xMPz032f
Vjtvd2521eivvT3+6sXeYpGlzxn9rZ4gH2/V4sGr8yNccxvnAgn8nGp3q/a1
LZuN/g60P/eP+L+yt/OPuHcde7+UjP/vsMtBXSI5oL/29/iC1BaSG/prfw/r
ntpAckZ/S9J7VRMHDv/rlb8R9x6VMO+eqKnb+2+vp6J4vbDbjRD16XLmW4Gr
kmho/377uFIYV2j/J/s4VBiHaH91+7hVGLdoP41zdY/GOftj9nmhMC/QfppH
CvMI7bevO6+V2+by/ZrWNeLVDRP2I6/UOMuE+Cd1M7K+8FukdaFtjw7+ZL2Q
3VDDyG6gX2RnFOwM+kV2ScEuoV9kx1QXsmPoF9k9VYvsHvpFdlLBTqJfZFeV
2a5a1YHBTYdEu0eqVxciZlX/mI77ZfdXo1TnLVNXBo/7yv2i9UIdofUC/aL1
RRWj9QX9ovVIDaf1CP2i9Uth/UK/aL1TJ2m9Q79ofVSetD6iX7Seqj20nop1
WZ0R67Jdj19Vz3key2Laf2D7Sf6AakL+APpL/oMKJP8B/SV/Q+0gfwP9Jf9E
wT9Bf8mfUfBn0F/yf5Q/+T/oL/lLCv4S+kv+lYJ/Jfw3FWry32yqVcK4+q7S
1p8Y+KOEcX5EfqPqSH4j+kt+poKfif6SX6qukl+K/pIfqz6TH4v+kt+r4Pei
v+QnqyDyk9Ff8quVH/nV6C/54Rr8cOHnK+nnXx7jmaNH3V/KZ9bLmZlyhLIc
DiaMcydty7SmW/qUs7K/QfsIdYf2EVhnad+hCtO+A3LDbzXap0ButK9RhWhf
A7nRPkg9oH0Q5Eb7Ji0z7ZsgN9pnac60z4LcaF+mYV8GudE+TsM+DnKjfZ+2
xLTvs+m0T9SwT8T+nfaVGvaVYh+qyX3o69Op9w0tlkT7fqJSo3Q9glnO5RPm
exJtf/u2qT6Mvclypn2uNoT2uZAz7Yu14rQvZn/Gvo/WsI+GnDkuRftuyJn2
6VoG2qdDzrSv17Cvh5wpDqAhDgA5U9xAW05xA8iZ4gxaG4ozQM4Ul9DMcQmb
TnEMrRjFMSBnintovSjuIeIk2n0RJ6G4ihZLcRXImeIwWjqKw0DOFLfRlpni
NjGK4jxadYrzQM4UF9KGU1wI8qU4koY4Ep8D0m9BijtBzhSn0twoTgU52+1z
Cm0cxbUgZ397HEwrTXEwyDkNvac+juJmkHMbe5xNy26Ks9n0rPa4nIa4HOTc
0x7H0xTF8SBnypOquYm4X5Q9Tqg9ozgh5FzdHlfUDlFcEXL+aY9DaplMccgY
RXFLDXFLyHmZPc6pIc4JOdv34ym1PRQXZfna46haf4qjor9kxyybyY6xHCiO
UYbiGJBDoN0e6mZ7aNW9KB7yrFTnl9mWGfGQQ1T/arOd1GfTvj7Fyn8m+V0x
nutKcYA6lnp/T9v5hus/N7LssxeV4/T4xe/TpyrPfpS+jeIJOUzxBKs6T+Xf
msrbVDv7+qUXT1Xi/PuJhp85mfbR8x4NjXh/l+28noz23fto343nnkiYL1/0
+L25t59Y8pP52oR5+km/WKD9uI2Dk/I58mkq/9xU3qaa2v0HPf+B0L4Tknzk
9oyhfeuhc9XGNIx+xe35Svvcq7TPxXPt4+SVbvYnrXqqpvb9YDbTftCqWlL5
JKd3HBhelP1P/bDdr9Y/k18N3kzsm8znDlb9btOm3jfjsjD/QPuvlXVqWGrk
zs7PnUz/fkOUp/2aMu/XrHpn+v8emMurq1R+q6l+m0pjb6fqJNppX9fClXlf
bNUV+eEpTHKwqhj7PlrlFPvoV3b5q/sizkDxCrWV4hV8bkJ+8imhR4rnqMOm
cWXT65I/WZ3GA9q50j6uVP7pu7JEBvG40o/Yx5VKv880DtVSKv/YNA5tKr6J
/bm+Io6E33cUj8LfY8kfXibmRTPyAz1oHqE9m+zzURU0z0f9tH0+Kpclpvmr
1lL5MiIemNxuB1QHsgNoD8Ub1TGKN4JPIT82k7AnFI9V1U12zKbvJ/9tl8nu
WdV2ux1TUcKOpaN6Goh6yD+xHCD/BDw9xc8r5yw0+PDfd5njHngPOpeHfMj/
scSZ/B+r3oni871fJPNf+Yr9Ja4nC537Yz3ypDj/WdN37pycqlMcu6nJv7Xx
/fBMdB8D9Sd+D9yqrpP930v2H/WXo3jvXRHvRT66DXtf9K0+C/XH6NEUv+26
ZF5z/zzGfhN58GKjW+079/cdtofgGfzeNF34LITbD570c/9pk3e/5PaD9xm7
vL7/qEguj3vRXU33dqy6vL+NfqGeh6Jfidcf83u9scddPa/nPL+luhHfQJ4Z
twUtR/W5Y6yD4G+qzO00fpqhF/Az/54LCBnA8T3mQwouaP14rTPbZ3mPGu0v
RuVX0b4VHPVsN+1nrZwPZ7Cpfqs6bN/X61oBJ234UlfEkXRPipfqi4blW//I
0GMYxVffL69bdN7LEOb8Pd4v+Q+3XPaE5QCedUD2A9nD3rAcwA+tSdO8p3cs
y4HiDPpzU5zBqrtTfLgdxYfR35riPWuUxz1nL7o3iPIlKf9PEvquHOTAeU27
RnZ91MGIP4+h9uajuA3ks4ziqF73+gy/19KIF/lQ3NVvaWHPuXuNeNEde7xI
d6V4ETh/B+ypZ8jhpxEsH/wWo+fi7xcU7z1givda+X51B7oviv5WEu8po/3x
FBetWHbDPwddjPFcA3klRbxuhj1ep/9jitdZ+T3oz12LPfpaJxs/1/5fEL93
zP6bPZ6py3imP/knkWb/RE20xzn1thTnxLowmtrzL7UH/DrFjb1MceMYig8/
1CdQv8A7UPz5IcWfIYf+9B5tSxGnPWuP0/729/5nnNZG+TnP6e2pneCf3exx
WslLkD/TweTP2PTtFP+MMcnBSnFyb72pSW5W3dvNHh9uJjjuM8+ie9Rmvcjv
wTk5ZRTvO5vvi/rrL6m/4JMpXv3SJIcYVZjkhvg2eJiLOe4NOWeivFmPRPx/
gV2Pao85/s/3pbuIcZ6T8m59e2ie13iPO47GJ9q/l+rHOOH7XRSXnmYa5zGq
IrVTjBOVk+Lbk2hcYR/XxX7eoVrTeQf4I4qTVzLNO9wbDFXmcxyb3ofmQSlh
B+hcTOFcDHIoLd5HhhxS2+2n6i7O1+7Scw+bn8t5zLK7Tu64aa4Ty80ef3um
oul8Cvw8xcOzmuLhMfR9qDCFcy7w7RRXt5CdhHzovEx9pvMy8GkUn99vsrdW
8gPfq06mfv3et1K8uhOta5CbvBeN8vzdN9M9auM7KkPFugB+gtYvyAE8p2m9
i6FzjXfKl85DwR9SHP4zrafoL52rKpyrgq+geP4F07ps5Txy42h9x3jIRzxM
+AMoP97sbzC3kH+CfoFHmPwZvH8arXAODh5Ocfh95C+hHr6PTe/fof3IrzuU
/C72c4hHmL7X5uRUgeK6PUVcV9aDfoG7kD+J9vD3G03+Z4zxS/ci8Pdbirf3
Nfm3Vp3ujaippnsjVj2A4swnhV+9heKlt0S8tB3FV8eZ9gU25ULx2Hq070A9
8jvXWN/hz8SuX/k0Y6Y73B7wfjSeUR5+SPbscTvHTzP8GfDCHiO9lvcJY/sD
noXsA7//Qv5AwfJhtf2KG34F+LgNlUNLeRh2HjxXm1q7d+f+H+s18fFUHvVg
/arnuvPNredGPeBralzI2CLCWJfle0PQe+LlY5jXp/rxXKwjE8zt5/Ulr2i/
LI/5C17AJB+b7uh9Fv7epsk/NL4nWZT0gvrZbpv0aOU8HoNNdiyG7dVf5Lej
HvDvpvFjfM8nG+13wDGPftD+Ds9FXuvtpn2ilfc1Jc3vrbDf/pjkAJ74+4A2
fp/O/F6YlflU8n8gT/Ab9N4ZOMbJDdP7aDb2NxbTc1EefLL5vS1dvq+EeQq5
XRT7NcjtpbBv8nuU4JXFfofLJ5q/Eeebd//g9UV+IadE/zO4s8hXwyVIDpnp
O3SwY/i9I+J7j+m8vtyZcvu9smbhdSeSzourdvu76vhm3/j/p3isijHHY1VG
Olcdlr9edN5i39lOzqBz2FtPbxdzqxfJ5SnOrOLMcWblTueVPjmyVEmy+y3X
s4DON5uHN4ns1vgFjwc6J9Vd6ZwUfAXdu1Om8la9IN3TW2muX6fzZb0HnS+D
L6B7aAHm9uvudG+tsbm/dF80Su9E5+/gTqvs97VKmOWp/6R7O0VN8rfqR+je
S3DtUTN/9M9hxAfoHkiQ4K50Tyx5/IibFwa5GOOQ5mkGGg/gMl8WeEEH47Cg
g/Em8zJx/SJPDvqVju4b/NFO2g/mo++GgMvvknB7Ev3+yG9O/n9RUU9BWh9/
0n7EXP9TPa2QD+ybK3HYGbpnoruZ4wYq9Sr7PbEo4YejHrxPyv11IGeZhwrr
6Wvy8z9R/VwP3icV7af+qnjT/svG8bRkIo4Hv2W9WBfq0n1X/7KqWYPyXF5l
pfHfzTT+rZy3f9P53AtzBhhx/lR0Ty97ATWqq5PBZbwC/APNi5JiXsj9IziV
V7I8f+fZ3B49Nd3ncTe3h99bHGV+D1FP/D1Emy79WNSD9+A8RVzXwfqr6tF9
jHMmOdtU4nE5m6pDdqaN2c7QfjBCL0d2BuNhW6L5CZ2ciop5gX7B3zhpfq5e
ne4X9RT2jZ6r5HMhfxEH4LxkEdPfpvPYmZZ5abp3VMg575PTDVMwR/7tlU0r
Ner+PRm3v7LYX4NvEvnHIGc639ELmM93VBW6f5vS/FzO5z+HnguO/JBh1H48
F3nTF1CefHDk579F+fbBkYf/tuDIcz5L1AM/x820vtvULbp33S53Cpcn7sZ4
y0PrnadpvbPS+fsX1UWsX3Q/XC2g++HggXQPqp+5fj0vrdfbqX6004vi/G3p
PV/wxPNkOjnJ/JzgMp8beIH/+3XnT78r0bxt2M/+yRPPv83z6I/yiefNc3Lq
JPKggg8V+fTAB4h8ieB9E82H7OQ0SOQXBe8m8tH9P7XHUT2OnuuonY76JduD
PGK4h1LPc8t9/csBGlcpmc89vqppjVRenD8LPEWT5dWSzDrM+aHAcw+9vGJw
leOc/wjc/7+KD5XXKc7vA36wWYF6sffPcV4bcJ9aUe2eND7P+VzAU4emXp2m
3EVe1/l+a+PCS9vuC+T9DPj2zCWOeee/wvsZzg9EHPMZvAbVg3EJ7kLPxTjj
vFbUTqxP3H7qF9Yh8IskB7w/DJ6P5Ib3Xbm/JGe8nwne2KwvTeoL+sV9op8f
3j4K3XiY9Qt+5PDI+DzzD7B+wVdVLPWy46vjrF/wWXtt1YuOOMP6BV/z5OGZ
YXX8Wb98X3W385iIMxdZv+Ce9V6vuFDuGusXvHj7WS0mHrrN+gXvdG1B8tD9
waxf8Da7Kg7+4nmP9Ss59AveleqBfsFL0nOhX/Dd1E7oF/wi9Qv6Bd9AcoB+
weeT3KBf8HUkZ+gX3PmjSV+a1Bf0izjTr8qj1p4ofJz1C55KDZ9R/LQP6xf8
s1vmdBmynWH98r3v+TfLtFnrz/oF98o7uN6ygoGsX3DXHC7p/a7fZP2C59ia
PO7CbuO71ODbt79p9mNTCMuf81sQh/zB81I9kD94Vnou5A9+kNoJ+YMvpH5B
/uDfSA6QP3jSKiZ5alKekD/iYa0+DJ2WJ9KX5Q+erE/Jga/rH2X5g49JMtt9
+CgLyx+80eaCc/vkv8Ty53jb50KZgqbeZPmAX0+96dSCrs9YPuATQjw+f1xy
j+UDXoDqgXzAm9NzIR/wcdROyAe8vbm/muyv2f5E/d7X/JPl5wE/YX+i9GdT
5gVXPX5c2J8ovabbqjCfAQHC/kTpj8++fDnm11Vhf6L0XIu/T+04RM7rKL19
2QtfZ7X8JOZ1lN449eZiy5++EvM6Sq8VX3bv4PRPxLyO0gtR/eZ5HaW/pPaY
53WUXpvab57Xv9c3sxw0KQfzuLLpLmnvvGoWootxZdObeaVoe+zUSTGubHro
7WGBBZwviXFl01VozP2iY26JcWXTl2QrdaP8KCOvH3i/4zu3hncO53kNHrup
ZZFZmz/yvAaPLHlg/7jD343vNhH3ypQpvmuIC+fVAp92PYdby9bG99E4bkQc
dhu8pO+uR33vunC+IfBD+zfUfLzru5gXNj0++cePMUs/innx+7l/x7qcbxMu
5oVNT1Y8S6oBg6xiXtj0JiQ387yw6a9IzuZ5YdMzmfWlSX2Z9WvVRzesOXb+
D4vQr1Wv13Hq26NpTwn9WvXJfutWjwwMFPq16uWf9Y8OaBAk9GvV97YosOpj
n0dCv7/365ZLozbUfCn0a9XbdO37T9s20UK/Vr3Tq6J+49MZ+ePAv37aHR0x
xk3oy6o7f7Zzs76sem+qx6wvq3634LXXxytHC31Z9S/UTrO+rHqwf/n+Kxo8
Evqy6lVIDmZ9WfWZJDezvqz6eLP8NSl/6At+9P6tyfqv7e7P+gLfHnBl3MxZ
hr7AS91pne2fwZdZX+CWFX3OVLpv6Av84/Dk3W+0CRHfY3ByChybbeH44UlY
/uBz229Z7xKeieUPvoa4eX/l5HSH6oE8wb/RcyFP8IvUTsgTvAL1C/IE9zHL
hznkI8a/cjD+lYPxrxyMf+Vg/KsrNE7EOFfXaLyJca460/gU41b1IS7Gm3Iw
3pSD8aYcjDclxxviCg7sv2qeuP1XYYnbf+XA/qv4Yna7J+y/mkR2Uth/FUF2
Vdh/5Ul2WNhtdYrsv7CrqnHidlXZErerKnPidpXlIPwNtTZxf0OFJu5vqBqJ
+xvKgb+h4G+Y9ztRqhL5D+b9TpTSyN8w73eiVHPyT8z7nSjVtuTuFEn/TqKZ
9ztRKu9+l07HS+TQzPudKPUXcfN+J0r1onqEX6RaVsm0uW/jP/widWBehwLh
j/7wi9TZYSHDG7j+4RepAon7RepF4n6RcuAXKQd+EetL+NuqdeL+tnLgbysH
/rZy4G+rHOQnm+dFjBpFfrV5XsQof/LDzfPid/nHZb9fqG0TflGMenEsVcZd
+43zV/Dut0dFXS0Yq8x+UYzqQ9w8v2LUW6rHbK9i1CR6rtgvqCJ1v/V2L/nH
fkEtWVR3x47Jf+wXVP7E9wvKwX5BjU98v6A6JL5fUHK/gPN2pyqJ7mdV6sT3
s+pT4vtZ5WA/qxzsZ1W6xPezysF+VmE/C/2C73ALypDbI4z1Cz6yTUHXHe4v
WL/go4lDv5xPkeoR+2XlYL+sHOyXlYP9snKwX1YO9ssqNvH9skqW+H6Z9SXi
UZqDeJR2NPF4lOYgHqU5iEdpDuJRmoN4lLY98XiUVizxeJTWOfF4lOYgHqW1
SzwepTmIR2kO4lGag3iU5iAepa1PPB6lOYhHaQ7iUZqDeBTrS8STtfqJx5O1
OYnHkzUH8WQtV+LxZM2SeDxZO5B4PFlzEE/WUiUeT9Y8Eo8na9sSjydrDuLJ
WvXE48lamsTjydqRxOPJmoN4suYgnqzlTzyerDmIJ2uNEo8ns76Qn47j25+u
uI4vsVchPw74kzmZQvXCASoNnTeDDyzX/P7MrxcV8jVw+fW2VMXaXVDl6NwR
/N7Gq7erTfFXeD8WPE/fgZnnBu9XyIuHuOiYk9dmdRhxSCGPG3jeN41+9Z55
VCEfBPir8slPnnS9Se/3fmK+d+zMEoN/72uQdwC8UZ2jrxssDVB4Lxc837sa
2S4W9VHIx4c4Ydsntx5b/j6K94SZtz7/3bfFU1+8p808rHb9EsfzWHDPleOl
VQJ3HSqc8QHuATPfu7l4h9gBzxTyyIDfydV71bxiz9U/lG8F/GHJZOM2jnmB
vD/MU90KKVFk7X3kS2J+aVPJzm2TByHPFPPlKsKjuPcV5O1iHj/72Z5LcwMU
3k8GP7HO9a+8Q4/g/V6Oc+5sfbPDf7/9duTRA/dacrDwPx463m9nfqB0nddD
4i8gvwDHRT+s7KxuhF/HfWLmn+subDQv/IVCXiHwx5uWLso+KUIhzw74jGFD
dk7N8o3u8xn5FDe1b1U1cHks3efj+7z6lzPdY1pFRyO/EvNhaWMXZU8WhrxU
zDfsCE6SvKQV+byYb6k2ZXPhPreRH4355B8fOw/wC0S+OY6vZhzd37ffGn+V
xvRd8hj98I/Ly/pNOaaQ5xFxxf+ylH6ftIUf3m9n/lf7Vv3/KxiA/ALMNyyz
ZB679SryO3B81er5sVejAsF4L5H5/LQdr46Y+BjvhTKfdaBp+3Eno3E/nnlI
h4Y7al9z1pDPCHx660d7hx7NriHvD3jZX5Z3YRNyUF4q4z2qsUVsU3vWS6oh
7wz4oNo3nn1+/Qn5sIz3z/YWqXpzhg15xJgPjsjSN++5J8i/xvxY56b1vR4E
I58dx2lHrvyVd8Wya6oR5YkAn618j/gEBqjrlNcA3DO/U7qcFc8qvIcPfi/D
vfjymU8o5N9EnHBomXR+7YN9Fd7PB/805+rU/f7nFPJyIk7VqnRQoRwfzyDf
AfPFA79sVOUDFN7nB3/sW+TA/hy6Qh5PxGemTX+zrWPecwp5J8FHVitZa/7z
Cwp5FcFD/nEJjEpzU5nvXzo51e/drPSOo3EK973AI8IsSzOVcNHM90WcnOpR
eeSd4fjSwbxNQxp+UMjPAj7Eza+hbWCYQh4Tbs+vimlnrL6vkKcAfCr1C/lJ
EW95QnJAPk3w/pufDfNddZHzRYLHH4vJuiXVLc6HCO70xPuIZ0sjXxt4sdTL
kxUuE895ysC/7z4b1PO5i4b8QeC70o0PqvPvV77fCX7p/d5Xg9q/4fua4FNO
rXsbcu4p520Bb+Vd3rImOJjzjIC/uTi0T5dm1zhfA3gzGj/I04q4CsYb8oqC
Z2ne8vCukhc5bybzoz/2TMl3k/NCgq95nnL+rJb3Oe8h+L/zF1WY0iWM89mB
l2i0pG3eA7Gcxw28eI6ZKbtsT62VpvfzwdPN3NA+qkQurQLl/wK/3Hvet9Np
82nInwX+3sMl/YI36TTkaQJf+6j0SNcjkZznCLx1ZMvjQyzPOR8Q+P7rBbss
innA+XHAW+YJdPrqeZvzuYC7/Rzw9UabQHWM8o+AWxfMXVAwwML5MsAHkB1A
nlzEQ0LIbiCPBjjsPPLnYn99jNYF5HsFX9Hv0tJ/153mvBvgWJeRbxf7uFO0
jiM/LPieOfPfTehxkvOfgtfbViRbkxTnOM8geEryN5A3Cjx0aU+vWymDOb8S
f68jdnaOAnWucx4QcPhXyP+L/Uh+8seQrxZ8XLWblvs/jyrkYwU/fN66vdZb
X3WX8o2C339ZzOtyeR1+I/MX5Df2oPyA4AFzPvlpcUGK8sExzxhXwf/DhLuq
DuWbA4/Se10elfueQl4w8MxBgc+uFL+hkD8L/OyEgQ+bzLpM62ws80x1itXP
MipAIY8S+ON/x6Sp9nv+Ik8K+Ajyk5EfGX5+XvKrkc+X8wO5X9899JqPQr5a
8J+LvRdbWxxTyMcK3mCfR/Li83wV8o2CHxzvUbzu+LPw/5k/Jf+f8tMxf/Yt
rGnI80tqJ93DBr9eskcGbc9lhTx94Ljng/x34OkqRJU/X+gy9ilG/n7apyAf
GXjFq1WL5PewKOTtAr8wMdfnL6nOKOSlAt/Y93z/6R1PKORR4u+iFNtXc/WQ
Iwr5aHh/SvsmT/O80AtPyew18PN9hfeowXeWvVK2XNKn6ju9nwzeJW/1qiVW
h6uT9H4guA/tC/B+PvzDf5dnOJa+t1XhfXXwgeSv4j1t8I85L34O6/5GedF7
euDXXS9WrjPjpUIeGfav2m9ol/LGE4V8LuC5ye+aS3lDwJu8S3XxkDUa+fL4
XHgd2eGv5nVBz0vrAvK/wJ8Ze/LI2YzXkmvI/wL+ltZZ5GcBD1q3q9ephzk1
5GEBf0YceVjAw+h9javm8uojlUf+FHCXPfbnIn8K7LkHtX+EWT6qMMlnrdl/
VjVIPngvF3wz+clDzP6tKkv1jDX7t6oa6eWJWe8K+xRf875JnSP9epnHgxr9
alSm5lveqD3m/ZQKov1UB/N+Sq1LP71cWctXfk8YfBbts/AeLPhTqgfvwYL/
pHHoYx6H6gvt7x6a919qDPWrN91XBo8rrs06e/8xv4cJvpjmxTzzvFP7ad4F
mvfdahvNL7zPDH6L9t14n5nzNNM81c3zVO2hevAeL/gRei7ed+X3zygOsMK8
f1elyW4gHzHiElhHJpnXL0ts2e0fY1rcVMjPC77s0qi7BxcEqYHmdc1ybfcW
p5+udxTlG2V+ef706v2T3lUHzOudZf/N7m2Stb+rkAcWPJLWu1mu9nyssFcP
KC6B+8fg97JkWes10XifAfxD3WlBoYee8nsL4Ek2bll11Raumpj1ot8lvSB/
AezYOtrXi3i7jng78ragvHXR/BHXp9yW50H6PDo3EedBei46Z+E8JsSzNffs
/enyQ3lOpI+m8xrIAXxI0wfeeWPD5fmRjvMjyAd8xLxt3R97vWf5sP0/n+Fu
y3lf5LmS3ivxcyUd50rIXwa7faBNqX8/PP3j3FM/TueD4txT30HnieLcU69P
54/oL/i5kzc6Dev5QZ6H6m3oHBP9BQ/oFxJVOGucQh4KcDeKG4hzUr1q4uek
eg+q3yw3m14yVw0/y5bMGvIRgJei/QjyEYBXo7wEH832Xy9F9r+6ed+hb6P1
DvnpwFvRPgLv14EfoH0H3pcDxz4FedzA+y98Wz7g93h4Yd5P6Tmp/eb+WnVL
ki5jdifNoeE9H/BbxJEXD7w17TeRtw4c+9OtlLcO/PD2NTNUo3DKw/iFOfa5
yCsH7jtnSMjdxx+Rb5f5Ttovu5v33Xo22nfbd//It4L/CmnmvB5OTio04vTH
Bvk15E1DPbHkP9SivGng08jfQH4N1OMcbo9vIH8ZygdS+w+b9/V6EPWXvhPA
3Jfkc9q839fnkzyRfwrP7UvxEOQ/Ai9C8ZOaIj5TheItJUV85gnFZ1qa/Ss1
kPprzpvj5JSH5GZ+j86QcylRviCVN79fZ5QvLeJCbamd+URcSKN+FRNxodEk
h/PmcahGkdxOm8eb8iP5m8/frWrvp4tlPm7NJ+eF8qfxb7afVnUI5c333xTu
v4l5pG5TPcg/Al6Fxu1S8/hR92j8rDWPE2WhcVLH7D+rpWRP7prtlapO813c
n1Q/6d4m8uWBTyW7IeyzOkv2WdhhdZ7sMOQGvjt5zLbBJdJqeA8N/DaVx/tF
4Fep/i1me65ykj03yzNGzaF1DfWDj6d1EPWDj6L1dIo53qtO0bqG99JRPg+t
14XN/oPaQP7DrLQmf0bBn0E7wZOSf4J28r0F8mfQTq6H/J+35vMC9Yz8kHfm
/aCqpv7uXnVFuBpmPg9SN8j/CTT7Yxx/WEj568EPkf/WkfLCg98mP3Cw+RxN
cy5n9yfFfQZ9LN1nsM9Ofz/wbBM9ciVdZMgH66+e+DjRHYwT/QqNE7Pebfq3
G+Mefu+YVDPr/f/kualcNm2Xz+y3wG64p168yLfnK2V+L87J6cRIj4ddF3/i
cQ7+nOwk+iXtmPk9NCenc1QPznO5JD1X3MtVuJcr7seqrnQvV9yPVQ7ux6qj
dO/X7E/a1EqSg9lvtKkPJDfz/PptN8j/EferVYrN9nvg4n61Gkb3xsX9arWG
7pmL8aCy0HgQ92R03IcR96P0buSvintxenb4dWb7ox+PKxQU9ldaTchBX5W4
HPT3ictBhxzM/rxVr7/DJbbOf++EnK36sn+fDWp185uo36rfLLP3zoyGqTTz
uLXqIcRRP8ZJKVrvzO/5OzlVpvUU9YB/ofFZXqynTWg9hX0Dr0b1i3YqB+1U
aKd5flnVZuqv2X5aVWuSj/CrVSmSp5i/ysH8VZi/wm6om6RfEcfQ31N8QMQr
9FsUZwihc3Y+p6sVsfNLi4/qKu33wTOkubCoe7bvypwfxJjv5jwgBv+LvlMC
OfyIfNjtSp8C2st09rgl+IWD1V49OZBfQx4Q8INf+0XOf5dJ86H9NeSwr5//
8z3/ZdXmm+NC+s6O33d7Pc9G360x8on63HN9+u9/rpqN8heAv6JzWH+KS4Dn
of42N5+z6D9m2M9Ztpvbo5+k9iB/H3gGOpdZSusLeCCVR94NjP811N805npU
Pqpnq7kedYrqSbXKdL6s7lC/zpv1qHJRv66az53VFJJbb1o3wfeT3GLMclNP
qf5TZrmpklT/UnOcU82hc/BrFM9hf4PG21oRB3tF41PEXdV3Gs8j6Ls7kNsp
Gj8l0pvGlX6OeEEH47agg3FrzvfxP8qb8n0YvLi5PUqn58LOoz3dFtxpciGw
gOSqK/FoN9P5nX6Lzu9y0bkJ+N7Hpw/kq11Aq0L5JXlcUfkd5OeA76byGc3+
tl6E/G0v8zms7kP7SuStRj2jyR+uaz4f1DvTvlvYPb0N2T3kkQGPrrL+4M1+
ecT7UFZ9H+0jllF+GXCnqvbyPub9r9pA7WxqjgOoxtQesR4prEfbXUzyVPtI
Ps6mey82lbT5sJy9l+YX+4UYHfeKhb+tTyR/G/rFOMc4EfdjddyPHU55S3nd
r+1dq9rwMOk/6ynIfxb+vw7/X8wj/TXNIxFn1kMQZzafC+vn5kbGbglIp30w
22Hdk+ySeO9J4b2nD2Y7prYnWt6mctD7axbK6wq+gZ4r4nUK8ToR31MjSc7i
XpN6mPi9JrWR4vAiXqqcSZ7D6F4N30Mm+ZvnaYzu3/j6tsl6nNQv5yVoYHqu
VT/2bkm+0rlzs90ADyD+2Hwuo3D+ctc8X1QYzRdRvzpK9Rw2zxcVSeXFc9V5
Kj/ebDeUP9mNoma7obxgN8zvJyq8nziGxi3G+Ri6jyTkpiC3+qb94+/1tJl9
fgmuwMV81JPRfBR+lw6/S8QldB+yJx4i/lOD/EDhx6oGZK/E+Ys+hc59Mpnk
GaN7Jn6+o28gLs4T1RCqR7wHqqaTPKeY730pn7/3atVf5GA5gH97+TlT9gX5
qV/ePN7iyb867Gbyu/RfxP3N5VUccbO+bHqfMT5Fim75g6vexM3545ycSpMf
btajVb/r8z3jlLLSrlr1B8RFeRWceHmF8jnpPqe0qxdze1Zv4+epy/k4LHZQ
rXTF7/yxXhP/Y31vmsdUD9df62uFjVU67/x//dw+dq7+/24PvjeMe8I4f8f3
dME30Xk9vhfLeTnofB/fQwWvTPcB6F4Bcze6V1Cf/B+ZbwTfCwTHvQV8hw88
lO454Ptn4AfovgS+EwbekO5X4DtY4LiPge828XeY6f4Gvh+M87gndD+E7pMw
z0j3SfD9V3DcP9lojhdZcL+lhzleZDlP92HoXg1z3KvB97rAfegeDr4vBY57
O/heL/yBknQvCN+jBX9K94jems9h9eoUH5tnPm/Vcc6L74SB4/4SvmvF54N0
34nOl3lfGUvny17CfuLcHN/BAsf9K7oPxuc+uA+G722AZ6T7Y8gPBY57dPj+
Bzju3eG7ZeDZ6Z4evrMFjnt9+D4H7NVbujeIfL5sVx/b7z3i+2fg3+meJL7X
BT6A7lVWpjx3mOm4t1lKnGvgnie+EwxeieIV5vxTTk7lyA4j7x447p3ie2zg
j+j+Kr4fBj6C7rtuNJ9bqVMUb19pPp9Slyk+39B8TqT+pnMTfIcMHPdynczn
dAr7C7o/zPf9cH+Y7hszn0X3jfG9bfDhdD95uvncVh2m+8wTzPd21CC6/4zv
+YE/pPve+P4c3z+h++H4Xho47pPj++hY93FfHd//Bsf99gjzObvCffhX5vtL
aj3dn8f3BcFx/x/fwwM/SO8L4Ptt4Pvo/QJ8d5y/60jvL+C72uB43wHfkwbH
+xH43h443uPA9+HA8d4Hvs+N+DneK6H3UJh70Xso++g7r+BX6d4FvpMKvoLu
b+D7c+B4/4Xer+F7dHi/ht7T4fts/eg9nVqUDxT2KoLed8B3O7C+96T79jPM
/rDePOWERuvzJ9UOm/c7Ou7f4vtYHAfDPStz/Qr3+XuZ7/+rflT/efP9/9/7
F3v5Mub2q8/Ufnfzexwqjvh5F9P9TL6vktV8n1nf3y2o5j8Nf9tV831mfczJ
jHnGtA1TXub74frCfztrNfMY31tCfzcSx/dUYAcy0/2B5GY7r6ZT/enMdl6d
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
    "], {{
      {EdgeForm[None], GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJxFnHccjtX//+/7uu/7mi0NRUM00CTtvQgV2aMokmhICpVKKi2phAolbauI
trRoSntpkRIa2nv9Xs/P6/we3z/O4/26z32u6zrXuc55n/c8Dfue1XFQVCqV
eiSlUkX0xXKpxO+6KsfGpdKbovNEb89Kpdn674i8VLpYeKZwW9V/psYPqtyv
3x30e5XaLxB9vVYqrRX+qFoq3Zn5/0Z6Rj89pKnaz9XvF0QfiHyvBWr/jNov
VvtL1f523WN8USr9JpqqzVTRR9TmTrV5SG0u0++puu5g0cvpn/ChovO4p/A7
ajdS95kl3EL0bJVL6Y/otnqHKcI/qj/3q/0MtVmo33N1/9mij+v+r6v+WJXH
9d/6at+S++raIfr/TtWdLVqo/gjeXfXtRZ9Q/Y4qvdSPjUV/0n0eZXzKHos/
1e5x/f5WdLrovaqfrvr2GpOqft+n3x+KfiV6j8oalbtVRqrNXerbeNHZuufd
kesn6Pc9kdtOFG4d+34b6b0+yXz/3UQj9fNetVsu3EF0geobq1yu39N0zQSN
c3PhGbq2lJZKv6juP/1/s+iFqr9F9CK1+Vn0X9XfxLdRnz/SvSoqu2fuy9d6
7gz182rhe9XPizL36xvVz1T9NcL3qb6Dfk/XfY7SfaapbozKtSpvq81y0ffU
5kDdv1nk+fSO6leIvq/6ndW/34XXib6r+s+EP1D9dOGrGA/hacIjhG8Tfkb4
EeGnha/IPD7/6fn3qf5K4btVP1b9uIu5LdpXY/WDnltH9Dy1n6w2P6j9nsLH
6P87NQ6H6b+t1b9GomNVP0dtqurP9cJzhWvC2+i/B4Qrwh3VdjOVmu47QfdY
p2ddLdpH922j+hNFr9XvH1U/Bqryg/A1or+EOXAJ801t1+keg5k76v8VzAv1
/6wwB0bp9/dl19PvlWr/B9eLvqH2yxhjtT9Y/XxS9QeJtigb76nyg35/KtpP
9Bq1P13tx6t9Z73LbrrHzqKXqL6X6q9W/Vt67jvME5Ufdc0K0f6ibzNHVLqp
XW+VKWVf83HmdbpIY9Ja92uhMq3sZ95W9vM+Fr1V5TThnTJf+4ja/5R5PQwS
fTfys1j/e+gek0SPV/uzNI6D9XuQ6M+Z19Fg0ZtrXkPT1OdTmc+qn6973qi2
H+he3+j3hRrrM9RmX9FT1OZM+J7aTNZ/n6ucUHIf6SvteDZ9oN1AtR8s+rDa
v806U30P+pP5mzyn+vdUvza0fyY33/pO9IzMfaOP3P/LMA6MwaowDkepn1/z
7sKnq/3F3EP3nCv8tOoPzzxH1oR5cmZm+qza7K9nLFT9IZm/4R1l97Wnft8I
n1GbmcIPC+8r+nxm/vai6huUXb8ta0PXPiW6NzxFfb8W/q8+D2WeMp9VdlX9
GNE2qj9E7R8RbqjSBb6hZ67W+C/QOMxX3T/MVT3rMeH9RUeo/cEqj/LO+n6n
CQ9MzHdpDz9dGpnfzmO+6p4tGWPGMTOP/Ul9fiL8/7f+O17144XvVf0usfvY
Wn1rJnyd8DHC2wtfwt4h3ER4tPCRwjvr+SfrXn1VdlD9KNUfpvrGwpcxHsI7
Cl/K+AufBT8t+79Gqh/B3qT67YRHMv7CTYWvEG4p3Fz4euFjhftFxlyzh+qP
VN/PEO2h/o9j/ar/r5aNj9B/u+u/scJH69qdhK8UbkWfha+Crwq/pfKp2r6r
MT8JHqOyh55zsmgT1h5YbfbgWWpzgup2j8xb+6m+BfNI9Z8K/yL8OfxTuKPw
pcJXCncSvkz4Yj33fT13KGtH9XuqfpDq+wjvLnya8InCuwoPEB5c83ucD+8S
Plz4POFBwocJDxfuL7wX35f+C+/GOhO+Sriz8OXCvXhn4f7CvYV3ET5V+Ezh
Q4WHCZ+nPi1T34aLfhL4Unf2FL3rHZF5wcjYPOQA+K7KW+zvjGvsdXcF76e2
d0bmX8cm5gsHMt6xedhhosNU3hM+l7rIc6+VntWs4rXGfD1f/00U3od5pH4e
g5yCzCN8tPDFwqOE2wpfJPxc4v4yB5YHXgtvuYA1Ft5xRHhfxm1t4IvwmQGq
31f0bNUPFN5PeAj7r3B95A54u/A2wl2Ej2dOC58s3EW4gXA34W7CDVlPwj1Y
M8InCncV3la4h3BH4S2FOwh3Et5auJOwul/aquT/9qyYlzJ2TTPz2gu0n45V
/cqyv0GvzHzuQ3hC7O+zv2h31pLqe1W9js6GF6lubuI53E3tX1ZdY+FNVNZX
aVRyv9ur3RaiR1e99s9n71NdT5UdVN+n6vV4QVizJ9R8n1NUf5rw/sLnCJ8u
fIDwucL3J57bHdjTIq/hC8tem+cxN9T2pbLl6c3Urp1+by7apmo+OYz3qpkv
nSu8X1i/58CHw7oewjwRPk6lnq49tmreO5y5WjPfhf9yr4/Vn9Fq84LmySeJ
ZQB4+OSaZdabde3+Gud6kWX6HsIrhLdX2UbtvlDdZ6ILY8vq7UU31O83kMdE
/9bvumo7S3Sprt0RGV70Fd3/FbV5hbWpup1V3tfvJapfAmXPrflb9Aprc+ew
Ts/gPcP6vV34AvY94U+Ef0Z+Ef5Lz9sMHUGUydQImVz4VbV5VVWvqs1Q4X3C
PN8o9fu9L/qi6hczDqpfJvyt8KfCHwqvE17Ot1C7st73V9GPVf8T46D6WHU/
CP+oskvq/eRH0Y9qrluhNq+oH3urPy+Lbpv6/l+KXhdk/q+Yi/r9AfNZ9HLV
b6uySL+vFN1J5T1kKdFdIrd7Vvd/lP0dHUd1DVSe0+8bRPdDVhG+XnRfla+Z
i2q/t+hg1qDmYjPhBzROnYWbC88RvkFtThK+Vm0mCg8QHif8RuK5gXw1QfWn
8hzVny98sPBQ4evgWSV/m/Gq78/zqa9ZtrtG+HrhE4XHCI8T7iM8VniK8DnC
twhPFR4mPEX4NuQG4cnCtwqfKzxJeHWQA5GvWIMbsxfBDzW+XyDbsN/Glo0O
Et2E+Vf2uod31VH7vlWv642ETwq8SK9X6hj4ldhNqXvgbxKNSl0DD9RwlToL
962ZX3UKfG894Z7CL+feEx/UmHXNzHPgPU/n5k9f5r4OfpeG9Y4e3TrsU3XD
2od/bijcu2qetgHvWvX6gGfxG17KdD8u8Ooa96uaj6Gjt62aJ4iUjqmab64M
MvAA9e0s0YdS71mfBblxRWy9r3dsWRG9Ap2tUIePU7uVqj9T13RVfax7nCt8
gnCOrqBygtochLyq+s6qr6nua2Qa4TL7WNB/d1D5hnUtGomuqVmO/Fv9/FJt
FkaW+T6OLev1FN1X91xPeLHuv49wEWTRk9ATuI9w26CLb69yiwZhgn63QZeG
n6iuAp9UuxeEHxe9LjVf3Fp4+9Rrdq3odirfC68R3Zw1L/yx6AGZ+4+O30rl
WeF5ot3136HC/9IX/X5O+CHRLVLLV5+I7hfkZ+ToWSoHqV+J3mWU/jtN9Zsg
jwsPQI4Vvkp4sPAW6A2Fdaqr1L656uur/k/WY+r9pJHa9BA+XPg/0WYqVeE/
RI9ErhX+C/4dWz7vI7pWz38qsm6Qa6wSlUP1O9O3biW6TG26iD7DONNG9Ufp
90eq/5x9SnW/6Xt9wZ4u/LvwSuYwfFL4sCBjb6Tyvq55SLSr6OFBVq+jslD9
7s3epL49zbcUPk94Y7XrL7yb7veM6vsIn8/3Vx+Oh6fp/wpjU3Y/ukX+Fvup
rI09/qeI3qT6TpH1kVXoDvBc0f6JZdl+oj/WrN+mot8jczO3RVcj8zBuepfv
hJsxn5G/gs6DXnx8Yr3pRGRC5GThRPRLZBu+ka5dBa/gW4Q9KxNeV/W+wf5R
4xrdZ3/17Y3Ye0fC+qha1mae/1byvpMKf6v6VO0P1H9vxZa9c9V/p/rlNbf/
Xril+rkba0r07MK6+hjscsLPC08RzvTfS7r3W6J56j367WCXqK/xOU7098S2
kTfSYP+Bj2S2kxTwDtHf1OYhtXk9ta1jE9U3DLaRf5BvRN9PvD88qTbv6PdY
tampzReJ7XWvqf7zxDaepantRdimsFFhI4rU/lPqeHf2BfRl4fOEFwifq/9+
V3sY9n2Z99x1ovcl3qemqM34xLLEROEtNA6bITeoTZPC+swwXdu0sH4yXHiX
wjLxBdg2Cst2FwrvXlgPuUh418Ly3wjhnQvL0+cL71RYPzlP+An4p547jT6o
nBrW7OTEe/FNqluceK+cLrwk8R56P98Ee6jwbOFpiffxW4QXJNaz7hB+KLEu
cJvwPkHPRd+9F32eeSK6u/77rhR4gvrUTd+3pej2Kg2EDxc9p7BN9g6+nfCZ
8ABde77wSNVfqfrTdf0hgbcP593VphM2z8K2xWbCQ3l34TbsEYyt8FHwN+EX
dJ9b4XvC92IjwOYqPB19W/hq4dfUZpraXCW8VPh24UF67mFh37lc9YtVP1n1
lwkvEp4kfGLqtcxe0C01z4cn91TZNfDGMfpvY43Jl6KTMstOq0Xr6b+XA6+u
i1wYeH4j5LmwF9yVWR77mr099dqFD++APB32jqf034mqHy68d2Y781eiR6Tm
VfDhc1SOCvvmlcLHBz4/NjWvYz+6VLhL2BdGCncK+8JtKtvB1/S+O6g00rdr
LNpKbeqF9d4ks32oD2sx9nzbHf0mtg1iT2S9zHajq2vWdz8q2xbHb+pvrFoH
/RC+rd/tNcfeFT4HvUptjkLeq1pHpr6nfk8Q/UCldcnzBXvYVVXPI+RMbAiP
YT9Sm2MzzxFsipna/ot8IFwf2Vb/LRY+WvQ10aVl68Xoym+UrS+fFtmewHPR
m18LbXqGvWD/su0+1A0SHRBZZ+faG3TfpchRfC897wXhl5BLeR5Y9E9dsyl2
f9GFavN80BGernluvCwc6fr7hbfW+N+oa16nHh2z5jnzjtq8JPxhyTZV9HJs
oejmQ2Lr7C1ijz/2UH4zP/FL1Ek9P98V3jj1e78e+j8FmxjXae5PFn4Ee4Hw
czW/F/rOg5n37iMyyyiMSUtsgGpzC7ylajvft2Xb+u5U/Y2is1R/DmtM+Hk9
d4jm16Yqp2sszlD5ruz/sM1iE0WOHBXaYEceonmyhfARojfGtu3fENv2jK11
lH6fnFl+fzC1nPlz2fbNIaq/THRxalv7T2XbMe9Q38aJzlTfFkfm87+qXB/7
fhvoWW+qvnuQV+6BH6DjMPci27vRe7GNYSPDdrYkYGxM8DD48OnoHZHlw3bw
C93nWNEta+Zh+G0+jy070qZ95nssCfdEtwJ3CHYG9I4mJdvHWY/oI600NhtX
rPefGrkdtgj0f+wA6ABnBPve6ej6of/Y6rE3vBzuyT36R76mq/By4Q1Ubs3s
79hKY7ij5uWvwk2Fh6Jo4BMQ+TX2fjpFdLbe7W7VPaw+fp943Iazf+qef5ft
6+os3Cn4JvDT8E2f071XozcKnw+fj+wPuke/y8FvdZ/wo7r/YyXrqn8lftYl
an8esibyOnwksiyxgHuJ5ugJwh2QQSr2H82r2W+yQPeZL/wgsoTwQ8LzhBdW
ve+jg6OLz+Db6P0ma138XTO/rSv6l0or4c1Ef1E5SHhD0T9VWgpvil6VWI9+
TddnsfnzDshfwj2Ftxf+Ff1XeCPR32reE+uIrp9YD/oWO2dqmZR5cmTFfA8e
93QU+Bt7ldp1EN0GvU24o3CDmvdx7N/TRXupfWeVtvqvGnsv2FZtZqncVbKv
82Hh+cJPsa5j+0uPRk5Wf3bFnhB7P1rDehI9St+vp/rUSvQe+AN2tMJ73Fq1
aaC+76v/60T2ud6t+qfV5ma16ZLYz9su9n60Evkt8370OfwwteyB3LqT8Gu5
bcb45W7GvhfZtnyTcO9gc+6me87RPTvqnotVt77qpmNf17Vl0bqib9Ysw2CT
+Sk2D4C3LKrY3zVf9LrAa46M7R9jfl6osmtmHoANbFlkvgf/ww9ImxnBvnQ9
Y46dObKv7X98BxlEdH7Vdg7sHWN5z9i2Nexy8Cp4FjwUP+Nt8Leq/ZbTSr4e
Pge/w0fbTn39NjLP/KtsvgpfxtfHemcd4n+8VXRu1T7TqcLzqvbr4ZueI3yi
3mug8Ot6r8ZhT2dvxy+G/3mn3DytT2Re9mbZe2GrsH+zj2PHnhrZj3FxOehc
8JPMdfg4Bpatp/YNGBv2wMjX01/4LPbEO6se55PUnw1z62Yd9N3Xj63fNeWd
VHdS5LWwQWyZZyfVP5vZPnFf0Guxl+Lv2Dvx/nOH7n1l1W3wI8Dr4fnop7to
3E6JfA08Ed4IyztI1x4i8A5yEDwz6IEvqG8nqK4rMm9sm9knQec6IOhdb8e2
OZyieyyNbUv7uGr99cjI/iZ0XPxN6Lnogh2F9wp9pz/4bH5iPYvm7Cep/V0v
5uZR2Oh+Vl0c9O+/9IyzKrZbnRp0ZXRmeAHPQq+Gxw0M78K79cbeRJ+xFeXW
24/TPZ9kTNnH1ecnauavi6qWwZEr3hD+PPMav1p0duDDT5as14FHB51vvcjx
D7Mi23jhz8jgyDyvVX3t5oGHP17z/8+pfkVmfn4Zelxk2Rt+grw/J/DzOZF1
RmyeldzPwkCGXI88trRqXQFf+VGJbRe8L2O6UW5esV1uvRbZ6fWq5R1kQfgv
uEdkmXAy4xV4KXEn8Dpss//UzI/riX6Qmd8+IvpG5PFkjk0RPTFyu76p7Qq0
OSa3neHhzPoU+3CH3Lyb7/aB7rkktq23bmK+An+5SL+/ih1ngQFvQcXXzqh4
D+kV+vlN7Dl1AnKO8B9qvnniuYHvE1vKB6r/T/VrquaXw1W+hPcl9g1PUP2E
inn+6iA/IIvwaHzcrYOfHRmvbcX8qEWoR8bDPnRmmKPY1gYR26A2b+k9V+nZ
J2od1VXduSp/qv57tRtKPyLv4eCZus+ZiZ9zVbDNMtc3LTnOgefCN2ZnnteZ
7t0j2ACxBS7KzAf+zsxz4JXwmn6pvw86Rcug2xKDtENkzDgQR9Ql7Cv4NPBt
sIfxf/fQ5uPIsg5yztTMfg/2HWQrZCzihJBz2wVZF/4NJlaD+IhDK9ZnDqvY
t806PzQzX8DHPiKxj5zveFhmW9x+uddvS9UP0DsurzgG6RPRWyuWhz8L8vWQ
8CzWPesfGxB4QOBpazWHttP//wQ76tGRf+8H/0Ue0LMOTM2r8tx2X+y/+CuZ
L33COLwW2ZaKHfVDjMyia6v21beO/F4v6fq+8HR994NSz8H1iFlIzReJb8JW
2i6y3Pxf1Xbfk0M9sVD8PpV9C54T23Z7bHju50HexhaNvNA3+KPb5uaRP+g5
TSv2VVOPTa9Xxbwa2yq4uWhrtf9T7buH+YCPGzljj4B5X+LTjg/+qjSMJ2N7
QZBP6B/xZsirozLvEdgP2Rv2yuwLI36NmLV+YX0h54Dnhu/F3rNB2fO6f8AD
Ag8/MPTlpNC3VyPjPYKM1Cf0ARmc+UlcFDFXbHAjsDHULNc/qjFul3pdwovg
STdH5lNv6/2/ZA8szNsmB95SL/C9dfpv/9T9mhPm5k3hWuypt7AvinZKza/g
W9iJx6tsWraM97zqqoXHfUxkPnVhxXESyBerqt67XoqtUyGPfB87rgNbPf1e
hOwj3KZsefnWICe8mzk+hPiN+sFW8F3wV0yM3KctIsfqsU+hu8yMrL/gzxwV
2edXJ/H+1ib2/jY7+r99EYrvcvNQT7sNE/tAkCdZ78TI3Vzy2N8XedwXh72B
ccTGgF8f+Yp5ck1k2XfPxHGMG4s+VrVuRFzdIXqfTZDLcsfkTS9ZL/tf3F/k
duyfs8KeuyyzzYN4Ffzf+G2IU6L9sMjXY6OaH9lvuGliio1gbWL5lDnzdXiv
yfDhxP7D+9gHE78T+/VeieM2Xw96NzL2TSXr1cinE2PH3z0cOQYPv+WcsI+z
fwyJLNNulth3PEftd6/6no+HPeG4sEfAz9F1uS/jf0n4LhdVLNvhP98ncdsj
E/uQH4rsR34/M4/6BZtw5n0Qmerlisf8tsALxkXmg/gibow87ujxyMfMRWRe
MLr/E1Xbdu5mTGL7uO+PHXuK/HJXbDloZPguyFLIVMep/t/E3w3ZaU1iHeKC
zDLOxWF8/k6sK48K8hey0TNBVkNmuye2rkAcJ/oCMX13Rd4bsHsRl8I8+Cbz
WHyBLSv+v2/+TOyxebNq/Q7f8arU85F5iW72VrAPEyf5XGzf8ltVy7+0gb99
HWyen2Ojjv0d+Z7w46aB9/YLFL6HHIttf6/Icg/yz5fsHZFt8uifjSt+Lrri
C7HXR1X3XFHz3vRD1Ty8efheD4Tx5ztg294nstw2I7IdY0aYxxPCem0fbAbI
G18lHj9iXPFD4I/AvnF/zeP/iJ51ecX1yJed1T6JHN/7WM32iWer5r3Uz2J+
ViwrICcQ41kNz7o1dl9aiV5WsTxEP7YIMgXXzo7NV+BDHXPPdWIn1qtYZmJ+
T6x4D4D/9wn7APvU25nX23e0r1m2HRj0XeI7scsQu8wcIX6ya+I9j1hrbOqM
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
          "]], Polygon3DBox[CompressedData["
1:eJw1nHngFdP/xufeOzN3Zq59S4gWrV9bUvZSVIqKdiEVWUqFqGQrabcrIUrI
vhNFlkLIlsjSolKRSot993tenvn9cT6f855z5szcWd7L837eU6PPoI4Di0EQ
DIuCINT/R+MgeEn/r9HGP9WvlgZB70IQ9FG7MQmCdpq0Z+C5p2ifB7MgSDS2
WRtOrQTBSfpfRWMltQ4af1jjmca3ansnjb8quZfkBhobKHlPrX+65DPUxmn9
XSR3Ur+z2gjJj2rO8HIQHKcFT5Z8mtbZT2trc9BVa7yi9Xpobm31B2jjHI2X
de4Pa9vT2vaIfsMbmnu1tv2hfm+t0Vhjm9S/QfNP1/zqGt9OrZvmnyW5lvo7
qp0m+UzJNdXfQa275G6S91Vfhw26SN5V59tF63VVG6m1p2pgJx3rfq1/tdZ/
SHKqsS3ar6PkVL/lVo3/q/2/0Jyztb22+jurna71Zmn+oZqfqH+u5nfQeFWN
SQxO1Z852udD9Udz07RWPc3/QtfmevUf1vwPdD7Xsb7m3S75U8lPa73Pte+d
kmto3kKNj9M+l6n/kcbHSi6oP0XjiySPk1yUfIfkJZJvlBxJvktyqP8TJTdU
W6Bj3CV5H51KH63/pc7la81/RGOPaFtD9WdrW0sdf3eN99P+mba1lnyi2qW6
XnM03kr9PTTeX+OrNf4w90/7j1H/Qo3fyLlo/E3NX6xtEzT+q8YfVP9LncOu
BV9Tru0KbXtA/UkaP1j9J3X9LpG8RXNmao2WWmMvnlf1Ux3vQ835WnM/kDxO
ck+tV0fj7bXPqtjXkevJM/Si+rGOcZPkjewj+R+1UZLnS56l/r1lPy/nab2l
OvfTdLyDtN5vkjOt31tzXpV8vK7/FZp7s+TJmj9Ia/wY+z5wPz7Ttldj3wfu
x+eSX5dckjxe8heS50uuoWPso7WeknyDfsu/+r3tNP6R2gYds43kPTTG49Je
8vPav4n6l6q/XPt+pX1mFn0OV6n/t9YcKbmq2pPqr9baozQ2Uv83qRU1p5HO
/zC1Xvpt92vbjupP1f9tam/qeFdq38e07WUdo4eOcZe2b1Hrp/7fOv7lGv9N
a9+m67FK2y+SPEL/N6otUvtDx7tc/zeoPaZ5L0seoTl/qd9Ta1yq7Xuo7aN+
TZ3PeTrW+WqTdD6Z1r+NHyt5qea/pfO5SvLOanN1PnO1T0eNVVf/Qh1/luYf
rumXSV6hsRlad4rka/V/s9oL2nas5u+k8fM1v7/W/EDyh2oXqn95Yv24g/o3
8b5rvQba/0LNX6Z9hyXWd9tr/EbeR217UOfyhM5rhuRY599c4y3UBqA/Yj/7
QzTnF/XfT/188ZxN1vyB+v+R5i5SG6T+i1qvqfo763gXaLyv1q2j/XdRO0Pb
Iu3fTOPHcb5avy86XP1/NTZE84/X+e6p31lV7QT1/1EbruP9rrUnafxUrbeX
1pIYdNQ+X6nTVuMfqtXW3C4ar6YxHSborPHz1Fmt9a/SvG90bos0p6fGbtTY
t5JHo8M1XkXje2n9d/X/O40frvUWcq81vyn3n2Np/pOaf57km3ScNZLfSa3/
3tD4KO3/k/a5VPvO1LYnItsQbElVbd+74t/B7+EZeknju2t8qfrvqH9yxXoa
fc0zy7P7q+Rh6s/RnNmRn1OeV2ziHMkLNOdN9WsUrQ+e0nrnS75Z29dyvjr/
QyT309hQrT9T/3cp+hnkWeR53oP3A50i+Wntf4Hm36L+Ou2/WPv3Yj0d6zvJ
L2t8mOShaks09mXZ12OSxjdp/CWND5F8l/bfIPkpjTeUPIDfoeN/Lvlcybdp
/kaNfyi5s+RxkY/3uPY/R/LZau9q7InE8/uqvS95juTL1L8z9PnMlTyc+4P9
0viLkgerPyX0/Z0t+VLJd0heL/kTzenN74t8fkvLvl6TJX8v+TXNv0rytNDy
xxo/i/sdef9XNH6F5LtDn/+rkq+UfE/o37+D5A/QhZp/kn5vIvltya9Jbiv5
MT0vL+h56KbrMYH3U/tN1Ph0fB3NmSl5POupPYyNTKwPLgqtvx/Q/3EcX+0h
jd+t8Wboi9Dv99TEz+ux7K9zv1/bx6o/Ffuk+Xck1reNOabG39b5DNa9vwuf
S/131T5S/03Nva7i+9EB30ptoeZP0nn/qfO/Q/IDmvOjtj2t/rPqt9D8KYnv
d//Q9vdPjc/GVmm8lcZf1v61dbyntMap6JDE+qk+z5Dm3p74eT2Ye4yNl3yM
+kerzZT8oNadwP1Re0RrfsNvVP8x9Y/V+os5ruQDi7ZH76j9Jbm55CXq19R6
WyR/rPntNb+ztv0tuQU2Tv0ftP/x6n+gtlpzPg5t2w4o2t6Vtf8CbCG2TPvv
IXkZz6rkdpLvTXytuGZzdG4dtM8T+q3PaP/Gkk+R/KTkZyUvQpfpGu0uXXex
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
uT/eCd6Nm0r2OY8gHlK/e24Peb6519xj7nW/xPyAUux8/1mxuQ7wj07nt8fe
Hx2GLqur+at0fp/q3hc1v57k1ZKXSC5JriN5JViO5ILkptgsrXeTWkOtNT11
fq6r1vqbc8NG8Pzz/sSOD/Cf8aNn4k/o/2vc24LxlOqJ82+L1P9Xc8epTdJY
E3Sb5n+Smq8DbyeUvL/mf4Xt03xIVBM1f3LBWOTFFdtUbCsxSc/8fhCrEUP0
Vv/gsrEw8LdR+D9lx3oDAuf80Wfoe/T+fVqveex7B+YC9tIo8/3rWDb/AR2B
rrge3LAS/EesWlY0pgy2fGjZWC45DvJZ+BDoZnR0B2xJ7NzDgSXrL+K9L4u2
idhG8htriuZAwYUiH4ruRQdzzYnHPsdf0fEfrDhegivUNv+9m2PbOzAssKxv
cn9shZ7LfzLzzdDd6PDOZdsF7AMYFFgU9gR/E79zesX5dXJ9HfP4YmhmPhu8
tvoaHy+5neQRko+qOAcGxgfecqXO/67YvBD4IRu1/zUaf0DyE0zR2mPAJCSv
RR+QK5c8OXb8t7XsHBO5pnmSd0nMUYMDgX3eOXHODB90vuSS5NGcs+RFkndM
nGMh1wIfh9z1WHIWse3VToltHrYP/A+u3YbYOAJ4QqfEGChcFTgpYKO8Y3Br
4LDw7pFzJfcKvw1uFjoFbhicMXQNNpdrTDwJtwabArcMDhm2preu2/6ci1oP
chglx+7EcMRy5LzIfcFvhEtCvoHcBzmQVolzQOTO4AuSG/pNraSxjaH95V8T
+yIbQvvjcObgbKFPH9B6v2s8LHifgxNzduDuEE/dlZrzBKeEeOba1BwbOCrg
tdel5tzB+SL/PTM1hw8OGnyTqakxPHw68HywPXQquhX/qUFim4bOx17BDSRf
Q66HnM/xiWPkgWXjn8TO+CTYfDhBcJn+zv29MDI/jmeWZ5d8QO3U7zTvNvyu
w1LbWGwt7x+xz8w85gd/PTl1DoJcBPZpm/4X8csic6ouSJxDxs/H3z8hNecR
7iMcs7MS54TJDcOJ7Jk/T+Be4F8vaf5RmfU7mAX5JnLO5J7JWXZJnKMkV8nv
70ZuEAwgNp51MrkHMNLY8cUT2r+X5D6SX5P8dGqdie4EH/iQ3AQ+scZna3xr
6pwouVFyol0T2yN8bzAS8lvHqu1XMObRNHWOj1wf205KnBMjN0YOsG3iHBi5
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
bjPfsPy85G/MkG/+P0yVDaw=
          "]], Polygon3DBox[CompressedData["
1:eJwt2Hm4TuUWAPBPHENR3FCZ3bpFKWmu2yANIkOZcpFE4VBkOlSGzGMZykyD
IWMZwlFyDmWeZ1GPIxmLurkNmp7ubz1n/7Eee/32Wu/7fvt837v3VrF15wad
LkqlUgdFmni7YCrV3cFL+VKpO+XLC6RSmewNNoI9w3azhRenUj+wNFE1TypV
U81KMVo+Ul0rdXvULWJD2UDWiO1gH7MxbBR7lu1l7xhvO/uCfc2mFUqljoo5
FreSvZs/lRok/1Td5Y6rqm1r3r6xNj6XrVK3WO9o+W6+Qs0yNpP9bo5+vIDx
Gjmuo/42+X51a9WtUbdSXRH5PrGGZbNMVli+yryX6rmetzJvtt5PWBFWmT3D
ssLUjpW/rre13n3mKq/ukbgWbCqrIF+t7k11o1k7dsj5TWwKm8i6sSNsM5vK
JrHuLCeuFevBurC72AqWxd5iY1h7dphtsJ6uPu+HbLx1Zsiz1Y1XN5alq/tS
3RY2jU1mPdhRdph9EX/ruC56p+rdxt5WN5X1dO6Yujk+yyn2ByvrGtyuZi47
zf5k5dgdbAE7x/KK61kNNp+dlV8kKrMH2Qy2W56j93tzVGSz2Qn2Gyut7lZ2
1npW+mwlrSHb+mbJJ/LW6hrGWvROde59vSfZ76yM3tvUnFa7TG9x51fonSI/
IZawquoW5k2lhsV4ogxbqmaJGC+fbrxNxtur7pA5isc1YZvZPnaYlWCz2HF2
gZUybzU2j33H8ohKrDpraMwOxu6orpreRvL5fICavqwO22CdH7IhbABryLaz
M2qXW1+J+G4Z4y35YnXD1A1S11jdTude5eMcL2ST1PWW77OWBs7VlM+1lhw2
WW87vU+ru1r9e8435i+qeYHdwprIp6l7IX5/7AY2T90M9jLrwR5gq1l/tbMd
Z7J3jDFAPtO8B9QdZ784d618q97pbArLYF/rncf6sz7scbaeLWADWT9Wl21k
M9krLINVZ1lsvzGb+reBORf5bOfM+01cV9fqE3Wz+Aj5QHU99b6WjJepZzW7
MvYG3knvEOMXi9++3vm+FxtEa/m7YoeaQ3qHsobyWsZsq7cQv11vbXk+kYdd
yu5l7Y2XyZoYr6X52jtXJ/Yr/V87voSNd+4BdW1jD9TTm98V+4z8EnGx4yuM
V8u5HuoKh7MrWW2WwYqwwux78TjryfKw35I9+2bWguVlKTVF2L9ZO/a6tYxL
fucZyR5Wkl1jXYt81h2ijfwyvZfpLaO2vt5X9RaKPZYVZ4+wLqwgy88uZw+z
l+JewZoarzBLd66evFiE43LsSXV91K0Tk+RD+VnWNX6TEcm+G3vxqNhLrWe5
PMual1rzz7FmdSXVXc3/o26wuuKsOKvInmIDWSu9n/pMq/Pm/t7jdz+JfaZm
m/G2JfeFiryi3puSe884Vo6VYzewNmw0m6g3W75Z7wa9BWLPjT2fbWTr4l7L
iuotqrcsfyL+zrGHq8tM7keZyX2rvLry6qrw59SNUTdBXZZ8k7r18SdkFdRV
UHcjf17dWHaDOO78Or5e7NBXQF2a43+oe0hdZzWl4nfp858TA0R9+TSxQc2u
uKauy8n4norhjvNa1+fG2K6mJnvO8TfiSeeWyc8b82Dsxey0+avIP4v7oPxR
MY+dNUZldr35DokvRCX5e2Kn3i/Nu8J43xpvKlvPdubL3adjvz4oxjguYJxd
xtylZrL4XN12ddvNMUZNfXNnqbtK3Ql1e9SsE085bioquAZ3xb03XO+OeI5Q
f1zvzeIxNUVjT2LH5AfEaMf52Q7nduproz+blWIn2V62St1Zxy3YQz7bfXE9
1U02Rw3exfq+cm45GxX7WlxDa0nXV1dtNz3LxMH4XsrXxN9dXX91J9R1VLdQ
dHS+g3HSxYH4/KwL6yzvJA7G3iS+YZniZVEv7tHOdbfmn4w3QWxhZ1gP9rN8
otjK/mS92K/yt8U2dq+11GZH5M3ju8U2ilaOj4sGztVVs0yMjHsZOxb7n7U9
wRo7f4q1Fpv03cfqsJy4XmIDe0Dtaj3Nzf+KeIotiXuW69YlnlHVbWZz9PaV
/yhPN8ZafVm8rPxu3j3ZI0rwEuyfrCkbxEqz0qxS8gw3kg3W21s+OLmHZptz
lLr31dV0XMb1q6jm2fhOOp4ripi3qHyLuv6O/1L7gXgzfhvxfVazWFzr3AU2
ir1ujgnmuIk3kg8RfdgQ1sS8a8w1iPWKvzmrx1ayASwjuQ/WSZ7/RrDB7I3k
uXMTG84GJc+izyb3y87mPhOf3dqqi7Vqhop+6obFPd5aqsr/ch2+T55fSifP
93fwe5xvbJx6ej+XN49naOfrs9vZv+TN4vki9mr5reKaeL6KZ7b4vhtvLZvN
RuofYY432VfqW7MP2H9Z/uQe9Zi+xexn+WXJPbQRW8p+lRcT97Mm7CP2e1ru
vefh5P72MSsU62LNYk3sQ/ajvICoxmqxRey8vKC4Je7dbAn7RV5U3Mcax/eZ
/SEvkdzfnmYvWvepuJeY536xRs2XfGOy369PnhOfV5cT90k194hsdStEXsfl
k3teetwbWcG4bsl9K+6hy+N3KC8pHmUt4zmC5Yv9izVgHdgV5rgi6W2WPL8M
U/eafLi1tIhnrviOxv7CerPH2NL4jbF01jV5r5jBLug/nDyP/8CqxnOeuvbJ
+8edyXNiP/YSe5nViGdN1pd1Zr3Yg2wB6806xm+S3cNmxfMp68C6sbvZTJay
xgssX1ru+2XzeLdUt1C+PHmnO6mulLpSPu91vKW6EequYlexa+NZlg1nffR2
kvdMnhPn6x3HlrHVcU9hP7Gx7CP2afIu+T82hi1Ny32/XMTOszfYgrTc98sZ
7DhbEvu23/ffrI35H5b/au5D6o4k7zM3yXvpbcs6s9vinVvvd3wvO8COsuvk
34o9bD/Lib+bPEPvc+zF5Hl8WuzXcf9Jy31Gr5a897zGurJX8+Xul7Fv9mTP
x3Mtu5VNZ6eMuSt5nzmcvG/liK1sa/LsUzr+TyD2O9Yh9is2SW+32O/j+Y3d
yCayLqwla5e8G4xn5/TvT8t9tz/GKsuPim3J81Xcp8vIfxJ/Oz4V88YzQry/
Gu8Zde1ZFecmGO+Iui1sC9vKSsXeEu/t7GDy/weV5P8HSZZAxw==
          "]]}]}, {}, 
      {GrayLevel[0.82], EdgeForm[None], 
       GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJw1VLluU1EQvXlv4odt4pgsCDDZIGFTICwRBLPYIkiAgAbxBZFSoEQsNYJA
CFAAYikQDQ0NHwAFFVQoidJBQ8UvIBFe7GyYc3SG4urMu2/unZkzZ27f2I0r
16MQwhRWjHXaQpiEUQH+AV7CSrGW4NQL/AKf80kIt/HdDbyPdQv2DDAFtsT6
t4K1E3Yp0j7tzzhbh93v99Rgt8L+BvsCzk8zBvAe1h7EfwH87XfybAN2EXZ3
pP2Cx2r4PTz/EGeGYD8Cvs+H8AT4IxfC8UQ1vMsoh79YXZH2eQdr2mjKqwW4
yxRntyk+49GvHd8ZYAfwJM40498s7jxjskdNRA5gfYdZTfT9ET5zOLcaqV7m
23A7cpvxXmfFWRtynsD6iX9VYMnE6XYTl7TJyTxwPVKsB4j1FPa010qeWSP5
GMcahl32fJgXzy37WeZV83zmYu1vQKzHyKcV9gLQ8H0Z/5pN+dOfnI8l2n+Z
UUzGJo/kbDESX2XvL/tMPlPPv+Dc0ue/Vhiv03R2s0mL1GQVOJLI9y1i9SSq
v9c1+Is1NEmT6/B/lqhH5ITcHDTZh4BrrlHGPGbiZwQ4kSjWJNBi+ZM37hOn
gLVYserADxnlS13tN3F5gL2KldNqLD2RjwLwlNfCOVvKKn/W8RyrzVRXn6kP
O4CfPAfmXoLPV2oA+Car3rZDGycSaYca44zOOv/0Jx93gV3OG/nbauJ+G3CL
29xLXeOsh/68pwLszEkPjDXjXDOH2PVAXSy4TljLUeeTvFb8Hr4VjVj5B9dw
6vwX+dYANwF7vXZycDWveR7PSVd1n9mizwv1NOick/tFf6/4bg3iTBl714Bp
VrPXAfuIqa/DpneGvJG/Ve/Xmr8dQ66BUZ/rs6beUwOc9yXnn33oN83wgGnu
532mOBcX8X0nUQ/YC87ITfbMVBfnq+bznjPVmOfbY8q5x1QT7+H5V7jnnGnG
U38r+GbsxV4Mn30mXVKfy8DDXi/rZm/YI2qWPWAvmoD/AIAdr9I=
          "]], Polygon3DBox[CompressedData["
1:eJxFk81vTFEYxo97T+41U+mIGkTNtD5KQkNIST8kuiAIK/EXNGmQCrEWCUVI
EB8LsbGx8QewsGI5I3ZsrPwLklZntNrh9+Q5icWb+7wf55z3fd7n7py5fuFa
FkI4iUVsczWEVQKD2FIlhAH8ZfAa9gp/vgzhNIWnsLvghTyEc9h5bBFrFSGM
UfsYO07+O+cLam+B3/aFsB+cUxewA+AnxFfBN6i/A37P+SZ4I7Fp/H5qPlHe
IlYDd4h314XwE78LblJzE9wPPgFeSr2oRrWvua8gP8DZp+SPRvc3S+4YeBf2
lfv/EtsNPkPNMLkO/gR4jFjMfUZnNYNm0czTzHYWPJLmmQT3UfM7c88bwFux
BfyP+NvAQ7ofmyf2BT43cUcX/Ad7iT9CTZabg73g8eheD2ET4B2ludJ8g6V7
UC/awxz4TeHeG9i7wvkf5B4l/sWXuNSMmrVOvodf4e5LVe9Xu/tA/gV4OTfX
enMF/IzYvuj+boOvVN2X+hutegfahThvgC/y5kO+k9F5cSyuNeOeaL218Zvg
y+Dt0VytSIPRHIkrcfSgYu4+Z+Zc3M9yZir6Db31vDA34mSmtGY07y9pSvxF
3y2NN6I1Jq3pDe3vILFvwZpvE79HrMd3Lf+vT+1aGp4qrWH5OjOaZtC9ul+z
6Z/Rv6OeOxXvWLtup/9LnK+Pfq+e9lfLrGnpT3rRHhvp/HjpWVqJ3y2cXcys
MWntcPT+pNkj4KuldyP9zpXWm/7tWuJT/7fu7qX3h6J70z8xHK0L5aTpqvYV
vVu9WU871f33E///AE4ZfNQ=
          "]], 
         Polygon3DBox[{{2661, 1925, 1926, 1084, 2672}, {1851, 771, 1065, 1064,
           1920}, {1820, 709, 1023, 1022, 1924}, {1923, 1093, 1092, 773, 
          1852}, {1919, 1089, 1088, 876, 1899}, {1900, 876, 1085, 1084, 
          1926}, {1918, 1026, 1025, 709, 1819}, {1681, 845, 1027, 1026, 
          1918}, {1735, 773, 1090, 1089, 1919}, {1917, 1030, 1029, 845, 
          1890}, {1693, 1042, 1041, 756, 1848}}]}]}, {}, {}}, {
      {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0ktLVVEYBuBP85KX1FJRhyJCgYI0TtS8m4qKhkiIeC0Qz9TgeLeL1xo4
aWI5EX+ATqIfoOJYHOgomudImvUchP3t5117sNbLYleOJwbm0iLim1l8EJHK
bTwVSuW97IhnPGI9f7GfF5ziFd9zx/yRD/iPJ8x7GHHGCt6wmrfMtPdzuYJt
rOUImzjHIa7yHSfSIzb0WZCT3LdelBsyI5bYyGU2cYUvucpmrnHdtMgf2MqP
qTP5ie38zA5ucNN0ylvs4jZfcYfd3GUPv3BKj019vsoL/G6dlPf0fstlDnKW
jRxmTaoLy5lh6uS/7qOK1yzjKXN4zDv3+IPb5rc8z0tO8px9/MkXPOTT1Hf7
LulTIic4o1exPJkR8YTjfMwxFnGUhXzDAj4yI3I+h5nH18zlIHM4QBXDkdEn
Z7GXria66YkuL8dHB1WI6fT7/+s/x/c/OQ==
        "]], 
       Line3DBox[{2662, 1031, 1934, 2668, 924, 993, 1004, 994, 932, 954, 929, 
        1006, 1005, 982, 1927, 949, 983, 948, 1001, 962, 963, 947, 992, 1003, 
        991, 989, 2662}], 
       Line3DBox[{1071, 940, 2669, 971, 939, 967, 950, 959, 937, 955, 938, 
        966, 934, 1930, 980, 933, 965, 936, 964, 935, 930, 925, 969, 941, 970,
         2670, 956, 957, 926, 960, 927, 972, 943, 974, 942, 981, 1929, 958, 
        975, 944, 973, 928, 961, 953, 1071}], 
       Line3DBox[{1094, 995, 951, 1002, 976, 977, 945, 997, 998, 996, 987, 
        2671, 988, 1937, 1007, 2666, 1008, 1009, 931, 1000, 999, 946, 979, 
        978, 986, 985, 984, 1932, 1094}], 
       Line3DBox[{1928, 1083, 2672, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 
        1091, 1092, 1093, 1095, 1938, 952, 1072, 1073, 1074, 1075, 1076, 1077,
         1078, 1079, 1080, 1081, 2665, 1082, 1928}], 
       Line3DBox[{1028, 1027, 1026, 1025, 1024, 1023, 1022, 1021, 1933, 1020, 
        1019, 1018, 1017, 1016, 1015, 1014, 1013, 1012, 1011, 1010, 2667, 990,
         1931, 2776, 1030, 1029, 1028}], 
       Line3DBox[{1040, 1039, 1038, 1037, 1036, 1035, 1034, 1033, 2663, 1032, 
        968, 1070, 1069, 1068, 1067, 1066, 1065, 1064, 1936, 1063, 1062, 1061,
         1060, 1059, 1058, 1057, 1056, 1055, 1054, 2664, 1053, 1052, 1051, 
        1050, 1049, 1048, 1047, 1046, 1045, 1044, 1043, 1935, 1042, 1041, 
        1040}]}, 
      {GrayLevel[0.5], 
       Line3DBox[{1940, 2197, 1939, 1373, 1941, 2673, 2851, 1942, 2674, 2852, 
        1943, 2675, 2853, 1944, 2676, 2854, 1945, 2198, 1946, 2777, 2199, 
        1947, 2677, 2855, 1948, 2678, 2856, 1949, 2679, 2857, 1950, 2680, 
        2858, 1951, 2200, 1952, 2778, 2201, 1953, 2681, 2859, 1954, 2682, 
        2860, 1955, 2683, 2861, 1956, 2684, 2862, 1957, 2202, 1958}], 
       Line3DBox[{1960, 2203, 1959, 2779, 2204, 1961, 1389, 1962, 2685, 2863, 
        1963, 2686, 2864, 1964, 2687, 2865, 1965, 2385, 2386, 1966, 2935, 
        2387, 2388, 1967, 2936, 2389, 2390, 1968, 2391, 2866, 2761, 1969, 
        2688, 2867, 1970, 2689, 2868, 1971, 2205, 1972, 2780, 2206, 1973, 
        2781, 2207, 1974, 2690, 2869, 1975, 2691, 2870, 1976, 2692, 2871, 
        1977, 2208, 1978}], 
       Line3DBox[{1980, 2209, 1979, 2782, 2210, 1981, 2783, 2211, 1982, 1403, 
        1983, 2693, 2872, 1984, 2694, 2873, 1985, 2339, 2393, 2212, 1986, 
        2927, 2340, 2394, 2213, 2605, 2606, 2975, 2341, 2395, 2214, 2521, 
        2392, 2498, 2960, 2215, 2497, 2396, 2607, 2695, 2937, 2398, 2342, 
        2696, 2928, 1987, 2216, 1988, 2784, 2217, 1989, 2785, 2218, 1990, 
        2786, 2219, 1991, 2697, 2874, 1992, 2698, 2875, 1993, 2220, 1994}], 
       Line3DBox[{1996, 2221, 1995, 2787, 2222, 1997, 2788, 2223, 1998, 2789, 
        2224, 1999, 2399, 1417, 2400, 2343, 2402, 2699, 2929, 2401, 2344, 
        2404, 2545, 2225, 2403, 2938, 2345, 2406, 2546, 2226, 2405, 2751, 
        2790, 2407, 2227, 2522, 2397, 2623, 2982, 2228, 2408, 2645, 2646, 
        2608, 2976, 2229, 2409, 2609, 2610, 2603, 2644, 2700, 2985, 2602, 
        2346, 2230, 2000, 2791, 2231, 2001, 2792, 2232, 2002, 2793, 2233, 
        2003, 2794, 2234, 2004, 2701, 2876, 2005, 2235, 2006}], 
       Line3DBox[{2008, 2236, 2007, 2795, 2237, 2009, 2796, 2238, 2010, 2797, 
        2239, 2011, 2410, 2798, 2240, 2411, 2347, 1431, 2412, 2348, 2414, 
        2547, 2241, 2413, 2752, 2799, 2416, 2548, 2242, 2415, 2753, 2800, 
        2524, 2243, 2523, 2417, 2662}], 
       Line3DBox[{2019, 2253, 2018, 2252, 2805, 2017, 2251, 2804, 2016, 2250, 
        2803, 2015, 2249, 2802, 2014, 2248, 2801, 2013, 2247, 2501, 2349, 
        2012, 2246, 2962, 2500, 2558, 2557, 2419, 2245, 2961, 2775, 2499, 
        2556, 2555, 2418, 2244, 2668}], Line3DBox[CompressedData["
1:eJwV0DlOQgEUheGLheMKHBJxA1JYK4paKgkLsHAB0oATuAVF7Egs3IqFJpBo
Y4s2oDgPKJb6Ufw5/znvvuTlzWzmc1uJiFhHeyjiajiiJQ9HI+bHIu75EV/g
D3xvJCLN67aOvq8v6g39US/pZRzYnvRZ3kQKz3ptMOK2/xwv+rn3Sm4LevA/
+Wqf5GuYwgaW3EzILMbx5iYhB3DnnRt55mZOvntWtF1gu/899g/bDr/ELj71
U/u0+yS+9IrM2Lr8mC/zb17lK/yHn/BV3uPX/tWv/AevLjEl
        "]], Line3DBox[CompressedData["
1:eJwVzj0yg2EUhuGThPzQUKViJmQBEtmAFIgKo6ORBciMBSARZmKIQtCksh5F
ZAXIHox/rhT3nPt5zve+71eoN7YPEhGxg49MxCAb8W6+TUU88U/e46vTEV/8
JBexxh9133JTbuFG9yOf8me00dP96s74C87xJx/ql/grSgjvpNy3kY44kstY
kRewiBnsYxd59J3fM+uYxRaKqGLZ2WNU8OC7ii7h/o48wsV4r0/q5uw2MY+U
3NRf2hfkK3NC19J1+TUm5Vu7dV2a3/Eaz/D78f/zLB8ih3/mLSnb
        "]], 
       Line3DBox[{2059, 2259, 2058, 2807, 2260, 2060, 2808, 2261, 2061, 2712, 
        2891, 2062, 2448, 2713, 2947, 2504, 2449, 2532, 2714, 2948, 2505, 
        2450, 2642, 2262, 2063, 2949, 2451, 2506, 2263, 2064, 2951, 2453, 
        2455, 2656, 2670}], 
       Line3DBox[{2071, 2268, 2070, 2893, 2718, 2069, 2892, 2717, 2068, 2267, 
        2809, 2067, 2266, 2459, 2966, 2509, 2265, 2536, 2458, 2965, 2508, 
        2264, 2535, 2457, 2066, 2944, 2716, 2534, 2443, 2065, 2942, 2715, 
        2533, 2440, 2669}], Line3DBox[CompressedData["
1:eJwVzbsyg1EUBtCtQvQmiEtijCdIXoBIpxCtBjWFdzD0ZpgJEhFPoiY8gLhf
cukJcVmKNd+39znn/9Orm0sbfRGxzMhAxA1JPhMRDTnKl34rx+jpdzLF4WBE
2bwzFHGpH1E0V9i1G3dnRp/lXp9g237PvSYP5qyzHOd8U7afk3nmOTYPyzVW
SFLyjXf7df1DVljQC2T1Kpn+iK48IUfrvzvf8nbSf0/NbR71uty3r8kOT3ZX
8sDuTD6br+WF9z+8mKf41V9lmqq+6H5Gf2OaP9PmNBc=
        "]], Line3DBox[CompressedData["
1:eJwVzTlOAlAQxvEBZVFPYSKbC9rhEZCCgsrOxAPoeaSgMXG5jBIV9AoKKLiA
WPl7xT/fMjPvbZ6ed84yEdFGqRjxii3ERsQbLSPDj2gFWX5Mq1jhJ7SW9tYj
LtHTbctXaxEPeOd3cGe2avao+5Ab8mG60Q3oRP+Hqdmx3EQbRzjBjb0qrWFm
p5XeQw5P7i7MP/W7uE7/4iXnjjbSn/gyG9Cu3Vv6LQ/pfXpH9yM/y305L8/l
PRT4Ba2jyP/SfSxxgH+xlC1P
        "]], 
       Line3DBox[{2098, 2298, 2097, 2724, 2895, 2099, 2725, 2896, 2100, 2726, 
        2897, 2101, 2727, 2898, 2102, 2728, 2899, 2103, 2360, 2474, 2361, 
        2104, 2756, 2954, 2475, 2567, 2566, 2105, 2635, 2955, 2774, 2476, 
        2569, 2568, 2106, 2479, 2671}], 
       Line3DBox[{2116, 2299, 2115, 2906, 2731, 2114, 2905, 2730, 2113, 2904, 
        2729, 2112, 2483, 2903, 2769, 2111, 2364, 1629, 2110, 2363, 2478, 
        2573, 2572, 2109, 2758, 2902, 2477, 2571, 2570, 2108, 2757, 2901, 
        2544, 2362, 2107, 2649, 2650, 2666}], 
       Line3DBox[{2118, 2300, 2117, 2825, 2301, 2119, 2732, 2907, 2120, 2733, 
        2908, 2121, 2734, 2909, 2122, 2735, 2910, 2123, 2365, 2366, 2124, 
        2986, 2647, 2367, 2618, 2368, 2619, 2125, 2759, 2980, 2617, 2369, 
        2620, 2126, 2485, 2636, 2911, 2770, 2127, 2370, 2480, 2912, 2760, 
        2128, 2574, 2371, 2481, 2372, 2956, 2129, 2575, 2373, 2482, 2374, 
        2130, 2932, 2375, 2484, 2376, 2131, 1770, 2490, 2132, 2736, 2913, 
        2133, 2737, 2914, 2134, 2738, 2915, 2135, 2302, 2136}], 
       Line3DBox[{2138, 2303, 2137, 2826, 2304, 2139, 2827, 2305, 2140, 2739, 
        2916, 2141, 2740, 2917, 2142, 2741, 2918, 2143, 2306, 2144, 2933, 
        2377, 2378, 2145, 2957, 2491, 2621, 2492, 2146, 2486, 2520, 2919, 
        2771, 2147, 2379, 2487, 2380, 2981, 2622, 2148, 2381, 2488, 2382, 
        2934, 2149, 2383, 2489, 2384, 2150, 2828, 2307, 2151, 2829, 2308, 
        2152, 1538, 2153, 2742, 2920, 2154, 2743, 2921, 2155, 2309, 2156}], 
       Line3DBox[{2158, 2310, 2157, 2830, 2311, 2159, 2831, 2312, 2160, 2832, 
        2313, 2161, 2744, 2922, 2162, 2745, 2923, 2163, 2314, 2164, 2833, 
        2315, 2165, 2834, 2316, 2166, 2493, 2835, 2317, 2167, 2494, 2746, 
        2958, 2168, 2495, 2747, 2959, 2169, 2496, 2318, 2170, 2836, 2319, 
        2171, 2837, 2320, 2172, 2838, 2321, 2173, 1554, 2174, 2748, 2924, 
        2175, 2322, 2176}], 
       Line3DBox[{2178, 2323, 2177, 2839, 2324, 2179, 2840, 2325, 2180, 2841, 
        2326, 2181, 2842, 2327, 2182, 2749, 2925, 2183, 2328, 2184, 2843, 
        2329, 2185, 2844, 2330, 2186, 2845, 2331, 2187, 2846, 2332, 2188, 
        2750, 2926, 2189, 2333, 2190, 2847, 2334, 2191, 2848, 2335, 2192, 
        2849, 2336, 2193, 2850, 2337, 2194, 1570, 2195, 2338, 2196}]}, 
      {GrayLevel[0.5], 
       Line3DBox[{1096, 1358, 1097, 1373, 1126, 1388, 2779, 1141, 1401, 2782, 
        1154, 1414, 2787, 1167, 1427, 2795, 1180, 1439, 1192, 2877, 1451, 
        1204, 1462, 2806, 1215, 1472, 2807, 1226, 1482, 2810, 1237, 1490, 
        2816, 1248, 1499, 1260, 2895, 1508, 1272, 1518, 2825, 1284, 1528, 
        2826, 1298, 1541, 2830, 1313, 1556, 2839, 1328, 1571, 1343}], 
       Line3DBox[{1098, 1359, 1099, 2851, 1374, 1127, 1389, 1142, 1402, 2783, 
        1155, 1415, 2788, 1168, 1428, 2796, 1181, 1440, 1193, 2878, 1452, 
        1205, 2886, 1463, 1216, 1473, 2808, 1227, 1483, 2811, 1238, 1491, 
        2817, 1249, 1500, 1261, 2896, 1509, 1273, 2907, 1519, 1285, 1529, 
        2827, 1299, 1542, 2831, 1314, 1557, 2840, 1329, 1572, 1344}], 
       Line3DBox[{1100, 1360, 1101, 2852, 1375, 1128, 2863, 1390, 1143, 1403, 
        1156, 1416, 2789, 1169, 1429, 2797, 1182, 1674, 1778, 1441, 1194, 
        2879, 1686, 1780, 1453, 1206, 2887, 1694, 1783, 1464, 1217, 2891, 
        1474, 1228, 1484, 2812, 1239, 1492, 2818, 1250, 1501, 1262, 2897, 
        1510, 1274, 2908, 1520, 1286, 2916, 1530, 1300, 1543, 2832, 1315, 
        1558, 2841, 1330, 1573, 1345}], 
       Line3DBox[{1102, 1361, 1103, 2853, 1376, 1129, 2864, 1391, 1144, 2872, 
        1404, 1157, 1655, 1656, 1417, 1170, 1664, 1665, 1430, 2798, 1183, 
        1675, 1676, 1442, 1195, 2880, 1687, 1781, 1454, 1207, 1695, 2963, 
        1784, 1465, 1218, 1706, 1787, 2947, 1475, 1229, 1721, 1792, 2952, 
        1485, 1240, 1493, 2819, 1251, 1502, 1263, 2898, 1511, 1275, 2909, 
        1521, 1287, 2917, 1531, 1301, 2922, 1544, 1316, 1559, 2842, 1331, 
        1574, 1346}], 
       Line3DBox[{1104, 1362, 1105, 2854, 1377, 1130, 2865, 1392, 1145, 2873, 
        1405, 1158, 1591, 1657, 2929, 1418, 1171, 1597, 1666, 1431, 1184, 
        1603, 1677, 1443, 1196, 1688, 2941, 1689, 1455, 1208, 1696, 2964, 
        1785, 1466, 1219, 1707, 1788, 2948, 1476, 1230, 1722, 2953, 1486, 
        1241, 1866, 2974, 1494, 1252, 1503, 1264, 2899, 1512, 1276, 2910, 
        1522, 1288, 2918, 1532, 1302, 2923, 1545, 1317, 2925, 1560, 1332, 
        1575, 1347}], Line3DBox[CompressedData["
1:eJwVz7FKglEchvF/8FVkgzVEhFOLBIqRITQ5NeTiYENhgyClUJEQhPTRFjY0
eAF1B1J2E9UNOHUVbW5Bv294eN73PXA4Z7s7aN0sREQTrSTieBHc5Z9cxJV8
uRQxXJX5GlUM9H2+RWk5ooxUTu0H/ICKbRePch2/7hvxnq2KsXyIvPzCc7xi
TT/K7nZXg9f1Nx7p7/yHKZ70D95w/slfSGyJ/i2fcw8XmOnPzk74FG3bPSa2
lM/Qsa/4d4/v7H3e1HPZG/SivCUX5Jq8k72f/wFtHSJt
        "]], Line3DBox[CompressedData["
1:eJwV0L8rhHEcwPGPOlwuhltIFtNlUMqPonSWu4GcXM7vwY8FcTdYlGzKIJFZ
SfwBWP0VZDTKdEqZldd3ePd+fz7f53nunqd/q1Gtt0TEGhYyaI2ocSEXsa33
9UFbxJG5zg2MoNIecWs3quf0IQ/yOB9jAl8dESc8ZF/kU0zhx77L7lL/4grX
6T7PK3EZNxh2zTTfYSb9rjmPR33m2id+xixq9hX+8+xF/aLnsaSrvMz37unm
V3OW33iHJ/Guz53v6j2smD+wmt49zXhwvmH+xGb6v3braOoLZ536W/f4bjnO
2xV0r+7TY3pAl/gfA1EqPw==
        "]], 
       Line3DBox[{1110, 1365, 1111, 2856, 1380, 1133, 2866, 1648, 1393, 1146, 
        1649, 1777, 1406, 2960, 1159, 1653, 1662, 1419, 2982, 1172, 1916, 
        1670, 1671, 1432, 1934}], Line3DBox[CompressedData["
1:eJwVy78rxHEcx/G38mO4/AOScqL7ZhQp0023KNxx0UW6Uhbfk0RSbj0lpRhs
zo9RWSXbKZtJ6gZZZJR/QB6GZ+/X6/n6fAartWLaEREVLHZGlLsiltwkE7Em
p/KYvCXvy9vdETvY4+pcg9vtiZji6jjiLmxn/Cyf5xrYkGtIcWJv2ifkTRza
T3Ht7y3ftBf5Ajfn3vH3/Lw8zV3aS/ID3+KvuAPuSX/Rx20z3COy8hDafEl/
8+bc20/9WX/FB/ejL/AV/R3D/ozgl1/lq9wXclyCjD8r7jp3Y1/+f8v14Zs7
5nrdRO93B/RJeVQuuH92YS8K
        "]], Line3DBox[CompressedData["
1:eJwVzc9HwwEYx/Fn1DqU/oF0iIjpmIhOnXYpSTZq9IvossXY6cu+1ygRjV2n
HbpE13Qt6lKnGR3SZbJTZvft1eHj+bzfz8OzcFzZKWciYkv2JiKKkxH7Zm46
4lSv6Ct6VU/01WzEOU7xBV7Hm1MRNbnnr/gGv8E39RuuhQ/tj+RA2vwDd+sm
sX/ET/gO1/EzfsFtnOJX/Im3cRV/4C/8ht+li3t4V+/Ioh8/3IAruC9x37LE
9/kRf4Iv7X7NHD/kZ+QM1/iRPid/+BrP/t/hsj6vr+nLZt4cAzIGLF8=
        "]], 
       Line3DBox[{1116, 1368, 1117, 1383, 2778, 1136, 1396, 2780, 1149, 1409, 
        2784, 1162, 1422, 2791, 1175, 1434, 2801, 1187, 1446, 1199, 1861, 
        2973, 1862, 1863, 1702, 2945, 1703, 1811, 1717, 1790, 2965, 1718, 
        1812, 1726, 1793, 2967, 1727, 1814, 1739, 1797, 2970, 1740, 1255, 
        1621, 1751, 1622, 1267, 1629, 1760, 1630, 1763, 1636, 2932, 1769, 
        1637, 1293, 1536, 2828, 1308, 1551, 2836, 1323, 1566, 2847, 1338, 
        1581, 1353}], 
       Line3DBox[{1118, 1369, 1119, 2859, 1384, 1137, 1397, 2781, 1150, 1410, 
        2785, 1163, 1423, 2792, 1176, 1435, 2802, 1188, 1447, 1200, 2882, 
        1458, 1211, 1704, 2946, 1786, 1705, 1222, 1719, 1791, 2966, 1720, 
        1233, 1728, 1794, 2968, 1729, 1244, 1741, 1798, 1742, 2821, 1256, 
        1752, 1801, 1753, 1268, 2903, 1761, 1803, 1762, 1280, 1770, 1804, 
        1771, 1294, 1537, 2829, 1309, 1552, 2837, 1324, 1567, 2848, 1339, 
        1582, 1354}], 
       Line3DBox[{1120, 1370, 1121, 2860, 1385, 1138, 2869, 1398, 1151, 1411, 
        2786, 1164, 1424, 2793, 1177, 1436, 2803, 1189, 1448, 1201, 2883, 
        1459, 1212, 2888, 1469, 1223, 1479, 2809, 1234, 1730, 1795, 1731, 
        2814, 1245, 1743, 1799, 1744, 2822, 1257, 1754, 1802, 1755, 1269, 
        2904, 1515, 1281, 2913, 1525, 1295, 1538, 1310, 1553, 2838, 1325, 
        1568, 2849, 1340, 1583, 1355}], 
       Line3DBox[{1122, 1371, 1123, 2861, 1386, 1139, 2870, 1399, 1152, 2874, 
        1412, 1165, 1425, 2794, 1178, 1437, 2804, 1190, 1449, 1202, 2884, 
        1460, 1213, 2889, 1470, 1224, 2892, 1480, 1235, 1488, 2815, 1246, 
        1497, 2823, 1258, 1506, 1270, 2905, 1516, 1282, 2914, 1526, 1296, 
        2920, 1539, 1311, 1554, 1326, 1569, 2850, 1341, 1584, 1356}], 
       Line3DBox[{1124, 1372, 1125, 2862, 1387, 1140, 2871, 1400, 1153, 2875, 
        1413, 1166, 2876, 1426, 1179, 1438, 2805, 1191, 1450, 1203, 2885, 
        1461, 1214, 2890, 1471, 1225, 2893, 1481, 1236, 2894, 1489, 1247, 
        1498, 2824, 1259, 1507, 1271, 2906, 1517, 1283, 2915, 1527, 1297, 
        2921, 1540, 1312, 2924, 1555, 1327, 1570, 1342, 1585, 1357}], 
       Line3DBox[{1350, 1578, 1335, 2845, 1563, 1320, 2835, 1548, 1774, 1305, 
        1533, 1818, 1766, 2919, 1290, 1523, 1817, 1765, 2911, 1277, 1513, 
        1816, 1757, 1937}], 
       Line3DBox[{1927, 2881, 1905, 1683, 1891, 1858, 1906, 1859, 1860, 1847, 
        1854, 2972, 1930}], 
       Line3DBox[{1929, 2971, 1857, 1825, 1909, 1867, 1907, 1724, 1895, 1868, 
        1908, 2984, 1932}]}, {}, {}}},
    VertexNormals->CompressedData["
1:eJzsunk0193XN06DIpVKpYRUZG6gpMFuEA2ERKLRlEil0oyURCGFEEqoTCVj
ZDimDA0yz/M8fyiJiOfsd9d1r/W91n09az2/df+ev57+sT67s/bw2vvss4e3
sMHZ/caT2NjYwmawsU2mf8c2ZOfvy/YgM16OCOTvcSdTf0rMrRljwY9YSfGS
QG/CoVfj9vuQD0kWWTouMMqCy4s38nTX+xFuhZVax14HEKW038VGwyyY/yXw
foF3ANmt4ZRZ1vyC7DNpUpMdZAHXCfYbt28GkqRlfHKz7SOIS8ql0Z5eFmw7
kbRUNiSIsDpl+iNUo0lo/n3u3y0s4Hu2O8n9cBB5EP3Cx7YznhSKJD7ZUskC
x0RN15VVAUR7aJnxnqAkwlfZ/PjVJxYMOVdEuOp5kXWjUzgbwwlpjveW7k5l
wTeD/ORnX26S67sFxJqmpJPexOeeY/EskBu+XkPpMF12tgTSd/16wNCfvC9B
PnDPfD8X8hmyd2f48JYZO1C5UCrtaIBydy0eYOSGK7REUD0hhjX2BPV05Upl
9FzcOCBJ7QLnmxV9aNfRn3cZu56Mm16mOICgS/p6xCGU4zKDw8I/uME/cfvU
WMVNcQb/p39w/nlrnMFZV36NKPULZLxwcEe/HFnzxy+liQJZ1I+wPOoX48eG
KCnGj+xzFFxkw56Q0UPr2cJGPcn80BFDbXp+U5vRYmX1ABKk73VYJsWfuFvf
CTOg/MNDAiNfFwQRu6jTT6ZsDCaT9yvbX/rOgswTk1YHprwi34bOGgp5hJPT
udev7+qmeL4+/V43JZzc3VTcty0tmlzk9lHvq2XBBbPXJ85wR5LvgVOKODcl
ElsnIZWfudSPG8x0joq9JW3Xg5QO+6SR+U+6jfXCWPC6PWy/bfhrcrhd7BgX
+wfCufpD/MQtFmQUvsiB6y9IkNV5S5XpeaQ1QOvKJT2qz/fXNg0xD0hlyuy0
3tufiNLMBq/rwALzNI0USofWjztTkC55bLI30uVWfmujfCBh/ATD5wU7MHxm
PNIwoHLhYJ3zcZS7IeAVI5e/2vsI1RNORsRtQz3Fbv1g9Jzc76hD7YI1a2Yy
diVoSDB2ic1TiaI4gFVLOYNDwc8ABgex62yIGyTkm5ggbjIbrzK4dVlKBlKc
4fahq16IM/c9DQZn+Ywrc6hf4OeP54fQLz/f32P8Ipf/8Bb1Izg1yDN+3NU4
yvjxFm9gyMKRACJjkrIv+YY3qRxbrL5yhAWVM9fcHbj4gvC0CSjKzntO2lbW
cCrSuAq+0G6nuJj6qxdels8JIeIykV8tqT5z/XbMPsYWRX6cemLczB9Fwi2U
Jj2oZkGgWp/c1pFYwnn2arXb6QQi8Uhmxk96Ly5apdQMTSSQXHOD2s3H0omL
xIH+184sWHvmstHMjiSy5v5UNW/VXGIusYOlpsCCxy1vVTzvJJGFazSyQvQK
CMfm1eEdqX0wlmF7qGdNHDnCJd5537mEeDr80nRZ3QdchyLGzRVo3O9/MPmL
WjlZltvLvi6vF3QWTcmkdJA7OWkq0hdHf2Do2svCkQ/8WJPUjny61TbsRz7J
M2XVqVwoLJzyAeW6HvgdhnJnTtU/T/UE5U+X9qGeh10m+lDP6As57dQuqJZ8
XY12WSlsZezKCzmymuIADv4ldYiD5b7VDA5zNS5xUtzA1EntJOLmKa7G4BY7
ssSS4gxHOfoCEeeCfsLgvEtT5wr1C0xTWM74xVmwjfGLBtfLAOpHSApOY/y4
T0GI8eMD2/HxYK0XZDWrYGX/mSckMmf+ebEhFhx/uue6KU1Uqu6KY0XsQaQS
asNX97Ggd+vVwN/a0UR5huZ1t4/hxHzJ+NKqOhYE6O8XvymeQGwnq9RfDIwl
Datnf36VxoKJ+sJQ20BCPsgWs7+cSkjDeL34MXsW9Fl8yrNUzCLKRe8O8p7L
IW9mzqr15mbBBs/z8Vx3csnOzXrbC+4WEu7kgchisT44tnydg4n2R9Jtw21i
oFhJMsIFFUhID9Tu5+BvL/1AroQ/cKzOaiCtE6KhyTFdwF7TLl1sFUUODIn0
LwpoJsOPV/Tvl+mEGwrmMpQOF2auYSF9hKuJoee1Ji2mfGDGK1En5GM29ikE
+fwlF/4pt3F4+1uqJzTCMkA9HfsT36KeFsnCOdQuyJzzmbHrZoMYY1fgbLbn
FAfIuWL86wXFQe3VUgnE4cPaTwIUN/CTW9eMuPHxiDG47Q/L8aU4Q/HZowzO
8ldmCiPO47usTlO/AN9VMbZi6hfR+nbGL4ftuVjUj2CRVMn48ZvZUsaPhjxc
N2rUwkiZ5YKi6bq+ZJOZ9ftt31iQtLHfVjArioj3qE5K2RpMTh6+eaaolQWk
sbL/2P4E8ln9/TvvN2/I4PrhiJWfaZ459rLpckkaufypahl31jtyz/JO62pP
FsQLbPe1Ncwh3IPyVpEfMshS8Ri1YX4WeHHF3JSfVUBmpLL5vxj6QkKn2NeE
z+oDVc/zhw7+KiE/1M2ag/zLybxLaT+jSrqhtZ4rPlKkgnzzbrRY/7SRLOj0
lthT0g69EkSOb3kpecVeeGAgvp00+GRXfYxtglW3viyycEkn76SDxs93dZOJ
iGa52Gl1cDYji4/SIdF45QTSBxMEZZH+eu/jrZQPZJbHaiEfDa+yCuSzuUI0
icoF37U7GLlxYRniKHfppB2aVE9QSiluQj1j95qPoJ7WPPXXqV1wtMbRB+1a
bnS8Fu2a2cPvTHGAq1eCGBycdIz3IQ4RzSsqKW7QZ7hYCnE78uo9g1tBomsd
xRkeCPUzON8bXfUacf6c6W1F/QIrxj/8TqZ+ua78hPGL6a7PJtSPYHlShPGj
RYsr40cb7jzezWGR5KuJ1mru2Cfk4P2GLgf67n+c8nTvIFc8uRk0TchLM5hI
f98luYjmjWGt6NCP6oSYvNCwTs+NJF1icUGPoum97niquCskmzxv4FTb75JI
0j46KMzVZsGWgVsG3J4FRH10aKCa7QPhu/sgcJNVH7xPTo3hZq8gHyKPHsnX
LCSPv95TlTnWA7IWApxsexqIr0fV94oj1UQmrmyHT3s7nFh9eOrJec3kS6DZ
/LYbzaR88q7CnakNcFxoZarli0YS+2rNr6rfHeS3zkvztMwisBUSnsnXUUBO
X3d4/9uqj/hqG6X51mWCqoaaAKWDeZNOAtIvqP9MRbrdieb3lA9k1q4fQz6X
30hYIJ/I50MTJvOaoTzsIh/K1b3SUoxyj9i84qB6Qqv/5WHU8xlrjRLq+Tmo
4SW1C5yzmo+iXaXS09XRLg9NKV2KAzw/vGQYcRAciAlCHJ7XLpCiuIGkk6QW
4nZWdvdGxE19RaMnxRkuFrx3RJyvTRlmcHa4/02B+gW8ckUZv1jlXGX8snvf
85+bwiLB+6E540ePc78ZP8b93P6c/2Y0kdw6jUNhvjfxIvbj+zro+Z/NEWZn
3xPrMgsFfxJIguOCy97ks+C9rd+JhGOZJO3X6fkbBd+QpebGj5Xc6ftu4ni/
b94X8lS0Xf1FdwJ54TLrRw07C4L2VexK5C0jj65VmJGxLLJDIH9vxqNeiE4x
iwnRaSCW3bFBu1ULicIKk0VvBbvgqqtT69X6VqJg+ll7T04lGW9xtX97rRni
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
zRvwq+Eqk59dgllbMT+7XMpWpXkGzB2smfwsXpDVgvn59vAzc5qXYNqUtheY
lzp/BYlgfn7XHVZP8xgoiBgw+Xn2xcsvMT9HRndl0rwHXyRWzMW8p7NkOZOf
49WTa2mehC/Vwb8wP2/eKHkJ8/P8FZvYaV4FB81IfcyrUSPr7TE/8w7Z2tM8
DCOsGCvMw352g46Yn9ksv1gjfVbcbmOkp/fut8L8/KvKeiryGWhaaYF8rIx8
UjE/O3Eb/EK5GSNJ0zE/f/rdGIj5uWJ+aT7qeejsSkHUc1aqOZOflXaO5aNd
reHBTH629ZBj8rOB8oP7iEP826gwxEFGPpzJzzuJ52rEjeNeLpOf+4e4wjA/
b+x2w/wMFdoP/rv8DP+Sn+Hv/Gxzruk31lesNevxXQaJx3OYd3lNnV4e1lfP
FJNH6DsONos0mXf8Y1eHNdZXjYrDmvTdh2M/Av+7+gr+rq++81Tex/pqqGaz
Ma0rYLOoWz3WFWfNPJZgfTWN12QXrUNAdOKYDdYhs2rMVmF91Vx/4TatW6Bk
Fkcd1i31oaOTsL4qjRNWo3UOPH379QfWOXvOXWfqK3nuVj9aF8FZDp8mrIvE
896YY32lcKDAk9ZRZMPyJDuso+b/3GWG9dWWmBu+SI+7msrQW/muZmJ95Zfq
8xb5cMgfYOqrIicdpr7qXbnRCOWSnsjfKFdV8yFTX+2K3OCGeh7fzNOKeo7O
G+TF+kqGz0kd7aoU3c7UV3zjgtZYX0mZnjuEOFStvteMOPxYqd6L9dXzMOtJ
DyhuXxONmPrKr1jiNNZXHCG/LBFn7tqDTH3lM+7yFusrNbEfnKeoXyYdiPjv
6iv4u776uz9a86c/gr/7o0BSGon9kVb2hrW0DgcNyWdMHb6ZR9oQ+6OoztI1
tG4Hwx8bmbp9kC/MCfsj7bE+HVrnw6qxeUx/dCZZTAX7I5337ka0L4CkSmNV
7AvyszTjsD8a89IOoH0EHDqTxYd9BNfX9Gbsj/RaY/Ro3wHiyiymP1q8cwYP
9kcrdk42pn0KOIic2IZ9Cjl9pgH7o/DIwELa10DXd2WmP3q7y3cN9kcXbNZ+
o/0R7Dpfk4R9UECb9lLsj/ZO3JpC+yMw8c8vRDpXhjDTH007FVeHfDZsOzwP
+Rz4qz8K+9MfQfJf/dEei+Za7I8E/bKOo57rHtoz/dHM7CuvsT+asrj3BdqV
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
mzi7abzBOgPPFTTeYGDnTQ2MNwtdg480PuFmGncOjU9Qr7u6BePT+nXHRbwv
nzfnfqP3BZqfrx7B+6J7wfIw7XMhu66yhfa5cF/t0xbsc82mxDjSewdTBUOL
6L0D7nUlM/DeZf48eYD272TuiRhN2r/DMZcV/di//wi4OTv8WA0YVqd4tYUV
wpOchTo4fxBlhXbac+SSJ8Wr2bZP0PMmF3VwvqFWabHm9JiUopBAmz3NG3/9
roHc41qfuouLQYI3dcqMIwWwEDqZeQ4rfvZG4bZ8UjY5zVHTuQVez3UdxLnQ
3/HhpZwkQ/MVsLutnWJD81VJ5N0n2Spp8N3M3Uf4WhOEZtQE4hxs2Kff0V8w
DySfBCW3X6uFoNPGSThPm2g7cY93MA+ME6dMrl9VCoUHVz3DuVyQkS+TPwMb
eRQxr2pN+ZMnkxd0J+Hcb5fXcyY/v4z6M/cTUvaYiu/Ig6FNdZgnPXerN2Ke
nDOyMR1xOOUyiQPnPAWyaxURB+7zcVKI57cFVXo4DxmecC5HPC0UuE9ifdUu
cGcm5s+GzBSmvhJtHB7CeAtXHYnHvNQ9kX8V461m3vG7GG/THTy/Yh5r6fB8
j/F2XH4zzhPgc7tNOc4T7t9/KIdxpS06KK/2uZOsOOX+2OhMNnkS2LTl+Pwm
cDinMyjkTvOVqGNpkfknwjfr8xWfTSWw03zFMt2wPpIhOiF0afJX0qeVn9Vp
nAkHwjSFKR28nZ+LIl325dSvSD8mXKQaxN1NXkzW5gkSjCRXL+8Y9RlrgNc6
QmmHPfrIQtfs0aa4GJL70LbXnta/hpJrD2B+cFKcXo3550fFIlfMD3Vn553A
fi1U4Ews5quqNaeZfm37s6m7KH+YbisqiPzFTPMnPaH8z2Q0q6HcRsuE7kDB
SFhSWDSCcqUGjxzGvKfZxyrAvq858hyT956c2s/kvfF3jhOYl4yPBgej3NE9
uqlUT+ifVjKtOS4GPuQFDKOegd2zVVCu4HjnUioXVL01pqDcsbFsxIG8KalH
HGCrG1cm4mDnlL4U8SlMyViFdOVrYflIL6tv6qc4g7v4OhbFGfp4VewR54M/
uddQv8Dt2/LR1C+wf6nXTvSL9TppZi7UzNrHwvywOp5fFP0496uLPb5f1obF
1Zhn+H3ictDvqi92DuD7Nbe84wvmpZf2O20xTq4Z9B/Cd3nn6GshrNvtdmkw
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
V5UhxzeHElYK08DtSug1I5VaZL/78F+tPRWI4aXv3dvFo7AtSedNm3grosec
KT5m3IIMWxzdC48PwV/7N+YpSzvRpRW9mSwsfcg2OqLO+kUvFPbmJb/92YQE
ppjDVFcPI6X8B7P0vc2Qwdj0IHptL3LuBj/yPDbTFgFh8tzOqqE3g1XHOtGh
vfV25Pnti0WO4+T5bbWZM7H//k7f6YV5Xcw3SsP2waJAMpTYL7z8nrK/3H/P
asfCJnToXbMJCFahe0GdExeiRkDY2GmV6t8WtNO8ZY2wTRXSOt+x/9WWEfBP
Wz0gNtGDzquZHt8U04pumJ7XmV7ZDzWXx/azP+5HD1Gq+gT+++afjzeFyraA
0vegZ+qmfUjmsIRu9I7vyLBdPbenMRd4v8nN6BkPoh1rflqS56gl40N9yXNc
u+/1CP1bT9ZZ0JN36cqI/rtdcaH9nqLlE2wfFHWRAbGfoD5TQOxXuMinrhcZ
BWXX2SMJvS1I6ffZSONtyRD0IDY2V6kexbN4azDNILRlr5hIwmoaAOuWGa63
nUhlj7dIy6ZKJD9xXy6pdAhoM/0yF6q70Oh9Ftkp7grEVjj8Y1hhCEKcx5Zt
LBpA0TXzms5VjWg077TRug09UJrYaDTuOYyW3y1tPH+2DUl11FhU3q2BVWPt
JmM2o8hue6BtCV8z8mW5KkJ0Bl3GQo3uUhpa6fmQmejDehMjW4g+/J/ed4up
lS+1e0VHO7qYn5Lnrh0PrjMlzw1uFREKIN+V81n4rty5he/KmV/dZntEmwax
9zdI1wTUoalAj+LzkUkwJGlG6Tbl4SGnu2QaUFec1ADRbcQtNO9ViDQjGy2k
KC+ahqo+B21KthqFlxsY8tLwPpzkMf4WdqoYnYlQ2Sc29h3k/Fk4iV7UdIq1
eEK1Dnm9Xy9C9KLtXG9PObYPoUUe1l9fb69G4rMTq7wLOqA26mMUHhcdGP57
hIy7T/pcHRn3RhTbVSYdGloR20PXi6tEDh96+4neG8KyNbdFloa4mJ65keeo
/ddAM3le9D/hEx8YKaza1IruXdnYXe8VhZYVVVWGz43AoucRlF6n7BKhOZyY
iaQ0/lJ6Xa+MkgbR6/Qk7k+ocRSjc0WyYUSv62HO7bD7NIryJp4v9XNvQvf6
nd6+XZHwH8et4tAYI3omc990FfudOBTCdOIE0TPhiSAj0f1exuW/I/wke/7C
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
8tyXXn3Uc+2ZzeKJnrzlrCq1zlrW/6xzy6n1JkRP7tyesJO8V/eMI/Velkv7
EdGTW3q/tBA/iD66QPmh+cmeQaInC9YNSRO/mTjJU35Tn7p+nujJYps/XiJ+
Psl0nPKzspS2HdGTmXwit5H9OmkcSe3X8FSnJ9GTH7L4UfvF+D2V2i+V9jdN
6vGeyLMzfGWL5Ffk0dbRDNg+dXKtz+srMcj7UZQKCshGdvyq3OEf6LDmzetm
VdYoFPO0uFmwqgBNMjBvXqtEh3X+y6zlLkTDoWT/Ui/vXNSqkVQgZkwH2epb
wqKV0RBt+J65NT0DeT7M0rYPwHXZBaEf2/S9YcB39+zmzG/o9R4mBjscbxr2
KwY82AKQQIP2kq5PnmjzPxnzgD90OO/+NMFDIBRJqk3syN4QgF7Ofpc1H6bD
1y/tcbnlmSAydmDDq/IKFLDtztOkjzSA8PdJ2+UzQPNUnEHMTD7yFWO71ypA
h0mutxt8XqYAm4yiwYrwDJS7XfiLtg0dLsdt3G5+PwCeS6flBp3+jsKPvepb
ip9rcwVt2aoQjtr3BR0S3ueDTNl9aXT83PWvnmwfKIhFr9BYUIhLMDr7TPer
GM6DplMprfH/ktGSGMUQ26exyIfenOCUTAedqCWDbapViEUwYfOJL41oJvvy
ZPv3QRi5PrnHjrkKjW/fkZ6f3onu3d859flKH4SayJzqD8lDy/ctSwsw+Y0+
GgQVF813wy/044ishyPIeRpdeHqkH12dPTD6Mb4LLgjQL5t/rQRxgyD9Rxr1
iEmTqaYPhmDhYtzSvLISCPexo9/jqUBdDCUM/7bSoCar64k7Ux6UilxOtqnM
Qadcdpfs5KYDl/B00Ou7GRCy3fbV69FkJGZ//VOMPR38GA4+sJwPgcMFxmxe
DN7ocPVE6tcROphdajngURWL2s+fn6z44Yviwx4JjnXQ4WVXUPtfWgoSflhm
PdoXhpxgldhIJo6f23kcR1lyUMjN2L07mXCd3bRM/bIJ5vlni2qkd5Yif5Vr
ZgFZWcijsKebuYwG94a1P939046+f/DPsP3XgQz+sEppK3eDdILAKtaAdpS8
5EtmIkMfCu3xalqyvRGSl1+RkVf7hTZv6mZW0BlGjXPrtHbxV0Dg1ME+jfWZ
EMUfHzk7QkP5f063FVQVQ/82h0IP32Y4OcFFWx4zgLZlMLkqe1fDhjlVG5uV
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
     "]], {{}, {}, 
    {GrayLevel[0], Thickness[0.01], Line3DBox[CompressedData["
1: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
      "]]}}},
  AutomaticImageSize->True,
  Axes->{True, True, False},
  AxesLabel->{
    FormBox["\"x\"", TraditionalForm], 
    FormBox["\"y\"", TraditionalForm], None},
  BoxRatios->{1, 1, 0.4},
  ImageSize->{360., 360.},
  LabelStyle->Medium,
  Method->{"RotationControl" -> "Globe"},
  PlotRange->{{-3, 3}, {-3, 3}, {0, 10}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], Automatic},
  SphericalRegion->True,
  ViewPoint->{0, 0, 20},
  ViewVertical->{0., 0., 1.}]], "Output",
 CellChangeTimes->{
  3.529252036175233*^9, {3.529252113452914*^9, 3.5292521545616813`*^9}, {
   3.529252198490363*^9, 3.5292522533187184`*^9}, {3.5297597353584814`*^9, 
   3.529759752717961*^9}, {3.529759909843247*^9, 3.5297599381323986`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"z0", " ", "=", 
   RowBox[{"-", " ", "I"}]}], ";", "  ", 
  RowBox[{"r", "=", " ", 
   RowBox[{"1", "/", "2"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"zzz", "=", " ", 
   RowBox[{"z0", " ", "+", "  ", 
    RowBox[{"r", "*", 
     RowBox[{"Exp", "[", 
      RowBox[{"I", " ", "\[Theta]"}], "]"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"integrand", " ", "=", " ", 
  RowBox[{
   RowBox[{"g", "[", "zzz", "]"}], " ", 
   RowBox[{
    RowBox[{"D", "[", 
     RowBox[{"zzz", ",", "\[Theta]"}], "]"}], " ", "/", 
    RowBox[{"(", 
     RowBox[{"2", " ", "Pi", " ", "I"}], ")"}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{"residue", " ", "=", " ", 
  RowBox[{"Integrate", "[", 
   RowBox[{"integrand", " ", ",", 
    RowBox[{"{", 
     RowBox[{"\[Theta]", ",", "0", ",", 
      RowBox[{"2", "Pi"}]}], "}"}]}], "]"}], " ", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"This", " ", "is", " ", "for", " ", "Z"}], " ", "=", " ", 
    RowBox[{"-", "I"}]}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.529252184230791*^9, 3.529252190630599*^9}, {
  3.5297602335835342`*^9, 3.529760275772269*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{"3", " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"\[ImaginaryI]", " ", "\[Theta]"}]]}], 
  RowBox[{"4", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "\[ImaginaryI]"}], "+", 
     FractionBox[
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"\[ImaginaryI]", " ", "\[Theta]"}]], "2"], "+", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "\[ImaginaryI]"}], "+", 
        FractionBox[
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"\[ImaginaryI]", " ", "\[Theta]"}]], "2"]}], ")"}], "3"]}], 
    ")"}], " ", "\[Pi]"}]]], "Output",
 CellChangeTimes->{
  3.5292522245195827`*^9, {3.529759736718441*^9, 3.5297597536279335`*^9}, 
   3.529759878274194*^9, 3.529759933872526*^9, 3.529760230983612*^9, {
   3.5297602675625153`*^9, 3.529760286491947*^9}}],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox["3", "2"]}]], "Output",
 CellChangeTimes->{
  3.5292522245195827`*^9, {3.529759736718441*^9, 3.5297597536279335`*^9}, 
   3.529759878274194*^9, 3.529759933872526*^9, 3.529760230983612*^9, {
   3.5297602675625153`*^9, 3.529760287441919*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"z0", " ", "=", " ", "I"}], ";", "  ", 
  RowBox[{"r", "=", " ", 
   RowBox[{"1", "/", "2"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"zzz", "=", " ", 
   RowBox[{"z0", " ", "+", "  ", 
    RowBox[{"r", "*", 
     RowBox[{"Exp", "[", 
      RowBox[{"I", " ", "\[Theta]"}], "]"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"integrand", " ", "=", " ", 
  RowBox[{
   RowBox[{"g", "[", "zzz", "]"}], " ", 
   RowBox[{
    RowBox[{"D", "[", 
     RowBox[{"zzz", ",", "\[Theta]"}], "]"}], " ", "/", 
    RowBox[{"(", 
     RowBox[{"2", " ", "Pi", " ", "I"}], ")"}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{"residue", " ", "=", " ", 
  RowBox[{"Integrate", "[", 
   RowBox[{"integrand", " ", ",", 
    RowBox[{"{", 
     RowBox[{"\[Theta]", ",", "0", ",", 
      RowBox[{"2", "Pi"}]}], "}"}]}], "]"}], " ", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"This", " ", "is", " ", "for", " ", "z"}], " ", "=", " ", "I"}], 
   " ", "*)"}]}]}], "Input",
 CellChangeTimes->{{3.5292521769810085`*^9, 3.5292521824408445`*^9}, {
  3.529760242013282*^9, 3.5297602454531784`*^9}, {3.5297602794821577`*^9, 
  3.5297602804921274`*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{"3", " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"\[ImaginaryI]", " ", "\[Theta]"}]]}], 
  RowBox[{"4", " ", 
   RowBox[{"(", 
    RowBox[{"\[ImaginaryI]", "+", 
     FractionBox[
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"\[ImaginaryI]", " ", "\[Theta]"}]], "2"], "+", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"\[ImaginaryI]", "+", 
        FractionBox[
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"\[ImaginaryI]", " ", "\[Theta]"}]], "2"]}], ")"}], "3"]}], 
    ")"}], " ", "\[Pi]"}]]], "Output",
 CellChangeTimes->{
  3.529252213429915*^9, {3.5297597381183987`*^9, 3.529759754587905*^9}, 
   3.5297598864439487`*^9, 3.5297599415622954`*^9, 3.529760287471918*^9}],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox["3", "2"]}]], "Output",
 CellChangeTimes->{
  3.529252213429915*^9, {3.5297597381183987`*^9, 3.529759754587905*^9}, 
   3.5297598864439487`*^9, 3.5297599415622954`*^9, 3.529760288431889*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"z0", " ", "=", " ", "0"}], ";", "  ", 
  RowBox[{"r", "=", " ", 
   RowBox[{"1", "/", "2"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"zzz", "=", " ", 
   RowBox[{"z0", " ", "+", "  ", 
    RowBox[{"r", "*", 
     RowBox[{"Exp", "[", 
      RowBox[{"I", " ", "\[Theta]"}], "]"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"integrand", " ", "=", " ", 
  RowBox[{
   RowBox[{"g", "[", "zzz", "]"}], " ", 
   RowBox[{
    RowBox[{"D", "[", 
     RowBox[{"zzz", ",", "\[Theta]"}], "]"}], " ", "/", 
    RowBox[{"(", 
     RowBox[{"2", " ", "Pi", " ", "I"}], ")"}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{"residue", " ", "=", " ", 
  RowBox[{"Integrate", "[", 
   RowBox[{"integrand", " ", ",", 
    RowBox[{"{", 
     RowBox[{"\[Theta]", ",", "0", ",", 
      RowBox[{"2", "Pi"}]}], "}"}]}], "]"}], " ", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"This", " ", "is", " ", "for", " ", "z"}], "=", "0"}], 
   "*)"}]}]}], "Input",
 CellChangeTimes->{{3.432911838514997*^9, 3.432911871265626*^9}, {
   3.4329119403450775`*^9, 3.4329119508452787`*^9}, {3.432912086176002*^9, 
   3.432912086597885*^9}, {3.4329122130846887`*^9, 3.4329122610856104`*^9}, {
   3.4329123338057566`*^9, 3.4329123338526325`*^9}, {3.4329123701033287`*^9, 
   3.432912646874267*^9}, {3.432912758845167*^9, 3.4329127850331697`*^9}, {
   3.432912858112698*^9, 3.4329128939258857`*^9}, {3.433012184173953*^9, 
   3.433012213283887*^9}, {3.4330122436282196`*^9, 3.433012467023134*^9}, {
   3.433012510039585*^9, 3.4330126479328575`*^9}, {3.4330127363876805`*^9, 
   3.433012813326658*^9}, {3.433012861155701*^9, 3.433012972439088*^9}, {
   3.4330130123929796`*^9, 3.433013307304892*^9}, {3.4330133539932885`*^9, 
   3.4330134318072824`*^9}, {3.4330135014336195`*^9, 
   3.4330136989374113`*^9}, {3.4330137581260476`*^9, 
   3.4330137584698043`*^9}, {3.433013828205518*^9, 3.433013829189912*^9}, {
   3.4330141354145412`*^9, 3.4330145177656326`*^9}, {3.4330145876263485`*^9, 
   3.433014676268676*^9}, {3.433014712378744*^9, 3.4330148457719297`*^9}, {
   3.4330148781319265`*^9, 3.4330149235077977`*^9}, {3.4330149811651545`*^9, 
   3.4330149869933915`*^9}, {3.43301504447887*^9, 3.4330150773857517`*^9}, {
   3.4330151278242207`*^9, 3.433015184325305*^9}, {3.433015222138531*^9, 
   3.4330152617955427`*^9}, {3.433015306093268*^9, 3.433015406204565*^9}, {
   3.433015440611476*^9, 3.4330155431915703`*^9}, 3.433015586442401*^9, {
   3.433015620068046*^9, 3.4330156514592743`*^9}, {3.4330157239919167`*^9, 
   3.4330157439923005`*^9}, {3.433016682479069*^9, 3.4330167159015856`*^9}, {
   3.433020454301487*^9, 3.4330204561140213`*^9}, {3.433081936947554*^9, 
   3.433081953144578*^9}, {3.433097520099688*^9, 3.4330975600674667`*^9}, {
   3.433097599708685*^9, 3.433097608668137*^9}, 3.433102833167563*^9, {
   3.433103998641814*^9, 3.433103998777248*^9}, {3.4335339101233473`*^9, 
   3.433533912795205*^9}, {3.5292521694312353`*^9, 3.5292521744710836`*^9}, {
   3.529760247763109*^9, 3.529760281802088*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{"3", " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"\[ImaginaryI]", " ", "\[Theta]"}]]}], 
  RowBox[{"4", " ", 
   RowBox[{"(", 
    RowBox[{
     FractionBox[
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"\[ImaginaryI]", " ", "\[Theta]"}]], "2"], "+", 
     RowBox[{
      FractionBox["1", "8"], " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"3", " ", "\[ImaginaryI]", " ", "\[Theta]"}]]}]}], ")"}], " ", 
   "\[Pi]"}]]], "Output",
 CellChangeTimes->{{3.529252086773715*^9, 3.5292521551516633`*^9}, {
   3.5297597385383863`*^9, 3.5297597554278793`*^9}, 3.52975989340374*^9, 
   3.529759924282814*^9, 3.5297602884618883`*^9}],

Cell[BoxData["3"], "Output",
 CellChangeTimes->{{3.529252086773715*^9, 3.5292521551516633`*^9}, {
   3.5297597385383863`*^9, 3.5297597554278793`*^9}, 3.52975989340374*^9, 
   3.529759924282814*^9, 3.529760288561885*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"z0", " ", "=", " ", "0"}], ";", "  ", 
  RowBox[{"r", "=", " ", 
   RowBox[{"3", "/", "2"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"zzz", "=", " ", 
   RowBox[{"z0", " ", "+", "  ", 
    RowBox[{"r", "*", 
     RowBox[{"Exp", "[", 
      RowBox[{"I", " ", "\[Theta]"}], "]"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"integrand", " ", "=", " ", 
  RowBox[{
   RowBox[{"g", "[", "zzz", "]"}], " ", 
   RowBox[{
    RowBox[{"D", "[", 
     RowBox[{"zzz", ",", "\[Theta]"}], "]"}], " ", "/", 
    RowBox[{"(", 
     RowBox[{"2", " ", "Pi", " ", "I"}], ")"}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{"residue", " ", "=", " ", 
  RowBox[{"Integrate", "[", 
   RowBox[{"integrand", " ", ",", 
    RowBox[{"{", 
     RowBox[{"\[Theta]", ",", "0", ",", 
      RowBox[{"2", "Pi"}]}], "}"}]}], "]"}], " ", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"This", " ", "is", " ", "for", " ", "z"}], "=", 
     RowBox[{
     "0", " ", "with", " ", "larger", " ", "r", " ", "to", " ", "include", 
      " ", "all", " ", "three", " ", "points"}]}], ",", " ", 
    RowBox[{"residual", " ", "=", 
     RowBox[{"0", " ", "so", " ", 
      RowBox[{"good", "!"}]}]}]}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.5292522656383486`*^9, 3.529252308657058*^9}, {
  3.529760249843047*^9, 3.5297602824120693`*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{"9", " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"\[ImaginaryI]", " ", "\[Theta]"}]]}], 
  RowBox[{"4", " ", 
   RowBox[{"(", 
    RowBox[{
     FractionBox[
      RowBox[{"3", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"\[ImaginaryI]", " ", "\[Theta]"}]]}], "2"], "+", 
     RowBox[{
      FractionBox["27", "8"], " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"3", " ", "\[ImaginaryI]", " ", "\[Theta]"}]]}]}], ")"}], " ", 
   "\[Pi]"}]]], "Output",
 CellChangeTimes->{3.529252300227311*^9, 3.5297597569578333`*^9, 
  3.529760288661882*^9}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.529252300227311*^9, 3.5297597569578333`*^9, 
  3.52976028906187*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Applications (45 min)", "Section",
 CellChangeTimes->{{3.4306009820872726`*^9, 3.4306009986500907`*^9}, {
   3.430607504087493*^9, 3.4306075152908325`*^9}, {3.431182354054803*^9, 
   3.4311823567267294`*^9}, {3.4311825544336505`*^9, 3.431182554574278*^9}, {
   3.431190573165732*^9, 3.431190601072518*^9}, {3.431201043366756*^9, 
   3.431201044929286*^9}, 3.4314665256696043`*^9, 3.4314665763961973`*^9, 
   3.431466615222662*^9, 3.431488602552561*^9, {3.4318058304191175`*^9, 
   3.4318058361536026`*^9}, {3.4318064206804504`*^9, 
   3.4318064225242357`*^9}, {3.4318076741107655`*^9, 
   3.4318076836890745`*^9}, {3.4318082132929926`*^9, 
   3.4318082134336205`*^9}, {3.431897534720481*^9, 3.431897534876734*^9}, 
   3.4320716408573427`*^9, {3.43207404935671*^9, 3.432074049700467*^9}, 
   3.4324110404222517`*^9, 3.43248857343566*^9, {3.432516059264507*^9, 
   3.4325160610457907`*^9}, {3.4325165428831673`*^9, 3.432516543101921*^9}, {
   3.432587619790475*^9, 3.43258763410325*^9}, {3.4325876875886517`*^9, 
   3.4325876878386564`*^9}, {3.432588000407158*^9, 3.4325880005321603`*^9}, {
   3.4326596728308268`*^9, 3.432659673010415*^9}, {3.4329101735924063`*^9, 
   3.4329101851238775`*^9}, 3.433090849373167*^9, {3.433090943136037*^9, 
   3.433090957611125*^9}, 3.4332037210203037`*^9, 3.433203776271718*^9, 
   3.4332039073531985`*^9, {3.433203964089026*^9, 3.433203964417159*^9}, {
   3.524861333554629*^9, 3.524861334816755*^9}, {3.52486817844005*^9, 
   3.52486818071765*^9}}],

Cell[CellGroupData[{

Cell["\<\
(#10) Light absorption (10 min)\
\>", "Subsection",
 CellChangeTimes->{{3.4322913386865587`*^9, 3.432291347014843*^9}, {
   3.4322914131723633`*^9, 3.4322914151880274`*^9}, 3.432470192010652*^9, {
   3.432471282219102*^9, 3.432471283576335*^9}, 3.432480755039879*^9, {
   3.432480793555401*^9, 3.4324808120161247`*^9}, 3.432480854859672*^9, {
   3.43248165598464*^9, 3.4324816571925917`*^9}, 3.4325629132540216`*^9, 
   3.4325877117453656`*^9, {3.4325880147980595`*^9, 3.432588014938687*^9}, 
   3.4326596846686373`*^9, {3.432910168545434*^9, 3.4329101705454726`*^9}, {
   3.432916829188941*^9, 3.4329168327515097`*^9}, {3.4329168992527866`*^9, 
   3.432916906049792*^9}, 3.432916949409999*^9, {3.433020386393933*^9, 
   3.4330203901596303`*^9}, {3.4330291163740454`*^9, 
   3.4330291167959285`*^9}, {3.4331847300497723`*^9, 
   3.4331847412375584`*^9}, {3.4331949926718636`*^9, 
   3.4331950121411123`*^9}, {3.4331950586110516`*^9, 3.4331950654862275`*^9}, 
   3.4332003250271187`*^9, {3.433203883868222*^9, 3.433203887227683*^9}, {
   3.52486917442205*^9, 3.52486917496805*^9}}],

Cell[TextData[{
 "Because light is an electromagnetic wave, we can describe it in terms of \
electric and magnetic fields that propagate as travelling waves.   The \
electric-field of a linearly-polarized laser beam travelling along the ",
 StyleBox["x",
  FontSlant->"Italic"],
 " direction, for example, can be described by complex sinusoid, ",
 StyleBox["A",
  FontSlant->"Italic"],
 " ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{" ", 
     RowBox[{"i", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"k", " ", "x"}], " ", "-", " ", 
        RowBox[{"\[Omega]", " ", "t"}]}], ")"}]}]}]], TraditionalForm]]],
 ", where ",
 StyleBox["A",
  FontSlant->"Italic"],
 " is amplitude, ",
 StyleBox["k",
  FontSlant->"Italic"],
 " is wavevector and \[Omega] is angular frequency.  The position dependence \
of the electric field at time ",
 StyleBox["t",
  FontSlant->"Italic"],
 " = 0 (i.e. a snapshot) can then be written as ",
 StyleBox["A",
  FontSlant->"Italic"],
 " ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{" ", 
     RowBox[{"i", " ", "k", " ", "x"}]}]], TraditionalForm]]],
 ".\n\nAll materials absorb light.  Highly transparent material absorb only \
weakly, while other material absorb strongly and therefore appear to be \
opaque.  The phenomenon of absorption is best described in terms of a complex \
electric permitivity (\[Epsilon]) which then leads to a complex index of \
refraction (",
 StyleBox["n",
  FontSlant->"Italic"],
 " = ",
 Cell[BoxData[
  FormBox[
   SqrtBox[
    RowBox[{"\[Epsilon]", "/", 
     SubscriptBox["\[Epsilon]", "0"]}]], TraditionalForm]]],
 ") and a complex wavevector (",
 StyleBox["k",
  FontSlant->"Italic"],
 " = ",
 StyleBox["n",
  FontSlant->"Italic"],
 " \[Omega] /",
 StyleBox["c",
  FontSlant->"Italic"],
 ").\n\n(a)  In the cell below, express the electric field as ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{" ", 
     RowBox[{"i", " ", "k", " ", "x"}]}]], TraditionalForm]]],
 " (implying that the incident amplitude is ",
 StyleBox["A",
  FontSlant->"Italic"],
 " = 1).  Next, use variable replacement to make the wavevector explicitly \
complex (i.e. ",
 StyleBox["k",
  FontSlant->"Italic"],
 " \[Rule] ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["k", "R"], " ", "+", " ", 
    RowBox[{"i", " ", 
     SubscriptBox["k", 
      StyleBox["I",
       FontFamily->"Courier",
       FontSize->9]]}]}], TraditionalForm]]],
 ").  Then demonstrate that ",
 StyleBox["Re",
  FontWeight->"Bold"],
 " and ",
 StyleBox["ComplexExpand",
  FontWeight->"Bold"],
 " work together to produce an expression for the real part of the field that \
doesn't contain ",
 StyleBox["i",
  FontSlant->"Italic"],
 ".   Finally, explain to your TA the distinct roles that ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["k", "R"], " "}], TraditionalForm]]],
 "and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["k", 
    StyleBox["I",
     FontFamily->"Courier",
     FontSize->9]], TraditionalForm]]],
 " play in the ",
 StyleBox["x",
  FontSlant->"Italic"],
 "-dependence of the field."
}], "Text",
 CellChangeTimes->{{3.4324110514224634`*^9, 3.432411051922473*^9}, {
   3.432411399257266*^9, 3.4324117777957845`*^9}, {3.4324807622472754`*^9, 
   3.432480783175516*^9}, 3.432910162982827*^9, {3.4331792444249687`*^9, 
   3.433179245128112*^9}, {3.4331847460814323`*^9, 3.4331849672902203`*^9}, {
   3.433185422489373*^9, 3.4331856442606754`*^9}, {3.4331856823866515`*^9, 
   3.4331856950432253`*^9}, {3.4331911510266447`*^9, 
   3.4331923607607384`*^9}, {3.433192420434141*^9, 3.433192421059157*^9}, {
   3.4331924665446963`*^9, 3.433192489685914*^9}, {3.4331925238117876`*^9, 
   3.4331925626096554`*^9}, {3.433192669784274*^9, 3.433192862242326*^9}, {
   3.4331929236345224`*^9, 3.4331929848392143`*^9}, {3.433193093263865*^9, 
   3.4331933980997934`*^9}, {3.4331934557731447`*^9, 3.433193463429591*^9}, {
   3.4331935045087676`*^9, 3.4331935980736628`*^9}, {3.433194138368744*^9, 
   3.43319416477567*^9}, {3.4331941972140007`*^9, 3.43319440051608*^9}, {
   3.433194440595231*^9, 3.4331946083338995`*^9}, {3.433201966881649*^9, 
   3.4332019679285507`*^9}, {3.4428745038989058`*^9, 3.4428745055551453`*^9}}],

Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<`*\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.5297595208349175`*^9, 3.5297595247048016`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"field", "[", "x_", "]"}], ":=", "  ", 
  RowBox[{"Exp", "[", 
   RowBox[{"I", "*", "k", "*", "x"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.433184969649656*^9, 3.4331853934261293`*^9}, {
   3.4331857237314596`*^9, 3.4331857793578835`*^9}, {3.433185836546848*^9, 
   3.433185951909176*^9}, {3.433185991925825*^9, 3.4331861384139504`*^9}, 
   3.433186182493204*^9, {3.4331867321478996`*^9, 3.4331869064023604`*^9}, {
   3.433186977232299*^9, 3.433187064437656*^9}, {3.4331870950790653`*^9, 
   3.4331870990166664`*^9}, {3.4331871679559307`*^9, 
   3.4331871737685795`*^9}, {3.433187679500276*^9, 3.4331878273790617`*^9}, {
   3.4331880872294636`*^9, 3.4331881296680503`*^9}, {3.4331881638876762`*^9, 
   3.433188296234814*^9}, {3.433188329813799*^9, 3.4331883388452797`*^9}, {
   3.433188373080531*^9, 3.4331884622234383`*^9}, {3.433189911401161*^9, 
   3.4331899129637012`*^9}, {3.4331900519828854`*^9, 3.433190054607952*^9}, {
   3.4331910585867786`*^9, 3.433191065602583*^9}, {3.4331922816180873`*^9, 
   3.433192286993225*^9}, {3.433192588641572*^9, 3.4331926023294225`*^9}, 
   3.4331926422523193`*^9, {3.433192994933223*^9, 3.4331930633724747`*^9}, {
   3.433193221689028*^9, 3.433193232954941*^9}, {3.4331934172877846`*^9, 
   3.4331934471479244`*^9}, {3.4331939708019543`*^9, 3.4331939721457386`*^9}, 
   3.4335335024697065`*^9, {3.529495488370125*^9, 3.5294955104739723`*^9}, {
   3.529495544769717*^9, 3.529495549561054*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"kf", "[", "x_", "]"}], ":=", 
  RowBox[{
   RowBox[{"field", "[", "x", "]"}], "/.", 
   RowBox[{"k", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"(", 
      RowBox[{"kr", "+", 
       RowBox[{"I", "*", "ki"}]}], ")"}], "}"}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{"ComplexExpand", "[", 
  RowBox[{"Re", "[", "kf", "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.529495484687705*^9, 3.529495486130031*^9}, {
  3.5294955393941393`*^9, 3.52949563664672*^9}, {3.5294957109506197`*^9, 
  3.52949576990763*^9}, {3.5297595104052305`*^9, 3.5297595154750786`*^9}, {
  3.529759610462229*^9, 3.5297596114621987`*^9}}],

Cell[BoxData["kf"], "Output",
 CellChangeTimes->{{3.529495583782605*^9, 3.529495637051532*^9}, {
   3.529495716251753*^9, 3.529495732255904*^9}, {3.529495762505537*^9, 
   3.529495770852174*^9}, 3.5297591198059487`*^9, {3.52975951207518*^9, 
   3.529759530264635*^9}, {3.529759587842907*^9, 3.529759618511987*^9}, 
   3.529759661580695*^9, 3.529759776287254*^9}]
}, Open  ]],

Cell[TextData[{
 "\n(b) An optical material with complex index of refraction ",
 StyleBox["n",
  FontSlant->"Italic"],
 " = 2 + 0.05",
 StyleBox["i",
  FontSlant->"Italic"],
 "  for red light (\[Omega] ~ ",
 Cell[BoxData[
  FormBox[
   RowBox[{"3", "\[Cross]", 
    SuperscriptBox["10", "15"]}], TraditionalForm]]],
 "rad/sec) for example will have wave-vector ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["k", "R"], "+", 
    SubscriptBox["k", 
     StyleBox["I",
      FontFamily->"Courier",
      FontSize->9]]}], TraditionalForm]]],
 " = 20 + 0.5",
 StyleBox["i ",
  FontSlant->"Italic"],
 Cell[BoxData[
  FormBox[
   RowBox[{" ", 
    SuperscriptBox["\[Mu]m", 
     RowBox[{"-", "1"}]]}], TraditionalForm]]],
 ".  Make this replacement (e.g. ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["k", "R"], TraditionalForm]]],
 " \[Rule] 20 and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["k", 
    StyleBox["I",
     FontFamily->"Courier",
     FontSize->9]], TraditionalForm]]],
 " \[Rule] 0.5) and plot the electric field as a function of ",
 StyleBox["x",
  FontSlant->"Italic"],
 " over the range from 0 to 10 \[Mu]m."
}], "Text",
 CellChangeTimes->{{3.4331934771643176`*^9, 3.4331934882739773`*^9}, {
  3.4331937421242256`*^9, 3.4331938759714017`*^9}, {3.4331939073315797`*^9, 
  3.43319392373825*^9}, {3.433193987755513*^9, 3.4331941075085793`*^9}, {
  3.4331946267562466`*^9, 3.43319464644425*^9}, {3.4428745423361597`*^9, 
  3.4428745441798983`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"n", "=", " ", 
   RowBox[{"2", "+", 
    RowBox[{"0.05", "*", "I"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"wred", "=", "3*^15"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"k", " ", "=", " ", 
  RowBox[{"20", "+", 
   RowBox[{"0.5", "*", "I"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"plotfield", "[", "x_", "]"}], ":=", 
  RowBox[{
   RowBox[{"kf", "[", "x", "]"}], "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"kr", "\[Rule]", "20"}], ",", 
     RowBox[{"ki", "\[Rule]", "0.5"}]}], "}"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"ComplexExpand", "[", 
    RowBox[{"Re", "[", 
     RowBox[{"plotfield", "[", "x", "]"}], "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "10"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.433184969649656*^9, 3.4331853934261293`*^9}, {
   3.4331857237314596`*^9, 3.4331857793578835`*^9}, {3.433185836546848*^9, 
   3.433185951909176*^9}, {3.433185991925825*^9, 3.4331861384139504`*^9}, 
   3.433186182493204*^9, {3.4331867321478996`*^9, 3.4331869064023604`*^9}, {
   3.433186977232299*^9, 3.433187064437656*^9}, {3.4331870950790653`*^9, 
   3.4331870990166664`*^9}, {3.4331871679559307`*^9, 
   3.4331871737685795`*^9}, {3.433187679500276*^9, 3.4331878273790617`*^9}, {
   3.4331880872294636`*^9, 3.4331881296680503`*^9}, {3.4331881638876762`*^9, 
   3.433188296234814*^9}, {3.433188329813799*^9, 3.4331883388452797`*^9}, {
   3.433188373080531*^9, 3.4331884622234383`*^9}, {3.433189911401161*^9, 
   3.4331899129637012`*^9}, {3.4331900519828854`*^9, 3.433190054607952*^9}, {
   3.4331910585867786`*^9, 3.433191065602583*^9}, {3.4331922816180873`*^9, 
   3.433192286993225*^9}, {3.433192588641572*^9, 3.4331926023294225`*^9}, 
   3.4331926422523193`*^9, {3.433192994933223*^9, 3.4331930633724747`*^9}, {
   3.433193221689028*^9, 3.433193232954941*^9}, {3.4331934172877846`*^9, 
   3.43319343075688*^9}, {3.433193934379147*^9, 3.4331939828022614`*^9}, 
   3.433533504672817*^9, {3.529495777362794*^9, 3.5294958221461277`*^9}, {
   3.529495865688704*^9, 3.529495941934238*^9}, {3.529759293871727*^9, 
   3.529759503715431*^9}, {3.5297595465441465`*^9, 3.529759603632434*^9}, {
   3.529759640241335*^9, 3.5297597044594088`*^9}, {3.5297601075573153`*^9, 
   3.5297601236168337`*^9}}],

Cell[BoxData[
 RowBox[{"20.`", "\[VeryThinSpace]", "+", 
  RowBox[{"0.5`", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{{3.529495905371078*^9, 3.529495942333971*^9}, 
   3.529759120475929*^9, {3.5297592953416824`*^9, 3.529759305461379*^9}, {
   3.5297593377704096`*^9, 3.52975937608926*^9}, 3.529759442217276*^9, {
   3.529759489795849*^9, 3.5297597048893957`*^9}, 3.5297597769372344`*^9, 
   3.52976012406682*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], 
    LineBox[{{0.36934466669569704`, 0.37424577602003134`}, {
     0.38248395099967614`, 0.16756880172197947`}, {0.38580890348153996`, 
     0.11326812507291484`}, {0.3891338559634037, 0.058647513853995886`}, {
     0.3957837609271313, -0.050584926516696986`}, {
     0.40908357085458646`, -0.2623197888095582}, {
     0.4121881843678198, -0.3092167507273767}, {
     0.41529279788105317`, -0.3547776593640662}, {
     0.41673905142606665`, -0.3749100593312672}}], 
    LineBox[{{0.9879935597282644, 0.37424577602003134`}, {0.9907728568355181, 
     0.34651429587067145`}, {0.9940745475135313, 0.31217016311566714`}, {
     1.000677928869558, 0.23990264803427078`}, {1.013884691581611, 
     0.08563692223198106}, {1.016966043290994, 0.048679544415904226`}, {
     1.0200473950003768`, 0.011651218052375359`}, {
     1.0262100984191425`, -0.06205627893341296}, {
     1.0292914501285253`, -0.09845672090060884}, {
     1.0323728018379081`, -0.13437170546518473`}, {
     1.0385355052566738`, -0.20420911074967246`}, {
     1.0416168569660567`, -0.23787084544319714`}, {
     1.0446982086754395`, -0.27052672097893116`}, {
     1.0508609120942052`, -0.33234243529909757`}, {
     1.053942263803588, -0.36127508353833393`}, {
     1.0554715394241947`, -0.3749100593312672}}], 
    LineBox[{{1.14180047131849, -0.3749100593312672}, {
     1.1433014633756908`, -0.36195383206405674`}, {
     1.1494641667944565`, -0.30499510149893705`}, {
     1.161789573631988, -0.17923189830446482`}, {
     1.1648709253413712`, -0.1460305554126852}, {
     1.167952277050754, -0.11237743484935442`}, {
     1.1741149804695197`, -0.04423286169306238}, {1.186440387307051, 
     0.0917719907916597}, {1.1895217390164339`, 0.12496261098710708`}, {
     1.1926030907258167`, 0.15757710661895794`}, {1.1987657941445824`, 
     0.22059298219265044`}, {1.2018471458539652`, 0.25075999061404763`}, {
     1.204928497563348, 0.27988300049157605`}, {1.2110912009821138`, 
     0.3345726901697045}, {1.2144305300493967`, 0.3619988235611899}, {
     1.2160204574150828`, 0.37424577602003134`}}], LineBox[CompressedData["
1:eJwBkQFu/iFib1JlAgAAABgAAAACAAAA4cO4deuZ+T/tBCuOpPPXP+BIBZEm
ofk/Lum+PBFe1z8wyB7uAbz5P2B1JOqS6dQ/2IernG/J+T9UZnxcto3TP4BH
OEvd1vk/K7nAhn8d0j/QxlGouPH5P+Xs/21aDc4/ccWEYm8n+j9ug28rwGPA
Px7kRgb2M/o/fp1Ph5AQuj/LAgmqfED6P0BZfT7yRbM/JUCN8YlZ+j9Ml2Tv
qz+WP9m6lYCki/o/9b9sgEqntb+G2VckK5j6P3d+6ug1RLy/M/gZyLGk+j/a
BW9idmDBv401ng+/vfo/3D9Kn7ygx786VGCzRcr6PyDOMhXNnMq/53IiV8zW
+j+XCHkJFH3Nv0Gwpp7Z7/o/kzBoTd1v0b/uzmhCYPz6P8vfWpaSrtK/m+0q
5uYI+z+DD+hYcNrTv0gM7YltFfs/Sfkof2by1L/1Kq8t9CH7P6AmtdF49dW/
oklx0Xou+z9kZlfZv+LWv09oM3UBO/s/LFs5rGm5178otNzdhz/7P8Y68cKG
/te/C8nSfA==
     "]], LineBox[CompressedData["
1:eJwB8QEO/iFib1JlAgAAAB4AAAACAAAAY4NEbt4B/D/GOvHChv7Xvx9TVbFr
A/w/+L4dg9bn17/McRdV8g/8P26+Y+JkGte/eZDZ+Hgc/D/kz2HkejfWvyav
m5z/KPw/2qDwWgJA1b/TzV1AhjX8P8MKngr4NNS/LQvih5NO/D+xkT7ReejR
v9oppCsaW/w/4H/Q2FSp0L+HSGbPoGf8P6x+CVhzts6/4YXqFq6A/D+opo2b
sy7Jv46krLo0jfw/+XML/JxIxr87w25eu5n8P7d83iB6T8O/lQDzpciy/D+h
gELxcF+6v0l7+zTj5Pw/3JDYAmjEcb/2mb3YafH8P/vQ0oHi55Q/o7h/fPD9
/D85llPnhwynP/31A8T9Fv0/KJUbyhnptz+xcAxTGEn9P+iAh3wHm8c/zJoT
ea1W/T9mJOzOY4bKP+bEGp9CZP0/eCNxTnNRzT8A7yHF13H9P3FO3E4t+c8/
Ghkp62x//T+djq64WT3RPzRDMBECjf0/PqU6Xapp0j9PbTc3l5r9Py1WHTlI
gNM/apc+XSyo/T9P8PFlDIDUP4TBRYPBtf0/CuDpqOpn1T+e60ypVsP9P3Fo
zonyNtY/uBVUz+vQ/T+56d5JUOzWP9I/W/WA3v0/QF2RuU2H1z91MbSM/+n9
P+0EK46k89c/tScJFQ==
     "]], LineBox[CompressedData["
1:eJwUV3dcze8Xb+9x7+12b0ioJBUlRIPnlJnqq52SlrQkTdKihERDkrTT3nuP
p733lgYhFRUho/W7v7/u67yec8/zPu/3+3Ne59ljcVP7GgMdHd13Vjq6//8q
HH/n6nJlEy0ySQYn/xhF4x9fO+labaKvVIfWq8mj6CdP5st5l01URNjW8psw
injkC2p8fDfRHaHUDwKWI0j8avkHvpBN9DGthi8+bhipBGH2jJhNNGTZf8K7
fggZl7VIn8zcREc6hfnrugfRrffdeoNlm+hiQcPQ06YB9Ixz2NOmeRNZHuN5
vyutH2UfnUjcGNhEv8NVNTtv9aEW0w+tYe82UenPfeULtj3oX9F3vpq1TXRv
eP6LE3M7Ik/9kddm30L3x7W45iVa0EE2OrPPlC0kJd0jNSXfiK4a82QTZbdQ
i41OR/mpStTFJHnaymYLTUvQsWyI3kSzB2Xt1ty2EPfM0+EkvxeYzlA+NPT+
FiorH/lMNUnDR3POTVTGbSHGZ+WZ9tzlOE7P0pV3eAutOz5KzX3cisvvXo9K
ntlCh09/MqZKdODBDOc6+W9bqJ7wI3g8swsvDd6Z7dnYQv7+a0Eq7L2Y6S6w
FDLTwb4gN3XzxD5MJJ9+5cVFB2wePZ1emf1YKOOc1Dk+OmiOMNUajxvAkifV
MHE7HdSM92W6ew/i44P/aU/spoPzc3U/bp4ZwmdstD+l7qMDuS3Sg5VfQ1h7
Q8/d6SAdPFz41qwRPIxNwww5lY7SgcezvMkF7hFsv+9KHIsSHfj4zZ256DqC
71SbHepXoYMyYaS0s34EP9SybIpWpYMHf+35yD9HcPistYGVJh18KNC7SuAe
xYme1xdkDOjgRBGbABfXKJapY//z6Aod6ObRny/5MYLrmNKZp6/SwdSVueqV
phGsqXqWT86ODl5KKbIz3RvB74I+7g5ypIPPGmHnT+4dwY4Dfgc/3qID5C9R
xVkyjLcoe5QUvengiRqLxhfpYRx8GauG3aeDp1uS7I4RQ1go4YrB/GM6YC2M
ugPzgzj345olhNLBm77En/z7B/GJ/VHOLyPo4JOT4ViV/gA2LhwJOpNEB+JW
FtZrPn3466prdEwGjc/NwbPrqz3YU5Ev40cejZ8kgxmVwS4c1XSxKbGaDhjn
6A/YnWzDEuxL/X8a6IC9rOf1t/5mXKHxdPpiOx24m0VQtrQa8dhI27+NYTrw
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
HYSqttT07z7MhkMVhmcfCgehE2KBI/VHiPkKkqOhJRCNKR7/eRbY0Lbt78ls
i0AUoC+0OKnAhvrFEjOlqQBEv/ppVaASG1KeeUbdtQhAD4JL+clHif6zX/IE
tfoj7Sz7rZUqbCjart5znuaPJu7KslTU2CC35j/OXyM/FNyyanf/MTZoCe20
EIn2RczPLyUdNIj+P0eesDLyQWfWn1fLPsEGI3LnmF6YB/q+bae25Ek2/Jd+
dIbs6oZC5abOtZxiw1LVuXZfLRdUaxlgN3eGDbvTJl3X1zugbY0lySfOscGt
2DDW7vMF9FpsvrDfkA3uukcb1Zr1kWuy2l1rY4KPhTAXOW8t1Go13hZ8gQ3e
vt6+IQES2EFg91psQfAj1z8QPnQJU909th63YoPf4+5V5dnW+NlQ6/Y+azaU
at6qX3nYDgvft1X8fZnAQxJ9PLDWCTcwH58MsmPDWSjcXc68hm3D+c9vtmeD
/M3LhgUsV4yNKjz2OrHBpih86/A7D2z5fDnssTPhB7f11l0RXniThFaqhgsb
EgY/7U9g+eDa9Jzi965siA3dcMtQ0xebc/+ssnBnAylo+tLyb18scAUaf3mw
IeLcQRlSgh9+2BP7JsCL8Gfpv7IdNH9sqvD500YfNugzF3BVkj/mK5f4nuPL
hnF4r2u45I+rBf2X9vizIX5zg3fryQBs4t3BWxvAhnfvt9+viw8g8oBNUg8i
/LR3NZOvIQDfPeW4410w4Td+x7SYjwHYsKbxoHkoG8L/cjqOjAVgnu2CyrNh
hH6ajx9lfArAldEXtf0j2ND6IneHWmMANpivMhGIYkPWgwKlwcQAzG36n112
NBtUH8Y/23EmAFe06niJxbLB02jFb7MVAVjvYHHEoziCn/HIr9OZ/nhFzlya
WgIbNIoWtyrs8Mdla1RLuxPZUBgnNt6S64fPOKRUX0xmg3/LRRkqrx9e7ht9
Op1C8HfBqK7NzBeXHpXp9E0j5nsb/Zdq5IO1b4V+Xp/BhriG3M30bi/8R/j9
j8xMgr+g23d2SXriExNufA9z2HDPPHh8psgVz+u0kFXziPkfrKQeeHwN52Py
rrf5RB6Na2e51znhX/E1R6eK2LDO0j7yR/xVnL207oxPCRuWv6Xmn3xpi9XM
DU35rxN6R/jsvIElzjz013vXDSI/zr9S5Q80xooDRx5cuEP4bdjbMtdZFk0c
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
M+ckj6EYC/RkRmTh3z8OyBh11O/4Yo3+B51qUig=
     "]], 
    LineBox[{{0.058723463606512136`, 0.37424577602003134`}, {
     0.06133970656090494, 0.3270708714430641}, {0.0736076070567594, 
     0.0949255768057964}, {0.07667458218072301, 0.035893263493124467`}, {
     0.07974155730468663, -0.023093161247483146`}, {
     0.08587550755261386, -0.14004392077573002`}, {
     0.09814340804846831, -0.3638059939527191}, {
     0.09879069313083984, -0.3749100593312672}}], 
    LineBox[{{0.6791455207022665, 0.37424577602003134`}, {0.6808279553842357, 
     0.3538933878368073}, {0.6838716687043489, 0.3152083674410697}, {
     0.686915382024462, 0.27547426141824416`}, {0.6930028086646882, 
     0.19346267294407044`}, {0.7051776619451406, 0.023621484011027673`}, {
     0.7082213752652537, -0.019129020391228237`}, {
     0.7112650885853669, -0.06167880179366119}, {
     0.7173525152255931, -0.1455504930604734}, {
     0.7203962285457062, -0.18656462091885828`}, {
     0.7234399418658193, -0.22676358826134485`}, {
     0.7295273685060456, -0.30413481454087943`}, {
     0.7325710818261588, -0.3410269826745241}, {
     0.7354747038106867, -0.3749100593312672}}], 
    LineBox[{{1.295312590825406, 0.37424577602003134`}, {1.2979137567314725`, 
     0.35440250428898895`}, {1.3045924148660386`, 0.2990978543998978}, {
     1.3179497311351707`, 0.17475412468224757`}, {1.3212890602024536`, 
     0.14162864247934287`}, {1.3246283892697366`, 0.10798275966777589`}, {
     1.3313070474043027`, 0.0397373222190744}, {
     1.3446643636734348`, -0.09629011866627023}, {
     1.348003692740718, -0.1293181548442667}, {
     1.351343021808001, -0.16166008304569768`}, {
     1.358021679942567, -0.22372270370840452`}, {
     1.36136100900985, -0.25317293954747644`}, {
     1.364700338077133, -0.2813973290811337}, {
     1.3713789962116991`, -0.33368846235888544`}, {
     1.374718325278982, -0.3575316628027877}, {
     1.3773357810450437`, -0.3749100593312672}}], LineBox[CompressedData["
1:eJwBQQG+/iFib1JlAgAAABMAAAACAAAAwV5CrLgq9z/GOvHChv7Xv6TYujNx
N/c/OtNqzpq+1r9MmEfi3kT3P1guWsVQSNW/9FfUkExS9z/4THci3LvTv0XX
7e0nbfc/XsWfP6Fn0L/m1SCo3qL3PxqUtyqIEMK/jpWtVkyw9z/0FnizSVm8
vzZVOgW6vfc/ECEsiN94tL+H1FNildj3P1p62P54RJK/KNOGHEwO+D9WAlKy
DOW6P9CSE8u5G/g/6w9Dl9g+wT94UqB5Jyn4P8Z/2MgH9cQ/ydG51gJE+D/q
HjjwFQ/MP3KRRoVwUfg/INUmv1Vrzz8aUdMz3l74PwgXiy0eUdE/atDskLl5
+D8NAQmDREnUPxKQeT8nh/g/oUg6kdei1T+6TwbulJT4P3WcJ1mB49Y/XZm0
Cv6g+D/tBCuOpPPXP5LsnyE=
     "]], 
    LineBox[{{0.21395093354777397`, -0.3749100593312672}, {
     0.22288623187021428`, -0.22535361903720674`}, {
     0.22621118435207807`, -0.16705234301678995`}, {
     0.22953613683394186`, -0.10820690584065752`}, {0.23618604179766944`, 
     0.01006942307504232}, {0.2494858517251246, 0.24167810388217412`}, {
     0.2528108042069884, 0.297065439319561}, {0.2561357566888522, 
     0.3509571058930982}, {0.2576485378200668, 0.37424577602003134`}}], 
    LineBox[{{0.8336690563329725, -0.3749100593312672}, {
     0.8355933949688934, -0.3536206712829162}, {
     0.8421967763249201, -0.27647768311071474`}, {
     0.8554035390369732, -0.11075048908064072`}, {
     0.8587052297149864, -0.06799883030825765}, {
     0.8620069203929998, -0.025091996656562175`}, {0.8686103017490263, 
     0.06043857094143164}, {0.8719119924270395, 0.10269069675135742`}, {
     0.8752136831050529, 0.1443563916379635}, {0.8818170644610794, 
     0.2252144292799173}, {0.8851187551390927, 0.264060310983424}, {
     0.888420445817106, 0.30162831992890715`}, {0.8950238271731326, 
     0.3723000057465198}, {0.8952196555881606, 0.37424577602003134`}}], 
    LineBox[{{0.5241891389174756, -0.3749100593312672}, {
     0.5332681113839205, -0.2483554904270355}, {
     0.5363727248971539, -0.2026007475782406}, {
     0.5394773384103873, -0.15620769287968536`}, {
     0.5456865654368539, -0.06223033664236778}, {0.5581050194897873, 
     0.12539558922942862`}, {0.5612096330030207, 0.1711812632591899}, {
     0.5643142465162541, 0.2161658536250698}, {0.5705234735427207, 
     0.3030531098410304}, {0.573628087055954, 0.3446277451239186}, {
     0.5759200975455918, 0.37424577602003134`}}]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  PlotRange->{{0, 10}, {-0.3749100593312672, 0.37424577602003134`}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{{3.529495905371078*^9, 3.529495942333971*^9}, 
   3.529759120475929*^9, {3.5297592953416824`*^9, 3.529759305461379*^9}, {
   3.5297593377704096`*^9, 3.52975937608926*^9}, 3.529759442217276*^9, {
   3.529759489795849*^9, 3.5297597048893957`*^9}, 3.5297597769372344`*^9, 
   3.5297601244668083`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["(#11) Electrostatics (15 min)", "Subsection",
 CellChangeTimes->{{3.4322913386865587`*^9, 3.432291347014843*^9}, {
   3.4322914131723633`*^9, 3.4322914151880274`*^9}, 3.432470192010652*^9, {
   3.432471282219102*^9, 3.432471283576335*^9}, 3.432480755039879*^9, {
   3.432480793555401*^9, 3.4324808120161247`*^9}, 3.432480854859672*^9, {
   3.43248165598464*^9, 3.4324816571925917`*^9}, 3.4325629132540216`*^9, 
   3.4325877117453656`*^9, {3.4325880147980595`*^9, 3.432588014938687*^9}, 
   3.4326596846686373`*^9, {3.432910168545434*^9, 3.4329101705454726`*^9}, {
   3.432916829188941*^9, 3.4329168327515097`*^9}, {3.4329169165968695`*^9, 
   3.4329169517850447`*^9}, {3.4330203925346756`*^9, 
   3.4330203944409623`*^9}, {3.4330291195616064`*^9, 3.4330291204834995`*^9}, 
   3.433203917759715*^9, 3.4332039592920284`*^9, 3.4428761075986524`*^9, {
   3.5248691777136497`*^9, 3.52486917804125*^9}}],

Cell[TextData[{
 "An analytical technique known as the \"conformal mapping\" makes it \
possible to use the complex plane to visualize 2D electric-field \
distributions.  Suppose that we have an infinite line charge with charge \
density \[Lambda] running perpendicular to the ",
 StyleBox["xy",
  FontSlant->"Italic"],
 " plane.  The field in the plane will then be equal to",
 StyleBox[" - ",
  Magnification->1.25],
 Cell[BoxData[
  FormBox[
   FractionBox[
    RowBox[{"\[Lambda]", " ", 
     RowBox[{"ln", "(", "r", ")"}]}], 
    RowBox[{"2", " ", "\[Pi]", " ", 
     SubscriptBox["\[Epsilon]", "0"]}]], TraditionalForm]],
  Magnification->1.25],
 ", where ",
 StyleBox["r",
  FontSlant->"Italic"],
 " = ",
 Cell[BoxData[
  FormBox[
   SqrtBox[
    RowBox[{
     SuperscriptBox["x", "2"], "+", 
     SuperscriptBox["y", "2"]}]], TraditionalForm]]],
 "is perpendicular distance from the line charge.  Now, if we replace the \
distance ",
 StyleBox["r",
  FontSlant->"Italic"],
 " in this expression with complex number ",
 StyleBox["z",
  FontSlant->"Italic"],
 " = ",
 StyleBox["x",
  FontSlant->"Italic"],
 " + ",
 StyleBox["i",
  FontSlant->"Italic"],
 " ",
 StyleBox["y",
  FontSlant->"Italic"],
 " , something fascinating happens -- the real part turns out to be the \
electric potential in the plane, and readily yields equipotential contour \
lines.  And if this isn't weird enough already, the contours of the imaginary \
part are the electric field lines.\n\n(a) Evaluate the cell below, where we ",
 StyleBox["Plot3D",
  FontWeight->"Bold"],
 " the real part of ",
 StyleBox["g",
  FontSlant->"Italic"],
 "(",
 StyleBox["z",
  FontSlant->"Italic"],
 ") = -ln(",
 StyleBox["z",
  FontSlant->"Italic"],
 ") and use ",
 StyleBox["MeshFunctions",
  FontWeight->"Bold"],
 " to draw in lines of constant Re(",
 StyleBox["z",
  FontSlant->"Italic"],
 ") and Im(",
 StyleBox["z",
  FontSlant->"Italic"],
 ").  Observe that the real part corresponds to the electric potential of a \
point charge, while the imaginary part produces the corresponding field lines."
}], "Text",
 CellChangeTimes->{{3.4324110514224634`*^9, 3.432411051922473*^9}, {
   3.432411399257266*^9, 3.4324117777957845`*^9}, {3.4324807622472754`*^9, 
   3.432480783175516*^9}, 3.432910162982827*^9, {3.4329169273158255`*^9, 
   3.432916931894038*^9}, {3.4331971226013885`*^9, 3.433197252714094*^9}, {
   3.433197285589936*^9, 3.4331977075538626`*^9}, {3.433197758773924*^9, 
   3.433197928590771*^9}, {3.433198163628038*^9, 3.4331982109886255`*^9}, {
   3.4331982609117785`*^9, 3.4331984410101385`*^9}, {3.433198571810362*^9, 
   3.4331986269211483`*^9}, {3.4331986598907423`*^9, 
   3.4331987523931103`*^9}, {3.4331988081132865`*^9, 
   3.4331991638255177`*^9}, {3.4335337292963796`*^9, 3.433533817327066*^9}, {
   3.4428749098556466`*^9, 3.442874922887397*^9}, {3.4428759913493967`*^9, 
   3.442876033302253*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"g", "[", "z_", "]"}], " ", ":=", " ", 
  RowBox[{"-", 
   RowBox[{"Log", "[", "z", "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"Plot3D", "[", 
  RowBox[{
   RowBox[{"Re", "[", 
    RowBox[{"g", "[", 
     RowBox[{"x", "+", 
      RowBox[{"I", " ", "y"}]}], "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "3"}], ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", 
     RowBox[{"-", "3"}], ",", "3"}], "}"}], ",", 
   RowBox[{"MeshFunctions", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"Re", "[", 
        RowBox[{"g", "[", 
         RowBox[{"#1", "+", 
          RowBox[{"I", " ", "#2"}]}], "]"}], "]"}], "&"}], ",", 
      RowBox[{
       RowBox[{"Im", "[", 
        RowBox[{"g", "[", 
         RowBox[{"#1", "+", 
          RowBox[{"I", " ", "#2"}]}], "]"}], "]"}], "&"}]}], "}"}]}], ",", 
   RowBox[{"MeshStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Thick", ",", "Orange"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Thick", ",", "Green"}], "}"}]}], "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{
  3.433195414557664*^9, 3.433195473293542*^9, {3.433195514372719*^9, 
   3.4331955274980545`*^9}, 3.433195633391391*^9, {3.433195699268077*^9, 
   3.433195738956593*^9}, 3.4331958653035774`*^9, {3.4331963505191236`*^9, 
   3.4331963792229834`*^9}, {3.4331977402422*^9, 3.4331977451173244`*^9}, {
   3.4331980433280835`*^9, 3.4331980436405916`*^9}, {3.4331980938137507`*^9, 
   3.433198094048132*^9}, {3.433198134908553*^9, 3.43319813518981*^9}, {
   3.433198486323799*^9, 3.4331984870113163`*^9}, {3.433198521449698*^9, 
   3.433198523793508*^9}, 3.4331985585756483`*^9, {3.433199196685734*^9, 
   3.433199199123296*^9}, 3.4331998003730626`*^9, {3.4335337176245794`*^9, 
   3.4335337241245375`*^9}}],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1: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
JirMPyPPgJyuovn1aqWZVUeNCsiHkKjImdUXCOI6f65UNI+GX4Q/BA6/CH/I
n29nfhH+EPNryF8mml+DHx3RPAX8QA+hx5DTWzTvxrhoMd5wj/9riebdGPdH
bNwx7+bvdxHNu6FXa5leYd6N8m5MTzDvgD5j3oH5uFgP+XNPIn3GPF2s/1hv
RD+wvgT9xzoo1geg51j3wjoD1sUg54ZovRF8QJ+xToHyj0XrjfATmK9hXofy
D0XrjYiHH0TrRYiHyG+ht8jXGvj9z3Uh5GuPWZ6G/JU/9y1ah0S9UaJ1IdSL
+Iv4zd+DIlqfRH/hDzFO4A36Az2DnEei9UnxuOBezDP0EOPbgY0v1i3F44h1
SLGewN9ivwLrmdh3QD1Y94a/xX4I1jmxno7yWD+HvqFdYr2C3cCvYj0LcsT7
EYgzmNdj/o/yrqL9CORNeaJ1bOTvE0Tr2MjfkbfzfIvJQd6FcUd7xovWpdEv
+AH4C7QTfgPjIeYH44ryGF/4E/F4Yf8C5S8z/uFPxOOFfQ3x+GJfCvWI9x9R
D8YX6+Aoj/bw9Ufm5+DfMI7IC7DegnUZyFkl2jdEnlsm2lfCvGqkaF8J5ctF
+0qo1020ryRuJ/y1uD3gCzyAZ4yHmAfs64n5hN3h/3Xs8/Jx4fNxZsewX9H+
Lx9f0X6uBPEC/CP/wvqVaJ9XgvUu8I/5hHjfFvNX8b6tuDz4R73I90T7s7yd
ov1cCeIg7EXMg2gflvMm2rfl/GA8xPynaeUXWwSoynD1vNPV5ldQjZxfA8ot
8lVkKRpL3lbPUpft3de9RVJAKe121LGTVElZJrkTGVot15ANmf1z1KGa8ulB
StnTJb/pwa3O7bwqVWXD3m1uNdmxmG52uNNE+qucfp+1wT1vjLqsQ8/i3Imz
imlFm063AyaXUD9zpysBczVk0+66G1vOL6Y3Zpz0XJqaQ89H/il+eFdVttpp
SsK7Gt4WqLaLrW6STOPrf2opdVKTJTpcWG2tWUg7dfm6x+VMMN3WMyi8OlxN
dsBXw6eiUSE9ombfXmoWTXp8f7/d5ZGazPLQr4fBNfq80rfgTMCWbDJ+r3+x
xXtVmclMu+kezQupaZIktLr1TzK38297/RHqMueevjscNhbTVq3OxFTrqEh2
euY1k9bXkA2VtRi4IrKUghfwBH4cH3T5VJ2sLMPVdcybtWvnFNPQxSf0pK2U
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
i3aj346idQP0G/3l+THrN/qLccU4Y3yhB9CLHptMFsxeFUMClVJn7O+QQYPG
/zBqPt+fOCppGLR2jeFyMO4WTA7WebEOFsnWwSAXetFNpG/QI30m5znTM+z7
RzB928/0CXL0mRy0A3J0RHKg/xVMDsqjH2g/5IOPkUw+4sttIa+gt1hegX6i
3+gv2oH+6YvswpzxAR6QrwzrO9MibI9R4EEmH/oBfYGeQD+gL9AT6DH0GvoM
PYZeQ5/RL/C8kD3XjHO62L9q8Fv9iLF2IcX5VOz7aY2OcZ++LIefy8Q5zfXd
dbo1u5tOCxsmdr5OlGQHTmuEzj0XSIebm99v/CydnzvEOUStew5hN5RTqNG6
taFXlH9S0+ojpz9vrLHfVlaR088l0IsPBiVq1PtJtdQ/y9fYhtMeDnq3zl5I
4OfekI+0bdQgfbWRF2nVtedL7QYFVGnBmfL9P5/QtaY6tmbS03x/BevN4fV8
74U3SSRJ7e8s0S9Kok3D70/Qr/+cnj2fvNPxVCqZ1LhLfal/Nn+fW5Cut0/u
2FDSvPZ5iSSOt+q87ZDXtZr5Rda2CaXtv3Jce8edwKHrM8m+MYZNDL0V74U7
sPNm5wGeeSS/Nu6mcjx/tFv7m0qJ5Mjh08byqnSF/JygzXtPxpA7udv6yN9m
U29jgyFyuwAa2nRZpUWzUD5vwnvXlSX3T572iCEz9fy2uwSr8ffPJ9xNVxnQ
uJBe/JSy1yVY8V2AnOIhPS8tzqEGtevnShx3Nv919dHtdDr18vNkixTF++pv
LD7TauafZJqolHYpoGa8+HvvJ3Xu8PlsAr10ZrCJ/JriPfZm1+eOjOgbRce/
MRwtf6H4DlSWzf75Redf0F4z4m46NS6mvRqbzojSuU17nNSYm9mX0k7x7s4u
agWch17+B7qMSDhNppzU7CD9rXhf/bPe0952/fxC8byPu9WglVZxJNJzhHtU
2xT2vEMpfRSifmd5vw8k5ajt+aqsKDqH5T+J3dPHdIl7TQzXWm872jST9J8a
Kx36Tk0medH3V/27wTSuGR29s2kh/a2yIassVEUWdOXWyQnd3tL+vS30qv6p
4W3ExZdvWv2mR9r8+uOod5Wq+u+bklcvhbrVe+FsqZRM51saVq8f/5Rq5Wyq
TvNJJRKDu8vdY77S9y9+3LUzvkI/TrI/pjsjkzTYZUczo9UU7yGfUtlQQ72Q
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
8EarU3zNvK52vp3O31ewdGS6+qVfqVwPF3zr5Tr0YyWROSQdtzyaS2+OmXfI
JVWJvzdg+w7bkZ0uFFGtIa2et81RvOdgomZ//6sJ2dyPAZ/q7PQqdnEmLzfz
/dhO0kbKkqdpd+b28VN8/+tp1pqOXR2VJSGxk56+SSiizt/3tdEeq3jOfdHt
rj6V+0ppveKUNAvpPv4c98wVc5RdTPLp/HEPP68cVsTxOVMbb8hcrngeP2JF
7C6X1aqSRgs0t+qfLaUDd/77vbZD/PnloUN9/OfU+Ns7oQtLd7VVfHe7rZL9
rYNJxVRv/4n2UoNiMv95uzn6r9RkhS0HPrs1s4gaXA+1d52qLqlo+dM+ZqS6
LHafeu7gwh/UuFGThz2dcql//vd0wwXKsgs9Oxe9HJ1Dj49eqiftUUjOTtnk
4TKjnmyZ5vK7VpX51GDak+jqVBVJisVpiTxaRYbvwjecvr5X2ohMcnL7hKgL
an/oVfPP3r3Dv9Oi/bFJFqa55Ot2s0MuBUqy57+NlaTns2nxy8bVR7OqSOlo
mmDxroo6su/dz9++pNLCQFnSockDM7musmzn+hVtqp8X0S/3sufZG6aRZkO7
Nynr/5OaKq8df7V/EtXULM22aPCT3ApWuhzwo5wet+hgsnpBJj3eqteL6nWV
ZEi08RqXBZU0hv4Z3XB6LpNfRHRr5RfRswcnjCmIl1PXOTYmcq8ae7A2uhmw
t5RqpJsMVNZPpQ27vvAL+KUkGVKvyEq/bS51JIZv7l/Nprazm5dZLKon0TMc
NlauVUi/tEr8pVUzv1V3JIVhMWqSuBFWvyxq5sFf0yV3vR2K+Dnz3jnndrns
T6P7ZPkbXWwfkwHbd0UtdywhTmm2Rw5qJ1GdiNfmb29G0RFJz8+oLarxM7X5
7EiaPUOtkVvXHKIas1FDujCHaNauh1nTctdw78CkYGIcv8Yk9UApuVS732VL
B+7Z/bWLWiQ90uy49YSllUSr9vnO8XTZxV2bAoYn08dHww+mdlaWtBn7uKXU
1ZZ+Tt4qvTAnkxZ/tvwoPawqifumElF9z5bGuj3qlGWUTz3TWuRIf2tIpmg2
MJAvmkXjlizyunW0iPZa8HJYh7TfNOnkoWkZNfMxc5eJJ28EfKeHt9BLxU1/
0qTuT00WrEgjNrr1OlfqJtFLS16byJem0V9mL30CnqSRfhYXp85p+Zi8Lw0d
uumWmmyCLlmUNreYHLh+7Pw36yL+nqXPH+Liqm0LSfU2W2mL7HyqsvJsbHW8
kmzOx3XPqk/lkiF7Elc9PZxNB7weHFtdr4hOeJvmpD+miGB8s8LIn8k3v1GD
7Q46ejtKyNLWXk1nxkdRneuyLS4fy+lpfaMmUoOfBPpzpbadpbS8tp2lJKvf
bqNTvVNpRc43C/1LVTS3bd6RgJbVBHq7b5x1qsWwSmp6oam1/qVK0iq4c5+v
s3NpxDNrV5fgHJpuvGiJfhNlSab/bru9/tl0mWf1XpdHKrKLGlP3ulSrSGBH
RrXtV5YJ7VeWaIyPXjlGVmPvq2YeDnheQJ/Fxv+w2FpPYvNU5bFp6wI6pv6i
a8ad1GXJD6Y3116lLjFdEvmwSdEPKtsQ9suixj9pm6sUWuSrSezq7Wo1b2kR
XdDRdmROSAlJe6OSa31aQ9LD59XPYceL6S1rBwO5aQ5t7amkIfXMoW87K3U+
/CSMrh81s8zfooRGL/Q1r2eZRL8ubef81C2Khtb6qTT6dsR9B/37afRzvn/a
0G6PiWWngYc7vP9ALX1TfxhuTKUant32H2qYQELbzl171zyV9np42VzLKpJO
39Vaue+oBDJtccahgDxKN3uV/bBY9VHxHZaKhqlhduH0Y56NtfdOxfcatpvM
jK/uKCNd7erdDpitKG+6TrvsxqJUYlExfGw7rUjq/iBCP7VjAjk+NNjDZfhH
em1NQmepo0wx79C3tNbfG07w3DPwBsZFPzxcPxL66/ehgDSq+A5Lbslhl+Ey
Ur0lIKp60keOB7RRKzNxTiXrHtmNLVGJJMdvrW/fQqdmvu3sfNg44AOdNOPT
jx5uqeRV55UTbNUSiEFRhnnv/pEkfpNJWSfbVOJ9fb+P/oAE4lO7zpZGKrUn
3wzYkkYaBbyTug57TIIfX0mx2J5Dmvd7bq0/I4dk6gz4U+wbRre6Zr+t7qou
u2YRk2/hrC6zCP0nP73Gn5812ds8erY6/9792xZnQ2eU/6BNIq9tGZQYSz3M
H3ZfNyiPys8MaLV8tTv5rbWhudTxM4/z5pO7OKTu9SOLttbmQ/xcRlzYfQmR
fCEeSXYaUtccYlbrB3Lo5lYqK/tdDaM6p1uvfNAuj1T3SskObBZHPdR2OiY7
7iK585bcmJydS8edHrnZzTWOSl9adr1ecoCYdDIfLA8I+Ot7HAcE/K/vlTga
/Yub/4Xz76yw/E2MH3/zwTvgTcBf+Fmq/bZ6W4DiuzNsX34Wk/OY9Tdp4vfu
Lp3ziMdL8y3j1ONIiuZQncM7d5KuCaNvh5uW0O1G8XGfbJPI4AmjlYPXRdE9
tflMwF/fuwGfYtx0tpV3QHXAXzjytorlvm4uZz6Td+Uh928b+5HgH//mFUt5
e6c0sMzO/ffcdcHjV4+s40iisW8949+5RMm505+rxvvI7lq/VDOutX4ph5zV
P//Y6UUYrfi9/LLV61ja/p71iWxJHnlnNrTeiYXbyAynf/OJdXzf2+jYyoHX
Iu7TT1Enmkunq0um5vS4FjBUXRL3sXvlrBp9g56FvBtgr39UXdbB2vT+y/pl
VDL+39+v5PvvxqOafToTdJ+uqH1u6wvHQ+2vdlpmFMz3p11vtFaTOn6hcRUZ
Pg8bKnCMy89Qt7EHHii+n775SlV3eauvZPiGD70bHwmmETP+5cWV87dyykbD
givBxEnLcZJ+luL76QsSn59vdU/x/fSqq//mz+qSNrpXPvpqldFWYya8rV6s
+L58v9yOlkqVP2gjx8ZVFtr36JAgHx2po+J7MR0MN7yotntG5zzNcHXZqfhe
zOzaPOEj0a7NE2Qcl2WrrGm5IZw0qpr9Ytp8hT6ndU0JnroylgyLbZ5f6KqQ
D39lXtuv8Yrv19SObzi1qR1fhf60XTnBfII/pZ2mt/e44qbwV6v8RjyWPAqi
25qX39ikrfjOUcLioSbtrsWQaPNJN9dujSGbe2WHyAZlkRR//4MuvZPJ+S+L
/QLaJ9Ohmjp5c19GkRdCORoq/I56sfKFIT0+tmkVTG+edQ7IGKX4js8ij9p2
k1ChHxxfd8Z914hTMaRzc415Ngdj6EX9xDlOQ7OIvcAzEfNstP5fXELyF/lZ
e89WyIEfF/Nj3VHrtvGMYDLipll8dY97HJ+etMK6cv0z4qpZmLJyvmK8bJtv
MZAbP6PrPqWqS70V3z2f6/mms/z2XWqlNTKKbFd8v8mvdP+yMtNgOqPaws7N
9p7Crvdk7Ur+J4badb/gcO9xDCnuv8Gsb/8sArlXhXp4+ZAP1xd4uwYT9WN6
cRZpdzk+Yd6/+mxDInLeaEjNFON7YGKS+Syje+TNREmZx1RFe24JvJNiYRz+
ktPjz8ne8pMKOT0N3ldaqCTTaQutzOTmyWR3wJNDto+iyJLa9oX/5Z+xT9Nh
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
44ifgTR0veuG57tzeP576+GxkfUSwvg+1OCG8av6OOTSpneaP55bqNhH++Py
+v41h2Qq3b7wPvX7RNWbna3vY6x4z/Hy8EvrIpY/5PfuTXV+fHgipwvUVjze
+fQb30+0TW14qLFGMt3eqtOP75s+8f28tNr368+lklZtTWe2jeT7c6Nq318+
nXq4um+cLEmmd67Ms+1toHhfr+TSN4nhwEd0qlqXpXPPyPn+bcixL1Va8m/k
juO15jkXFd89GZj0PMb7/VNq1P6m/yoDJf7dkNIeHz30W2ZR0ydhqZqaivcu
NzBUTbUMek3vbJrwxPlUjuL7FeGqlyKrw7idGM7yvG/pWkQWvWm8RL6ukG4v
O9Jmn1kp75+0gV2Xr+mK7yBsGhfS6XJcIbnr+PlU6BgZ749fR+UTarMLSdxG
H41uDo9oks/nF9V9Nynezx825kK6XiQtP3v38weTZI4P0L9X/f6sgs8p26J3
bVlTSsqW99ui2SiVBnqWFT/2K+XllUbMjQ8alsr3AfV0ciqNy2rqlY+19Fik
2Je3/5Qwv9fbEnJvtXKpUVwxNVi8ebJ9/Uo+Prv1vyu/0c2l+XMWOOlvcuf7
p1N0k+YuNkvm5V6dXr+mcmwl+f12oJZckktvlrx07Xe8kpc/HuL6/rNzLtfn
SS1ysvxjlSSL9COmtB2Zzcej8aPJf046KEmOdA34eXB5Fn3R8dxJ44Bcvq9q
3/dyw2lKObSb54eOT0cq8/eEf+lpa+zypoiefP3okC1V7H+2aj/r4Z85hXSj
SVWxx13F+65T7viuc3qgeN/1Cq9PO5W/qUri9tjrh78qpUkD1iwI2svPq0i8
J7m9XxZVTF3HF0pP5hTT/LnWJ68ZaMia97lZqWpcTN3CPEKrf+0h2l8fhKpl
asjsTT6NHLiziGr/mhZJUnYQm+rVDxZtVZV5XNqu/Eknn2pPvfj+zmlVices
zNap+1Rlqgt3rD54o5TuM/73vLQb2Ve1xW9jC2VZm6R5plvMM6nRQt2tzQtT
6Dvn9IbfDctp6O/T8gUZcird3LeX3GAzyTbb/WLv5Ep6sUVlp8Odkumy3+vm
/wzWkLnuJL2H6ZTS81/tiwc9KaYOhm+jvkcryzIbXHRQ655P6wdGeET2yKXr
dbdnRw6NI3Mujl3po5FHTdbtc1Je60EaFFi/7/eynPouKVK51SKNevS9e/Ks
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
C5///wA1/JQH
   "], {{
     {EdgeForm[None], GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJwtmgUYFVUThvfevXv3KggqYQAqKGUCCopBCCKhIAiKiIAgof6igmJ3d2M3
dmN3K7aI3fH/drco+r+vc57nnme+nZ09u3f3nJlv5pz2k/ccNbOaZdnreZbx
y/oWWbZtJcv6IA+pZVk7dBtjsH4jy1ZEt1s9y47GsD36PuiH0LqCt0QehX41
8Kbg3rQ24F7Ix4uw/4tr16Ofrel32zLLduHcJugnI5dCP5jrf8B2JfBb4H7Y
9OVcS2yO4/hY2urgfqnvtWhr0i5C3xc5HX1Prr2YPhZwr4y2IeJZjrfhXAfw
mdh2wqYjx79zfg3wwTzPBO51P3bf8t+vR3ZA/yP6w9GPqsZ9z+baLugPRz8J
/Rkcd0c/kvOTaBuBd0JuR+sIPpfz7bB/h+MP6PMUjtdBvxXHI2irgk9FN6Ea
zzne90Dfp4FL9KeDR4MLrj2VcwPAR/is9NkL3fk8/4HoB6HfD7kT+u7oz0U/
oxrPdin97Ij+a647mGdu0DZDvxHyes4NAx+O7WF+S/AhyC70sSXvoTNyDNe+
z7X7YX8h9n2wmYrNDn4j9PuiP5TjwegPQk6jdQNfjO2J4M3Bm2G3G7gH+HL0
/3E8ga8Er0g/23O+G8/8gO8C/VWcb0a/FyPnIY9H9kd/O+cv8v2Cz0NeQtse
fCHyfs7tBJ4HvsLn87/bD/33pf8R9LM8+BZ0y4GPrsaYucVxBe4Hvg18H228
z4bOibGBz4OuJ3glcA9kg/5O8bugr4NPBtfAXzpW/GZljMuVsxinp6d54Xy5
3Htjs2k95khb9EOrMQ5WTXPnM2we4ngT5AZlzME/sf+ijP+8kO+yf5qvXTh+
iOO11ZcxB5dF34njY8DLO0fAf3D9ushXsenhOED/MNetD14B/IjjsxZj6Wzs
zkK/STXu+yX9zEa/iOMvwLPAr4A/8VuCnwf/D7wH+EXwV+B9wK+Cj6Cfrxxv
9LOY4+PB33B+F/Q7O3eQLxfxPT8BH5zGkt/0RZ5nDvh78B7g/cF/gI8FbwE+
C/xGGXP7H/o/nfYD+k2QNWxOAufca5Fjvhr+Zxhy7eRzeqLvBH6S+z9TxPx7
E93G2H2Lfkw95qpzdko1xq5jeIwOE7ttkW8hnyqiz3+K8BH6is2rMV/WBQ+v
xnzolnzFc9htDK7Ww386VibqA2jL+K58B8mv6k92pPUC74PcuRrXOk8nJJ9z
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
         "]], Polygon3DBox[CompressedData["
1:eJw1mgkYVkMXx+97l/e+IpL2ItKiRSVtlhLatYsWbVopSZb4woeSNSKRKEVZ
sm/ZsyuUSrYoZF9KhRCS7//rP9/zvOd5z5mZOzN37sw5/3POHDR8Qp8z4yiK
9k2iKNX/PsUoGqf/5SocXoqihpI/lXyrKu/No2i+5P6FKKohmiF+hsp/V/1J
olv0TFW1mSb+NJU/L/5K0Q7JnbIoOlX9tVSbvSTXEB0h/nLaiO+l+jGqv07/
z6jv00XDM493nHj9ohckXy+6UcI40TDxV4seoF70jMa8Tv1doLb3qnxiyW1f
FJ0VnnlJdKdogmii6Hy1u03/I0Vni1+g8Y4Xv4/6eDXM5SnRmDCn6Spbov/R
yOKnie4Qf5roXPFz9P+K6BzRCNEy0euiSaILRDdkLoMfJ/5SzfdqjbVV619L
871WZbNV10fUJsztZeYW5niRyhbTv575QM/MyPxOvMsI8ReK7qO96t9XfVut
8YF8X9HlkieFOTK3ifSv971CdT3Ej9b4X+n/KsnbtJZ/aW63qn6S5HV6trXq
e2d+9hSVLVTfBclVJL8g+WS1+VHP7VPwHnpLfA89P1n8p6qrrudbSf5R8req
25Z7vQeo/c8qu0F8XfX3m/gTRbXFt1FZH+au9neq/ScqGyn5Ickt1V+fzOsy
SGWLNJ/Zat9NclOVD1b9/fpvJHm16HnxR4h6Frzn/lEff6v9/uIvFn+T+j9a
fdSUXE40VXOeo/oeat9Czw1RfyNVf7TqThDdr/p2kmuJ3090heS91X6s+GUq
P1vtZ0nuoueriYaIX61++qq+G/NW/UlFnyXO4JHiz+AbSv5Xcn/x/2Y+K8xx
mfi6see2RTRJ410quav4o8J8MvXRWfxFKp+v9zlc7/UKe1l0huqbp+ZfE42X
PFlUIcy/vp65WHRk5D4vEZ+qv47iLxB/h/q7WO0rSa4oOlRlDdTfEvFPiYaq
7hDJT4h/UjRYcmPJz4h/VjRc8s96h8fFDxS/h97/aPX/q+Srw/e9ifkXvKcG
i/+v2lWOPGaT2N+Yb91d9Lzqmum5l8S/LDo98Z5kb3YTPSf5OsnTRU+KXyK6
W/xg9jv6RHJLPf+6+DdEEySfr/pW6CvRZPFHqH4Z+lB0tupfzjyfpqqbqflu
kXwv81FdUe/TIPZasiemqWyn3uGgcPbeU/s8d9//Cd+nKOog+bywvnXVfo3k
cWq/WvIq9d+W/S55geRM1J65qP088Q+LlmuOb4oeyb0/OOsHhv37o56/Wfxh
4gua36X6ryq5CmVqWy/19+CbDVLd0fTF2WVOkg+WfL/4B0R9JH+j/i4S/5v4
F5kPayz5v6I/sCGi6Zwn0e/i/1b7MuIP11hr1b517P2MDWgl/iGVLUv9DrxL
Z71/seAy6k7NrLfR30eJn6T65uLfFa0R30L0nfr6TGM9o/bfxx77THSMyr4U
fcG8Vf6t6Bv1+7XobvV1j+iH2HOfIPpO7XpLbhr5m90oebna1Ma2iZ+t/n9L
rR838X7if1T7S8VPFH2vNhtFnzOmyr8U1df81qvuJZXdo+fHxP6eTURzVdZJ
cjXxDURdYp/3RugX8beo/aP6HyZ5g+gVtd+l+vriO6v8ZtXHRZ/XUyXfJnlw
7PojRMPEjxK1Ed9YdLueHx67f3QYuoz+2A8txH+o53/hjIoi9ktiG44tP130
gvgnRO+o7SrOlPgNev40NX9PbZ+SfENqTAAWmC3KNb+TVT9H/F2qX4+dl7yW
8yi5DPpf8gLOtuR+mW0rNnay+AGcH/FlxD+q+sdEK9R2pehx8V+jL/X8dvW3
VPLjKn9M9Krk10T99fyBej4HJ6h+o/7P5fup7jnJm9T2ssj28gd0TbCHv8d+
X+bM3G8TLRS/Ru9WKhjj/BLG4hvxbRiTsp9Fq1O3fTn2+vCOK1X/Uuz37y9a
Ibmr5Ibiq0fGQ0eJDkC3iq7je+W2hYnm3Uvnt3bR+vwU1a3IbXOxvQ+J6mq8
izgD4seIP0Xtpyc+63zjjup7RGJdhk5GN+/LGYu8VuXVvk5mvAbm66T6YxKf
/bnoDMmj1f4z7IP4EWo/M/X+7i1arP6vCfYBHdk+tk1EH2JjjpE8QQTgvJvz
wD7T8/+CDUQ1+IYav7yK28TWl1cntjX0ebzKquv9Z0XGq6+ovqrkGyWXQTdL
3lP/UyXfJNqbNpnPV6ewv6uo/Q2Sc75FsGdF5GBf2uTer3PFfy++LXtS8h2S
f8iNOdFHG1U2UPx5Kjtf/AHsVa3H+ZL/I3m9+j1JclN1/pXk1/WeVUrGaGC1
3kGfjWY/FmyTThTfjj3N+VD7qmq/M/N+YF+ATwZlxqEA4iPFH6dx7pD4sOhY
8WU13ijxz6t9Hz1fDkyBPpd8YsmYlfM1VGWvquwt9dlVz50gelt8O/3PV90j
rLf4sSobIb6inuuv58fofxRYBn3EnFLrJnTUjeLfB1+JX4qt1bPn6JmXKdcz
v2ku6zK37a2yyqo7qmjsxzvyrpODHyI2ahjb/vNt1HS3zY1z67ahQd/dG/bR
xNg2cVfR56lr0J/YWewtNn0IeFVlLTh/4uegrxLre/Rxd5W9qYEPF983tr4f
EfAeOrOb+B6x27YN+vRfjXdYsBUfqf2UxFgNG4et+0f1h4Szh75OisZq6OwV
GuuyxGefPdpcbcrm9qVuDvoGPNc66PJPw3moE9kmHauyN8CE4azNyn3+kOuE
88L5Z/x6og6SE7U5Fn2r8k/Yu4mxJ0exXmx/AdvHmrA2rDPrjU3BPr2WGdv0
iv2+b4iaqd3homW57WTtMP7JarO/5n8X+gx9rPq/JO8Z3nVtWK+ynFXWJPZ6
UA8+wFcEr+wRGUM0k1xXz9wdeUzGxoY2CfMdje1LrA/uZP+Ib53b/mEHP8Of
wY6L+sXeA7PDerJmlGFPscUNw/d5O/PeARduyL0/mkfWYesl9xQdL/l6yXtr
k44GF0leJTqNtQ/nc4ZoD23sTZnxUREcrmdPZ7/qbPQCZ+ErF43fwPZ11d8l
rGnkA9FT8ueZ/YuRar9/yXYZ+7xV42/D1jB/9fep6L2iy/DfsAm0vRYdjZ4T
31b0NHZbNENlN7Bfxf8U2SdFH69VHx+prw/UtprGawtmQv+q7Bj0n8rPxVfU
s3+LaqrNH/rfITqwZIL/k30lvmfRz/4R2h4g2pLYJ8Q3xAfGF94G9gRP5/Yt
9k+NryelHpOxdsYeGywGJmMOrye2XdiwWar7NbPvUUt8XrJ+Q1fyTfg2tYqW
0XUl/DEwj+S32VN6ZkBi3+JRzrD4HZmxcRPV7VnynhoVMB1Y/TDJF6ldY95Z
ffdObGuxuYemtt+Pie+c2P8Zk3ivsGf6i+9btK8Yq6+y2OPEthcbXBmfV3IL
0V7iy4oStdlP/xVEqfh6Gn9x5DLq6qntPMkPRrbfNdX/gnA2Mr5VZv/mLPos
2YawHksj4wn2+MLEOpG9/0biNWZtbwY/6JmH9a6PxMYPe+T2rR4GB2OPc2MD
fK8vxe+T2/a8KPk78V/k3o/sS+obFW1b+4CtOa8a83Otx1rR7anpNtHszHX4
d/QPBjk2NbVL7fNRhz3CVuHrfav+yibGBmCELarvpfHKE+/JHO8Aj3aJ7Pt+
zfyL9oXxs7/JjWfxh/ENvwJvaqzHOLuSHxBNi/3+2HP80ymxfVV8VvzRZYnX
kLW7RfQR9lh1byXGG2BmsHMP1fVMHb/YUrD9xI6+ht4Q3ajymaIKWvOn1f4Z
UcWSy9ZzXgtu2yDETx5SfbmSCZ5vxrfbT9Qx9Zkh1reX6PPIY9PfktjxCsrm
q6xjbvxVIbE/STvqaDM76PuZkbEXRhtcD/YFA4N3T9b8TsJnVvl9gdgPYBLq
wNng7cW8u+gu8QPRXZHxM/473xMMAl4CD14eGXPv0Nw+Fs1PbJMBDtjMYcGG
vZPZRmGr0Kmdcst7h7OEPQFDgiXBiNXFv46sukWSfwo+CL4I8a3xuX1ufG90
cj/xlUVfabwVKutSNMYEa6L/v8vsU6CH0cf4GvjQ+NLYhG8zYzxiUdsi46HZ
waY2D+cPzILdwlbdmjsGAO4B/8wVf7toUWKbtDLz/E5RfwODf/2gaGlsjFg+
t83pFb7hON4XTKn6q9THP5mf4dkBwR8fIBpNe7WpBD7WNz4hs89+leQOkr9I
7ZPjm3cuOSaYF7we7SUvVPtvJX9IbJcYmeQN7FnJ7YqO7ZVUNhXbqvoNqW1O
S2JxkvfFJ1f7/VXfnT0dYhw1OKuSD86Myb/U/9N8/9SY+tzcPiu+63j2sPia
omqJ9wD7AX1A7LOqyg6Q3E39VUwcL/xvbp8T3xNMvV/u8bZL/lXUhbXAnqW2
cdNyY4bFer5lZCwBRrs2MR4Du4GR7w17Gl31QW5cB4Zi/d+XfGVi/wl78q7k
CxPj4xcz+0jElsAM+E7oKHQV8cn3JP+Z2yfFX/0hM8YH64OhuoLH8Eckt9Kc
6xF7Ah+Lf4/xVLdScv0QI/s9s86bHDD1msw6G91OfA1dvlH0RGKMmebGiGBj
MCXYEZ2KbkWnrg3zK6f6fRKf33dEDUPMDdtEfBbfB1+4OWvJN1d9N9F94v/I
7cNPAeOo/T+54xYA2p25/ZvqqWOUv6h+OTYodcyO2N2vuTEFPhv7GcwN9p4V
2/cHPz6ATym5lDtGgU7Df987d8yS2CUxa2LVWyWPl3yGaAtrL/oM7C76Wfxm
0Qfiz1P7LzLryL2DTdoc5o8DBP6qlttmYbuwKWXQFbnjSsSXtueeP2eRMRgL
G4YtO7jgWH6N3H1j9/CXy6ED1PYJbGXRa47uZI/wLf5U+Q7eJ3YMBP+a+Ahr
zFrPBetFxqwV1P8xuXMvzTLnB7AX1A8rOMaNv4evukTPtSLemzm38RgxePFX
ZM6hkDs5TzRe4zVVXXXxR6n9yZIPkDxT/TaQ/EzieDFlxETqq2xK6jJiyXwD
vsU1KmuourFFx/8r49eF54mn0Ibvhs+B74G+Re8Sg8cfqhMbfzPvKOR/iMcP
y+3vtlf5IcRjRJXVZxX8CPGHogPC/mxcsj7bBV7MnK/ATmOvH1D9g6I7VX+K
+n5CZcNK/kduX3D+g/qB4jtmzp/dJXmQ5FWJ83N3S+4r+djM+TN0z3BsY8Dn
6ObB4juJ6meOHxB7IP9Ffu1Mvc9Y/Hnxp+n5qyXH5HNSy8TP/sH2JI4nED+Y
FHJa08M349sNztwHfdL30oJzeX1T4zliJsRy56XeQ+wdYgqLRZtVt0l0X+b4
Crk0cmrk+oiXEPu9q+BcF2vK2qIDmuCPFB2PYs1Ze+LG2CLsz/DU+SfyUdgg
bBFnjrO3UvIxJevsWpltRteg6yurfaVCyA+x31PrJ/RUn6LrsEHYonaiIaof
ynkS37Xo+OCa0D/+F77ZO5JXpbZ536j+zsy2EJu3SvIniW1hR9FZajcRewR+
D1iDdzgkc5ycd+TdRoj+TDwf5oxR2Bp0PXNgTLDJ8tAWn7FpyfgTHHqY+BMD
/v05tX/Zr+h8LjHc3mG/sX/YR9j6o0vGA2CKNuF5xmbduoXna0q+SfNoVLIu
JZ5Bn9enji+yt9nj5IQpuy61vqUt54jz9Jfo78R+IrYU+z9O7TaJyrGXCs5Z
oh+2q+6q1PFR9AS6AX0wVWUXEz8p+BvzrQcVjR3ADGCHP4Ovir5Gb+N34X+t
i5z/oI45jAs6nfPG+eKcYevJh4Ltd+dnxW9U+ccF4xtwDnQXPkzqurWxc7fY
K+LN6Gz8WWwQurx10f4sfi324t3YsWl0MPmFwQHLPKr+p2Tee5TBTxWtjp3L
IKdB/oM+6IsxdtuizPlx3hVbtU7/ZQpeI2LGxDCJZdYUDSw533qC6g7LnE8l
f9lVcgPeO+xPdAt7hDsDxPg2ir8tc+zv2dT2gRz9ZfSJjw/2U9ufcscYiP3u
TBx74HvxfTenjl9zrnhH3u1y8EvAkuQEiGkepD7m6H12sV/E74ptO4lh/KG2
tXP7v7n4f3Pnh1gbclbkp76LnS8Cf4PDyW9dK/5X8b/nzg9dwt6NnN/Kg29A
jJR4DvGmBZHL8BsaJI49EYPaKzHWJF/yNX0n5slNMSZlYEnyGeSpvhKtEX9W
5DG/+/87JY6Rg2dGBWxdDPr84NzxgUzlu3K3oS0YAizBvufb8o3XxdZzlMF/
LLpG/HawAjpX/Ho9t65gPA4uJ7+OL0uMelTmsptEn6Ru+2TquwzYhLGZ9Rj6
7IeC72BsLdofxS8dV3J7ctvkuMeDv4r27/Hlx6MPsSGqvyXIm8jvqX5R5vsc
v0hegf1hHSXPU/lczpn6XZRar6JfVxacg8emYFsOwuaKHyr6sWCbszjYP2zd
HPHX5O6X/j8reA5bNN476NLE+Xz2NfubPuirHzZYz9+TOj5OPG9n5DLquDfQ
I6z/hyrbHHwJ7iC0y3y/orv4lpnvF3AfgzruKQwtuT22HJ3DHZn9JJdPjNHA
atxz4L4DYz4b+84I/V1Z8F0S8Bl3Nz4iPpAbE4INy2KbS86vgU9WJ84P4AuC
7cBw+PvX5747AYYCS7FH2CtfixaIn6H6NQVjNrDbdMnzsdmip8ntZcZO3KG5
KrPvzNnlDHM/hBwJuZINxAZKvoPSM/MasBab8HdT51DOyL2H+BZ8E/YWePqn
2DGASkWv2c7UOTye5z5BHbU9WTS36DXmmxATvTX4n+xZdCK6kfgIuTwwHrGT
iiHGQTyGWMubGq+T6heqvgtYW2XHpY5hENvivkddjdWP8yT+dvZr5DsNjD9P
9HHkOyHUowOx09hrdCMYD7uIfQT7gfHQq+hXbDF7/nbVf1HwWUC/41twxwbb
sQodkTh+1z03pmyfGUPSHzqcPTMysm5Hhz+bOH6Dbgfj75FYf4H90YHkzsn5
oxvxOfA9yLkOzn1H4fQQI+XuAjHLkYnjp32DP8k9k9ck98jt3xJbwKfFtyUn
R26O/AK56HWSB8WOuZOYI2bbNvEdBGK5xGj7JY6XErvlTHLOOe+cVWLGxI6x
oZfljjmDpcBUxKLxUZqFM8L3PyhgAL7/ILWvJ/n41DHFobn93Vtj5wSJ/eHP
kwsgBsjdGHIo5FKIORF7IoZKLPWDyP40OVpiyMR8if3iT3MvhvsxJ+SOIZ8o
+bnIseVtmWPN3Gk5uGh/vUZqHxZflpht+8RtiOUSQ+YuzSuhf+JdF8a+A0Tu
iBwLuRbyS9zFwN9slDgnQ6wOnx3fHZ8d3x0di95Gf6N78dfnhxgesVHiR8+F
9SBXis7YbYcL1iX4COQeybnjO5Bzx9fBh0BG5/yUOF6PLiL+dG9q/YXuJKdH
zokcDLkY7kh1D5hj992povcWZ4z7VHVY08hnnPtCxMSIjdVVWYvcOhhfA51G
//jA+MLoC2KH2M/akkuaQ4fc8bgkMQZgv3NHYXWw2dxdIP73aGqdOSDE90qJ
74BUCf40vsKs0D/xxGJi/MZ5Iv6HX41/zd0KcmJghpnhe3Angbj01Mh3FYg/
Ng79EXvljsWagPG4e0EOaGTA9zVKxuxpZgwOFgcT4yeDicHK5FvxdbnjyH07
7p9xl4w7ltznBHOBA8EMYDH2I7ngBWG/EROZFfY/5wGfE7uEfQIbE3+6M8Rs
iZ0T0yaXTg6dWDffk7gA8YGFRcc3roydMyb+hf4H14PvFxWdwyWXSz6VuzH4
GFtT+yz4HsRj5sWO2bM/8anAAMRjyZWRcyX3WjXoF+5skUdWs6hZbp+QWC36
E18Rn2CH1rtiwb4CPgOxvXJhPYjfkWvlfsPhuX0m/K7KYT7c6SLn3DqcP2Ky
xGbJObfK7TMcl9lnZ70G4n+njiESr/wts+5+OOi33THXYP+4G1Utte7gvlaX
xHko8lFvRr5fV6Fo/MgeYa+gP8l9kRM6JHcejXwa8bBuiXNqlN0TOR5GW/Jl
5Kx6JY6ZMR53BNA/5F9bJdZJxA/JaS2PHK8bltj+gl3wSfGVuR/4RuT44RDV
l0H/hDk0zH1fENvwauT7Z/gc+B7c8eKuF3dGv0/t//YI9gUfjXdunNt+4Yvg
Ax6ZO0ZJf+hYdC332+gb/Yie3K/os8OZ5mxjT8j9sce369lDc9sydDa6m/1y
SeI7NNz9i9W+nPqcLfnA3Dk3cm/4ILVy36chF9YZG5I7x8K9IDAF2IL7hB9G
tg/YCTAF2AIf+cPMeIMYEfaZXEwlyS+mjskQmyEHSC4Qe9gm8X09fNWPROck
vlPxlMqIWRF7477nWonvRr7/yX1QeO4Yjk0c46UeG70m2KMmYQ80knyE5KWp
Yzjk5ojhETscFrl/7l+ujpzDJJcJBkO3osPQZUeqfbXMd0g+zvz8kuADEH/E
njUMPtPWzPcx348cfz4zMb4ip0d+j7t0FYvWjZvV/7Oc5dzjg0HAIuWL1tX4
WdxVI2cNTgWvksuuk3ssdC66lxgFsYoOKhsR5Omp4xW7YxmSJ6TOT5O7/n+M
jhjiFbnvx4D9+/ENc8egyI2SfyY2hU9AnKtC8BWIATYJPjX4C//7+8h4FP+A
GCWxykqsbck+EH4I/gi+0pDce48YCbFHYjJdM8cEwYdgHLAOc2bu4EV8Gnyq
a3PHVImt8k34NuS0wLLYGGwNOgBdQI6ZWHmDEFNpr7JTc2N0sDp3DLhrQM6X
u2PscfY6c2bup6r9SPBBHvy51PE6+puW+rxij/YtOheDD8zdPmKu3H3AJhGL
5RmeJV9K7G8KGCgzZuW8U0Yda87aE9MitsWY+JLEaInVgunAdsSEO6TOiRIr
bo69SB1DPFr9XZw71nSmykap7n8X3But
         "]], Polygon3DBox[CompressedData["
1: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
         "]], Polygon3DBox[CompressedData["
1:eJwt1G1oVnUYx/Gz3fe9mWjmQ1Iypxum4aYojc2wMqZCiGOikkPJR7AUnaFr
NlIkaDNlD1BK1lLUqdhwD/piirZe+IASiRsqPqToC3VgBOp8IVauz5/jiy/X
df2u33Wd/7nPuU/O8nVzy9OjKCpCBg4ko6gJI1NRNCktirrQIv8wM4puJMB8
Hdd4Kmjp/Xjpu8xOEQfRP6IvQrl8itkilOKAC/TnL+U7zr9UzOOZzfsuWtSf
2j1N7xvxDm0z/ubpVT/FanmhPcfs63a2AoyWX6FfTcZ7Wu2p5i2x52txLy2B
1fJ9evuxVp4Mml1vmP/JbCPa5fX0VzLjM7TxtmOrvD+tTf+2a47HUPk9M/dR
qjdN/ADv43P+P/Sn03vNp2O78/TRO2kpVMpreLeiGstoa50ny9xp9RkclTfQ
j9O/dc0d2EPbi1p6H32OPd/Z/z3mhYdJH4ep6uF2vB7OJX+b1sV/xOyftJvI
kVfSZoQzqd/ia7QiVzxNe6g/TP5c7x88k2fxb9F7HLTQwwiMouUgO9yvXlrY
L88NZ0GnfJvzzbH/kNhDa8yMf6ti2hqxiaeQthibzP+n/jcRv2OjaXMxi57v
XHkoQZPzDEYXT6cdv+J3DOPNwJfyOjP1qMUK2g/8k81OwESU0T+mv0a/ZE+b
uhUXzA6lF3hvz9NXOGcHbb/eKvop8STW2VHj2TTgRHgP+eeFZ8p/hv+34OEf
aP8Fe5rVv4RZvSH0meinTunVmxkr9tH+SsXPIqGXREL+gHbV3BWUy5tdsw7X
9CbZv4DvEA7iMNbYcy8Vv3uPeZ6giv5JZvzcM8JuWp3rjhFf0M7zz+ffqd6B
YvlZWlr4b8sr8AUO6xXRNuCyPd3YGMXfijf9BsOxyNxnzrdQ7Hz5O3yFHvkt
O6r418sf0S5imdlztCVi/svvw2X31Wr+rvoOhoSdtJV6e9Q/Y3cyfkbv0bqR
nx5/0yaIm+iTaT8SCs2+gwIsNVNGH4+S8A6rs5PxNyqPNgAN5jvUN6P4P/6q
e/ofcBahWA==
         "]], 
        Polygon3DBox[{{2117, 1126, 1881, 1911, 1246, 1250, 1912}, {2115, 1130,
          1882, 1909, 1241, 1245, 1910}, {1873, 1096, 1959, 1893, 1177, 1175, 
         1892}, {1877, 1111, 2072, 1906, 1221, 709, 1497}}]}]}, {}, 
     {GrayLevel[0.82], EdgeForm[None], 
      GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJxNlEtsjFEUx+/3deZ2goUIiXg/Flho09YjXkWZWpSNhC1tPYLpjHikSjtm
OkMVFZV0LxFT4m3a0bIgKInYsxAJwUIiEQQJCb+TcxIW//zOvXO/c8/rzsym
1MZk6JxrQWWoxzu3KnCuAVagN+w9hrtizg1GnTtb7lwT67fsj8BPaAwOjsCP
KIK9E75DP/HzDJaztxg7ButYL8E+Cu+iEewHcL7I9mvQokB9pu38TbjAq58z
cDfx3CGeXuJpZD2X/WNwB5oXaAy3UBt2EQ6gw9hXvfoSnxmYkTvRHLQy0G9H
o3aUtn35vcPstNVEatPu9ex62BhxLiS/gajeK98Ow+nsJbBnwH7WrdjXYD1a
YTFvQKstrx6LX/I4YP4b7C7J/SScja8L2D9QM+uxrF/Ae6zPoxY0xHo5zMEU
KsNeC7+jWZx/Du+jL+y/gtushufgU/SBHKvhHjSR8y/hE/Se/e3wIfrK+dew
j5xHcaYEs6yXsr8GnkALsVvhVH6vwJ4WahwSTwJu9VpX6UW39V36n7f6HIeH
UBR7Hfwmc8M9Cfr/CLuf/Rs2SzXYB+Ev2I1+o+uoD1UHmqP4icMCvBjofNy2
ObkC/9hZR5w52Blov6u87udslrJ2XnKsxe6y+Gstzmarp8zmZzREzKmY9kTi
lDrm7R3Je4pbbHthL6q0+hT5bhKxbIpoL+SNyFs5bfnuh5eshlLLvM3qMptL
mZ82ODnUXKaE2j+5/5TXs3nLUWZQ+iW9H+becZzdzL37OFdlvUgGOs/Sy06v
LHl9I1m7t+j/1VXijQfa75KdH/Q6J5Jjpdd5Tf7nU3wU5C679zIcH+r5CaHO
pcTYZfnmLP4Oe6vyvXwncyj1lVrJf5rkWzD/8j9QH+i8Rc1H3r6Vt5ux915n
s7oF/gVXtJaX
         "]], Polygon3DBox[CompressedData["
1:eJwtlVdsj1EYxr/v43+sIHaIGRe40KZmgqQxWhe4kXBrJla1VkOrttjECLck
QmvUbKutvWPfiL2KlgrhwohE8HvyvhdP/s853znvfN7z7zE1b3xuEkXRTNAQ
VIUoWh5HURE4Dq8Ex+F7QD78HtgP78mlX/DbYCfr3+A9fB5IwR+BWvhNfs+C
uaAQnAN7QQ7IBdsbRVGCrSk4n9U4ih5w55b7PwYfA5rB+4Ct8B2cb8r53ako
ms350e5vENgIPxCbT/kq0C97A/kdDsYF8yFfteR6g/U+jynXY8zj+0S+t8bH
t2A+5KuO8zeD2RgLCoLZ7p5YLsrpB9jJXnZsMU2Hpwvwtpx7qvhBFuv2rJ/B
N4HBrBuxfq1cEss1EwR4Gb7jxOJV3As5059vRxU3PA/kgkPgMGieWC0UQ4vE
/MhfX9ABfp0zbyPLUbk+DNYrxbvEbSyGN4jNtnr8E9z13i8KFoN8n/caqBYf
wEfwV30D/cC/2PJTLuphEfwFeA4ugIt+V9++xmbjUrDclGM1PIcYJxBrJ2L/
znq+a0zaqgNrwLDY6pMRTDOl4H4wLS32/pdKh/BykAbvgr138K6JrdXDbon1
rze8JfwN/A7YxToDLIBvC6Yl6WEAvEIxsB4KVsNnBOuf+vgpmI/O8NWx+c73
/ilmzdZn0DgxDcje0WC2VoGyYJprxvczrvcnwfqofs6BjwIjXQN5zod4vNqT
xhtwvjxl2lfPK+GtXAvprgfdWQWfDCaBYlDiXFqQJrS3EvSCLwMn4I+D1Uo1
m+b11+zqjO7rDSmG347tbTkSLLcV4JTnW+izdxBeD6LE9JPh/a8m3o7sXWO9
NJi+pfMvwe7obprX/7RijO0NOwlfF6wWynFtsJlrl9hM7nAt6u3SGyZNyqe0
pJmrd72od+qxei1NaK6yfdYriK1JYnrQO6G5kq827FWlrEaqVQ17y4PNuOY6
02djRbBeqsYjgmlAtmRT2lCNVCvlpNz0hsi2fKh3Od6fLM9H86u3oEZ9BS/B
H72N4LLXv8DfR+lrs+crTW6Bv/I7OnvFbXzx/sv2eo9PM7XB+6t+682+GqxH
ylUzq96VuJZKXRvSv/5Lrvt8Z4OsYDOt2f4POZ/bJQ==
         "]], Polygon3DBox[CompressedData["
1:eJwt0UsrhGEUB/BnNGZjOzsrZWGDkGRBcpsFNsp6mIaVyKVckuu45bKRr6As
JsmG5AtQVr6AjWyEjYVSfm/zLH79zzkz73uenreuMDs6UxVCyFJNIRPCBLt0
pUIoyTse1RescK1fZol7vsxe5DxzvPFr9iTLyf/UH9Rb9Kwfokd/LBdYZJpm
sy3ZRz9NNLJBp9/WZY5u9UHcn5xjL551MO5PzrEZn+mVecZpo5X9+I5DOcUk
R/FMJ/KUDvWaHGYk3keDWVEOZCq7LmkxO+OHV/07f+oy7azqd5K96nOuuNU/
8K3+pCZVuYOxtHf4Btv6Wnd144P8A6z7M80=
         "]], 
        Polygon3DBox[{{1639, 516, 515, 1734, 1637, 1638}, {1659, 524, 523, 
         1735, 1586, 1587}, {1733, 529, 528, 1635, 1633, 1634}, {1732, 537, 
         536, 1643, 1581, 1582}}]}]}, {}, {}}, {
     {GrayLevel[0], 
      Line3DBox[{1468, 1, 336, 239, 16, 31, 591, 46, 61, 1800, 643, 76, 91, 
       371, 449}], Line3DBox[{3, 2, 284, 344, 1468}], 
      Line3DBox[CompressedData["
1:eJwVzj1LgmEUxvHbyrL3OaIg0HAoCBxamlzdopIaCmpJhExor8W1PkAotOcn
UAocs+zF7GVwbnbMyZ/D/7mu6znnPuesHBe2zyIhhCxGkRwJYYxG8eCzJo/z
E4jh0b9JOoWUWl9xmp/BpjxL57Bk6C7m+YY3+3yPX8Y6TvRu0Qza6nfyAZ9D
Vz6nl7jGqsPiDijz99iRa/RpWDM3i7I7fuUjfhE//Dcu9H7RDvrmFuXP4U78
yx/0HW/Iq23Y88q3cCq/0GckzNzDrT1N+ZBfQJ2vIq23Qm/wZ25MvuKLKOkb
AA2vKmQ=
       "]], Line3DBox[{1744, 465, 1458, 471, 1746, 484, 483, 500}], 
      Line3DBox[{1745, 488, 487, 1771, 489, 462, 1749, 476, 472, 1452, 1744}],
       Line3DBox[{479, 466, 1456, 1934, 463, 1467, 494, 468, 1781, 480, 490, 
       492, 491, 545}], 
      Line3DBox[{1453, 464, 1935, 1457, 469, 475, 1775, 461, 1774, 460, 485, 
       1750, 486, 473, 1454, 1747, 477, 1455, 474, 1745}], 
      Line3DBox[{482, 481, 1778, 459, 478, 1779, 479}], 
      Line3DBox[{542, 541, 1763, 540, 539, 1459, 538, 1780, 1466, 537, 536, 
       1752, 535, 534, 1754, 533, 532, 1753, 531, 1465, 530, 1776, 1464, 529, 
       528, 1751, 527, 1760, 526, 525, 1773, 524, 523, 1463, 1937, 522, 1462, 
       521, 1772, 520, 519, 1759, 518, 517, 1770, 516, 515, 1461, 1936, 514, 
       1460, 513, 1769, 512, 511, 510}], 
      Line3DBox[{496, 1748, 470, 1765, 1766, 506}], 
      Line3DBox[{497, 495, 1767, 1768, 509}], 
      Line3DBox[{498, 1756, 1755, 505, 1764, 504}], 
      Line3DBox[{499, 1758, 1757, 508, 507}], Line3DBox[{542, 543, 544, 501}],
       Line3DBox[{502, 1761, 1762, 493, 548}], 
      Line3DBox[{503, 547, 1783, 1782, 546}], Line3DBox[{1777, 467, 1453}], 
      Line3DBox[{1777, 482}]}, {}, 
     {RGBColor[0, 1, 0], Thickness[Large], 
      Line3DBox[{1468, 1695, 1679, 1621, 1594, 2086, 1784, 1469, 2003, 1788, 
       1475, 2007, 1791, 1792, 2009, 2010, 1795, 1796, 2016, 2017, 2018, 1803,
        1576, 1887, 2087, 2088, 1888, 1578, 2064, 2065, 2066, 1809, 1873, 
       1892, 2098, 2099, 1642, 1934}], 
      Line3DBox[{1470, 2001, 1841, 1785, 2004, 2005, 1533, 1476, 1479, 1943, 
       1480, 2011, 1846, 1947, 1484, 1871, 2062, 1804, 2089, 1596, 1953, 1597,
        2091, 1872, 2067, 1579, 1959, 1893, 2096, 2097, 1493, 2157, 1779}], 
      Line3DBox[{1471, 1842, 1938, 1472, 1843, 1940, 1477, 1845, 1944, 1945, 
       1793, 1847, 1948, 1949, 1797, 1889, 2090, 1622, 2128, 1890, 1685, 1926,
        2144, 1697, 2145, 1927, 1598, 2093, 2094, 2095, 1875, 1896, 1931, 
       2158, 1778}], 
      Line3DBox[{1474, 1696, 1680, 1595, 1532, 1939, 1787, 1844, 1478, 1535, 
       1942, 1790, 1539, 1483, 1538, 1946, 1794, 1542, 1485, 2013, 1541, 1951,
        1799, 1544, 1488, 2019, 1543, 1954, 1955, 1805, 1599, 1494, 2068, 
       2069, 1548, 1899, 1962, 1641, 2135, 2136, 1898, 1877, 1497, 2106, 2107,
        1645, 1935}], 
      Line3DBox[{1491, 2021, 1547, 1490, 2020, 1546, 1956, 1806, 1545, 1489, 
       2025, 1854, 1495, 2024, 1853, 1964, 1810, 1549, 2130, 1624, 1963, 1923,
        1600, 2102, 1498, 2141, 1687, 1878, 2027, 1900, 1584, 2072, 1906, 
       2108, 2109, 1905, 2155, 1775}], 
      Line3DBox[{1501, 1556, 1974, 1500, 1555, 1973, 1499, 1554, 1971, 1972, 
       1812, 1553, 1969, 1970, 1811, 1552, 2131, 1625, 1968, 1901, 1686, 1551,
        2146, 1698, 2110, 1928, 1608, 1965, 1966, 1967, 1879, 1904, 1550, 
       2162, 1774}], 
      Line3DBox[{1511, 1983, 1560, 1819, 1984, 1561, 2039, 1512, 1562, 1816, 
       1977, 1557, 1504, 1978, 1558, 2028, 1505, 2111, 1610, 1626, 2029, 1813,
        1855, 2104, 1688, 2142, 1689, 1880, 1975, 1908, 1856, 2073, 1907, 
       2112, 2113, 1719, 1932, 2074, 1746}], 
      Line3DBox[{1529, 2000, 1870, 1526, 1996, 1867, 1522, 1993, 1994, 1866, 
       1830, 1989, 1990, 1863, 1823, 1919, 2127, 1619, 2124, 1918, 1627, 1924,
        2151, 1701, 2123, 1925, 1615, 2079, 2080, 2081, 1884, 1913, 1933, 
       2161, 1771}], 
      Line3DBox[{1530, 1575, 2060, 1527, 1997, 1868, 2058, 1835, 1834, 2054, 
       1518, 1991, 1864, 2050, 1824, 1886, 2084, 2085, 1822, 1616, 2042, 1507,
        2132, 1858, 2078, 1591, 2032, 1915, 2118, 2119, 1914, 2160, 1737, 
       1745}], Line3DBox[{1691, 1692, 1683, 1629, 1573, 1839, 1998, 1869, 
       1525, 1570, 2056, 1524, 1571, 1520, 1567, 2053, 1519, 1568, 1829, 1987,
        1565, 2048, 1516, 1566, 1820, 1985, 1563, 2040, 2041, 1513, 1617, 
       1817, 1979, 1980, 1559, 1916, 2139, 1661, 2121, 2122, 1506, 1882, 1909,
        2137, 2138, 1654, 1744}], 
      Line3DBox[{1693, 1694, 1684, 1630, 1620, 2061, 1838, 1528, 2059, 1836, 
       1523, 2055, 1832, 1831, 2051, 2052, 1826, 1825, 2043, 2044, 2045, 1818,
        1593, 1920, 2082, 2083, 1921, 1592, 2033, 2034, 2035, 1814, 1881, 
       1911, 2133, 2134, 1640, 1747}], 
      Line3DBox[{1749, 2114, 1502, 2031, 2030, 1910, 2115, 1590, 1917, 2149, 
       1883, 1700, 2150, 1690, 2143, 1618, 2126, 1821, 1628, 2125, 1564, 1514,
        2049, 1862, 1988, 1517, 1865, 1992, 1833, 1569, 1521, 2057, 1572, 
       1995, 1837, 1574, 1999, 1840}], 
      Line3DBox[{1750, 2116, 1503, 2077, 2076, 1912, 2117, 1589, 1976, 1857, 
       2075, 1614, 2120, 1609, 1815, 2037, 2036, 1885, 1508, 1981, 1859, 2038,
        1509, 1982, 1510, 1515, 1986, 1860, 2046, 1827, 1861, 2047, 1828}], 
      Line3DBox[{1777, 1736, 2101, 1895, 1961, 1960, 1897, 2100, 1852, 1894, 
       2147, 1874, 1699, 2148, 1487, 2140, 1850, 1922, 2129, 1623, 2092, 1891,
        1798, 1950, 1540, 2012, 1482, 1536, 2008, 1481, 1537, 1789, 1941, 
       1534, 2006, 1473, 1531, 2002, 1786}], 
      Line3DBox[{1781, 2163, 1930, 1902, 2152, 1929, 2070, 1903, 2105, 1580, 
       2026, 1876, 2071, 1496, 2103, 1601, 1808, 1958, 1577, 2063, 1807, 2023,
        1851, 1957, 1492, 2022, 1802, 1801, 2015, 1849, 1952, 1486, 2014, 
       1848, 1800}]}, 
     {RGBColor[1, 0.5, 0], Thickness[Large], 
      Line3DBox[{552, 888, 551, 887, 549, 2086, 886, 550, 899, 572, 910, 
       591}], Line3DBox[{563, 2002, 564, 897, 566, 569, 586, 1942, 587, 610, 
       612, 938, 640, 2021, 673}], 
      Line3DBox[{567, 568, 898, 570, 1149, 1939, 571, 909, 588, 611}], 
      Line3DBox[{643, 939, 2014, 613, 923, 590, 911, 589, 912, 574, 900, 2003,
        573, 901, 554, 889, 553, 890, 555, 891, 2001, 556}], 
      Line3DBox[{806, 2047, 1031, 807, 1048, 831, 1061, 850, 1059, 851, 2059, 
       1071, 866, 1070, 867, 1083, 882, 1081, 880, 2060, 1079, 881}], 
      Line3DBox[{834, 833, 1062, 854, 1281, 869, 1998, 1073, 870, 872}], 
      Line3DBox[{852, 1060, 853, 1072, 868, 2061, 1282, 885, 1084, 883, 1082, 
       884}], Line3DBox[{875, 1999, 873, 1074, 871, 856, 855, 2056, 835, 832, 
       808, 1033, 775, 1983, 776}], Line3DBox[CompressedData["
1:eJwV0TkvhFEUBuBjGUQvWoRCJnYjGkshRDejE4Ulgggz0Wgsg4KaUgihpVWo
9EhGTPgDEssf0InnK948770nN99JvuaFwlS+IiJWZDMVsSGLkpPryoj7qogD
3nCfl7URt/qyfsYlnjPHY76bZ/UTfZSHHOERy2ad+rbewR12cZfdyRvzot6j
77GXGXlzP8FJmZVT5/nkvRTlw/mCV/Lk3QNfeee+pH/q3/xlSuqqI1r5Z57S
2/RGDrGBw6yti2jRs3oTc8nOnGOaz8kO+qBe4ADzzLBktq7362vs4ypn5NFs
muMyluzjO2m2S32yu3kNf+z7xReWueV//AMBtTFX
       "]], Line3DBox[CompressedData["
1:eJwV0D0vQ2EYBuCHliI2iVHSGlTDL2Dx1XQiOTZpSyQSFhKLgZhIfG0YfQyd
mUwGCSOJpEkHg9iE2FldZ7hz3c/7vDk55+SXN5L1toioylZHxKasSCKN9oj7
TMQ+b/iRi9jTb/U1XnKVV3yzm9dP9YRnnOQBW3YT+qE+xSNOp3ecH+sz+gnL
PHdWYU2W5N28zV25kIb5ms/uP7DJO2ev+qf+xV9mpTMb8WhX0DP6IPs5ls5d
EX36uJ7nLAc4xx67EX1RL7HOYb54Vk0v6lUOcYHd7lfS75BReXKvxN50J3/m
H+/1rTfZ4o7/+w8vniy1
       "]], 
      Line3DBox[{1401, 1395, 1383, 705, 1365, 679, 1957, 957, 649, 946, 648, 
       947, 2016, 621, 930, 620, 931, 2011, 622, 933, 601, 920, 600, 1945, 
       603, 628, 937, 2012, 631, 634, 2019, 664, 668, 2024, 969, 700, 714, 
       1972, 718, 997, 740, 993, 741, 2038, 1011, 770, 1026, 798, 2043, 1022, 
       799, 1042, 824, 1039, 1991, 821, 1036, 823, 1052, 1994, 843, 820, 816, 
       1034, 1988, 814, 785, 1985, 781, 750, 1978, 1003, 724, 1390, 1406}], 
      Line3DBox[{1402, 1367, 1384, 1366, 680, 958, 2023, 678, 1088, 652, 948, 
       2017, 650, 1085, 624, 1947, 932, 623, 934, 625, 1948, 936, 629, 1950, 
       632, 1165, 660, 1954, 665, 1193, 698, 1964, 701, 976, 1969, 715, 994, 
       742, 1012, 1981, 767, 1009, 768, 2044, 1023, 795, 1020, 797, 2050, 
       1040, 822, 1037, 1989, 818, 1035, 817, 2049, 788, 1274, 783, 2040, 753,
        1231, 749, 2028, 725, 983, 1407}], Line3DBox[CompressedData["
1:eJwV0D1LQgEUgOFj3j5ACAKXCil3oTn/QCQJUmYQ0dDQUKBrQa31C9I+oGxo
T5qCaLbAQYKI5jCK1vaehpf3Pefcq3DzW43leioiKjgcjnhNR7wMRXzz/WjE
j87occRYRIHnsICu+2QSsainuMRPdtN6Sed4xDtlPaOLPMHznOXELa9TepYT
TvOj3/jlT//9wT2+s+v/3/Qzf5kv9QUOcGXe501s4M187rl1fcan5jXd0jVu
csuuqk/0Kl/zDr/bt/Wu7vAR3/IxD9we9I1e8b22UcUe/gDNgChw
       "]], Line3DBox[CompressedData["
1:eJwVzzFIgmEUheGbJkpLQzg0Sou4BA2Ve0NDmDQlCIGbILUGLQUNuSkNzu0G
gkQGDa0RtNre1pIQCUpCzz8cznvPvd+Br9A4OzpdiogKXWUinpYjtvhuLuIj
HTFORbzLJrzJn7MRUzzDa/Z//MRt2ZsFzssOzN94VTZ3P8Hr8gv+S9Okz7zh
7gcv9J3zT/7G9+Vf/JVWdAx0DPAm3ra7xznc5yNv8rJD3MMdnkn+ob8uL+Eb
WRWn8UjeNt/pvOYdbx5lXX5pLrrb47fUpRe7vt0Q79g98GM9Laol3fQPGSEt
qA==
       "]], 
      Line3DBox[{1410, 1117, 1234, 2073, 985, 729, 1315, 2122, 756, 1130, 
       2115, 1244, 1131, 759, 2079, 1135, 1254, 2032, 1138, 764, 1142, 2035, 
       735, 1126, 2117, 1249, 1122, 1222, 1965, 1113, 1220, 2072, 1111, 1190, 
       2136, 1301, 1181, 967, 2100, 1185, 1099, 2093, 1172, 964, 1176, 1959, 
       1096, 687, 2066, 963, 690, 1107, 2105, 1213, 1370, 1376, 1422}], 
      Line3DBox[{1414, 1397, 1374, 2152, 1212, 1433, 1215, 1305, 1303, 2099, 
       1304, 1178, 1431, 692, 2097, 966, 1174, 2095, 1101, 1961, 1184, 1436, 
       1187, 1309, 1307, 2107, 1308, 1218, 1425, 1217, 2109, 1115, 1967, 1224,
        1124, 2077, 731, 1442, 1247, 1298, 2134, 988, 1299, 1252, 1445, 1251, 
       2119, 1137, 2081, 761, 1133, 2031, 730, 1427, 1242, 1313, 2138, 1311, 
       1312, 1236, 1439, 1392, 2113, 1119, 1412}], 
      Line3DBox[{1415, 1340, 1116, 1332, 1120, 1975, 1239, 728, 1314, 2121, 
       755, 1261, 2149, 1134, 1336, 1342, 1343, 1262, 2123, 1346, 1139, 1294, 
       1006, 2078, 763, 1141, 2034, 734, 1976, 990, 1257, 1125, 1321, 1355, 
       2110, 1354, 1352, 1326, 1112, 2027, 1192, 1189, 2135, 1300, 1180, 1182,
        2147, 1098, 1324, 1097, 1350, 2145, 1351, 1317, 1095, 1163, 1094, 
       2067, 686, 2065, 962, 689, 2026, 1106, 1207, 1108, 1377, 1339, 1379, 
       1423}], Line3DBox[{1417, 1208, 1211, 1292, 726, 2029, 1229, 751, 1128, 
       1979, 757, 1272, 786, 2126, 1297, 1279, 1017, 1280, 2127, 1265, 1019, 
       792, 2085, 1146, 1271, 766, 1007, 2082, 1266, 1268, 1143, 2037, 738, 
       992, 1226, 713, 2131, 975, 1199, 1289, 1287, 1963, 1195, 695, 2068, 
       1102, 662, 1167, 2129, 1284, 1286, 1159, 1157, 2090, 658, 1155, 1154, 
       2089, 655, 950, 1151, 1150, 2087, 1091, 681, 1170, 959, 1958, 683, 
       1202, 1386, 1204, 1389, 1387, 1424}], 
      Line3DBox[{1418, 1438, 1440, 2074, 1237, 1458}], 
      Line3DBox[{1419, 1341, 1331, 1334, 2142, 1333, 1238, 1240, 1127, 2139, 
       1260, 1259, 1358, 2150, 1359, 1335, 1344, 1004, 1360, 2151, 1345, 1347,
        1293, 2132, 1005, 762, 1140, 2033, 733, 989, 2075, 1256, 1320, 1319, 
       711, 2146, 974, 1353, 1325, 1329, 2141, 1328, 697, 1191, 1962, 1104, 
       1183, 693, 1356, 2148, 1357, 1323, 1349, 1348, 2144, 691, 1316, 1318, 
       1162, 2091, 1093, 685, 2064, 961, 688, 1105, 2071, 1206, 1338, 1372, 
       1378, 1421}], 
      Line3DBox[{1420, 1385, 706, 1201, 682, 1090, 2063, 1089, 653, 949, 2018,
        651, 1086, 1087, 2062, 654, 1153, 627, 935, 626, 1949, 630, 1158, 659,
        2092, 1164, 1166, 661, 1955, 666, 1194, 968, 2130, 699, 1198, 712, 
       1970, 716, 995, 736, 991, 737, 2036, 1145, 1010, 769, 2045, 1024, 796, 
       1021, 1148, 2084, 791, 1018, 794, 1038, 1990, 819, 790, 1278, 1296, 
       2125, 1016, 1275, 784, 2041, 754, 1232, 2111, 1228, 1291, 1210, 1391, 
       1408}], Line3DBox[{1451, 1448, 1449, 1375, 1434, 2163, 1216, 1450, 
       1467}], Line3DBox[{1453, 1188, 1437, 2101, 1435, 2158, 708, 1430, 2157,
        1432, 1179, 1456}], 
      Line3DBox[{1455, 1253, 1446, 2160, 1444, 2161, 1447, 986, 2114, 1428, 
       1243, 1452}], 
      Line3DBox[{1457, 1219, 1426, 2155, 973, 2162, 710, 1441, 2116, 1443, 
       1248, 1454}], 
      Line3DBox[{1411, 1118, 2112, 1235, 1233, 1310, 2137, 1241, 1245, 2030, 
       1132, 760, 2080, 1136, 2118, 1255, 732, 987, 2133, 1246, 1250, 2076, 
       1123, 1223, 1966, 1114, 2108, 1221, 709, 2106, 1306, 694, 1186, 1960, 
       1100, 2094, 1173, 965, 2096, 1177, 1175, 2098, 1302, 707, 1214, 2070, 
       1371, 1373, 1396, 1413}]}, {}, {}}},
   VertexNormals->CompressedData["
1:eJzsfXlYj93XbyKSoVIkZChTCo0y1YrMlBRKMkdCKEPKVKGQCA1IoRDRJBVN
uxIqNM/zPH8jKlNy9r61en9v5zjnes71O9d5/3iff+7ru9v32nt/9md91lr7
vm/PhO0H9Hby8/HxHRLk4+vL97f/PkF+fJXl2IOJZEHn/Usy+W/J3aDYYE+B
j+C4JKe4w/oVuW4y0GPDonfkg5uzlm5lC6huVDv1xC+eDG4/PnlfTSoxuCI3
WTSmBXx/j514/mIMsYUn0jbzMojj8cHD79xogTVLw6LGWoWRMdWmP+YmZRLj
w+UnRlu3QKdBwyuv4IfkUmSfeRcLs0hkXvPVnTtaoHtitg/nfXIWU88m419P
Guy1sQXMMuaoewc/BO0F7+ey/h+6bnH9z2urMvuQO3Lwb2Zf/800zr5Xjrg+
nQ/IeK7i5pNlYSLO5iMfdJnNH5QScsaw+QffesXN//vw+FS6Xjjdacutt9+g
4YvYevvse3CK4gPXxi3n8GmVW8rh8zc8EUfEFfF0KRmUa//7LcHrpvzRtu8L
W8D9nEBt4eG3ZFrsnMNZk96TMM2br5Uft8Ak13iZ5KLXpCNrQVmuSTq5rPRt
4ARLis/M2Rv1UhNI1wx2zSQNx/UUtOe0gMWQ/R8WCESTiOb7q1r75hChvFin
ewItkJ34o9JmUiBZ7i4hPOZ2Lpl+s9rmWjmvB+eZ/pv49JTyyJEtY/f9zORB
o+bnKtofNv3oI8T6Xy0rOM76B5xODKL2wflnA2f/zKkJl5j9n9w8EqD3fKT/
zB96z//6n/VC7/Ve/oML9Mbnqv5dd4onBPdz4/BE/JGXyFPkJ9pFXNH+7fFj
97w2fk/wahd74jrjz5T1E8qdtlJ+u9/fazAmg5i6C1lXirQA78OtUBurJNK6
2anZZUc2MeoEfr8wHojzDZpkXJtADsW4KX65k0egydEz2pgH5+yrhg6vfk58
f/10HCVVSA4c0lkuJfkfOBuTlj2XRYqInHxU1KHfzbBZ8NZO2h8mfF3A9Tee
dnoZ699tH3rbLxg85BGdDxx5xv/pX+cj/Wf+0Hv+AQL1R+k6IfjPlcildHH+
0q462ZbiA+ZXwvP+FZ9uPKE3nujn6Pfo77ivyFPcX5wH4orziUrb2td7QQbB
a+blNbeGuvFAcsYaLWn1dHLv0nT9/Ic5PfjUnD/5MNAmhRwp+xAQaFNISOGV
Q2WbmyGga1vpCddY4qibXXzCtZRclEyKOFPQ1IOz8IJc9fBx5eRmxTE3sftN
0OxW9Ir2h8ZnEoWs/1le5wvW/4qL6HNqH3ZaKXH2vxs2WDL7mY+ENOh8YOnh
x9x8cqS2RbP5vPwzb4junn929/zf/Vkv9F5v+x98oDc+BldmilE8QbZvLYfn
wIcbpzA8UTdRR1E/0a/Q79G/kJfIU+QD4oi4Ip7vLm7Nak7NIXjNEfztN0io
GRxqb854ujyLVBVGrrZvKSaXj0i9OlbSCCoqweKGgklk4NPjwxb2ryS7X2rm
viMNPTgLFLbX7XpQRXKDM09sWdgAu68+k6b9IUbNVZj1H/rJKo/1V2vqUqb2
4bPXNz1m//XMJfHM/kmb2Ew6D4hQVcpn83nlP4ObD3/p/tV0/pAzOpCbP+IP
5jVsvTB4rDXzA/JG9RW33om3C9ZRfKByeCSHj+YCGUWGTzee0BtPjEMYlzAe
oW6ijqJ+oh+i36M/Ii+Rp8hPxBFxRTzLtOsC9r0vJngl/lbrZwfVw7Ab0u9l
/bOJz70j6bL+1eT4g639BCfWQvWvfauXZaloDJFpvpW9sp78+V0NHzbqpNH+
MPTE7zTWf7mdKNdf1cDiCbULmhqOgcx+czyfAbO/x6tal84HdPsaqbD5rBN9
zeFvOPkznXchbJ9c78fmX7tZ/Aib/8ksfzm6XnBRTOHWe/FL8G223k9CoxZT
fKApsX8Iwyc4ycaZ4dONJ/TGE+M6xnmM7xiHMC5hPELdRB1F/UQ/R79Hf0de
Ik+Rn4gj4op4ep2asi9xQxXB66hzOS3D3cth1MCmtVZnVmv0m5pT6WPGI8sG
RIt8Vy2Al3xte2k/sHrVfz/rv9Kyspn1tywAhjvcU+D7wOyLDdMRYPZ38UaI
0PnASD5RETYfS3+lfDafcO8ruXT+MCh2fjmb/9kjx16y+Ut5TTlH1wurFxoI
s/UuffqRW6+JvNUAig986TKvZvgk2K89wfDpxhN645nlO7GczhuUsztybOr1
NFpGLZdi899j6uVBeQNDhEfvHiU4VyMvf5k+40/bvtpq6rc9fhwkoHKa+e+i
5evmU93saZ9iucGd6WfJ5q07adzqabcVHhDD/HHqmLU/1yjl9bTfHytpzvKH
7rytpx3zN8zbMI/D/A3zDMw7MN/AuIhxEuMj6jjqOuo56g7qEOoP+gn6DfoL
7ivuM+4v4oi4Ip6LRoQz3vRcaz6c57H+Hx/Jf2B8sNijn8Hs+5+a15/Zt9/Y
xOYDKkVLRrD56O1r4+aTutg8i/HhhdS0CjZ/W1/dSDb/m/P17RkfJPjfMT7A
2BqXFWy9G//gA73x6cYTeuOJeTDmxZgPY96GeRzmb730DVDfMC5inMT4iDqO
uo56jrqDOoT6g36CfoP+ojH1uSnj5eCvVRxPbzh06DF+Io6IK+J5YNFkzi5e
F38aZsjsf9lcq830bZVu+lw2n3kH9/yv9A3+om/wF32Dv+gboL5hXYF1BtYX
GK8xL8Z4jXkb5nEYrzHPwLwD4x3GRYyTGB9Rx1HXUc9Rd1CHUH/QD9Hv0d+R
l8hT5CfiiLginm//5A0919zu/MH7T74BI/7kG4D5hreuIhevk05Gx7L18hKi
+7D1CpzZuJ7F68zhkYsYPu7927h47Zl2VYrF63axCA5PjNdYp2HdhvUa5p9Y
Z/TOPzEvxnwM8zbM4zB/wzyjJ+/oxh/jIvII+YM6jrqOeo44o46ifqKfo9+j
vyMve9tHHBFXxPN7Z/BvLzpvvH7LNfH81/yz93ox/+yNTzee0BtPrHuxDsb6
F+sprNuwXsC6AusMrC8wD8Z54Xwwb8M8DvM3zDPQL9EfMS5inMT4iDhjXMJ4
hLqJOor6iX7e2z7yEnmK/EQce88f1/k/rfcPPtAbn3kTA5xZPXXSfkQaw3Ou
7W0OTzxHwHMFrGex7sU6GOtfrNOwbut9PoD7jPuLeTDmxZgPY96GOof6hnkG
5h2YbyDOGOcxvmMcwriE8Qh1s7d99HP0e/R35GXv+SOOiGvv84He+HTjCb3x
/Nv5DJ4j4LkC9u913gVY/2KdhnUb1mu9zrvgL+dd8JfzLvjLeRf85byrJ75j
HOptH3UTdRTn0+u8q8ffkZfIU+Rnr/Ou/yOeEpd2755+PZvkfqhz0J1UQcjP
Ctuin/WAv/Hv2C5/i3dVIrac4LV0AG9HsEMN3DvT5TQiPp0cTXlWcW9CA6kO
HnLo0JcKmCMYcZu2wwyTwjLWvkQr2oK17zntwe6Hluda1/7VDt6P9tDO3+b/
t/ZDa4NLqR24M2vOFWbn/sEzR5kdnAfOC+fzT+3rlJgVM/vvs03vMjsTLgUf
YXZwPbg+XBfOA+eF88H70R7a6ca354p2Nob5nKH7Ajv6+h+k+wIV68zt2L7g
b/w7tpuvXD3db9EbgtfpF14/V+z3Efz0Ds1JXfCGWG+IjcvwTySCCzQqB4z4
CH3uWMym/SD3q7z0/6I/9O7/sPj37KPKhcTj++cp960qyGP/iMYPJnWQfXrF
k6ef48jzrQPbDGbWEBlvt4VTPOvA0qs8i7ZD4Z0JX1h74dbrC1j700VOkKb1
lgSkiq5N06ojOR/49YUUaiBoRJ05W1eb54YLjI+GvGGn2LpwPBwfx80dmzQ6
u225Ru3uTOWPjY3ksrhCTKV2BdT4lqx+lVZANgz4uvFVWgNRavGMi/UrgphN
k6fFShRDUWrO3VTRGrJz9KaM8y5V4BxlQfsVwD2I2MD6twkox7L+ImPFvWk/
OKEcLUvvI4qKx7NZf5XkVkeG+/e+9abMX+LqF3P+Uuf/8BNdJ7yQyU/g8Chz
WcTWi7ggTogPrh/xQBwQrx78unHD9eD6cF1/421/4c+GtD9Mlzi5jvVPVfJ5
87/rn5BjoEBxhPrxtTIM1yV7byYwPK1TlLh1XVCSyWPzEY4X5taF+4T7hvuF
OCKuiCfijvuA+P9tPjhvXAfOf9s66fXs9yuVjh3Mvq3InVesHX/j37H9tu3X
1RRnOLJC1oTiDB9e8a1jOOO+4j7j/uL6EQ/EAdePeCAOpf2fTqX8hLZXozQo
PyHuCqln/MTf+HdsR94gj5A/yBvkEfKnGxDbb0GFM51zaqDVOa+J43+336If
o/8uGCvD+fuuW7ffUf+FxHmpFcx/9/7RhZ4r9sd+3ff19Ef/R/1AHejVn2B/
nOdZ+9dKdJ5E5tzYBjbPd6nqkiUT0kAqTnHetCNV5MY5+XHlM+rh6ao9s+lv
uJziPpb+nWik/hjP2nGdyreNZ6gcU9HA9eL9aA/t4L7iPuP+ol0cB+33Whfg
unD9vXH7p/Hib+1ynq+mGN+s7rk2H/I9L3iiEEwvKehMG1gJ76J2rqZXckb4
24oOvSqQi1k7lfYjeLUwHXOO9f93zUdefjCzi1cSxCtz+H9gn+A4/277iBfi
h7j9u+z/V2t3ig747nPyNcHr4fn6ai+Hf4Qa/nH9fE++hh2KW7n2mWJVs1j7
E7j7+mhRNJF5XD9QULOBNHSKLf+/wSdiuG9/ej8IOtv8oPbgcfjYVcwOjofj
47gxVhl92W+81jVYcu2DjB9vZX56wG2EPot7RVnpa5ifLqkK02V+O8nHRIfF
wZTJgZz/rlk06FhTci1U7a95bHs+i6wUjtsuMa+65360h3bS1zRb0/5EmFiF
0P5AdFM3s/5oF8dB+ytXz314//Rrsn0j353hUYlE863f9yqpj4B4IX6Im29O
Ftdue/poG8PhgbnEMtYeMKl/EOv30UxoAMMp1sxIm7UjXogf4tY9Xs/4OC7O
o7sdsB1/431/6U/+0r+nHeeN68D5++++6vX+/XyNSyvVQm7ebCBvF4eLKStX
Aa4H14fripmsGEj7Qc3RWAllZWWNP9eq3nj2nif0XhfuE+4b7hfuN+4/7juO
95/Hr4L9ZkEdxbY5ZIJda+csq1tk/2m75UXjWyC6b4HnitR8Urym5beJkA8J
PHuqbJwND/jNFH/ZyZQQOS1Rw6e1j0mAlKx6rUUzDNjm9aPTsoKIj0juP6E1
lBzxc34/J6wRrpwNF3PKqiUbJUcFLFzxnKjdkRU1W1YLi3Ub1p240ESiVGd6
uA94QywO3M+UCSqF+pCANzYD6sm1tj33bAa8ICMFZnSIN1WD5FU7Q7+dzeR+
/vTZfjvfk0neWS7Xiwug9E3dk2iLRmK2ztVo6r14Mqjl4oniY/+8Tvlb+xJD
TTKotJ4IrnmWbungT/SGz03UGVYN1mPEU2WmNpKI6TlGoSODScSZVR3f9Srh
hbXXpi/2DcRFQXNV65QAon96dpfyvCqI3+k/SWhwHlkoamQeEelN5q5u2WuR
y4P4HWvyh0/MJm89kl/59/MgLgOcldw3tYC7e8uLgZmFxHViw9rsww+Il5fm
HsH+PLCol3m0Pr2MbFTVe7g+PYgEeg2K/hjSBM4+c2vcZ1WRrEEf1oz1fkkk
G/RXuuxo+Ou6ZG1ea/perSZ2S+a1jW4KII/2679Ws6j/x/gYSrbP4n9SQ9Z5
eC/xXBdCElRsH/lZ1v2X0/9/V7v2vHOjWqbkEOCffuSlvAccvn0xf4FiC4x4
3e/aKdMqslD5gmnzm5eQeXzxUi/1BhD+PP5uRmEdCXjcR9tW+gWEOQ7ztpaq
gVTnhcV3xZtJau13/5xL7+FRgevguXJ/ry9GSW1U+mKRQ1o85g+WrfGEs/W5
nxVkWmDwV3OT2vB8Ivnl3c5RE3zhzsRWgw2neDBzWsw9/c5iIrdUZvSGl0/A
7pTnxJk2zWD17qTRgNUVZM/e1K/2QWFgtFndfNrbRjhxUHXdQ90mklc5sVJ7
QxJIaH0RfziwDN5YldldLqwmIln9HHwawmDXfUG9Gql6qBC5NuVSdC1RCNmW
5Ho3DKK+nJhabFQLi8JN4vskN5I1/rpTJ14OJUNGFe3SX//P/VHG+PYspW08
khAtqZlslQxDS+wm3fqY84/tTLJLUtw9oIGUjnmwVa/wOcxcYu5hl0jji4Db
8idhDcRpvdylgbeiQOut7OKG6EpYRvSVR6rkkMv9f0vxzbxOHLYdLs6c2QLb
y2xNfQ7mE4XL/RpaBG6RjRMV7qxy4cH82TYvt4cWk3HtGvUtV3yItkJj8BDX
Zoj9WCBSq1pBHN9e+Jpg8JRsvrdc2qSpEapkugat96olRqsnb4VbAUR1b8bd
My610KI610L3ahNpF9tzW/wYIUNli9TbHMv+8Xrd21qqvUc2EMl9adUNzg+I
w7lUtcbUKljwa0nHyX6NRDxy+Bf96Efk2X7t4lqXyr/acTuhXy75rZoImq/K
XyH0iKxJ3HhLavw/14e/tV+w7N8nUTGPaN4Z9fRjkDkMSbq6QDCLB74Bs6sf
CBeRT4ZbfeSSDoOfSaTSpd/NsObtxujaseWEz0LpnsaXU3BIQFJn6f0muBl1
KHVkVg1R8r5UtTPcBdwiPqnc2vn/Xn9E3Rb2Ka5qJNOd+7jlTb0HD3I32WzV
rYCTmi4fN7k2kBCj+dsniNyG4DXDRAarVoGJdund/Xx5xG2QX6Cn9D6ywnft
abdiHmjk3cjbk1pIRENOHn3rc4joBs75GTyUB1dGjXbwrikj1u7XlUzHnSSi
1v4T82Ka4OEjn2WdVGdqLCaazznjSJ62l5n+PtgAiybPbKz7WkeCIs6+VYlw
JzZOJ328aZ5280HOsrfDeCTy6xC3sgR/4mI7W9TAsRDWnS3aW7C0nmiNW5lV
r+NBVMr0JvpnV8OF5l1vBIx4RPHAhXUS05+S1dfu9X0DBXAjo3ZD220eEV6X
YLxhViAZ3Tnz54r2vH+Mm+00091F7vUk+lA2eb/6BjHWSe0sO1oN855Dvv/1
RsI/K2ozv8Fd8kNl/uDl7ypAt8/9TwzPE5lW08eL3CbhxWLCDM/WQ5cyGH+W
rJ08Ys4tc7JtzO0ZjD8vKladj5ifTW57Dny/T2YXEVBJXX1/Ywu8tjui4kd5
tSFm2YjWF4fJ5YPlwoxXJ82nNNVRXumvV//tWnyKTA4o5me86hAFh7e+VeT5
uqmy6SIXiHTchrNFC/8eTxcfXV3UVlVF6lRcShwOXiTJ2voZG0X+3t/5xyjl
4ZS3goFBUx4nuJDIlJytnv8XvJV6FCfb4rdWo590Z/uGWB4JrV6+doNnHqgP
2/qF/obbt8QHnnm+RmNS6sFtrF1O0uyU2kMedCpknze4H0H2Tt/s3rk+r+c3
/h3bieL6Nd/5agheJyzcdU43NQ94v2bo0d9QPfKZLmuvWvT0LGvH3/h3bHfR
OiW6jVdGFijEtE8a1kCEurwer47IgwgP8Qm0HR4JBrWy9ouf3j5g7cE16xMn
d9aTbdqqooEK5WRHXKbV9aN5UDTg0BfaDzpejh/B7N3SFQ5g/f+GD9rFcdA+
3o/20M6CcpOP7LfU0IhJrL+E1hxunvgb/47t17Zr1sscaIJ+d/oYbazJJR27
rCXTg/N6fuPfsX3vqQkMx56r1/xCB4bPzK49jgz/NMVvthR/MnL54QsMf++z
MXrMzq+uHU3UDjkS1SbK7OBv/Du2OyQvFDO8HwF3arROMztzPizk7PxQ+WlG
+4F0sHYdu2+akvlQ1t97zchjZQ94ZMq4PjO+vwyHY+8Lh2uZ5vX0w/uwf5xH
6QnGj7Fx6bJsHLFHfVyZ/S+NzZVsnbfMHhxh/Vt990uw/pVGT7n5uD5s4O5T
X6vgxvpjP7wP+yNfkb/I29x1LxwSfJuJ+7dZA31E00mM9f4W8Zt5sK52h8Yj
Ov+UAdC5fWU4SVqQ6/B7fx58XJ71q58Bj3yxeTtlp1oimab+aKDV0b/zZKO4
fNZxg3oi+m7uKb6pFaTygrFYy95/rm//rvZw+VOzM0N55KS/lOxoxyCwiLd/
N+LE/7/5/Hf7f7f/d/t//XbBRQMKxoXxiDT/yzFXBwWRVKm570WO/ft041PH
VlPjkLdkUIDurzWdb0lzsuiqyNIWwN/4d2yPeN9hv4O8IhUZ76BB/x1J35B1
+xltv1+WZfBjxSsSNnKHToLPO3IjaNfyBtouJXQxUZXvNQk73TfslXI6cTp2
qWC9Pe1vtsjoyZo35IHNCd8ZVmnk0YigghFnWmBjxeLTclcJKTr3qErsXgZZ
Unj6Wn/a//t6++x1hRHE3vCbfL1+Jrm/YlH8c9o/P+BEq+KzKPJxU3Zhcl02
sd10YC4Z1AL+V/ynl8nGkAADkQt28dmk2cOqLWtwC9i2ZF3XL39CZOcMuC/w
JocUbss4s0eo530GPvkyl13vh+aS+3ohfmK0/XCu/UvaH97m77zL+qtnrD/L
+o+o1cqh44LsjdVFbNxpv+K5cWuyh1bSecI+b1kFNk971TtxbJ5C0y196LrA
zs2YW5ckfL/K1nV4xQUxOk9Y9Xg1N8/rIzO5eaa23Wa4QerVAc8ZbmRUAIfb
BE/llRRn2Nieoc1wrhnK43BeejP/CN0XEM+fr8n2hX+Tvhfbl7t/cAb/XjjH
7du+m+4r8J9Zyu3z3EoBbn+rlsl30d/gO8mI23f7QwO4dtxv3H/c93LdFe1f
F6cQ+XqR+0FL3pMGsUeDn9B54m/8O7bfbLrqEFafSBRTO2YI7MoiPmuvDB1B
cfPpKIh2nvWOyPbRCHqxKoM0FSjPM6Q4rBBIUfFanEBiZ19YX7Qij/yMP7F2
6GEefDpVaP/BOJG4xoS4K6fkElte4JalVjzgF9xiOHXPM6K9ErYOvpdPgoqN
Jcda9rwXxHfltdBFWZECsiHzTWWYBQ+U7+lfpP2h9EfUJtZfbe8urv/5ygol
Oi6IT3Pjxo3Qc+bGVf+1xJ7OH5r2zFdg8x9/7SI3/1HiaafpfMBj0DUPNh+z
2Q+4+cjcVWLrgv51Fty6DhSqcuvK3vKwk+ICS86aP2E4JZzJGcTwiet0Cqa/
wXfb1Q6G2zfTEq595OBbbF9hXkOnHcPfqiWDwx/9B/0J9xf9Df0P/Q79E/0V
/TRiw4aWT0HviN6LxOELxmYQMX+1iaJ0nvgb/47tgiGtoeuc3pGQd2amspXZ
ZP0UsfXLKT7eS6d33BmQQaYIKrcpLM0kh8/cfDH2KA9++38IVBdNIrMdk4TH
uxWQTycNRpqENcOYUwr+lWEfiGz/TXCFl0eGBiitmRDdDIv5Kl8OmvGCtOQ9
29N4v4iovNCpjwtt7tnH5oH75UxXFpOZoT81Pv5Le+co5cGbQsuIpvNvJav3
TSDzbbNZ9NoXxPu3enp+eym5Fljmp5XXBFqlaxupfRg6VNaM2e9aIsTZf9s2
ey3tD+cX86ey/umXkx6x/vMVhr2g8wdBqd3c/Kc9/iTB5r/3W8IjigOMcY42
Yzh4Dl7D4WDDl8XWBZdNl3HrcrCS59YV9gdH6I2zVXtHG8UNQjN0OdzyouM5
3HT/9IPIXvhfSit5SPcdbASmrGf7vtTaj9v3FTV7V9H9hbWOVdz+Xp9rz+1v
re+gUMoHOFMWxPGhLfoDxwfUWdRd1Fv0Q/RL9Ef0W/Rj9F/cb9x/3HfkB/IF
eVJtmTdkhEAmObk948yDFznki8zxpYde0Pq9+zf+HdstDe21nx5MI07p3+RN
zxaROyHvROU/NIFka8TRppU5xCev8+4T4zwieWnjl4bMJlBcdj70W1csWS9x
LPldeCmpuzh3ydzUJribksCvvC2RmF4ZlDe+rpzoPtkffDG4ESKuz7ScuzCT
eOXLfnXvV0o6+18MnEIae3iVEtm0JsW/gowTbZ++JvA/2q1iC/bCwSpiute8
ZtPeBig6bzXITTOYBK36nXJhRhVRbn5ODpxvgE6pFbfofODpG/83bD6eMy2W
svkITNcRoPOBzSLZ2Ww+Ip3hIWw+Ne2Cw6kdqN0ynrMzYOCiOGZn+7hfGygO
oLqmdTrDwWbnUxGGQ+CcN1Z0/jDqU5/vbP4TzUQD2Pzf7xYRojjCtqTwcwxX
n8ERHJ422hutKG5waMnhBwy3+YtXfWa4mc/R+0L3EQ5rALePUskvuX18dkHC
jt4Pd+MeCLN9GX0tnLOT+lCL8QTmvFHjeCIwez7HE7cDs3fRfQf30M0BbN9X
PXjC7bvrjudylD+wf0QC01Ey95imMONP0C6dSspDmON8huOhR1Ewx0OM3xjP
MY5jvMf4j3Ef8wPMFzBPwDiBcQPjBcYVjDMYX1CPUJ9Ql1C/UM9Qx3r4181H
5CHyFfmLvHU+PdFAZ2g2eaS+aU3fL8VkjFL0VtkXjSBZUKHnWFpAZkg7hnk2
F5P+A4X77bRsAOyH92F/7If3Yf+g+19dx2cmk6GXjhhb6lWSmSGnBmeYN8CD
oZHCOffSieHrUx4WtlXk4MF22Qnf6mBd5q99PPVssvqTf+CJS9Wklfe809Sw
FmIuCs/wd8kh2m1SxjdmVpN+P5euKtxU28P/7R+/3pRSqyF8L1ZeLmirgxZB
Z77THsmQ6Nd66qdhJSmfM7srdV8DfI6t2kjnDXcdjdaydXgWC25h81d0eMPm
DS3rcsPZOuZEhvdl8zeFsw9UzhfCwhmvQqy2lZPVuz8O8RarB4Nzro+c9HJA
5mdjxob51WT9rU1Ns7bVgvX8OIY/HJCLP87wf3/NguOzW7CqHh0PnBOOGTPc
Vl+x48aNfD/6OR0PKhMHrWO43bNt4MZ9t0d6Lt13WOSt8oTt+4QLs/XYvtu8
sZal+wgCz6fos30U4NcaxvbRXnzLNcoraBU7ast4JWl8ZyvjlfMHtYGUJ2Dq
yxfMeCKRGyPJePKkPsmO8hnaBr0SZ3zeNWhUB+NzsfI+XcpD2PPFS5nxcF1q
zDrGw24+Q28+G+zxy6L8h+kVx3MZ/wuPDJvP+I95Lea5mN9iPoT5EeZFGF8x
3mKcRR1EXUQ9RD1FfUVdRT1FfUVdla+MD7KULyfOB/XNmzcWkfvrQ9VndNYB
8hJ5ivxEXiJPkZ/IS+Qp8lPW90SQ9NBCMmRb/pJwh2qSMWn3lNjUahjbpRhw
71MZaf/pMWLkpGqi8cymxGxoFViNiGgcHVVJ8pzmbzroWEXm7V14+oN4BeD9
aA/t4P1oD+3g/WgP7eyTfulyoUZV41ajx56f1vXE02jqto7b1bD02TDlppPZ
ZEXrIV59nyayNzhr1rqLRcCry529RqEAVOINy0zaq8m2r29dHe5XwybTjgMi
h8th5W/+qf1DasnVro/WEhWl0DX6VDD1B+BpiPpR/yDHlLcMZX5xu2gc8wf4
tufZQ+ofZIbk+WbmFyP1tpZQu2B/zU+NjkNW+030YPY/qB1l+wu66q+Psv3d
sOopFy++3IljfgvPWmS+nPJIJjfclH8z/+37ct4ruu/wcsb4MLbv5kuaufjF
H6vP4hacfHSMj+3789Vaz9i+J/UN2EV5Ba/XJUUyXj3x02pgvMqtMNlIeQgq
4zo4HurM2DKK8TAwPdSb8hbsRT64Mt4ecnzL1VmXG6I+nW8pJbej3O89vxhJ
tlaN/jArowk0oJE3RbKKHOe7ErOlLYr8nDHgcc2BBlgaepLDS6TQyZziRxb7
BZxkuMlIHw9+qrxWQ8/l8KyX4TySm2Gf/TA+Dw51hE2m/cG9IZrhTbZZqJ9i
/XMtc5VpP1ByV5FVz1ij0WzpWcH6z43VM6X7ChmTtu9qHDdHw2u/0E62vwnr
pZJonAbFvNWCLP7vMaqLZ/HawbqPB9VH2D7pqojnkOka302aXJhOruB7mELz
Szg0qmgPy0+Nbu1+zPJM+SNhq2me0aOv0oL7ZrJ844FE+W6aZ/S0hxSH1rF8
gyQen0zz4J52t1fKmiwflp/HE6R5cE/7yH0tyiwf3veYnKX1T0/7eMW6KlYH
lUQd3kHr3p52GWutR6z+xboX62Csf7FewvoJ6ybMpzG/xrwa8x7MgzD/wbwH
8yDMf47Psy/c4llFbJ9fnD9+ajoIjJu4/VtHHZROfSN0+Uo1MajqFztSMRte
ZbvYn6A6YD0kTudxeDVxzjp1J7GsFI4lavbxqKykeU7A0rr7VUSsj7rfdZ9K
qHDN7MobUgERmgPUmD9+fhzWSP0RUgY+0GD+aKqRUcd+JwvvXEH/DuOPuc5j
7VczNCyZP/b9aTCJ8SVYtPEE48lFuxuLqG6AxbmLoVQ3QFJ/41SmGwsCrw+n
ugGWo1qCqG6Asv1uTjdE3U8y3YDH+fuaqG6AJFE4xXRDonAkx59RAU6DWd6X
2VrG8eemSfYGqpNQY3PUg+ok2MvNG8p0Mu/KNVeqk6ASWjqM6iQQzxQ5ppN2
a/c9oToJ7+u+WlCdBJjt0sV0cvWQaUmMb3crb+5l9c2F9yP8Gd9G+8jFMb8W
Wro2nO2LyQGyjO1LmMatLObXuUY6/di+LPt0gfPr8MLoHcyva86YRLH9XRTW
wfl118MsI+bXHe8kNjA+bJl9kvPrbv6AVS/+4LkJnqPg+QnW21h/Y92NdRfW
YVh/Yb6L+S/mvZgfY76MeTLmE5hfYF6B+QTmF5hXYL6C+QvmLZivYP6CeUvy
VcO7lH9kQdy8VZSPcOywf1/GwyOqgo8p/8iIm5cWUz5C03zd34yHqOOo66jn
qOOo66jn/jrrC9cHrdCQHrLp5IERTXCxuiTCemAFbD0gsH6+6GoN6+3Ps1NE
aF3qbTu8JLYUdmdljQh8skaDzz2SN6+1GUrXXXk9Tbuoh6/IX+Qt8hX5i7xF
viJ/kbcygns20LwQxhUpKtM8EQ76Htdm+aHhwZEHaLyHzNc3WfyH8yraXNw3
zqhqY3Gn/uebE2y/ijw2c/uVJr9lNcvThG3Gb2c43wiYxeE8I+rdM5anXau9
t5bhvKB+B5ff+k7XncrysVEB1oZsf7O3yXP52OXuvGv3n7wLRnTnXSXd+dW+
P/kVYH6FedTMP3kUFHTnUXgeh+dzeC6H53d4nofneHjeh+d/eO6H50F4PoTn
Qnh+hOdJeI6E5wV4foDnBni+gOcNeM6A9RvWc1jHYb2H9R/WfZgHY16M+TDm
wZgXYz6M+TTm15hXO097oEF1mQxa1JZHdRqizMp3MH0eNG5GNNVlkvwpayDV
acgfXHiG6TPmGZh3YL5xVfpwn0vtkzR2uhsGZtfVwu2AE0rnaH+MoxhXMZ6i
DqIuoh6iDqIuoh6iDqIuoh6izqLuot4i/5CPyEPkH/IReYg8Rl4jn/2CrnB4
dR7Xtmb7Ylf2hcMNf+PfsX1X1Kj5rO6QjnjL7XutWy637zZ/zkOg7s95COB5
iF3SbK7u+Fyo48B4NXnsLq7uEP00jZ23gF5AciTjiUdNxDrGEz/HbK7ueCmy
VJjxuUV/Old3JE7K5erxuGM3TjAeut0/zdXjX9xPybG64+PvG3/Oszt0ubpD
ro9rKavT+0R6ezD+K3XkcnU6nlPjuTWeV+O5J56D4vknnnPhuReed+G5GJ6T
4XkXnjvgOQSeP+A5BZ5b4HkF1mk9dVt3vYZ1HdZ5WN9hXot5Lua3mNdinov5
bc/zgu58DfM0bMd8DfM0zPMw78N8D+MuxmGMvxh3MQ5j/MX4jfEc4zjqIOoi
6iHyBnmE/EGeIe+Qb/lHtrQyHFVtN3xh+2K2zvIlwxN/49+x/dzG2dz5D9+U
EzFsfzOPy3H7O1bTkzu3fBDQn9vHzrULuX3s5gmk9+IJPp/A5xV4jo3PM/D5
Bj7XwOcf+DwEn4PgeTqer+O5Op6f4nkq8grPp/C8Cs+p8DwLz7fwXAvreazv
sa7H+h/PA/AcAOsfrIewDkKeYP6OeXsPr7rzd8zbMd/C/AvzLoxzGPcw3qH/
ox6gDqBeoH6gbuA+4b7hfuG+4j7j/j75s19wp9d+af3BH3J64V85v2sRO5e+
bmbH7dfDQ7tXsP0SkxdXY881lHZNPcr216Q2g9tffC6Fz6nw+RQ+F8HnJPh8
BM/B8Vwcz8PxnBHPHfG8Ec9Z8NwF8wE8l8FzGjyfwXoV61esW3G/sK7Cegrz
YMyLMR/G/KOk17iov6jHqMOo16jfqNuIL+KNOON+4P7gvvD9wRMSe+PZ/ZwP
n/vh8z58zoTPnfB5Ez4/wOcJ+BwBnzfg8wd87oDnuXi+i+e6eG6F+ReeX/V6
zgt43oXnAnhOgOcDiD/Wr1i3Wv3n57Y9dQfmeTgu5nsYzzC+YVzD+IfxEONg
+n9+PtujY8hj5DXyGXmPfoD8x/3A/cF9iRlnuYr9ewt4PVK4SdyLtv88s1so
JvM1WXv1SqFZRjKxO/PAfEIJbc/bOqrc5RUpn9MRrGn9jkx7Pne6De1vOXze
SC/n10RvY0xq68B0om+ioBZq1wIhQadmBqslEAnj7ZLaYhlklVxW5XHbFpAe
qVHeZ0UM4T8Vr7uhMoPsdcmJ9aL99Tvh+h7xaGL5QGtzQVk2SeU7mhdKcZsf
WdRnSUQw+WQSuvm9bw5pWqzYzKM4/14TO0f4tAvZV35g9pOuHCKjO9+3lvaf
ETIyTGHFfZDKulrtkJ9Dyr7tuiQzpAWmPk1JvPMjEsquGTwV+pxNTH5Yr7pG
ee5j+SprcF0C6DtPrlsal0503jia651rgZa32o8GPXwNtjZ96/KfJxPZsHxD
93LKw25cECfEx9NC8NlKo3ek53qsw72drvfZoMU7hT2SiGOwzz2f2g8kNGN/
2lrarha/R+fuzrdEXy2g/VxMJvHIOmZ9TLAFWn/n30jKTSA5F9KehbZlEcMb
qV33BrbAuM/ls81qEsiEJrX6Kvk8snRu7M/Hh3iQqWJ5bOruCGJ2ZmvlEKN8
UsAblvmM6kB03uak2eBFbkw6s0flYz5R3JVdOewI1YFgG+mVhx/Cl5hDn06l
5JN7+kIDq5k+f9eZ2fEtDg5GdvjMssojFfmis0Joe9qd2Fq6fhjo5BVE8SAT
Fl/kcEAeIC+QD8gD5AXyAdePeCAOs0osr1VrpRG8Wh6W/vxiQAvsLTaV2Hby
Hel7UUioWDWD7FL6xrtB99div7eewKVUcth0xLDRvCwyZ1Kg24YDPEgmW5cF
fEwiAdlFz5QTcsh038KExoM88Bg1ecPeISmkXOtZfIp0AXmRIzm58VkzaElY
BN+bE0/yk8RL7DoKiUvn8eDFNN4Z5RZmrbALIE8H7w5p/V5EdpX+bouk+UyY
2uGKuDu2ROJsnm/h4zLS2HVuZgnNo+TmKkfxX7gL/IfGDbguUkwyI9bG3Ipp
hoYHx1Sz1F/BlBwFzfRNhWT/3nrRuQnNgP6A/oF+gTxAXiAfcP2IB+KA60c8
EIf8vPCN2yIyCF59Rk4tkqN8CLLwmFIgnE3wKjfBgn9IUDMMGNV1lo+kEw3n
818m5+US5w2qz2dTfMYKjHT7JZ1JnOZJpt2eWEheFe4MKHnVBG+360oM+phM
1I6d63j+vZgoLlx6amFyEwyXsXyaXJdENGs3Xp/hWE5Oj5u4UDmoEXbf30um
dcUQ4Xs7ZKRelZKTkwv156Q1wbg9ZtlnC4KIpOMAbRfrCnIyJscmPKoRvnsv
Fy60OE70JzZmSeyrIiamMUdX72+Aae3vFKKXvISM0amnzqhWkMhDw0v7vmuE
FV5rAkW2x8Gsq/o/6x1KSaVl5pEVWU1wpNmQ+TPMtPiVTP2byIZXcH6NuoM6
hPqDuoM6hPqDfoh+if6Ifoh+if6I/EM+Ig+Rf8hH5CHijvuA+CPuuA+Iv2jJ
pMLtB3MJXoffWlQqnNIEAn3eDbkwuIDgdenbs2cePmyEneODz/1yKiJ4dS02
um63owFO24dVGD/KJovuq/ntdqgkQmZdI0Vofa1eUdW/6Uk2mSYbOeeCRTWx
+f1bsM2gFsS2iO2SlXpGUkOWbh4VU0ss83KU3uyqhQXrTq2yH5YFR+yGtv54
W00yv4nnzdlRC6jXqN+o26hTqFuoV+iH6Jfoj8gz5B3yDXmGvEO+4Xpwfbgu
XA+uD9d1MWtCrdjyCoLXxzs/Xdn7sBq8sq65B2pVErw+MowcnVJVCTZzF/y2
n1JF8Lr/SuBVxYEVcO/8TKOtY96TQedqHgoINxL72xMbRyhWgPGL8bPTDsST
+aVfHs3yaiLXZq9M3z6xDKZZrih8JeJP9sUvuLo1v5nEXh1wjtVVAUMvFJup
lENkzN73OrY15NC0N7HmKyvgyI+TKsrBFXD+cWVJMK1jxpzd7Nhg0wBf5+Z8
pbyH3yMqoqgfkIiupUcZ//nu9JlPdQdOFBiMpjpE5j1sF2P64/bMy4vqO9Qd
/8z0nsyzH6PGdH7y7MEPaFyEhLsKCTROksWRSdosPko4Li/P8OZB1uOq4RPX
PSOBD+cpl7/NA/I5Wl3rSD38DAppVwxzIUOSFkSW3q2G/pOb5kF9NbQH1sTI
/Ywku2dK55j+qoPArZrMb2HQuSFS1I+J1a9Izn8t5RT5qW7C+k83UqiOEgl+
21imn3PDspppfIItTt6vVxx+SA4uEhdicWpbUkEljetQN3IPi/PkdWQ4F9/X
6S/sJ66aS17X9Sc820fgNWbe8r7feXBiouydA/sLSPTYnIyi24Egcrtymq02
D0pdfYKkjUrIuwxj5cvXQsB8s+C82g3NoHj+uVhqUAURlZepkjKIh5pC30UK
uo09/Ea+I89xn3DfcL8auvFC/AK6cdNRs5jZt6yq59rkPO5m6O1SGO6Tyydx
srrnev7KJSdN2SK4WMR3zuhgLaRbTbgSvjILvpl8dLz0tBpK2gLqs7XrYcEz
i0einhlwcP7PvXwllXA+osJ+9JVKyL568wJ/wxtY9E6/xZLqp9F2v0FPIqqh
0n5VVahoAkRH2iwx/loHZgeHjKK6DN83TUmgOg1tG3asZ/p8dabMcqrLkH95
Wx7VabA7sekk02d328R0qsvgolooSnUaBB5OtGb67HT60lMaLyFtk2wOjZ/Q
bDi9g8VNtQ+ud2m8hK8tipU0fsI010MKLG423pPfSfMSmP5AO5nmKXDFoL2K
5Sfjzs9QpfkcjJf5epXmdyAdnsTldZi3YR6H+RvmK5i/YN6CcRfjMMZfjBMY
NzBeRGn/4XHS+28cr69m/HjJ+Iy44z4g/og77gPiv6Rf1+4zfKU91wqJXwF8
7XUgNn9/tqpyec+1j1/KpaVUfw5vOjFlmXkJVMtu+HbOLAtsaw/8VgxrhGUW
96zvXi+HS8MlXWV0syE5vquLt6cBdPhGfaJ6CA53342kegje7iWnmR4K3Tvr
QvUQoov5Aqkewpi1aVpMD2c7WeZQXQX+1CMhVFdBXVH9GdPVYXxDiqkOw5yH
ww9QHYY629NZTIdFYqqNqG6D7nFlfqrb4CtQzuk26g7qEOoP+jn6Pfo78g/5
iDxE/iEfkYe4fsQDccD1Ix6IQ61PZQGNfz3XvbFbuDj4JPjoYBr/eq79wiae
ZXHQRMXkDI1/PddjaTddWRy8C4tZ/IXNMe0ONP6CwKLvoSz+yvQVSqXxF+ar
uN2m8Re6bu97yuLv/F19Q2h8B6tinTU0voNg/Qsuvkd6zY+m8R1+2AUb0/gO
rQdHTmHx3el2SADNH0Bmbo4jzR+gX50enw/NH36n7qyk+QOICpir0fwBwpZ+
7mT5Q0P8vJU0P4Gqijx+/hUxUFoxjrD85Gld2nqan0C6+XNrmp9AccH4Apaf
YN2CdQzWLxgPMD5gXED9RT1GHUb/Rz1AHUD/Rz1AHUD/Rz1AHUBeIk+Rn8hL
5CnyE3HHfUD8EXfcB8Q/s9jUkOa1PVfF6snFLL/9eUBpMs1re67Lf/C4/LY7
fwazP/kzYP585E/+DAf/5M+A+fNoXxuWh8NotU9raR4OC/bP5PJw41RHcZq3
w26xDxNp3g6PF9ZVsbwd4yvGW4yzGM8wvmFcQ31EvUSdRH1EvUSdRL9FP0b/
Rf4hH5GHyD/kI/IQ1494IA64fsQDcage9siN1mM915+uEa2sLrvwp46DkD91
HGAd9+FYmx+tB2Fl7aQhtB4ET+kFM1g9eKdkIqsHwUnaagStB2GOiSFXD2Jd
jXU21teYl2CegvkJ5gGYF2A+gPED4wnGEdQ11DnUN/RD9Ev0R/RD9Ev0R+QB
8gL5gOtHPBAHqzmVUbT+77neSityY+cA8oJG7NwALkx7KxKT+Rr6am7lzg2w
rsY6G+trrFuwjsH6BfMzzNcwT8N8CPMjzIswjmJcxXiK+o56jzqPuoM6hPqD
uoM6hPqD/oD+gX6BPEBeIB+QB8gL5APigjghPhYqds00LhCxp4myNC6Q6sp2
PiUaF4wj+Z1oXCC1X/eeoHGBWDr/4uLC6H6fylmcijfcpUrjFNlfY+vA4hTe
j/bQDt6P9tAO3o/20M7vs3330rhO8Lp7yMunLL4vmRbN4jrB62ifDVx8V5ml
f5bmD2RLquIFmj+Q5tX151j+sGzuJA+aP5C9vKc8mj+QpYGuZix/UL9t1K5x
/TUhyy4//rKkgajH+Gfwl1bCi/UHCml+SSoj5nD5ZsfMzjiWZ0ap+4jA9ddQ
8qnqEevflO2Zzvo/O5euuyQ7A8oM5NLmLasnO3Pmqr/JpfXLAH9bWqdA0ovx
D1idMnVRdT2rUzJbjXbTOgXUzK/7sTrl8AjzVFanhMwQi08U8Qc+OR8XVqek
rph7ltUpiU19zFh+kyD1lMOhWmQSl+c8uKvA5TeviVgOw8FU5zSHwycH7aev
tCtAx0s5gF5J8uNN+1y8qwFxQZwQH8QFcUJ8cP2IB+LQg1c3fohb7y+S/vz3
9++VuupGvaP2wXDTfJbPk3fJwZx9obnxHyiO8DLm8mKKK5m9O2IBw/NsfIcv
xRE+PHbfzOq/dFOZFoan8r5JDymO4LnNgqv/eJNUChmeKc4XLlMc4YpJXQqr
/5aLPXZheOL+4X7iPj52dk+tcG0gMXKnvaOT02DhZf4MbbsKcNwuUS5u2kj4
1bbN32vxHhq3qq51u1MO/R1NLo6TayIzlxv88h6YDJlTG6YSs7IeHiAvkA9/
w2HvpFf32LoiF9U4Mr4o9F/AY+syzd19n61rrfqSA4wvM2YG57N1TdoT68zW
NWDa8iLGF9/3bVfYuvhE7z2g64JlcjrD2bqmlt3PZutaJKKXwnC2C3YtYXWT
XJEphzPyA/mCPEGeIe+Qb8gz5B3yDfcP9xP3Mbl7n8517xvu1+XufVLt3rfG
7v1S7d6nD937tqB7v5AHyAvkQ3g3Xvu68ZvZjdvSbrzMuvGb1o1boOwfvKZ0
4+fZjRvigjghPogj4op4zhujxc4veq5NT19w5xhzNZrZ+UXPVenAEO4co3Xi
W3Z+0XPdtc/OhZ1jvCxv9N3tUAmXyft640fZULSk3yh2fnKfHJh1waIaPh5b
NrjpSTbkH3olxM5PbrndVGL1gL/syAaqk+CxMoOrC/B+tId28H60h3bwfrSH
dvSnHdRm/97upOGHV/7rcwp83xff/8X3fsWcPkq/X55PLmhdTtqztYIEnP8h
vv1bHWypfDL60P5SUtSy3cBhRAWxfVG2c+SWWhAKm2VH6xQyuDTsHK1TyAvV
6GZWp6RdGxBL6xQyeNZGYVqnENFvgotZnVISu+IGq3eM06YCrXfIgdXfMlm9
c09+wlL7YVkE3J5z5wQJWne484FB9yQKaH9Q3+GmwfoHL1rH9f+W73yd1Uee
auPPsHHvP3fnsXEH5zlUsvpo3GSZoWxc5aObF7Fxs+PHPpCVegbXYhs2sfM3
WGnGnb8dUfY6uXZjItGWP7gmb20tsTaul/hsWAvyKyP6mMsmk43jYvZf8a0j
+V0LU0/fqwaDTy9sHxelEr9D8/o7BNWTjGFdBuPzK2HBxPs8hv+SoW9YfUc2
T24/x/D/SBpbubpsltx0Fj95+kJcXeZtb+vC6jKTyaGnWPwMMNrdyeImTcFq
2b6H5J54xM7hDI8JSrB9b5ZSEmL73iJ5kDuHGyNoy52/4Xv/+B0Avv+P+4f7
ifuI+4f7ifs4wkEzskNnhcaGQR9sD4xoImqJu56x99ZEIrcfKtu5SkO1sywv
RaSZLFLkDWTvrQ2X3LOvZLuOxo+mW5/mtTaT8d+MX7L31vC9XnzPF9/vNZ8q
PaYqM5NUXDBdLbapgWTrRAWtkagAwZNdE1Y+yyWak3fN/R7QQPT63FZ5HVYK
Ex6LZox9UEhyqq4sfhrVQGLXvhYdO6UIdsQLLLlWWkayJy8u2yfeQFrW7k51
j88DfK8U3zPF90vxvVJ8zxTfL7XWkLr2rD0XZiQPS74zqo4sTYlSv9ZSCTd5
JvuEhpbB3E8rasULK4lUivCUMQHV4CSZsZC9b+rzWbKJvR+uOXO9CnvvVHDj
Szm6LpD+tlubrctm8K5Atq4fUSYz6bog1HzWbLaux3wCSmxdezapldB1wae4
kVpsXX5rlYTZusLbr62j6wJ7vvlFbF3Hdd1T2LrwPUV8bxHfV8T3FPG9RXxf
8b3NtWo6b3h0KJ2tg2TxW09l8//YteQtXScUln1wousmz/1zF7D1iq/jl2Pn
BfrDQhhPSbxkAMdPybEbT7LzgsNeJVxeF1+oyuV1Z99sYOfDMLPenzsfXqFT
y50Pj4p6OJvpUcOOhwPY+bBRv7SBjJ+1euM+UX8GBQeT5cy/pw+9nc/8+sc8
Kea3MH6XFKcfpo99uPONsvPig9m5xoKdChlMP97mdHDnGz6igzZSvwXNDXUn
2Dn64NE5qsx/UXdQh1B/UHdQh1B/UF9Qb1BnUj6ltjq1VpPdO/q0jOh8SVZM
S9MJ+V4HqAuoE6gPqAuoE6gPqAuoE6gP19SUJqePqSFDLO8qiY8hoJXRKtkv
qg4aXqwbFti/lvi4v95ksCsKXO98WX6+vbZH11DnUN9Q11DnUN8S76TCp2eN
ZGiEu76TeS6Z/Tjy97N5RYD+hv6Hfof+hv6HfhcmUO/bGdlA9FcKqGY/LCSn
rPdeEppaBBLDQtaVD20gasrZbgebyojA1lHLot7mQUv3+9nJ3e9rv+t+T7vW
0Xch5TdsanfJZX6stuSIBON58JTvxZTfEJfmv4L58S218gzG89SBe1bRecLZ
dN44Ns+byeNC2TyLT5mp0XmCYn7mZDbPzpIB8zh96H6/9nH3+7ZO3e/ZHut+
v9a4+31bi+73bLvc/rxfu6P7fdua7vdsA6wTjRivilUFn7D4sMTFkeNV+4F7
3Hmc+PhVpSz+DPRPz2ZxR3+hWgvjs7fgMR12jl20dlUB4w/qPsYB1H/UcdR1
1HPUcdR11HOMExg3MF5gnMC4gfECvz/B71HwOxTUI9Qn1CXUI9Qn1CXUI9Qn
1CXUI9Qn1CX8Hga/j8HvYlBPUV9RV1FPUV9RV/G7DvzOA7/vQN4gj5A/yBvk
EfIHeYM8Qv4gb5BHyB/8TgC/G8DvBUwsnwAbz8ZBtYbhsHuGoTgbd5FWSz4b
L7BEw4jhYLN5MBd32iV+L2fj7ZjnrMBwjvKUfsbG9Z6QoMLGW6aoM4vhfGCI
1Ww2bnj3dwt7u79jGNv9/QKOh+PjuDgejo/j4ng4Po6L4+H4OO6XrN17qF6B
rMOkKVSvYKzV5nSmV6NVNfpQvYLLC2wfUb0CInDEiOnVzrXm2lT34M5ynwdU
90BPwVeS6R5+p4TfLeH3ShhvMP5g3MF4g/EH407hyokGUDxHY9Dx9O0d5Q0g
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
3pWwcH784T5x1eSHq6ZJzZ77ZOHbGp0Y/XqYeiTpZc7ARuArW3lv18ECcsDp
49TJk4rguKyWe9LuJsir4Lsy+HMuefPSKOpTfF5PP7wP+2M/vK+n/1+eb86s
85Zg72dmyhdWZnjzSHrE5sns/cy6hUc9mX3/rqxoap+YL3whzexPKHjlyOx/
9d11k9onm22LQ5l97If3YX/sh/dh/zO7Ttyl40LBoMsVbFxnXXVuXCfHy4/o
/WA2WCeS2YsYN2E8s7MmLc2b3g+yJevdmL36W4bBzM4Vpx9WZ8/wyOXJpWJ3
nyZCm1TxHN1juT33oz20g/ejPbQzd45UGXs/VSgi+zmb168dexXZfM4euBHO
8HVbZB3C7DhZ9JnM7PRz/+bC8O1Yus+f2ZExXfGS2Zmz2seX3b/ZfhRn70d/
bSVmB+9He2gH70d7aEeh+99DwX8fpaH730VpvGJ2bew9HvFUnOtZUx9Cbp/o
f+cqba+fmOvhPo9HBKoVn7xRf03ObJzl1Z6YB1pbJN4db6sjeu86DH+4VJBl
n0M7Fd7T+ZhPPjnej0faBKpd3K4Ekq/EeNX3uDxY3TRlioJUJXnXkSK6w6EO
7vjJnRIqy4OPQ1um0XaIDegrQtuJcelLa9Y+sujpUNavMipOjv19XardCdaO
v/Hv2K56VXYys3+Zr2MYs/Om0pVrx/FwfBwXx8Pxcdx/+j7Df7X2z7EHhlec
qiF9vhcH69pVE6etP1Z/Sc6DzDP7HKOanpLOM75Vrb8CSKLZ9Ojs6o9QunLl
4JEdb4lZRZmUy/Ikcv1z5gafvBZQP7fnVoxxNHFce3fDjyMZpDxNaV+Kawt0
3Zg5RjNuLVTox1qZzs0m/ZZ7Lxhi3AJtohtdtwQbgJlk597KGXnEdzj/oPtZ
PLh/wO3z7UNxoBhhabimNovIr/zF2yPdAr8GTdXPlr0KhdVu0+ovuZBd7X77
3v76CBstlecX6LwnN7/MTvR+9p7oTSrfJbelBfbrrMv8NuYVUZCbIfbZNo/0
u2sg/z/a+/J/qr/vXw2mkIQmJTImcxGRZSqpEDJGxmSW0igUUiopY0oyVZKp
SBG2eZ6OwzlmZ8LhOMcQGij39f4DPvfx+Dwen8e9n3sf3x/Psq3X3ms913M/
1xn2Rs5MUOwYzpS6cQ7Ep7OZXLxDKEPNMyiUjQm6n57GNQs1w9Stz8e6VptQ
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
    "]],
  AutomaticImageSize->True,
  Axes->True,
  BoxRatios->{1, 1, 0.4},
  ImageSize->{357.75039168226624`, 237.6753193470895},
  Method->{"RotationControl" -> "Globe"},
  PlotRange->{{-3, 3}, {-3, 3}, {-1.4451857360909293`, 0.93249942593787}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  ViewPoint->{-3.1440260731556164`, 0.4109730271019795, 1.1816095896328649`},
  ViewVertical->{0., 0., 1.}]], "Output",
 CellChangeTimes->{3.529496023720376*^9, 3.5297591248857965`*^9},
 ImageCache->GraphicsData["CompressedBitmap", "\<\
eJzEvXd0XVeW5vf63geQYqmk6grdXTPT43Lb0+Nxj+1le3nGXsvLf9hr2f/M
mMo5R1KkKCYxZ4k55wSQIMGcAILIORMECUaAOecsKlaV/zn+vr3POfe+hweS
UqtnxPVdvXjfDd9v7332ue/hP747vN+Hn747vP/77/7h/xn67uB+/d8f9of/
+7OheCj8i0TiL/7PRCJx/A8J3ja4aRfy3//Fhb2T4fZ/4P+SfP03+sB/lP+F
xq0gET31/6Y9xXtf61N9Mzz14JFPyYcnkvGnePtV/j/greWxbQr8U93fsUz/
v+Wf7Nnf83/ZfGDmQ1/3N7Gd/eijj+w9/PdrPjTa78fr/rD/r494Y9qRe5rL
X/GhvWnPJn78yn6X4bFeXP4lHyr025jpvf8+9lHyon/2mB8gG78lwxP/rueN
T/pP+YeMa3SbvPwnrNaeyynNxnzRZMyXjfpB//oxd+cJf0K+jK3NP/3QcyKf
Dz8YHuIvGrEBDdiAer5sap3J4mv/LsNH/vYxNy3wx2W4/aBE4n971NHQx+w/
rAKbE5iptVzU4chMs9v1HzJ83m/8oVgb+xR5TXzdX9YaKiE7nuS6dX+5bgpP
YBmY6bKo1897K8PnPen3b97jneMvavDJNfLp7qhzY6aqErKfsoshPxzP4tPN
DBWexVLW89pjnpNsfzwmPGr7svz2OWE7Ez1uJN41rdYfMCrJLc7iJgZmpj1m
Ax9jOxk1ZBM/fTxj2M3DZnCZlMPp7PIlj55YZZos7FbhwPGIYtNCblpoZjXo
9n38mMfxV/44vvkwX02p1k0LM21ajW5ayE3DK3jUpqsS4rQkNzLwG4mXzMJ5
x5ZSeMnsBj42p9EYl15DuzQToy19O8PWZ4pYT3jn/ofHcy73Tfav2ujuZaXs
Hv9NlV1XB9fiAKsfuGep+zPb709S9ke2XyVnZfZjnpXQn5X//fGsY/cBH45l
wF3RU6VIOrsH3JHA7wchrE07V9ncLax6Jh7EvjllcxcCM7cRh2heE985vynt
dOVm2I/f+HPxD4+3H5OrdD9CLkPZj6TfD3s2wuh0KKlC7jQacHqthhc5OVm6
zdZdODs8I9gD3Y+A+yG7wZ1Bglqg0hO1K8POPOVPyj/XnenjUQlidtLn5MBk
pbGU9Pso+1llZDeT9nTFdpGhuwY7MI1narqeKZwQ7BT3iWubyLW7kzTLSu2H
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
2Y3EXo0CW2PA1jhwNQFcTVrrnPZrM3U9UlyMrTlgax7YWgC2FoGtpWBrOdha
heIxB2ytAVt5YGs92MoHWxvB1uYyE5Uaf7AbQ9tfomD9yzjlV3Dqr8IG1+6o
7a/fE8ubGzHb34Sdbn6tukXb36Ltb9H2t2j7WzJtdgtWvWl144/uq9Z6eK7C
4WmO58jqT6Ti/J9MT5Y3x53t/9oXbu40HYjNsvlrOaznm+xFHM7zNXdjRZub
rk65fF/jif8qmol+91faiYgfmy9FADjzw/iidQJA3rl0AH5SIZfp5VkRCoqD
NDp8gWbbHZoJYlPQ8bFUYLuJKcOoWb4EtEiEFgkQELH1pdocdd4X/tIa3OQT
5pmpVtMsI9CLMywjM32T+U186ttzjN0uLn9pPsLW9QfDA5F3BoGRIdiFYcsi
PkaDj7HgYzxyzwQwMmmNs+STZto68AFGZoKR2WBkLhiZDz4Wgo8l4GMZBlcr
wcdq8LGm0FeT8aZ5lt2TauSVGqgOuaUeVV0D1IjxUjPGSi2o6lqhvbyEuK2D
J6cN+WavSk/O03Zt12GwGzDaDRjuJgx486togvoWTHr7GxEeu018bktX8DYC
+R3o9g/yhIB0GwDcioTc8ide5nHjT9EpcfuRxhWHRvJakNWdK9eq0FGRGxpo
Ho/TtC8DTY2WKJ89bJHmSCq5GXUJ3eS0m41jMx70uKGOi6z5ETxmHRI28DFr
kbzXnJVR0P+cAYa/+Ol1Wt9Vwo5OSjN5xL7paflJRKOjMCNFrkQLCA9rLg6K
ZsbWA9+7tBJqEgEiNsEIMNQUXXsWb9kKXG498yURI0vPQs+BpxegF8HTS1jv
KzOsm0LbaX8HNL2HrPMBJCQhAw5caElaoiSNwE6OAk1jQNPYVUrSxFxny17m
SwysSNIMkDQLJM0BSfNA0oLN7hulvzebkE02I5tsRZW2o0LjbyEGTEW1OOso
0coa4AQMlqpbFKNai1ID1AiUmogS1AKc9gKlNmgfBkntqN0OQB0H3fRYH3MS
p/4UbHAaljiL+HoOrjkP91xA3XYRddslxObL1/3UNDflDgx75xtRYO4QrDvM
S3eZl+4we9yRtgGZug0gbgkkXIbEymWThM1W4Cjxd1FNFqPIEXQqIkhGPazE
HJEHvzWPBKnB/lwO35OSkm7G2u0OIm7ZEynlSSwbxVsHCTfoTgMpMLln0kn5
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
sP+Q4IlCczJ4ASHiZaL5cqL566RKqxd5UX/dSpGNSO9WpHcn0rsb6S1CevcT
zg8Rzo8Szk9sFLM2PVyIMbF2hLgRO0wIP0bMIG5kiBtZ4oYUB3fFjMgXx2kZ
y85YyjpAOyHWKKnGen+wPlN1Xg6VnXY6HnSTHTONcekjB5vtjs5mFwrCPzoi
oR+f8sL2LyqcoPFblRc12HVd99upHN9JO+rZSRSE04gQs4gQ88iBFiOpS3HC
q5QUK3HCmsUO7T8i/9m4CgegpzvQ011gvhDM7wPzB8H8kY8czD9ICBlBUx6o
xwNREtQ4HkjhgbTywGm/B1y7GQ6Yzqkw7ljeS0hjmF2t4I3HMXtUmT136vlw
6Unz48BbOvwywO5XSYMu+tU5xxn6wWGvZv9pCUGbku8OY/f63NUH+YOyMoTw
/OCD3vKGpykWpoxHHCeKzCUBXUg+sxgGLMEBy3DAqvnebze8juFRxwIMvxvD
FynDg/6DJJ6HQf+x9cYObaUWw0cwfCOGTxjDnwgyPKG5CiOrFZlhWl1WxXK7
LijH6DFj9DpJRKst2EprcnK8oMuVfxFg9lZXZ/au+tW7psNG7/+4KKHbyxyz
/ybsn7KR9p1icn+3uPTqnZT+D6Rl0OCsjBjuWfSpcSLPPIEwPiUymxRlHh6Y
T5ryIiK5BC8sn+OzPtDfQuzZSewpxPr7SSOPEHeOY/lTxJ0zH3vWb9gLaklY
YgSepLL+Ucf6WXUpLyWzXPBimrZ8Da1WWZ7WQDbSQIoYoUXTZjwG4JlGHBDN
dUBF+JycKDtufhp0revPAxxwzdU54H796iYn3znsOeDfKcV+VuZLDdvIfe0j
0qVLo/ToEZe+fVIyYEBGhg4hLTRL7VC/iY+KPEvcmUnceR74zyGlf8G97/mr
M91c6BZZv1xk8xuEG0LOHmL+PlB/mHBzArufJdRcpBx+hFAzlhbF7jHsnnDt
nsbuGWP3c96hpVLZHDuHMy7i+bc+7azXjKQsMRq9mW/VkhHP5tXhs3Km/LiB
WtCVkLcH2Lz11dm8m2GKtvkhY3Nz4iF0lzc12LlDVLp3jUmfngnJ75eSIQMz
MnKYF14nPEKkeYww/6Sp93NFz6xEzGIvybFXKydCKFvVKnup5aj1KTUUdZlr
xMtF1aWw0hhp6dt7be1ZKa445uwp6Fq2nwUYqc2nMJKdCbjtoH9YROVSCf2y
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\
\>"]]
}, Open  ]],

Cell[TextData[{
 "\n(b) Copy the code from the previous cell into the cell below.  Then \
evaluate the cell for each of the following functions ",
 StyleBox["g",
  FontSlant->"Italic"],
 "(",
 StyleBox["z",
  FontSlant->"Italic"],
 ").  Modify the same line each time -- don't make multiple copies of the \
same code.\n\t(1) Two line charges of opposite signs:  ln(",
 StyleBox["z",
  FontSlant->"Italic"],
 "-1) - ln(",
 StyleBox["z",
  FontSlant->"Italic"],
 "+1)\n\t(2) Two line charges of the same sign:    -ln(",
 StyleBox["z",
  FontSlant->"Italic"],
 "-1) - ln(",
 StyleBox["z",
  FontSlant->"Italic"],
 "+1)\n\t(3) The edge of a sharp sheet of charge:  ",
 Cell[BoxData[
  FormBox[
   SqrtBox["z"], TraditionalForm]]]
}], "Text",
 CellChangeTimes->{{3.43319938756562*^9, 3.433199392065735*^9}, {
   3.433199436238741*^9, 3.4331998515774984`*^9}, {3.4331999046569824`*^9, 
   3.4331999120321712`*^9}, {3.4331999545176334`*^9, 
   3.4332001057715054`*^9}, {3.4332037668339767`*^9, 
   3.4332037688809037`*^9}, {3.4335338315926*^9, 3.4335338316707244`*^9}, {
   3.442874823788346*^9, 3.4428748254916563`*^9}, 3.442876058583341*^9, {
   3.4903722225203037`*^9, 3.4903722245523033`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Plot3D", "[", 
    RowBox[{
     RowBox[{"Re", "[", 
      RowBox[{"func", "[", 
       RowBox[{"x", "+", 
        RowBox[{"I", " ", "y"}]}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "3"}], ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", 
       RowBox[{"-", "3"}], ",", "3"}], "}"}], ",", 
     RowBox[{"MeshFunctions", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"Re", "[", 
          RowBox[{"func", "[", 
           RowBox[{"#1", "+", 
            RowBox[{"I", " ", "#2"}]}], "]"}], "]"}], "&"}], ",", 
        RowBox[{
         RowBox[{"Im", "[", 
          RowBox[{"func", "[", 
           RowBox[{"#1", "+", 
            RowBox[{"I", " ", "#2"}]}], "]"}], "]"}], "&"}]}], "}"}]}], ",", 
     RowBox[{"MeshStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"Thick", ",", "Orange"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"Thick", ",", "Green"}], "}"}]}], "}"}]}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"func", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         RowBox[{"Log", "[", "#", "]"}]}], "&"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          RowBox[{"Log", "[", 
           RowBox[{"#", "+", "1"}], "]"}]}], "+", 
         RowBox[{"Log", "[", 
          RowBox[{"#", "-", "1"}], "]"}]}], "&"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          RowBox[{"Log", "[", 
           RowBox[{"#", "-", "1"}], "]"}]}], "-", 
         RowBox[{"Log", "[", 
          RowBox[{"#", "+", "1"}], "]"}]}], "&"}], ",", 
       RowBox[{
        SqrtBox["#"], "&"}]}], "}"}], ",", 
     RowBox[{"ControlType", "\[Rule]", "Setter"}], ",", 
     RowBox[{"ControlPlacement", "\[Rule]", "Bottom"}]}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.529496319145759*^9, 3.529496412030851*^9}, {
  3.529496493854527*^9, 3.529496559643149*^9}, {3.5294966271294622`*^9, 
  3.529496770630175*^9}, {3.529496808209138*^9, 3.5294969445777893`*^9}, {
  3.5294969806744843`*^9, 3.529497052830666*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`func$$ = #^Rational[1, 2]& , 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`func$$], {-Log[#]& , -Log[# + 1] + 
       Log[# - 1]& , -Log[# - 1] - Log[# + 1]& , #^Rational[1, 2]& }}}, 
    Typeset`size$$ = {324., {125., 128.}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`func$23563$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`func$$ = -Log[#]& }, 
      "ControllerVariables" :> {
        Hold[$CellContext`func$$, $CellContext`func$23563$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Plot3D[
        Re[
         $CellContext`func$$[$CellContext`x + 
          I $CellContext`y]], {$CellContext`x, -3, 3}, {$CellContext`y, -3, 
         3}, MeshFunctions -> {Re[
           $CellContext`func$$[# + I #2]]& , Im[
           $CellContext`func$$[# + I #2]]& }, 
        MeshStyle -> {{Thick, Orange}, {Thick, Green}}], 
      "Specifications" :> {{$CellContext`func$$, {-Log[#]& , -Log[# + 1] + 
          Log[# - 1]& , -Log[# - 1] - Log[# + 1]& , #^Rational[1, 2]& }, 
         ControlType -> Setter, ControlPlacement -> Bottom}}, "Options" :> {},
       "DefaultOptions" :> {}],
     ImageSizeCache->{428., {165., 170.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{{3.529496707574164*^9, 3.529496772409644*^9}, 
   3.5294968168825617`*^9, {3.5294968562747583`*^9, 3.5294969449974194`*^9}, {
   3.529496983650539*^9, 3.52949705342089*^9}, {3.5294971662974873`*^9, 
   3.529497166468677*^9}, 3.529759125645774*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
(#12) Steady-state circuit analysis (20 min)\
\>", "Subsection",
 CellChangeTimes->{{3.4322913386865587`*^9, 3.432291347014843*^9}, {
   3.4322914131723633`*^9, 3.4322914151880274`*^9}, 3.432470192010652*^9, {
   3.432471282219102*^9, 3.432471283576335*^9}, 3.432480755039879*^9, {
   3.432480793555401*^9, 3.4324808120161247`*^9}, 3.432480854859672*^9, {
   3.43248165598464*^9, 3.4324816571925917`*^9}, 3.4325629132540216`*^9, 
   3.4325877117453656`*^9, {3.4325880147980595`*^9, 3.432588014938687*^9}, 
   3.4326596846686373`*^9, {3.432910168545434*^9, 3.4329101705454726`*^9}, {
   3.432916829188941*^9, 3.4329168327515097`*^9}, {3.4329168693147116`*^9, 
   3.4329168781586313`*^9}, 3.4329169478005934`*^9, {3.433020382253228*^9, 
   3.433020383581379*^9}, {3.433029112827102*^9, 3.4330291129521046`*^9}, 
   3.433165996190505*^9, 3.4331950667362595`*^9, 3.433200324198972*^9, {
   3.433200392435094*^9, 3.433200392560097*^9}, 3.4428761060674124`*^9, {
   3.52486918013165*^9, 3.5248691803032503`*^9}}],

Cell[TextData[{
 "In a previous lab exercise, we explored both transient and steady-state \
effects in a damped mechanical oscillator system.  Here, we will explore the \
time-independent amplitude of a steady-state oscillation to gain experience \
working with complex sinusoids of the form ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"i", " ", "\[Phi]"}]], TraditionalForm]]],
 ".\n\n(a) A series electrical circuit containing an inductor (",
 StyleBox["L",
  FontSlant->"Italic"],
 "), a resistor (",
 StyleBox["R",
  FontSlant->"Italic"],
 ") and a capacitor (",
 StyleBox["C",
  FontSlant->"Italic"],
 ") is another example of a damped harmonic oscillator.  The relevant \
differential equation is ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"L", 
      FractionBox[
       RowBox[{
        SuperscriptBox["d", "2"], "q"}], 
       RowBox[{"d", " ", 
        SuperscriptBox["t", "2"]}]]}], "+", 
     RowBox[{"R", " ", 
      FractionBox[
       RowBox[{"d", " ", "q"}], 
       RowBox[{"d", " ", "t"}]]}], "+", 
     FractionBox["q", "C"]}], "=", 
    RowBox[{"V", " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"i", " ", "\[Omega]", " ", "t"}]]}]}], TraditionalForm]]],
 ", where ",
 StyleBox["q",
  FontSlant->"Italic"],
 "(",
 StyleBox["t",
  FontSlant->"Italic"],
 ") is the charge on the capacitor, and ",
 StyleBox["v",
  FontSlant->"Italic"],
 "(t) = ",
 StyleBox["V",
  FontSlant->"Italic"],
 " ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"i", " ", "\[Omega]", " ", "t"}]], TraditionalForm]]],
 " is a sinusoidal driving voltage with amplitude ",
 StyleBox["V",
  FontSlant->"Italic"],
 ".  Knowing that the steady-state solution to this equation is sinusoidal, \
we simply define a trial solution of the form ",
 StyleBox["q",
  FontSlant->"Italic"],
 "(",
 StyleBox["t",
  FontSlant->"Italic"],
 ") = ",
 StyleBox["Q",
  FontSlant->"Italic"],
 " ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"i", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"\[Omega]", " ", "t"}], "+", "\[Phi]"}], ")"}]}]], 
   TraditionalForm]]],
 " that contains an unknown amplitude (",
 StyleBox["Q",
  FontSlant->"Italic"],
 ") and phase (\[Phi]).  Substituting the trial solution into the \
differential equation produces an ordinary complex equation containing both ",
 StyleBox["Q",
  FontSlant->"Italic"],
 " and \[Phi].  Also knowing that these steady-state parameters can't depend \
on time, we use variable replacement to set ",
 StyleBox["t",
  FontSlant->"Italic"],
 " \[Rule] 0.  We call the result ",
 StyleBox["steadyq",
  FontSlant->"Italic"],
 "."
}], "Text",
 CellChangeTimes->{{3.4324110514224634`*^9, 3.432411051922473*^9}, {
   3.432411399257266*^9, 3.4324117777957845`*^9}, {3.4324807622472754`*^9, 
   3.432480783175516*^9}, 3.432910162982827*^9, {3.432916888143198*^9, 
   3.4329168887838354`*^9}, {3.433158422988104*^9, 3.4331585667023983`*^9}, {
   3.433158624800681*^9, 3.433158995962368*^9}, {3.433159456864705*^9, 
   3.433159500015417*^9}, {3.4331609669689007`*^9, 3.433161088374659*^9}, {
   3.433161298299963*^9, 3.433161352020832*^9}, {3.4331613969576473`*^9, 
   3.433161405933517*^9}, {3.433161454449974*^9, 3.433161733714068*^9}, {
   3.433161764992413*^9, 3.4331619369760923`*^9}, {3.433161967711335*^9, 
   3.4331620688503304`*^9}, {3.4331621236461267`*^9, 3.43316212932415*^9}, {
   3.433163398441695*^9, 3.4331634972840433`*^9}, {3.4331635450213957`*^9, 
   3.433163564045766*^9}, {3.4332019801788645`*^9, 3.4332022292789907`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"diffeq", " ", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"L", " ", 
     RowBox[{
      RowBox[{"q", "''"}], "[", "t", "]"}]}], " ", "+", " ", 
    RowBox[{
     RowBox[{"q", "[", "t", "]"}], "/", "c"}], " ", "+", " ", 
    RowBox[{"R", "  ", 
     RowBox[{
      RowBox[{"q", "'"}], "[", "t", "]"}]}], "-", " ", 
    RowBox[{"V", " ", 
     RowBox[{"Exp", "[", 
      RowBox[{"I", " ", "w", "*", "t"}], "]"}]}]}], "\[Equal]", 
   "0"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"trial", "[", "t_", "]"}], " ", ":=", " ", 
  RowBox[{"Q", "*", 
   RowBox[{"Exp", "[", 
    RowBox[{"I", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"w", "*", "t"}], "+", "phi"}], ")"}]}], 
    "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"steadyq", " ", "=", " ", 
  RowBox[{
   RowBox[{"diffeq", "/.", 
    RowBox[{"q", "\[Rule]", "trial"}]}], " ", "/.", " ", 
   RowBox[{"t", "\[Rule]", "0"}]}]}]}], "Input",
 CellChangeTimes->{
  3.4330313982616067`*^9, {3.433031457278365*^9, 3.4330314663722897`*^9}, {
   3.4330718598264713`*^9, 3.4330718636394453`*^9}, {3.43307190257968*^9, 
   3.433071905649248*^9}, {3.433072013189069*^9, 3.4330720356388903`*^9}, {
   3.4331582705327663`*^9, 3.433158274969573*^9}, {3.43315833325947*^9, 
   3.433158333740396*^9}, 3.43315836734663*^9, 3.4331587162556887`*^9, {
   3.433159052422831*^9, 3.4331590539020452`*^9}, {3.433159187298977*^9, 
   3.433159187721384*^9}, {3.433159260373535*^9, 3.4331592605088863`*^9}, 
   3.433159590419676*^9, {3.4331604394447937`*^9, 3.433160439903805*^9}, {
   3.4331605140154667`*^9, 3.4331605141650677`*^9}, {3.433160580481676*^9, 
   3.433160580847064*^9}, {3.4331608296028967`*^9, 3.433160854656363*^9}, {
   3.433161133428287*^9, 3.43316115653765*^9}, 3.433161287295804*^9, {
   3.433161422413576*^9, 3.4331614502013283`*^9}, {3.433163501365728*^9, 
   3.433163504045166*^9}, 3.442876505330482*^9, {3.529499584620126*^9, 
   3.529499584704012*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"-", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"\[ImaginaryI]", " ", "t", " ", "w"}]]}], " ", "V"}], "+", 
   FractionBox[
    RowBox[{"q", "[", "t", "]"}], "c"], "+", 
   RowBox[{"R", " ", 
    RowBox[{
     SuperscriptBox["q", "\[Prime]",
      MultilineFunction->None], "[", "t", "]"}]}], "+", 
   RowBox[{"L", " ", 
    RowBox[{
     SuperscriptBox["q", "\[Prime]\[Prime]",
      MultilineFunction->None], "[", "t", "]"}]}]}], "\[Equal]", 
  "0"}]], "Output",
 CellChangeTimes->{3.529497269679674*^9, 3.529499594839343*^9, 
  3.529759143695232*^9, 3.529760636751439*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   FractionBox[
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"\[ImaginaryI]", " ", "phi"}]], " ", "Q"}], "c"], "-", "V", "+", 
   RowBox[{"\[ImaginaryI]", " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"\[ImaginaryI]", " ", "phi"}]], " ", "Q", " ", "R", " ", "w"}], 
   "-", 
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"\[ImaginaryI]", " ", "phi"}]], " ", "L", " ", "Q", " ", 
    SuperscriptBox["w", "2"]}]}], "\[Equal]", "0"}]], "Output",
 CellChangeTimes->{3.529497269679674*^9, 3.529499594839343*^9, 
  3.529759143695232*^9, 3.529760636751439*^9}]
}, Open  ]],

Cell[TextData[{
 "\n(b)  A complex equation is really two separate equations, a real one and \
an imaginary one.  Use ",
 StyleBox["Re",
  FontWeight->"Bold"],
 " and ",
 StyleBox["Im",
  FontWeight->"Bold"],
 " to separate these two equations, ",
 StyleBox["ComplexExpand",
  FontWeight->"Bold"],
 " them, which conveniently forces the assumption that all of the variables \
are real, and give them both names.  Note that because ",
 StyleBox["Re",
  FontWeight->"Bold"],
 " and ",
 StyleBox["Im",
  FontWeight->"Bold"],
 " only know how to swallow simple expressions (not equations), you must map \
(",
 StyleBox["/@",
  FontWeight->"Bold"],
 ") them onto an equation in order to hit both sides."
}], "Text",
 CellChangeTimes->{{3.433159603028957*^9, 3.4331596178825493`*^9}, {
   3.433162074769763*^9, 3.4331621950773687`*^9}, {3.433162243876664*^9, 
   3.433162390499756*^9}, {3.43316250344921*^9, 3.433162727358055*^9}, {
   3.433162821428513*^9, 3.433163362464018*^9}, 3.4331634764616613`*^9, {
   3.433163513559367*^9, 3.433163529973431*^9}, {3.433163604399897*^9, 
   3.4331637523558483`*^9}, {3.433163819894046*^9, 3.433163883495516*^9}, {
   3.433164231271474*^9, 3.433164356142631*^9}, {3.4331643982440042`*^9, 
   3.43316453097149*^9}, {3.4332040738418355`*^9, 3.4332041636878853`*^9}, {
   3.433204226736375*^9, 3.433204227845778*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"real", "=", 
  RowBox[{"ComplexExpand", "[", 
   RowBox[{"Re", "/@", "steadyq"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"imaginary", "=", 
  RowBox[{"ComplexExpand", "[", 
   RowBox[{"Im", "/@", "steadyq"}], "]"}]}]}], "Input",
 CellChangeTimes->{
  3.4330313982616067`*^9, {3.433031457278365*^9, 3.4330314663722897`*^9}, {
   3.4330718598264713`*^9, 3.4330718636394453`*^9}, {3.43307190257968*^9, 
   3.433071905649248*^9}, {3.433072013189069*^9, 3.4330720356388903`*^9}, {
   3.4331582705327663`*^9, 3.433158274969573*^9}, {3.43315833325947*^9, 
   3.433158333740396*^9}, 3.43315836734663*^9, 3.4331587162556887`*^9, {
   3.433159052422831*^9, 3.4331590539020452`*^9}, {3.433159187298977*^9, 
   3.433159187721384*^9}, {3.433159260373535*^9, 3.4331592605088863`*^9}, 
   3.433159590419676*^9, {3.4331596521973658`*^9, 3.4331596969265614`*^9}, {
   3.4331597830490437`*^9, 3.433159843162603*^9}, {3.433159889231469*^9, 
   3.43315992465527*^9}, {3.4331600410986843`*^9, 3.4331603221843557`*^9}, {
   3.433160370075094*^9, 3.433160413906743*^9}, {3.43316047633418*^9, 
   3.433160478867753*^9}, {3.4331605265196743`*^9, 3.433160549776763*^9}, {
   3.433160600514307*^9, 3.433160621559478*^9}, {3.433160700357485*^9, 
   3.4331608276757517`*^9}, {3.433160870114787*^9, 3.4331608888718357`*^9}, 
   3.433161440185541*^9, {3.433162206751062*^9, 3.433162209462978*^9}, 
   3.4331624098125153`*^9, 3.4331624892892*^9, {3.433162765313388*^9, 
   3.433162781123055*^9}, 3.4331635188543997`*^9, {3.4331637797011957`*^9, 
   3.433163787493074*^9}, {3.433164534933024*^9, 3.433164585223959*^9}, 
   3.4332042360178623`*^9, {3.529497346834918*^9, 3.5294975636447487`*^9}, {
   3.529497682259104*^9, 3.5294977111526423`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", "V"}], "+", 
   FractionBox[
    RowBox[{"Q", " ", 
     RowBox[{"Cos", "[", "phi", "]"}]}], "c"], "-", 
   RowBox[{"L", " ", "Q", " ", 
    SuperscriptBox["w", "2"], " ", 
    RowBox[{"Cos", "[", "phi", "]"}]}], "-", 
   RowBox[{"Q", " ", "R", " ", "w", " ", 
    RowBox[{"Sin", "[", "phi", "]"}]}]}], "\[Equal]", "0"}]], "Output",
 CellChangeTimes->{{3.529497455984062*^9, 3.529497564093231*^9}, {
   3.52949768568727*^9, 3.529497711708221*^9}, 3.529499597271721*^9, 
   3.5297591443352127`*^9, {3.5297606093422613`*^9, 3.52976063739142*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Q", " ", "R", " ", "w", " ", 
    RowBox[{"Cos", "[", "phi", "]"}]}], "+", 
   FractionBox[
    RowBox[{"Q", " ", 
     RowBox[{"Sin", "[", "phi", "]"}]}], "c"], "-", 
   RowBox[{"L", " ", "Q", " ", 
    SuperscriptBox["w", "2"], " ", 
    RowBox[{"Sin", "[", "phi", "]"}]}]}], "\[Equal]", "0"}]], "Output",
 CellChangeTimes->{{3.529497455984062*^9, 3.529497564093231*^9}, {
   3.52949768568727*^9, 3.529497711708221*^9}, 3.529499597271721*^9, 
   3.5297591443352127`*^9, {3.5297606093422613`*^9, 3.52976063739142*^9}}]
}, Open  ]],

Cell[TextData[{
 "\n(c)  ",
 StyleBox["Solve",
  FontWeight->"Bold"],
 " your pair of ",
 StyleBox["equations",
  FontSlant->"Italic"],
 " for the unknown amplitude (",
 StyleBox["Q",
  FontSlant->"Italic"],
 ") and the unknown phase (\[Phi]) and ",
 StyleBox["Simplify",
  FontWeight->"Bold"],
 " the result.  Then use variable replacement to isolate a physically \
meaningful expression for ",
 StyleBox["Q",
  FontSlant->"Italic"],
 ".  Now that we know the charge amplitude ",
 StyleBox["Q",
  FontSlant->"Italic"],
 ", it's a trivial matter to obtain the current amplitude, which is computed \
as ",
 Cell[BoxData[
  FormBox[
   RowBox[{"|", 
    FractionBox[
     RowBox[{"d", " ", "q"}], 
     RowBox[{"d", " ", "t"}]], "|"}], TraditionalForm]]],
 " = ",
 Cell[BoxData[
  FormBox[
   RowBox[{"|", 
    RowBox[{
     FractionBox["d", 
      RowBox[{"d", " ", "t"}]], 
     RowBox[{"(", 
      RowBox[{"Q", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"i", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[Omega]", " ", "t"}], "+", "\[Phi]"}], ")"}]}]]}], 
      ")"}]}], "|"}], TraditionalForm]]],
 " = ",
 Cell[BoxData[
  FormBox[
   RowBox[{"|", 
    RowBox[{"i", " ", "\[Omega]", " ", "Q", " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"i", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"\[Omega]", " ", "t"}], "+", "\[Phi]"}], ")"}]}]]}], "|"}], 
   TraditionalForm]]],
 " = \[Omega] ",
 StyleBox["Q",
  FontSlant->"Italic"],
 ".  So multiply your expression for ",
 StyleBox["Q",
  FontSlant->"Italic"],
 " by the driving frequency (i.e. ",
 StyleBox["w",
  FontSlant->"Italic"],
 ") and call the result ",
 StyleBox["currentamp",
  FontSlant->"Italic"],
 "."
}], "Text",
 CellChangeTimes->{{3.433160951817212*^9, 3.4331609531923323`*^9}, {
   3.4331637965108*^9, 3.433163812884693*^9}, {3.433163895250248*^9, 
   3.43316404679573*^9}, {3.433164099926835*^9, 3.4331641455916967`*^9}, {
   3.4331641905394287`*^9, 3.433164207185755*^9}, {3.433164637529026*^9, 
   3.43316463798289*^9}, {3.4331646991939983`*^9, 3.433164761938064*^9}, 
   3.433165091156496*^9, {3.433165184871644*^9, 3.4331651951510143`*^9}, {
   3.4332042501275983`*^9, 3.4332042511745005`*^9}, {3.4428766680325656`*^9, 
   3.4428766794387426`*^9}, {3.4428767199072337`*^9, 3.4428768952029867`*^9}}],

Cell[BoxData[
 RowBox[{"Clear", "[", 
  RowBox[{"Q", ",", "currentamp"}], "]"}]], "Input",
 CellChangeTimes->{{3.529499525354568*^9, 3.5294995510714397`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"currentamp", " ", "=", " ", 
  RowBox[{"w", "*", 
   RowBox[{"(", " ", 
    RowBox[{"Q", "/.", 
     RowBox[{
      RowBox[{"Simplify", "[", 
       RowBox[{"Solve", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"real", ",", "imaginary"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"Q", ",", "phi"}], "}"}]}], "]"}], "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"4", ",", "1"}], "]"}], "]"}]}], ")"}]}]}]], "Input",
 CellChangeTimes->{{3.4330294485835485`*^9, 3.4330295555074763`*^9}, {
   3.433029588820616*^9, 3.433029607039716*^9}, {3.4330297398860164`*^9, 
   3.4330298327471743`*^9}, 3.433029869560381*^9, 3.4330299162800283`*^9, {
   3.433029976499934*^9, 3.433029997140956*^9}, {3.4330300612046857`*^9, 
   3.4330300792362823`*^9}, {3.4330301754412537`*^9, 3.433030373257552*^9}, {
   3.433030419180309*^9, 3.4330304652749434`*^9}, {3.4330305004318686`*^9, 
   3.4330305096820464`*^9}, {3.4330305411826515`*^9, 
   3.4330305718707404`*^9}, {3.433030708107731*^9, 3.4330308146566515`*^9}, {
   3.433031271040414*^9, 3.433031356870187*^9}, 3.4330314014335423`*^9, {
   3.4330706653714867`*^9, 3.433070735043111*^9}, {3.4330707841985693`*^9, 
   3.433070827713702*^9}, {3.433071118718321*^9, 3.433071170055215*^9}, {
   3.43307120368333*^9, 3.43307125349722*^9}, {3.433071289501226*^9, 
   3.433071290436674*^9}, 3.4330718358617363`*^9, {3.433071919291222*^9, 
   3.433071931185719*^9}, {3.433072045167148*^9, 3.433072053100321*^9}, {
   3.4330720835677853`*^9, 3.433072100469914*^9}, 3.43307214367982*^9, {
   3.433072176890348*^9, 3.433072177808148*^9}, {3.433072472739378*^9, 
   3.433072474840912*^9}, {3.433158336803706*^9, 3.433158342986998*^9}, {
   3.433159228044142*^9, 3.4331592477943773`*^9}, {3.43315927906212*^9, 
   3.433159307379876*^9}, {3.433159351831736*^9, 3.4331593864939957`*^9}, 
   3.433160866393558*^9, {3.433160913874346*^9, 3.433160941881283*^9}, {
   3.43316456561592*^9, 3.433164594390197*^9}, {3.433164711842308*^9, 
   3.433164729514162*^9}, 3.433204246955642*^9, {3.52949937314207*^9, 
   3.5294995580320587`*^9}, {3.529499697748579*^9, 3.5294997145716963`*^9}, {
   3.52976079637665*^9, 3.5297607965266457`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Solve", "::", "ifun"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Inverse functions are being used by \
\[NoBreak]\\!\\(Solve\\)\[NoBreak], so some solutions may not be found; use \
Reduce for complete solution information. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/Solve/ifun\\\", ButtonNote -> \
\\\"Solve::ifun\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{{3.529499431818253*^9, 3.529499454624486*^9}, {
   3.529499487912444*^9, 3.529499558659552*^9}, 3.529499601339802*^9, {
   3.5294997052185373`*^9, 3.529499721541484*^9}, 3.529759148035102*^9, 
   3.529760798146597*^9}],

Cell[BoxData[
 FractionBox[
  RowBox[{"c", " ", "V", " ", "w"}], 
  SqrtBox[
   RowBox[{"1", "-", 
    RowBox[{"2", " ", "c", " ", "L", " ", 
     SuperscriptBox["w", "2"]}], "+", 
    RowBox[{
     SuperscriptBox["c", "2"], " ", 
     SuperscriptBox["w", "2"], " ", 
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["R", "2"], "+", 
       RowBox[{
        SuperscriptBox["L", "2"], " ", 
        SuperscriptBox["w", "2"]}]}], ")"}]}]}]]]], "Output",
 CellChangeTimes->{{3.529499431895286*^9, 3.529499454664012*^9}, {
   3.529499487952866*^9, 3.5294995586952477`*^9}, 3.529499601400647*^9, {
   3.529499705270156*^9, 3.529499721578144*^9}, 3.5297591481151*^9, 
   3.529760798146597*^9}]
}, Open  ]],

Cell[TextData[{
 "\n(d)  Evaluate ",
 StyleBox["currentamp",
  FontSlant->"Italic"],
 " for the special case when ",
 StyleBox["{R \[Rule] 1, L \[Rule] 1, V \[Rule] 1, C \[Rule] 1}",
  FontWeight->"Bold"],
 " and ",
 StyleBox["Simplify",
  FontWeight->"Bold"],
 " it to obtain a clean expression containing only the driving frequency.  \
Then ",
 StyleBox["LogLinearPlot",
  FontWeight->"Bold"],
 " this expression over the range {",
 StyleBox["w",
  FontSlant->"Italic"],
 ", 0.01, 100}.  Think carefully about what the horizontal and vertical axes \
represent, and explain the physical meaning of the graph to your TA."
}], "Text",
 CellChangeTimes->{{3.433160959513442*^9, 3.4331609606405163`*^9}, {
   3.433164644758409*^9, 3.433164644902214*^9}, {3.433164769691028*^9, 
   3.433165179462496*^9}, {3.433165239543445*^9, 3.433165364443685*^9}, {
   3.433165448760047*^9, 3.4331656319558887`*^9}, {3.4332042681593103`*^9, 
   3.4332042715031457`*^9}, 3.4397495142045174`*^9, {3.439750135942872*^9, 
   3.439750136302249*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"temp", " ", "=", " ", 
  RowBox[{
   RowBox[{"currentamp", "/.", 
    RowBox[{"{", 
     StyleBox[
      RowBox[{
       RowBox[{"R", " ", "\[Rule]", " ", "1"}], ",", " ", 
       RowBox[{"L", " ", "\[Rule]", " ", "1"}], ",", " ", 
       RowBox[{"V", " ", "\[Rule]", " ", "1"}], ",", " ", 
       RowBox[{"c", " ", "\[Rule]", " ", "1"}]}],
      FontWeight->"Bold"], 
     StyleBox["}",
      FontWeight->"Bold"]}]}], 
   StyleBox["//",
    FontWeight->"Bold"], 
   StyleBox["Simplify",
    FontWeight->"Bold"]}]}], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{"LogLinearPlot", "[", 
   RowBox[{"temp", ",", 
    RowBox[{"{", 
     RowBox[{"w", ",", "0.01", ",", "100"}], "}"}]}], "]"}],
  FontWeight->"Bold"]}], "Input",
 CellChangeTimes->{{3.4330294485835485`*^9, 3.4330295555074763`*^9}, {
   3.433029588820616*^9, 3.433029607039716*^9}, {3.4330297398860164`*^9, 
   3.4330298327471743`*^9}, 3.433029869560381*^9, 3.4330299162800283`*^9, {
   3.433029976499934*^9, 3.433029997140956*^9}, {3.4330300612046857`*^9, 
   3.4330300792362823`*^9}, {3.4330301754412537`*^9, 3.433030373257552*^9}, {
   3.433030419180309*^9, 3.4330304652749434`*^9}, {3.4330305004318686`*^9, 
   3.4330305096820464`*^9}, {3.4330305411826515`*^9, 
   3.4330305718707404`*^9}, {3.433030708107731*^9, 3.4330308146566515`*^9}, {
   3.433031271040414*^9, 3.433031356870187*^9}, 3.4330314014335423`*^9, {
   3.4330706653714867`*^9, 3.433070735043111*^9}, {3.4330707841985693`*^9, 
   3.433070864747609*^9}, {3.433071718654029*^9, 3.433071759452476*^9}, {
   3.4330717908970547`*^9, 3.433071794831808*^9}, {3.4330721296245213`*^9, 
   3.433072167783379*^9}, {3.433072518320525*^9, 3.433072526905971*^9}, {
   3.4330725597184477`*^9, 3.433072564926602*^9}, {3.433072630711617*^9, 
   3.433072651629586*^9}, {3.433159407176351*^9, 3.433159408670122*^9}, {
   3.4331646536564913`*^9, 3.433164681507577*^9}, {3.4331653782692757`*^9, 
   3.433165383693214*^9}, 3.4332042646592207`*^9, {3.529499563040181*^9, 
   3.5294997173400927`*^9}}],

Cell[BoxData[
 FractionBox["w", 
  SqrtBox[
   RowBox[{"1", "-", 
    SuperscriptBox["w", "2"], "+", 
    SuperscriptBox["w", "4"]}]]]], "Output",
 CellChangeTimes->{{3.529499648544228*^9, 3.5294996749329033`*^9}, {
   3.529499708802658*^9, 3.529499723611443*^9}, 3.529759150205037*^9, 
   3.5297607992665634`*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
pYKaig/uoPl/80HsyP/PB/8H93YV4g==
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{-4.605170185988091, 0.},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Exp[
       Part[#, 1]], 
      Part[#, 2]}& ), "CopiedValueFunction" -> ({
      Exp[
       Part[#, 1]], 
      Part[#, 2]}& )},
  FrameTicks->{{Automatic, Automatic}, {{{-4.605170185988091, 
       FormBox["0.01`", TraditionalForm]}, {-2.3025850929940455`, 
       FormBox["0.1`", TraditionalForm]}, {0., 
       FormBox["1", TraditionalForm]}, {2.302585092994046, 
       FormBox["10", TraditionalForm]}, {4.605170185988092, 
       FormBox["100", TraditionalForm]}, {-3.912023005428146, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-3.506557897319982, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-3.2188758248682006`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-2.995732273553991, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-2.8134107167600364`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-2.659260036932778, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-2.5257286443082556`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-2.4079456086518722`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-1.6094379124341003`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-1.203972804325936, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.916290731874155, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.6931471805599453, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.5108256237659905, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.3566749439387323, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.2231435513142097, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.10536051565782628`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {0.6931471805599453, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {1.0986122886681098`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {1.3862943611198906`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {1.6094379124341003`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {1.791759469228055, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {1.9459101490553132`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {2.0794415416798357`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {2.1972245773362196`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {2.995732273553991, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {3.4011973816621555`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {3.6888794541139363`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {3.912023005428146, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {4.0943445622221, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {4.248495242049359, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {4.382026634673881, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {4.499809670330265, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}}, {{-4.605170185988091, 
       FormBox["\"\"", TraditionalForm]}, {-2.3025850929940455`, 
       FormBox["\"\"", TraditionalForm]}, {0., 
       FormBox["\"\"", TraditionalForm]}, {2.302585092994046, 
       FormBox["\"\"", TraditionalForm]}, {4.605170185988092, 
       FormBox["\"\"", TraditionalForm]}, {-3.912023005428146, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-3.506557897319982, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-3.2188758248682006`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-2.995732273553991, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-2.8134107167600364`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-2.659260036932778, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-2.5257286443082556`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-2.4079456086518722`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-1.6094379124341003`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-1.203972804325936, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.916290731874155, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.6931471805599453, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.5108256237659905, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.3566749439387323, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.2231435513142097, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.10536051565782628`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {0.6931471805599453, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {1.0986122886681098`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {1.3862943611198906`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {1.6094379124341003`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {1.791759469228055, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {1.9459101490553132`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {2.0794415416798357`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {2.1972245773362196`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {2.995732273553991, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {3.4011973816621555`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {3.6888794541139363`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {3.912023005428146, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {4.0943445622221, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {4.248495242049359, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {4.382026634673881, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {4.499809670330265, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}}}},
  GridLines->{None, None},
  Method->{},
  PlotRange->NCache[{{-4.605170185988091, 
      Log[100]}, {0., 0.9999989950019718}}, {{-4.605170185988091, 
    4.605170185988092}, {0., 0.9999989950019718}}],
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{{{-4.605170185988091, 
      FormBox["0.01`", TraditionalForm]}, {-2.3025850929940455`, 
      FormBox["0.1`", TraditionalForm]}, {0., 
      FormBox["1", TraditionalForm]}, {2.302585092994046, 
      FormBox["10", TraditionalForm]}, {4.605170185988092, 
      FormBox["100", TraditionalForm]}, {-3.912023005428146, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-3.506557897319982, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-3.2188758248682006`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-2.995732273553991, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-2.8134107167600364`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-2.659260036932778, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-2.5257286443082556`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-2.4079456086518722`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-1.6094379124341003`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-1.203972804325936, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-0.916290731874155, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-0.6931471805599453, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-0.5108256237659905, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-0.3566749439387323, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-0.2231435513142097, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-0.10536051565782628`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {0.6931471805599453, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {1.0986122886681098`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {1.3862943611198906`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {1.6094379124341003`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {1.791759469228055, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {1.9459101490553132`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {2.0794415416798357`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {2.1972245773362196`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {2.995732273553991, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {3.4011973816621555`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {3.6888794541139363`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {3.912023005428146, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {4.0943445622221, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {4.248495242049359, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {4.382026634673881, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {4.499809670330265, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}}, Automatic}]], "Output",
 CellChangeTimes->{{3.529499648544228*^9, 3.5294996749329033`*^9}, {
   3.529499708802658*^9, 3.529499723611443*^9}, 3.529759150205037*^9, 
   3.529760799336561*^9}]
}, Open  ]],

Cell[TextData[{
 "\n(e)  Redraw the current-amplitude graph above for the special case when ",
 StyleBox["{R \[Rule] 1, L \[Rule] 0, V \[Rule] 1, C \[Rule] 1}",
  FontWeight->"Bold"],
 ".  Removing the inductor from the circuit produces a \"high-pass filter\".  \
Can you see the reason for this name?"
}], "Text",
 CellChangeTimes->{{3.433160959513442*^9, 3.4331609606405163`*^9}, {
   3.433164644758409*^9, 3.433164644902214*^9}, {3.433164769691028*^9, 
   3.433165179462496*^9}, {3.433165239543445*^9, 3.433165364443685*^9}, {
   3.433165448760047*^9, 3.433165675405279*^9}, {3.433165716126402*^9, 
   3.433165761631795*^9}, {3.433165794481394*^9, 3.433165810161289*^9}, {
   3.4331659215761337`*^9, 3.43316593113306*^9}, {3.4332042863785267`*^9, 
   3.433204286628533*^9}, {3.4332043432549825`*^9, 3.433204358442871*^9}, {
   3.4428769476089015`*^9, 3.4428769521244974`*^9}, 3.4428771077641263`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LogLinearPlot", "[", 
  RowBox[{
   RowBox[{"currentamp", "/.", 
    StyleBox[
     RowBox[{"{", 
      RowBox[{
       RowBox[{"R", " ", "\[Rule]", " ", "1"}], ",", " ", 
       RowBox[{"L", " ", "\[Rule]", " ", "0"}], ",", " ", 
       RowBox[{"V", " ", "\[Rule]", " ", "1"}], ",", " ", 
       RowBox[{"c", " ", "\[Rule]", " ", "1"}]}], "}"}],
     FontWeight->"Bold"]}], 
   StyleBox[",",
    FontWeight->"Bold"], 
   StyleBox[
    RowBox[{"{", 
     RowBox[{"w", ",", "0.01", ",", "100"}], "}"}],
    FontWeight->"Bold"]}], 
  StyleBox["]",
   FontWeight->"Bold"]}]], "Input",
 CellChangeTimes->{{3.4330294485835485`*^9, 3.4330295555074763`*^9}, {
   3.433029588820616*^9, 3.433029607039716*^9}, {3.4330297398860164`*^9, 
   3.4330298327471743`*^9}, 3.433029869560381*^9, 3.4330299162800283`*^9, {
   3.433029976499934*^9, 3.433029997140956*^9}, {3.4330300612046857`*^9, 
   3.4330300792362823`*^9}, {3.4330301754412537`*^9, 3.433030373257552*^9}, {
   3.433030419180309*^9, 3.4330304652749434`*^9}, {3.4330305004318686`*^9, 
   3.4330305096820464`*^9}, {3.4330305411826515`*^9, 
   3.4330305718707404`*^9}, {3.433030708107731*^9, 3.4330308146566515`*^9}, {
   3.433031271040414*^9, 3.433031356870187*^9}, 3.4330314014335423`*^9, {
   3.4330706653714867`*^9, 3.433070735043111*^9}, {3.4330707841985693`*^9, 
   3.433070864747609*^9}, {3.4330717702880487`*^9, 3.433071778039559*^9}, {
   3.4330724014638433`*^9, 3.433072406422604*^9}, 3.4330725713348293`*^9, 
   3.433072625991496*^9, {3.433072656424292*^9, 3.4330726591178513`*^9}, 
   3.433159433153268*^9, {3.43316466453891*^9, 3.433164684091522*^9}, {
   3.433165389847578*^9, 3.433165395733706*^9}, 3.433204293503709*^9, {
   3.5294997301221933`*^9, 3.5294997679463987`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
SeJoKuR6lh/2w3Uy+pkF4uiozG3Da9h6e6Q1fTrE0TJH38F47NUvhEPFZRlI
abB0aQl266GrolryDCRbZCpVhh0wP5W4W4mBZDTeSj3D/oL6cq5oMNBtN0/G
S+yL71h1Q5sYyOremh/V/8un+aJInRkDdWnb9TRi7yM744MCGUjLP6CVgz0W
Yyt7N5iBttyUCSSx7274mPUslIF0pNRVR7C5l56XcW8xUGHCndPj2HFz8W2H
kxkot/Ng8z/sdqG9MluKGKg6OGOTwCKun0pJxkgPA8Wsn92yEhsuyE639TFQ
XpR9kDz28upQs6oBBpLc0lmrgF171H76JpeBtKXcjZWxFVLnzVT+MdDGOz1b
NLDbJYxn7CQk0FMV97r12PsWOyxegQRKnjDK3omtaL47O2OHBKJyIst2YU/f
ffrvhpEEMjpgWmuEnaMfnG1rIoE6Tuj83INN9Vaf5dpJIId3E3Mm2C/YnjmK
5yTQfRZj0hpb6zv/fNhdCST3TerncWwN+YbcmjQJ1Lkk6fsJbBXnJCueTAkU
eda/1Rl7JVf9oe8jCbS6Iuy9KzaDutfarVwCFXZ33T2DPb7q1iPLLxKoWbjt
nyf2K19xO1kaE02qHcoKxK6oauM5KMBEAXHuF4Kwy3jT8xOFmejI1HrDq9gF
keso4hJMlLq0/VswdvoDy8eUlUyUWPp9OhQ79H089c9mJjI67zl/CztY7PAT
5a1M9LAwuSICO8Baxd7JgIm86HFekdiXf5Y+ad/FRD3Z1N4o7DMjLfYfLZno
MyleHovtqnufV8iWibri507GYZ/4z7XAyJ6JhjfWS8VjH+ab4mU5MlFjurhP
Arb9PlbB7DEmqqTeUknEto2+flDPhYnYN7lf/merZgvapVNMVDW31f82tvn/
/y9B5VKX1JKw/w+xxIhI
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{-4.605170185988091, 0.},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Exp[
       Part[#, 1]], 
      Part[#, 2]}& ), "CopiedValueFunction" -> ({
      Exp[
       Part[#, 1]], 
      Part[#, 2]}& )},
  FrameTicks->{{Automatic, Automatic}, {{{-4.605170185988091, 
       FormBox["0.01`", TraditionalForm]}, {-2.3025850929940455`, 
       FormBox["0.1`", TraditionalForm]}, {0., 
       FormBox["1", TraditionalForm]}, {2.302585092994046, 
       FormBox["10", TraditionalForm]}, {4.605170185988092, 
       FormBox["100", TraditionalForm]}, {-3.912023005428146, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-3.506557897319982, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-3.2188758248682006`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-2.995732273553991, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-2.8134107167600364`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-2.659260036932778, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-2.5257286443082556`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-2.4079456086518722`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-1.6094379124341003`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-1.203972804325936, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.916290731874155, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.6931471805599453, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.5108256237659905, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.3566749439387323, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.2231435513142097, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.10536051565782628`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {0.6931471805599453, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {1.0986122886681098`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {1.3862943611198906`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {1.6094379124341003`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {1.791759469228055, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {1.9459101490553132`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {2.0794415416798357`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {2.1972245773362196`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {2.995732273553991, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {3.4011973816621555`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {3.6888794541139363`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {3.912023005428146, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {4.0943445622221, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {4.248495242049359, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {4.382026634673881, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {4.499809670330265, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}}, {{-4.605170185988091, 
       FormBox["\"\"", TraditionalForm]}, {-2.3025850929940455`, 
       FormBox["\"\"", TraditionalForm]}, {0., 
       FormBox["\"\"", TraditionalForm]}, {2.302585092994046, 
       FormBox["\"\"", TraditionalForm]}, {4.605170185988092, 
       FormBox["\"\"", TraditionalForm]}, {-3.912023005428146, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-3.506557897319982, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-3.2188758248682006`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-2.995732273553991, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-2.8134107167600364`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-2.659260036932778, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-2.5257286443082556`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-2.4079456086518722`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-1.6094379124341003`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-1.203972804325936, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.916290731874155, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.6931471805599453, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.5108256237659905, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.3566749439387323, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.2231435513142097, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.10536051565782628`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {0.6931471805599453, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {1.0986122886681098`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {1.3862943611198906`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {1.6094379124341003`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {1.791759469228055, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {1.9459101490553132`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {2.0794415416798357`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {2.1972245773362196`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {2.995732273553991, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {3.4011973816621555`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {3.6888794541139363`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {3.912023005428146, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {4.0943445622221, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {4.248495242049359, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {4.382026634673881, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {4.499809670330265, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}}}},
  GridLines->{None, None},
  Method->{},
  PlotRange->NCache[{{-4.605170185988091, 
      Log[100]}, {0., 0.9999500037308937}}, {{-4.605170185988091, 
    4.605170185988092}, {0., 0.9999500037308937}}],
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{{{-4.605170185988091, 
      FormBox["0.01`", TraditionalForm]}, {-2.3025850929940455`, 
      FormBox["0.1`", TraditionalForm]}, {0., 
      FormBox["1", TraditionalForm]}, {2.302585092994046, 
      FormBox["10", TraditionalForm]}, {4.605170185988092, 
      FormBox["100", TraditionalForm]}, {-3.912023005428146, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-3.506557897319982, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-3.2188758248682006`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-2.995732273553991, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-2.8134107167600364`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-2.659260036932778, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-2.5257286443082556`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-2.4079456086518722`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-1.6094379124341003`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-1.203972804325936, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-0.916290731874155, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-0.6931471805599453, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-0.5108256237659905, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-0.3566749439387323, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-0.2231435513142097, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-0.10536051565782628`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {0.6931471805599453, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {1.0986122886681098`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {1.3862943611198906`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {1.6094379124341003`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {1.791759469228055, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {1.9459101490553132`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {2.0794415416798357`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {2.1972245773362196`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {2.995732273553991, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {3.4011973816621555`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {3.6888794541139363`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {3.912023005428146, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {4.0943445622221, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {4.248495242049359, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {4.382026634673881, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {4.499809670330265, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}}, Automatic}]], "Output",
 CellChangeTimes->{3.529499768392756*^9, 3.5297591512350063`*^9, 
  3.529760800356531*^9}]
}, Open  ]],

Cell[TextData[{
 "\n(f)  (Optional) Redo the current-amplitude graph for the special case \
when ",
 StyleBox["{R \[Rule] 1, L \[Rule] 1, V \[Rule] 1, C \[Rule] Infinity}",
  FontWeight->"Bold"],
 ".  Note that you might need to employ a ",
 StyleBox["Limit",
  FontWeight->"Bold"],
 " to handle the capacitor.  Removing the capacitor from the circuit produces \
a \"low-pass filter\".  Can you see the reason for this name?"
}], "Text",
 CellChangeTimes->{{3.433160959513442*^9, 3.4331609606405163`*^9}, {
   3.433164644758409*^9, 3.433164644902214*^9}, {3.433164769691028*^9, 
   3.433165179462496*^9}, {3.433165239543445*^9, 3.433165364443685*^9}, {
   3.433165448760047*^9, 3.433165675405279*^9}, {3.433165716126402*^9, 
   3.433165787464551*^9}, {3.4331658393567533`*^9, 3.433165901231299*^9}, 
   3.43316594158427*^9, {3.4332042905348825`*^9, 3.4332042907692637`*^9}, {
   3.43320436874001*^9, 3.4332043747714143`*^9}, {3.4428770331708536`*^9, 
   3.4428770713581095`*^9}, 3.4428771100766115`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LogLinearPlot", "[", 
  RowBox[{
   RowBox[{"Limit", "[", 
    RowBox[{
     RowBox[{"currentamp", "/.", 
      StyleBox[
       RowBox[{"{", 
        RowBox[{
         RowBox[{"R", " ", "\[Rule]", " ", "1"}], ",", " ", 
         RowBox[{"L", " ", "\[Rule]", " ", "1"}], ",", " ", 
         RowBox[{"V", " ", "\[Rule]", " ", "1"}], ",", " ", 
         RowBox[{"c", " ", "\[Rule]", " ", "clim"}]}], "}"}],
       FontWeight->"Bold"]}], 
     StyleBox[",",
      FontWeight->"Bold"], 
     RowBox[{
      StyleBox["clim",
       FontWeight->"Bold"], 
      StyleBox["\[Rule]",
       FontWeight->"Bold"], "Infinity"}]}], "]"}], ",", 
   StyleBox[
    RowBox[{"{", 
     RowBox[{"w", ",", "0.01", ",", "100"}], "}"}],
    FontWeight->"Bold"]}], 
  StyleBox["]",
   FontWeight->"Bold"]}]], "Input",
 CellChangeTimes->{{3.4330294485835485`*^9, 3.4330295555074763`*^9}, {
   3.433029588820616*^9, 3.433029607039716*^9}, {3.4330297398860164`*^9, 
   3.4330298327471743`*^9}, 3.433029869560381*^9, 3.4330299162800283`*^9, {
   3.433029976499934*^9, 3.433029997140956*^9}, {3.4330300612046857`*^9, 
   3.4330300792362823`*^9}, {3.4330301754412537`*^9, 3.433030373257552*^9}, {
   3.433030419180309*^9, 3.4330304652749434`*^9}, {3.4330305004318686`*^9, 
   3.4330305096820464`*^9}, {3.4330305411826515`*^9, 
   3.4330305718707404`*^9}, {3.433030708107731*^9, 3.4330308146566515`*^9}, {
   3.433031271040414*^9, 3.433031356870187*^9}, 3.4330314014335423`*^9, {
   3.4330706653714867`*^9, 3.433070735043111*^9}, {3.4330707841985693`*^9, 
   3.433070864747609*^9}, {3.4330716911489143`*^9, 3.433071695674704*^9}, 
   3.433072502548324*^9, {3.4330725755030823`*^9, 3.4330725828923197`*^9}, {
   3.4330726144798098`*^9, 3.43307264051775*^9}, 3.433159438337624*^9, {
   3.433164667587666*^9, 3.433164687683753*^9}, {3.433165400279825*^9, 
   3.433165438385022*^9}, 3.4332042963006554`*^9, {3.529499792852186*^9, 
   3.5294998670080347`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{-4.605170185988091, 0.},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Exp[
       Part[#, 1]], 
      Part[#, 2]}& ), "CopiedValueFunction" -> ({
      Exp[
       Part[#, 1]], 
      Part[#, 2]}& )},
  FrameTicks->{{Automatic, Automatic}, {{{-4.605170185988091, 
       FormBox["0.01`", TraditionalForm]}, {-2.3025850929940455`, 
       FormBox["0.1`", TraditionalForm]}, {0., 
       FormBox["1", TraditionalForm]}, {2.302585092994046, 
       FormBox["10", TraditionalForm]}, {4.605170185988092, 
       FormBox["100", TraditionalForm]}, {-3.912023005428146, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-3.506557897319982, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-3.2188758248682006`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-2.995732273553991, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-2.8134107167600364`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-2.659260036932778, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-2.5257286443082556`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-2.4079456086518722`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-1.6094379124341003`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-1.203972804325936, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.916290731874155, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.6931471805599453, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.5108256237659905, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.3566749439387323, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.2231435513142097, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.10536051565782628`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {0.6931471805599453, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {1.0986122886681098`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {1.3862943611198906`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {1.6094379124341003`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {1.791759469228055, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {1.9459101490553132`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {2.0794415416798357`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {2.1972245773362196`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {2.995732273553991, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {3.4011973816621555`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {3.6888794541139363`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {3.912023005428146, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {4.0943445622221, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {4.248495242049359, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {4.382026634673881, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {4.499809670330265, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}}, {{-4.605170185988091, 
       FormBox["\"\"", TraditionalForm]}, {-2.3025850929940455`, 
       FormBox["\"\"", TraditionalForm]}, {0., 
       FormBox["\"\"", TraditionalForm]}, {2.302585092994046, 
       FormBox["\"\"", TraditionalForm]}, {4.605170185988092, 
       FormBox["\"\"", TraditionalForm]}, {-3.912023005428146, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-3.506557897319982, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-3.2188758248682006`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-2.995732273553991, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-2.8134107167600364`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-2.659260036932778, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-2.5257286443082556`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-2.4079456086518722`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-1.6094379124341003`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-1.203972804325936, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.916290731874155, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.6931471805599453, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.5108256237659905, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.3566749439387323, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.2231435513142097, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.10536051565782628`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {0.6931471805599453, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {1.0986122886681098`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {1.3862943611198906`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {1.6094379124341003`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {1.791759469228055, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {1.9459101490553132`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {2.0794415416798357`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {2.1972245773362196`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {2.995732273553991, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {3.4011973816621555`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {3.6888794541139363`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {3.912023005428146, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {4.0943445622221, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {4.248495242049359, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {4.382026634673881, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {4.499809670330265, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}}}},
  GridLines->{None, None},
  Method->{},
  PlotRange->NCache[{{-4.605170185988091, 
      Log[100]}, {0., 0.9999500037308937}}, {{-4.605170185988091, 
    4.605170185988092}, {0., 0.9999500037308937}}],
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{{{-4.605170185988091, 
      FormBox["0.01`", TraditionalForm]}, {-2.3025850929940455`, 
      FormBox["0.1`", TraditionalForm]}, {0., 
      FormBox["1", TraditionalForm]}, {2.302585092994046, 
      FormBox["10", TraditionalForm]}, {4.605170185988092, 
      FormBox["100", TraditionalForm]}, {-3.912023005428146, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-3.506557897319982, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-3.2188758248682006`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-2.995732273553991, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-2.8134107167600364`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-2.659260036932778, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-2.5257286443082556`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-2.4079456086518722`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-1.6094379124341003`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-1.203972804325936, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-0.916290731874155, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-0.6931471805599453, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-0.5108256237659905, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-0.3566749439387323, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-0.2231435513142097, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-0.10536051565782628`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {0.6931471805599453, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {1.0986122886681098`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {1.3862943611198906`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {1.6094379124341003`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {1.791759469228055, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {1.9459101490553132`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {2.0794415416798357`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {2.1972245773362196`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {2.995732273553991, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {3.4011973816621555`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {3.6888794541139363`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {3.912023005428146, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {4.0943445622221, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {4.248495242049359, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {4.382026634673881, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {4.499809670330265, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}}, Automatic}]], "Output",
 CellChangeTimes->{{3.529499801596349*^9, 3.52949982563304*^9}, 
   3.529499873346982*^9, 3.529759156924835*^9, 3.529760801646492*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["On Your Own (45 min)", "Section",
 CellChangeTimes->{{3.52486819297925*^9, 3.52486819697285*^9}}],

Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<`*\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.52950018192106*^9, 3.529500184956077*^9}}],

Cell[CellGroupData[{

Cell["(#13) Fresnel Coefficients (10 min)", "Subsection",
 CellChangeTimes->{{3.52486872618725*^9, 3.5248687348608503`*^9}, {
  3.52486918538885*^9, 3.52486918676165*^9}, {3.525575406106*^9, 
  3.525575412034*^9}}],

Cell[TextData[{
 "The equations for reflection and transmission of light from an interface \
are given in the Wikipedia article at ",
 ButtonBox["http://en.wikipedia.org/wiki/Fresnel_equations",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://en.wikipedia.org/wiki/Fresnel_equations"], None},
  ButtonNote->"http://en.wikipedia.org/wiki/Fresnel_equations"],
 ".  For light going from vacuum (n1=1) to a medium with a complex index of \
refraction ",
 Cell[BoxData[
  FormBox[
   RowBox[{"n2", "=", 
    RowBox[{"0.9", "-", 
     RowBox[{"0.05", " ", "\[ImaginaryI]"}]}]}], TraditionalForm]]],
 ", plot the reflection coefficients for s and p polarization on a semilog \
plot.  In the extreme ultraviolet and x-ray regions where such indices of \
refraction are most common, it is conventional to measure the angle as \
degrees from grazing incidence rather than normal incidence as in the \
Wikipedia article.  Please use that convention here as well."
}], "Text",
 CellChangeTimes->{{3.5248692727332497`*^9, 3.52486928866085*^9}, {
  3.5248725207000504`*^9, 3.52487262628085*^9}, {3.52487266517165*^9, 
  3.52487266593605*^9}, {3.5255737836549997`*^9, 3.5255738175538*^9}, {
  3.5255739871144*^9, 3.525574087516*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"th2", "=", 
   RowBox[{"\[Theta]2", "[", 
    RowBox[{"\[Theta]1", ",", "n1", ",", "n2"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Theta]2", "[", 
   RowBox[{"\[Theta]1_", ",", "n1_", ",", "n2_"}], "]"}], ":=", " ", 
  RowBox[{"ArcSin", "[", 
   RowBox[{
    FractionBox["n1", "n2"], "*", 
    RowBox[{"Sin", "[", "\[Theta]1", "]"}]}], 
   "]"}]}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.529761973592333*^9, 3.5297619737323284`*^9}, {
  3.5297620407903166`*^9, 3.529762042850255*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"n1", "=", "2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"n2", "=", 
   RowBox[{"0.9", "-", 
    RowBox[{"0.05", "*", "I"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rs", "[", 
   RowBox[{"\[Theta]1_", ",", "n1_", ",", "n2_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"th1", "=", 
      RowBox[{
       RowBox[{"\[Pi]", "/", "2"}], "-", "\[Theta]1"}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"n1", "*", 
          RowBox[{"Cos", "[", "th1", "]"}]}], "-", 
         RowBox[{"n2", "*", 
          SqrtBox[
           RowBox[{"1", "-", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"n1", "/", "n2"}], ")"}], "*", 
               RowBox[{"Sin", "[", "th1", "]"}]}], ")"}], "2"]}]]}]}], ")"}], 
       "/", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"n1", "*", 
          RowBox[{"Cos", "[", "th1", "]"}]}], "+", 
         RowBox[{"n2", "*", 
          SqrtBox[
           RowBox[{"1", "-", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"n1", "/", "n2"}], "*", 
               RowBox[{"Sin", "[", "th1", "]"}]}], ")"}], "2"]}]]}]}], 
        ")"}]}], ")"}], "2"]}], "\[IndentingNewLine]", 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rp", "[", 
   RowBox[{"\[Theta]1_", ",", "n1_", ",", "n2_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"th1", "=", 
      RowBox[{
       RowBox[{"\[Pi]", "/", "2"}], "-", "\[Theta]1"}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"n1", "*", 
          SqrtBox[
           RowBox[{"1", "-", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"n1", "/", "n2"}], ")"}], "*", 
               RowBox[{"Sin", "[", "th1", "]"}]}], ")"}], "2"]}]]}], "-", 
         RowBox[{"n2", "*", 
          RowBox[{"Cos", "[", "th1", "]"}]}]}], ")"}], "/", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"n1", "*", 
          SqrtBox[
           RowBox[{"1", "-", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"n1", "/", "n2"}], ")"}], "*", 
               RowBox[{"Sin", "[", "th1", "]"}]}], ")"}], "2"]}]]}], "+", 
         RowBox[{"n2", "*", 
          RowBox[{"Cos", "[", "th1", "]"}]}]}], ")"}]}], ")"}], "2"]}], 
   "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"Abs", "[", 
       RowBox[{"rs", "[", 
        RowBox[{"x", ",", "n1", ",", "n2"}], "]"}], "]"}], "^", "2"}], ",", 
     RowBox[{
      RowBox[{"Abs", "[", 
       RowBox[{"rp", "[", 
        RowBox[{"x", ",", "n1", ",", "n2"}], "]"}], "]"}], "^", "2"}]}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "\[Pi]"}], "}"}], ",", 
   RowBox[{"GridLines", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\[Pi]", "/", "2"}], ",", "Red"}], "}"}], "}"}], ",", 
      RowBox[{"{", "}"}]}], "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.5255738431378*^9, 3.5255739184376*^9}, 
   3.5256012027602*^9, {3.5295001602421227`*^9, 3.529500326468141*^9}, {
   3.5297604863959503`*^9, 3.529760487915904*^9}, {3.5297612106452217`*^9, 
   3.5297612819130836`*^9}, {3.529761320721919*^9, 3.5297615285756836`*^9}, {
   3.529761571214404*^9, 3.5297615876139126`*^9}, {3.5297616607117195`*^9, 
   3.5297617191299667`*^9}, {3.5297618170770283`*^9, 3.529761856385849*^9}, {
   3.5297619266737404`*^9, 3.529762205535374*^9}, {3.5297622584437866`*^9, 
   3.529762284193014*^9}, {3.529762348491085*^9, 3.52976247899717*^9}, {
   3.529762567794506*^9, 3.52976257899417*^9}, {3.5297628679765005`*^9, 
   3.529762896425647*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
2uopiPpXbbq2kI32Dt0GjvYp9GT7iP+2ycbLI8XRTotTyP3D80D1bSauO1m7
fyJNo+KZmoy7fSY0o4XPrOKehoay3upwpUxMztpxpa6eRv4+R/VbeW+hmyZ7
vWvDNFbNyVad+JoBXiF/Fd3D04iXqw2ii6SjS11FOOrYNL6K7FxV+jcNhbb9
1OET04hm8WxXyUyDdSViH+lPY+rRpc+bTqWhwn2a++OlaYgcc3ke8ewNvP6Y
NW3zncZT+/KY3G2pmD6uHm39dBpvP+zo/U5OhV3O+iuxAdOQT+KRuNL+GiYP
f88Lh03jyKVgDxH/1zikeEFu/vU03tfoqq6lp4B586xzdc00dAW0Hxz+mQyn
rr2q5PpppP22238/LxlD2iLcao3T4J4guckHJ6NVqjE8q30axZ/2dkacTkZx
uV5ZKHUa94X9DOf+S4Lb6lMC1qtn8C3rk6BLfyLG3RTbYoRm8E6cUmJSkwib
v3yJrWIz2NjPlU55mwjDvGplnQ0zuOH4bM2sWyL2X9Ay37tzBiNv+XJPrU7E
dNLhtxxnZvDKOizA8XgCnNVUTsW8nME/0gWsQGocSA4v774In8F33icGa9ri
EBA7kXcvaga2cdR1JVVxSCO/WX8paQY8h8MmIhPi0FO9blw+fwYrNPwbXE3j
cPbcQmBO0ww4a+tO786ORY+v0ZeEXzM4dTItyzcwFk7FecyQ3zPQMWvdougc
i2dSdlZuvTOQqWNJn98biy/dHXtVp2Zw4PN24UPvY6Ds8KmlUngWvGs9jjq0
RqMyVnJlofgs7hwadTvxMRr6/7nhteQsyKQLpCsJ0XDYtzP1idwswqaV7tnY
R+P1fOwt3T2zIFhzT615oiHx2Gd965lZfGtrDe08EoX52KNW1MBZnCl90jgy
FAmNOfXg3RQ2v1g+eLIpEj66ByrcI2axwcUiuvdjJHiXtspxJcyiVLtkX0VI
JMSMBXrW583ir36H1EbNSOwSbbfU/TkL44czTydSI+B6vSnoZdss1qU8dcwL
jUBhxffy9s5ZqB+KC0t9GAF151LZKwOzeHLtCkveMgIn65O6787NQsG4OsZx
fQSs/Rwtc9bNIczA4Ubtq3Ckdl0NmpOeQ16jQJrPs3CMKluVq8vNIfrFNOuy
dzhc+s/K1irO4fS3odzMi+G4p3mou0d1Djq8fTzHtoQjcpHLUtR8jl3H738c
eB+GPwbLgcZWc3AYy2Q9zQyDbPpcWZzNHLL2CThzJ4Qh9cLIxh2Oc/h9OobH
8UkYCgp//D12bw5aQc0lq43D0OAUaeGeMMc+h9631CSHQTFQcOFGCttfWqBk
JCMUD7J8KS5pc+i4418oSAuF8rhLrX3uHCRHc4cudIQi+vqpfZcr5sD61ynE
qDgUtjaLK870zEG0VW+m42YoKh+5JOgOzOGC0cEcAYdQSCcPqemMzOHPhz8d
5jahaOhtdj5On0N4En3+jFEoDli+/a1OZuDvgcmCx4dCwWVqnqUox8DhoDhO
cZ5QmHs2n1DYwoCpcVQ7iRSKosiTfZsVGRB6KazOM0+BbZvyOtk9DKi0Sqpb
jFPwn6HAg7WaDGilH3LWbaVA0e2RtJgWA4duHRrib6LgIWWhSPgkA+b/OSt0
11Gg0jw4ulqfAXEv7Yz2zxTEnCkz5LJiwPWYoTMrmwKGk/Ikhw0DMyEv/zzO
oEA/MMOfdY2BrNETTltTKeD+EV4278zA6D9bi4piKbDTcVac9GHgeezV/uUX
FFRdH6wcf8RAjDjzke4zCmT8zS6OPmFgftOZikI/ChprTrwcDGKANirY2OBD
wcHjcsud8QyM5Wwu3XqTgn2JtX5fkxmosbix5ZQLBUosF5GcNwzMcmt8e+BI
gVzRZ4WHOQwYuXyLO2RLwXoRuzz7ArZeazQ/FF+hQNxRVMPoHQPNYeEj/1pT
sFKefd8rZ4D8y+TCRwsKeB6s/iPyhYGVSQ6Pw8wpIHUVXF2qZmDndEainykF
06E8dxoaGPjyYOFR1nkKxumZvCXNDKg/eaXWb0jBkK5RSGIrA3ulfSt2n6Og
kyc11e0vW199fVkBfQparU7vtehjYP/F5LHY0+x4PzE+nhhiIPjaZqfjehR8
l4zX3jvK1nPRMZFbl62X24mm9RMMNLZ632/XoaCscdKMZ5qBpZoE3qpTFJQo
RQ7R5hjIvfd8d/VJCvKfarq2LTAQ4HCc+fcEBVkDI0sVLAZOJ+8zFWRzmmaI
XwYnE1PFIkaG2hQkxaiKhK5gsvffpYHc4+x8z/dG313JxMs8a74tbA43fKZw
TYAJGdt1H7K0KAjO3ZenL8LE+ZvEkh6bn63pVFdby8RCpOk3Hjb72j6q3izF
hNzbE5ubj1HgU7XDQECGidU+6vzFbPaSa+lkyDGhNfT1Vi6b3e7cudqzhQmj
t42un9ns1L5l6psiE5PB8YwRNtsq//AuUGJi8Vwj71b2+peD3Xlj9zDRnmua
7M1m83GZED9lJkzsg38Msfn8yWppl0NMhJvIPLFl+2+Q4pRqosHEiCtfM5kd
ry553d5jmkzYdWbn5rBZ27z8o5IWE72cDfLubH00S65pS5xkYk2mp7IBW081
ceEmDl0mzNf+03OMrbeyS4kZ9Qzb/1WBSnrsfOyqtxpqPsdEBN+gjOO/FGz2
zVt6bcZk96V0zil2Pjf2mPgFWTKx4bQCyegMBZIaXCKe1kwweLIK/mPXw5rZ
swq69kzwkQcurWTXD6/+Uu4BZyZ2N/tcqzWigJyZrC57kwnpoeXDcRcomLOe
1Z/2Ys//ee1JoBkF9PKYzs57TJxq3MybfpGCUenjV78+ZKKq9eKtDksK/v4M
8458xsRNBarhQxsKao4dTCWi2PptPrBq2IkCj693lO7GMXHLrTJs3pUChROV
+R+TmKDa6jySd2fnU0ev/NBbJmqXd31u8qbgqIF1+75P7PlxQ0Hu7O93ujnN
wrWCiXe92pPWgRQkGk4M5FSx9bkve8jpJdt/Y88ppR/sevmwsaU1il2/FkGr
tv5lQiJth/tiJjvfPS3BV/qYuFhvbf49j90PLq9flzLEROrubW3FxRTcufJ6
8z+TTATd4x4erGDnw+GjhjR5Hv4zGTvj2f2syHPYSWjTPNQKF/aE84XCZklp
Tk9hHteWhj6qC4ZC/O4N74Dt81gysozlWBuKG/dZT1bun8dBUcXRvk2h2PNE
LJFbax4uVr+9pDVDkRl6+CfzyjyyFnrk3e+z+63EYxMVu3mYvPLcJ+IfitWR
37vdnOYR0aC0/CMkFHbRRuNTHvMYNFLwzEgOhWKS/YrxJ/OQtTm5ebY2FMk5
EQd70uexI11ObE4qDLYLJoqtWfNIVW2gLG4Ow65jG6Tq8+ZhpNV8RnZXGD60
Jiy+ez+Pv3/MlGuOhqGJlV4a9G0eluxLeZhjGDh0Px07TJ1HnUm6g9m3MFSF
3VM+QJtHbWHBuP2vMDzr1pTfMcWOpzyzP643DBI3v/KuW5hHmutNWcfFMOyM
avg2wb+Ab+vemebtDIfZSM+ZOMUFaOXVcwlHh0NuX7JmqNIC6IzWeZv0cAx5
X9n7bM8C+CXH7HveheOG0Kiox6EFyGocGf33Vzj8VWZ+6Z1cAIkycYUlEoF3
vivMWdcWkDOekSJIiYDYP9ttzd8s4Lu1aIV2cSQCg/0N37xdgOq38smiukjw
k6ma0zkLSH/Oe9uyNxKk7jdST0sW8M9QWbW1wCuMxsjXFXxbgEm7juYR21eo
lPxn1+rxBRgEVk3/2hYFPL2//jx9AeRuLr29x6JQwuzmTZxdQMDVL82N5lHI
bo3rVmEtYERWZnt3cBSiQjeEXBZcxP6C83J6y1G4ISw5+37PIvhZazQle6NB
87nVw3NgEU+OxX0Q4oiB7WRr/RnVRegqFfy8IBMDi4aw14NHFvFCw9qhyzQG
OgFiF0TOLcJSOPZ72+8Y/MMv9MHWfRHzBuslLo/EopGD9/66D4u4/2DXn2KF
eIy/jTA/XbaI0ul7PGbq8eAz3qb6uHIRW69uenpQPx5Eru709PdFdGs+uh7j
FY9MK4pNQ+cibNQNC7Y1x8P/s9ypx6xF1MUcy2EFJCDFMV/+E+cSjIJNnR+8
TkCFlBbXzIolfPi1JKNTloB512sfrQSXwO05P5xFT8DVTdk7NWSXsDth1vO3
cSKOPlIXndFcQibLckfiwSRY7P4xse34Ep48nQ6kGibBs9OizurUEgKiHGye
3EhC7v6Hvg0GS5Bus9pXm52EjQO1jPTLS+hUOn3gwY5kLGqd77TyXUKf6N/s
JZUUSEwNv4t4uoTsU4ffHjRNwd5Yz9CGgCUkieyR6b6bAtu5GD2NsCU8/0xv
9ahOQevr/vJ1qUugUTti5s1fo4DXNaWhZgnf+cK4OxJSMeDlM/apbgkRN8r/
fKxNhcTki31v/1tCypZXAmunUuHVllHxpG0JrpqeCcrH3uBo2sAfzeEl3Jcy
fWNOe4PGU8ZrC3iXUTr684ewWTq4yq6aJ65ahuSJsI9nn6dDeZ97cpDgMlLP
+srs/JSOyPUv9zpILKOzpWR1kWwGLMfq9OQVlrEo4CxsMpGBiYDDfhHHlyF9
56uxeWYm5DhP/3h8ahl1N+1DbIczcdbdXNxNbxkGBCev+uYsFF/0TNI3Wob3
P/tNNWOzcHdXQdnKK8tg2Kvej9DNxppGBaa37zJu+St+57fKAaF1gLB7ugzx
E+pWKb45cCk59tg4YBkzFjZ3v6TnoCXBSuxA6DI8Jeu3hM/lINo1avdE8jL0
j87a/qLkYruYoK3VF7b9N8qaA7Q8iGS9z0iuWca6MLu0w7L5mNe+QhuqW8Ze
C6faDWfzUe316YZjyzJuPzdSufQhH5f77O56DS7jSojyu5iwApy6I1FRSl3G
JsWEZ1UNBdgjUcnFObGMX8Kfqof5C0HSkXr6hLGMcwNHWw7eL0R0Xs3LUD4W
/BTOprz1LsLDf2/+alvNgpCvDrdZaRHsBjdKSguzx9dHn1IlF+OQlEdsoiQL
Q2qrtiT4F6Pl/pa07G0srD5od37m7Tus0X9QWvsvC2f4eDOcVT5ghqpEXqPP
Qr2hfbFA0Ad0PGo/esaQxT6Per10oX5A2rvdtb/MWeDqe9pYlPwRWrJ/m/sc
WVB0j6/O2l2KHe/91yrcYCFwzkusO6IUoucOGF/3YCFom9kNOXIZevwCuibv
sVCkqbuV7liGOxNqI8tBLFzuX67abVwO66dD2zVDWZhKSLDnDC+HzqaXjo8i
WSgJvnRK+Vc5JM9Tp1cmsjDG+G9g+EIFCksjWBL5bPvIXscvzp8RfeGYpmkx
C3Z6fBq/33/Gw6mJh7EfWOhSdqVnr6iEvrw2/5YvLCyebr/blFQJWsCs6N4W
FhLuJP0XMvsFoxMbKna0syCZdiNM9WQVRvSPOyr8YWE7Lftgc2wV+sTDa6QH
WNDu/l4vdOYr2mMO3uGdZaGjVsbzSl01WklW2zjnWeC+mxKgtqcGP62eti4t
sVCuvMnlbkQNrobYRzDJJCKtikc1xLEWVkafpsb5SURB0KBtp+p3WPrpnxxd
RSJU8pRX8hV+h8W7gbjhNSTCfws5S2lvHcykBHT7hEnEJn+fSxnK9TjfdTG1
TZJEcI4e3SixpwGGgtPLLetJxHPS3JMZzwacO+x3rnkDiSjxttrz9GsD9BOz
yT/kSITAc+/Q4Uv/4d8rHGaViiTiz3iLSmZOI3TCKXnl20lEbfmfEx58TThZ
s5W/VIlEHL7mcnbGqgna2/SL3u0hEdPkOkqPZDM0aQlCWYdIhFtIJmM66idU
3I9WRZwkEbNaEnFZza04kNq6PkyHRHy6/kScod4G5TY715e6JOKX4bm+I6/b
sFeVsvGFPok4nlnSrXWrnX3/6L/90JhEhLaaSfwW78A/jx/vdLQlER4j5GdV
0l1wadl3x8qO7a+fq4S1WxfKNvd8P+dAIvg8P4151nXBvFLNVs2FRCTJNDHv
qv5FJAc9ie82iVhrnkeO+f0Xw6djpxY9SUTLrz69fI5uqMTpaE54k4iLEaY6
K+S70aLxuqvFh0TsSrj40d6xG8JeppJJT9jzjTw+vpzrhuU3vmth/iSijcLo
6l/bg2zJoqKnz0mE3k/hMwEHeqD7TuiccxCJ0KEHF0zf6MHT2aoXGhEkwq7/
89LDoR6QnXdzt6WSiNKtKvasgl6cKftj8D2NRJxgxnb51/UiTuBZQmkGiRjc
oR39pq8XGpkDSMkmEd77ImlJQn24TX1127WYRNDpawaGbfpQc+hEjU0Jieg3
1NE67dkHiaeza40/kIiQmvgcsxd9KFQ4U0CUkYhc54sr3Av7QLfmmVhdTSIu
2Fw62E3qx+GCPA2OWhJRc+Yg7yfhfgRyWT6f/kYi7o211etv6odS4nvF3z9I
hMHrDp90rX7Y/nWyTv3FXi96hdAJv370GP9u1xwkEWZ+JjsfkwawSt3otcUw
iSAfmjRtFBjAfpkm1ztUEmFiYKfct2EAfr21q0poJKJuf8gdS7UB7LQr0djN
IBHLKwnqwI0BeHlHJMjwcRDW7xt6NnayY78o5qi+koOYtslNujo8gB+Hg1RN
VnMQK07cG/ObGYAcz5PmUCEOYk3/UVfD1YOoDvDgWSPJQdgeooaoqg5CLM7I
dlGRg3A3nj9bHzgIjftNypI7OIhoz0QuRuQgrl7W41TZyUE0aQ8c504exAeF
41GuezkIjqmSrO/Fg7DKUa4fUeUgBLj0/5XuGkRmhdieNh0OooMjInqH/BC0
+5uYBQ4cRGeyU1Xp6yF4bwvwzHLiIKhXvsRnZw4h11l7KdWFg5CVilELKRiC
1PIHUpQbB7G8+vs9pc9DGBdPWXH/DgfBsyLpXUXnEF5qe4jpBnAQxoXV/k8F
h/E3ff3ugbccRM+5Culc+2GI0Vtyu7I4iOcyX0V2ug7jpErQvrYcDuKwtm1h
gscw8iq5Vb4XcBAD547ecHgwDN/OcY3cj2w9BSLaI8OHsV2gXOdOHQdhPkeV
Ni8fhoeL9VXxMQ6Cl2Z5YtfqEfidGr9yiMZB1HC/2S0iPIKwTe5XzCc5CKbA
M49x8REUtvjZpMyw9Q3ouxWwcQRThzIuKy9zELPnaNFue0fgwDllYShAJozk
4mYZRiO49PLehdDdZOKXrvX5I1EjcLHnu1Cyl0xEvrHpNIwbwX2t4PN/9pOJ
vpe+9MtJI4hjJBptOUQm2gZecTpnjOCP6ddzhZpkYpYhsu/khxGc37xGv8WA
TNTK8DSt/D0C3cJXJ8XdyMQKu0ujUmJUXJ2yYol5kImb+g/yzSSoeLBLMV/s
Npk479Uy+0qKiuK0YmmxO2SimeP8ijVyVMjF/pwQ8SUTXrtnZWqUqJh9LBAm
FEomMuw37Iw/TkXMhQe9qwrJBFOeZ4HLnYrxRVsvzlkycXAjF72mjooL509t
Zc6RiZSFg5t0GqiozNvWMs4kEwHjT1S/N1IRYTu6s32JTMj5ZstX/aLiaKt9
bzY3J/GvaItRfDcVr/KcTpqLcRK6MldXMqap0LZ1k3i3j5OY993/W01yFPG/
fPIdXDmJ+48tukovjmLgy66ugJucxLM+zxaW5Si253fxZblzEnFihnIal0dR
GKh+kebJSVh1tlQUXB3F9xNMPqeHnMSOVaWOQc6jYLx3uuhM4SQq5nnfLt4f
hW7cRf4bRZxEsdeek3lJo5i/qm5xa4GT+NzJLbi2bxTSS0Emzre5iK5U76QQ
3TEMHPev5eXiJtY4bj2clj+Gz1u+Y4M/N3HJQVhrYc04bHlTuGT5eAhy/kBX
vOk4iuI2qX8O4iEmj+a7uKSPo15V7Yu+0ApidPP9Z1qT42DYvjKwCFhBfDDX
9t+3l4bq07HnVovzEvYc0pdaPWiwOqj2+vVLXsJht37Xz2Iaro3VzXSE8hIt
Z9x96e9ocIq/eFQ4gpdwsWtWEHhPw12+B91e0bzEiPQWC+2PNES11Ujpp/AS
5vvzYkvKaWi5ZRS4WMRLXJetDI2ppeFkicutM795CeqDJB6bDhrOOHBV+3by
EhvWPPe730nDeblQ8Q9dvESD6qbVsX9ouPL0Xd6WPrY/W/+Vaf1LA3uvGl8Y
5SVETws6nOyn4dP8c6uUZV6C9iZqeOc4DV8yZXJ+k/gIfQ27XB0aDd+tcliC
nHzsfpTic22Cht+1zVGeK/gIr8wT+xLpNDAipX6dFuQjGsLaJ8TnaGDpvt3s
K8xH1Ek+m9rLoIGHEzfei/IR8Z8fL59m0iB63Upoyzo+QrD+XyX/BRqkZKYv
mkjxEXLWgQapizTINT3KDJTmI84/X33/yxINio/XLn2R4SOUbnCU9CzTsFv1
zakFWT7i//8/+h9xCyhF
     "]]}, 
   {Hue[0.9060679774997897, 0.6, 0.6], LineBox[CompressedData["
1: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
GjMokNlPjseD2axLlhrT6CLtNIpck4C1UeHSbdbTIG9+YscST8RslonbSNI0
7MJNYs8GJ8FwxiBlG2UaI21K2ULXkxBuqVPz361pcLWHMJNvJ4FvQUWB9940
bozXqtm+TIKYw8oe6ZJpCDof6ng+nQR10Q5Xy5/TmHQ4MTHumYxzXk3J5PZp
aKarti67lIyymvrqjs5p7Mk8JcIXlQyDs5XyHgPTnL5Mt317LxnmX+93X56Z
RmX+w2ek9mSciPZ1LZKYwdXh0f5GIgX5f08lz6ybQcPyMzlH96dgVNut2kBh
BiqN25d8OZIC/347+c+qMzh+MzTpmH8Kwoz1unt2zqA/3qLe6l4K0ud5XUWd
ZiB/n7hxaiEF3/3SXf67N4MTDfy2m7JToZokPHc+bwaBQpKnf+en4uqzSIr/
oxlIr7K+d7EoFdrj/p/PFM/gbIKrz8maVGR67dN0r+HYf87k3t6bCs+T88us
e2bwq+DIkhA5Mmqv+d+zHODEp+ST/nYjGetyqfoWwzPo4H0vNbSFjO+9zWf3
MGaw1aaxlalPho7r018G3EysKe+jch/mnEccnZ6pKjDhtad1R2UMGU5BzXuV
lZjIPi90NCGRjPJ08z5FVSYoPx2MdlPI8GzXlpDXYGL+2Y6Dftlk/Di08uoa
YyYqDl93f/qcDNWL19aJ7WbCTuhxQM1LMiIoc+Ui5kzs+Mi3q6qSDN3mwVEh
GyasqgYmL3wi44511SFeNyauPtBO//SLDKafNp3rJBM9tYKaG7rIsEl6Esc+
zcEXJv/z6CNjybebVbNnmTC1vcN8MEqGt8VZVXo4E+w3XRXC82R88BqsHb/G
xFvByLBCNhmyccecR2OYiIw8O6jLQ0Hjp73kwWQmgohfyTwCFOzYo7DYeZcJ
X5PlBmHiFGjmfI7+mMvE0tVdNw5JULCF7b+66CETMtW258WlKVAof6ccUcRE
hqjgMxt5CqRXe5ecec6ET1ib4Lf1FIj7ihraVzDRuv3IoKYSBYIbOffDaib+
DTWteaNK4Zy7hP6sfs/E69QEr79qFJD+Pj+1UMfE4ZKQnSNbKJhKWxr6/TsT
o9Xv9ldqUDDOKOB72cwZry+cGKVJAdXSPjWnjaOParD5Dm0KOpfm51/sYkJo
Z9/mIzsoaHOz2u7Sx4TqBv6DH/U4+b5lvtlLZeL+zJ0pGX0K6iXvmm0fZeJ3
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
7VxXXg==
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  GridLines->NCache[{{{Rational[1, 2] Pi, 
       RGBColor[1, 0, 0]}}, {}}, {{{1.5707963267948966`, 
       RGBColor[1, 0, 0]}}, {}}],
  PlotRange->
   NCache[{{0, Pi}, {0., 0.9999999919113827}}, {{0, 3.141592653589793}, {0., 
     0.9999999919113827}}],
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{3.5297628966556396`*^9}]
}, Open  ]],

Cell["\<\
The place where the reflection of p-polarized light is at a minimum is known \
as Brewster\[CloseCurlyQuote]s angle.\
\>", "Text",
 CellChangeTimes->{{3.52486874866685*^9, 3.52486878559205*^9}, {
  3.5255741203384*^9, 3.5255741415856*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
(#14) Quantum Time Evolution (20 min)\
\>", "Subsection",
 CellChangeTimes->{{3.52486880534165*^9, 3.52486882276685*^9}, {
  3.52486919034965*^9, 3.52486919222165*^9}, {3.5255753987896*^9, 
  3.5255754002716*^9}}],

Cell[TextData[{
 "A quantum mechanical particle in a rigid one-dimensional box of width a has \
a wave function ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["\[Psi]", "n"], "(", 
     RowBox[{"x", ",", "t"}], ")"}], "=", 
    FractionBox[
     RowBox[{
      RowBox[{"sin", "(", 
       FractionBox[
        RowBox[{"\[Pi]", " ", "n", " ", "x"}], "a"], ")"}], " ", 
      RowBox[{"exp", "(", 
       FractionBox[
        RowBox[{"\[ImaginaryI]", " ", 
         SubscriptBox["e", "n"], " ", "t"}], "\[HBar]"], ")"}]}], 
     SqrtBox["a"]]}], TraditionalForm]]],
 ", where x=0 on one side of the box and x=a on the other side.  The variable \
n is a positive integer.  The energy of these states is given by ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["e", "n"], "=", 
    FractionBox[
     RowBox[{
      SuperscriptBox["\[Pi]", "2"], " ", 
      SuperscriptBox["n", "2"], " ", 
      SuperscriptBox["\[HBar]", "2"]}], 
     RowBox[{"2", " ", 
      SuperscriptBox["a", "2"], " ", "m"}]]}], TraditionalForm]]],
 ".  The probability of finding a particle at the position x at time t is \
given by ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"P", "(", 
     RowBox[{"x", ",", "t"}], ")"}], "=", 
    SuperscriptBox[
     TemplateBox[{RowBox[{
         SubscriptBox["\[Psi]", "n"], "(", 
         RowBox[{"x", ",", "t"}], ")"}]},
      "Abs"], "2"]}], TraditionalForm]]],
 ".  States with a definite energy, have probabilities that don\
\[CloseCurlyQuote]t depend on time.  However, it\[CloseCurlyQuote]s possible \
to have states that are a combination of states with definite energies.  \
These states have probabilities that oscillate in time.\n\nCreate a state ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"\[Psi]", "(", 
     RowBox[{"x", ",", "t"}], ")"}], "=", 
    RowBox[{
     RowBox[{
      SubscriptBox["a", "3"], " ", 
      RowBox[{"\[Psi]", "(", 
       RowBox[{"x", ",", "t"}], ")"}]}], "+", 
     RowBox[{
      SubscriptBox["a", "1"], " ", 
      RowBox[{
       SubscriptBox["\[Psi]", "1"], "(", 
       RowBox[{"x", ",", "t"}], ")"}]}], "+", 
     RowBox[{
      SubscriptBox["a", "2"], " ", 
      RowBox[{
       SubscriptBox["\[Psi]", "2"], "(", 
       RowBox[{"x", ",", "t"}], ")"}]}]}]}], TraditionalForm]]],
 ", with ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["a", "1"], "=", 
    RowBox[{"0.3", "+", 
     FractionBox["\[ImaginaryI]", "3"]}]}], TraditionalForm]]],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["a", "2"], "=", 
    RowBox[{
     RowBox[{"-", "0.4"}], "-", 
     FractionBox["\[ImaginaryI]", "7"]}]}], TraditionalForm]]],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["a", "3"], "=", 
    RowBox[{"10.135575", "+", 
     RowBox[{"0.357482", " ", "\[ImaginaryI]"}]}]}], TraditionalForm]]],
 ".  Create an animated plot of ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"P", "(", 
     RowBox[{"x", ",", "t"}], ")"}], "=", 
    SuperscriptBox[
     TemplateBox[{RowBox[{"\[Psi]", "(", 
         RowBox[{"x", ",", "t"}], ")"}]},
      "Abs"], "2"]}], TraditionalForm]]],
 " for times from 0 to 10 femtoseconds.  Use a=1 nm, \[HBar]c=197 eV-nm, ",
 Cell[BoxData[
  FormBox[
   RowBox[{"m", "=", 
    FractionBox[
     RowBox[{"511000", " ", "eV"}], 
     SuperscriptBox["c", "2"]]}], TraditionalForm]]],
 ", hbar = 0.656667 ev-fs.  Your work will come out nicest if you keep \
energies in eV (electron Volts) and times in fs (femtoseconds)."
}], "Text",
 CellChangeTimes->{{3.5255742332511997`*^9, 3.525574249288*^9}, {
  3.5255742801916*^9, 3.5255742919852*^9}, {3.5255743450564003`*^9, 
  3.5255743633084*^9}, {3.5255744112472*^9, 3.5255744451303997`*^9}, {
  3.525574478218*^9, 3.5255746633900003`*^9}, {3.5255749387924*^9, 
  3.5255751402976*^9}, {3.5255751735411997`*^9, 3.525575376856*^9}, {
  3.5255754202084*^9, 3.5255754502539997`*^9}, {3.5255768666404*^9, 
  3.5255770060108*^9}, {3.5255770756492*^9, 3.5255772721*^9}}],

Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<`*\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.5297610994285583`*^9, 3.5297611039584227`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"a1", " ", "=", " ", 
   RowBox[{"0.3", "+", 
    RowBox[{"I", "/", "3"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"a2", " ", "=", " ", 
   RowBox[{
    RowBox[{"-", "0.4"}], "-", 
    RowBox[{"I", "/", "7"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"a3", " ", "=", " ", 
   RowBox[{"10.135575", "+", 
    RowBox[{"0.357482", "*", "I"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"m", " ", "=", " ", 
   RowBox[{"5.11*^6", "/", 
    RowBox[{"(", "3*^8", ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"hbar", "=", " ", ".656667"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"a", "=", "1"}], ";"}]}], "Input",
 CellChangeTimes->{{3.529763473498334*^9, 3.5297634736683292`*^9}, {
  3.5297635168270345`*^9, 3.529763520486924*^9}, {3.529763691341799*^9, 
  3.5297637154410753`*^9}, {3.529763791708788*^9, 3.5297637962386513`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Psi]", "[", 
   RowBox[{"x_", ",", "t_", ",", "n_"}], "]"}], ":=", 
  FractionBox[
   RowBox[{
    RowBox[{"Sin", "[", 
     FractionBox[
      RowBox[{"\[Pi]", "*", "n", "*", "x"}], "a"], "]"}], "*", 
    RowBox[{"Exp", "[", 
     FractionBox[
      RowBox[{"I", "*", 
       RowBox[{"e", "[", "n", "]"}], "*", "t"}], "hbar"], "]"}]}], 
   SqrtBox["a"]]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"e", "[", "n_", "]"}], ":=", 
  FractionBox[
   RowBox[{
    SuperscriptBox["\[Pi]", "2"], "*", 
    SuperscriptBox["n", "2"], "*", 
    SuperscriptBox["hbar", "2"]}], 
   RowBox[{"2", "*", 
    SuperscriptBox["a", "2"], "*", "m"}]]}]}], "Input",
 CellChangeTimes->{{3.5255754688803997`*^9, 3.5255754898156*^9}, {
   3.5255756172988*^9, 3.5255757014296*^9}, {3.5255758811884003`*^9, 
   3.5255760458308*^9}, {3.5255761002124*^9, 3.5255768242396*^9}, {
   3.5255770368052*^9, 3.5255770600179996`*^9}, 3.525601208189*^9, {
   3.529760834815497*^9, 3.5297609623616705`*^9}, {3.529761005350381*^9, 
   3.529761094888695*^9}, {3.5297611270577297`*^9, 3.5297611303876295`*^9}, {
   3.529763399580552*^9, 3.52976339965055*^9}, {3.529763608734277*^9, 
   3.5297636125041637`*^9}, {3.529763718260991*^9, 3.5297637218008847`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"plot\[Psi]", " ", "[", 
      RowBox[{"x_", ",", "t_"}], "]"}], ":=", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Psi]", "[", 
        RowBox[{"x", ",", "t", ",", "1"}], "]"}], "*", "a1"}], "+", 
      RowBox[{
       RowBox[{"\[Psi]", "[", 
        RowBox[{"x", ",", "t", ",", "2"}], "]"}], "*", "a2"}], "+", 
      RowBox[{
       RowBox[{"\[Psi]", "[", 
        RowBox[{"x", ",", "t", ",", "0"}], "]"}], "*", "a3"}]}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"Manipulate", "[", 
    RowBox[{
     RowBox[{"Plot", "[", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"Abs", "[", 
         RowBox[{"plot\[Psi]", "[", 
          RowBox[{"x", ",", "t"}], "]"}], "]"}], "2"], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", 
         RowBox[{"-", "5"}], ",", "5"}], "}"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"0", ",", "1"}], "}"}]}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "10", ",", "0.1"}], "}"}]}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.5297611331375475`*^9, 3.529761134927493*^9}, {
  3.5297629614036975`*^9, 3.5297632214258966`*^9}, {3.529763275604271*^9, 
  3.5297632996535497`*^9}, {3.5297633426322603`*^9, 3.529763345402177*^9}, {
  3.5297634132501416`*^9, 3.529763414510104*^9}, {3.5297634606687193`*^9, 
  3.5297634636586294`*^9}, {3.529763529896642*^9, 3.529763565335579*^9}, {
  3.529763808718277*^9, 3.529763820337929*^9}, {3.5297638708764124`*^9, 
  3.529763947464115*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`t$$ = 7.800000000000001, Typeset`show$$ = 
    True, Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`t$$], 0, 10, 0.1}}, Typeset`size$$ = {
    324., {109., 112.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`t$847$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`t$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`t$$, $CellContext`t$847$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Plot[Abs[
          $CellContext`plot\[Psi][$CellContext`x, $CellContext`t$$]]^2, \
{$CellContext`x, -5, 5}, PlotRange -> {0, 1}], 
      "Specifications" :> {{$CellContext`t$$, 0, 10, 0.1}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{369., {150., 155.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.529763114549103*^9, {3.529763222455866*^9, 3.5297632306556196`*^9}, {
   3.5297632844640055`*^9, 3.5297633013534985`*^9}, 3.5297633468921323`*^9, {
   3.529763401540493*^9, 3.529763415010089*^9}, {3.529763525826764*^9, 
   3.52976356564557*^9}, 3.5297636168040347`*^9, 3.529763693781726*^9, 
   3.529763728100696*^9, {3.5297637992285624`*^9, 3.529763821167904*^9}, 
   3.529763875766266*^9, {3.529763906425346*^9, 3.5297639478241043`*^9}, 
   3.530366513086748*^9, 3.5303673598944063`*^9, 3.5308946179450836`*^9, 
   3.531672458237629*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
(#15) Complex Impedance (15 min)\
\>", "Subsection",
 CellChangeTimes->{{3.52486905054245*^9, 3.5248690561740503`*^9}, {
  3.52486919468645*^9, 3.5248691960436497`*^9}, {3.5255754156688004`*^9, 
  3.5255754170727997`*^9}}],

Cell["Find the equivalent impedance of a complicated network.", "Text",
 CellChangeTimes->{{3.52486914891605*^9, 3.5248691652648497`*^9}}],

Cell[TextData[{
 "A circuit with resistors, capacitors, and inductors driven at a single \
frequency \[Omega] can be represented as a complex voltage ",
 Cell[BoxData[
  FormBox[
   RowBox[{"V", "=", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"-", "I\[Omega]t"}]], " ", 
     SubscriptBox["V", "0"]}]}], TraditionalForm]]],
 " acting on individual elements with complex impedances ",
 Cell[BoxData[
  FormBox["Z", TraditionalForm]]],
 ".  Each element then obeys the complex form of Ohm\[CloseCurlyQuote]s Law \
with the current ",
 Cell[BoxData[
  FormBox[
   RowBox[{"I", " ", "=", 
    RowBox[{
     SubscriptBox["I", "0"], 
     SuperscriptBox["E", 
      RowBox[{"I", " ", "\[Omega]", " ", "t"}]], " "}]}], TraditionalForm]]],
 " proportional to the voltage V according to ",
 Cell[BoxData[
  FormBox[
   RowBox[{"V", "=", 
    RowBox[{"I", " ", "Z"}]}], TraditionalForm]]],
 ".\n\nFor a resistor with resistance R, the real form of Ohm\
\[CloseCurlyQuote]s Law holds and Z=R since ",
 Cell[BoxData[
  FormBox[
   RowBox[{"V", "=", 
    RowBox[{"I", " ", "R"}]}], TraditionalForm]]],
 ".\n\nFor a capacitor, the charge Q is equal to the capacitance ",
 Cell[BoxData[
  FormBox[
   RowBox[{"C", " ", "V"}], TraditionalForm]]],
 ".  Since ",
 Cell[BoxData[
  FormBox[
   RowBox[{"I", "=", 
    FractionBox["dQ", "dt"]}], TraditionalForm]]],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{"Q", "=", 
    RowBox[{
     RowBox[{"\[Integral]", 
      RowBox[{"I", 
       RowBox[{"\[DifferentialD]", "t"}]}]}], "=", 
     RowBox[{"-", 
      FractionBox["I", 
       RowBox[{"\[ImaginaryI]", " ", "\[Omega]"}]]}]}]}], TraditionalForm]]],
 ".  This means that ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"-", 
     FractionBox["I", 
      RowBox[{"\[ImaginaryI]", " ", "\[Omega]"}]]}], "=", 
    RowBox[{"C", " ", "V"}]}], TraditionalForm]]],
 " and that ",
 Cell[BoxData[
  FormBox[
   RowBox[{"V", "=", 
    RowBox[{"I", " ", 
     RowBox[{"{", 
      FractionBox["1", 
       RowBox[{"\[ImaginaryI]", " ", "C", " ", "\[Omega]"}]], "}"}]}]}], 
   TraditionalForm]]],
 ".  Thus, ",
 Cell[BoxData[
  FormBox[
   RowBox[{"Z", "=", 
    FractionBox["\[ImaginaryI]", 
     RowBox[{" ", 
      RowBox[{"C", " ", "\[Omega]"}]}]]}], TraditionalForm]]],
 ".\n\nFor an inductor, ",
 Cell[BoxData[
  FormBox[
   RowBox[{"V", "=", 
    RowBox[{"L", 
     FractionBox["dI", "dt"]}]}], TraditionalForm]]],
 ".  With the assumed time dependence of I, ",
 Cell[BoxData[
  FormBox[
   RowBox[{"V", "=", 
    RowBox[{
     RowBox[{"-", "\[ImaginaryI]"}], " ", "L", " ", "\[Omega]", " ", "I"}]}], 
   TraditionalForm]]],
 " and Z is thus ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"-", "\[ImaginaryI]"}], " ", "L", " ", "\[Omega]"}], 
   TraditionalForm]]],
 ".\n\nUsing these complex substitutions, an AC circuit can now be solved \
algebraically rather than requiring the use of differenatial equations.  \
Consider the 3rd order Butterworth filter below we found diagrammed on \
Wikipedia.  It can be used as a low-pass filter which allows low frequency \
voltages to pass from ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["V", "in"], TraditionalForm]]],
 " to ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["V", "out"], TraditionalForm]]],
 " but attenuates higher frequencies.\n \n",
 Cell[BoxData[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1:eJzt3QncI0WZx/FnOEa5GVAUlWWA5ZAbQVkUlmNRkUvkcIVVuXE9kQEWhkNY
FcUDFEQFEcZFBRU5FBBQBBTwYNnRFUUFhAEvUORGjhGw/lbVJ3kzSafSqaTT
ye/7+TyQyVtvUnnT3U/X0dWr7HfwrgctZGaHPtf9Z9d9j9h61qx9Z++2iPvH
NrMPO3C/hd2Dm108Os1MTwIAAAAAAAAAAAAAAAAAAAAAAMCebRNAWWxPAFAd
jr3Iie0JAKrB8Rc5sT0BQDU4/iInticAqAbHX+TE9gQA1eD4i5zYngCgGhx/
kRPbEwBUg+MvcmJ7AoBq9Hr8Xd7F6S6e7uF3MDlSt6fmctqW7nNxhYvNBlo7
ABhf3Y6/rc/f6+K0Lr+DyZW6Pen/F5g/P1zcxe7huT8NuoIAMKZ6zecbtPwe
0KyXfL5yeLyoi53Dc9cPtHYAMJ7arc+ZumYn+Rytym5P8fmrXSw1lJoCACLy
OXKZ7uJE89vTqRXXBQAmDfkcOS1nfnu6r+qKAMCEIZ+jH9p2XtL072XCc49V
Ux0AmFjkc/RD2865LpZ1McP8NZB67pwqKwUAE6SXOXNAJ9u6uMTFQy6ecnGb
iw+5eG6VlQIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAMACprlYqMffGXT5hXssj+r1+p0Nuvy0EAAwznSce5OLa1084eJJFz9w
sZ+LRTr8zutcXOziry7mu/ipi/e6WLxD+c1cfMnFgy6ecfFrF8e6WL5D+bVd
nOHiT+bvj/5bFx91sVLyp8KwvcjFh13caf47+4uLM12s36H8DBdHufiVi6dd
POziay4271Be9zZ/l/ltTductr3LXOzUobzOG9/q4nvmt+knwuO3WO/nlMCo
erZNfKVNuWVbymD86Jh6jfnv9+fmc+hnXcwNz91o/jgdPcf8tqKf3e3ibBef
cnF9eO4287k40rnCSeZzuHKzcvopLq40fwy/x8WWLXWaZf74+5CLr7r4pIuL
zB+Pdcz/934/NLLbxfy5mr63S8x/Z+eG55R7Z7eUf6WL35vfBr4Typ/j4g/m
txVtU81t8DVd/NL8NnZD+PlZLn4TnrvApp5LrmD+nFQ/u9nF6ea37ZvDc9e5
eH6/HxojY9Jz2vnW+EyfLyh3oPn9E+NnMRc3ufibi0NtwTbLAeaPz2pLK+8r
N2tb0DajHP2clvI7mj9+K2+vEp47NZTXsX2ZlvJqs+uc4DEXm4bnZoXy37Wp
5xGylov/D/XdNflTYtC2d/GUi1+4WLflZy9wcbn57/To8NzLzJ+XKXdv0VJ+
KRf/E8qfFZ5bKZTV77R+79NdfCiU/7b5cwC9hvK2ziPeYVP72fVYbXxtQz9z
sWQvHxQjbZJzms6P42d/3Dqfq2of3XpYlcJQnWb++9+voIzaXWpDqZ18WCj/
/oLym5jPzz90sXso/0Xr3L+5qos/mu+j3cp8XrjafN9qO+qf1zb5gNH3Pgpe
6OI+F7ebz93tKOd+y3wO3db8+aF+Z80O5ZVzP2d+29nLfB+5+mZeVVCPo0N5
9d/rfEBt/DcWlH9TKHNWQRnUy6TntB9b4/Mf1+bn27n4yVBrhGFRO0p5OuV4
9hHz24jy9FXWfezxP0N5HbPVR9ppTD16jfljq9rq95rPEUVUd+2v53Qph8FT
H7bOwTbuUk7nYb8LoW1j5y7l1fejcfL7Q/mDu5TXOYDG0pX3tS2d0qW8fDqU
7VZ31Mck5zSNQ8bPrnHM1v5TjXG+ddiVwlB83fz49PMSyiofP2p+O1m7S1nR
sfXuUH7HxPrcEMofnlhe/f1q762VWB75qW9FfdqfSSyvvm99x3MTy29tjWNT
ynz21cznZ53rLZ1QXuM/mrN3WWJ9MPomOadp7vJd1vj8zf2u65ifrzK9gnqJ
xnbVh6a/v+a8jtIcKM21+Zj5MV717bWOAY66Fc0fh09LLK9tQHOJU/O59JrP
rwvlZyWWV1+7+hdOTiw/ijTu/GXzfR4aw0jJQaPkBPP5858Ty8d+m5sSy/9b
KK8+m5RrzVYN5TXnY4nE99A1E/oMMxPLjxrNFTje/JzC81y8vtLaTPVi8/Mc
NX6mebOvGMJ7jnJOG4Y4Jqr4WdPzmk9wdJvyakddP+A6aez0J031inHSgN83
xT+ZP74010t5Zd8qK9WjQ8zX++WJ5XcJ5XXcOyGh/PqhvPo+z0sov5z5Plv1
F/w4sU6iPKix9zpee3SkLbh9a672jCor1aN55o8HqXQdxSPm95cVE8rPMb9d
6G+zaZeycqw1/pZ7JtZpvVC+df59HSiXay5C63bUrp952NawxlhJDLUhdh/C
e/ea08aJ+py0j8XP/2rz7U99F+2uDdY8p1724TLaHetiPtlkwO/dzXnWvm6a
e7tshfXqxaWW3uYRtePVt32LpbWt4v50rfkx9G759g2hvOac6lifmtMODr+3
QWL5UfESa+Sp1ji1wnr1YnVrzD9LoTEbtZsvC7/35oTf0ZoDcRzmmITymjd3
h/nzyDmJ9RLNxbymh/KjQtf6t9uGtK92mms4LPF7bg0dDxYb8Hv3mtNyGZVr
4DR3JNZF81B1fnd6hfXptC0o1O97f4XxdEHdHqm4bjHUztU+/WCHn+u86BfJ
34Yfj9TvfSP8brf5an8Mf4+Ph/+/pkv5eK177I89LLFeG1ljnl7K3+OBLuWG
FXEuQqdjcdX1i6Hv/Ykun2G7rt+SF8/x1A7WPnRjl/Kbh/Ka86hz5d92Kb9U
KK/X1RoIjyXWSzRupu26299Df4vHE8oNK+Zb5+2o2z4x6HimoG4pfS39qiKn
jUo+17hTzFNxu243z6j5O2n33BHWuP64n3GcL1vnbeH75ufUVhX3F9Tt4orr
FkNtk7nmx6za/VzrbOyR+F1orEk5Rrn88PA5O63fFen719zkHUP5ouvh5P/M
9xesFsp/NLFu6l9Qn7uupSv6e5wT3uPMLuWGFZda523o3hGoXwwdB7/b4Wfa
R9UeTh3riNeTqS9F45u/7FJ+t1Be16upT/DhLuU3COX/2xp9aEsn1k3b6Y+s
+99DY9RXJJQbVjSPE7dGp+9tWNHcPm6NddK+lr6k5jRtv7PNjx3ND/9XHot9
l605r10ObH1+FPL6hU31KJrvWfRZ9nSxYXh8ex91ieO1raHvpFvbcNDeZ+3r
pnGacVxnPI4vvtP8eLse719QXu0k7T+a67B8KP+hLu+hHHZReKy29Ll91LcO
tIaJ2pvttqO3VVivQdK5lNq32kd0LtAtP6sfX38PzVc5ITwu6ivdK5TZ0vz5
ox4PY/5Vlfa29tuQ+seqHvs7ydrXTedmw1pHPyWnxe1M62mp7RLnFh3RVKZT
G7bVKOTxSHO0Y322LShXlM91bcC08PjpPuvzQZvat63rSrbv8zVz0HeutSWb
t1Gdu7SuizUuXmv+M+5gfn0GPT6uoPyaocy7w7/VL/uFgvLTQ/mTw7+1/tu1
pWtbH1obRWueNW9H6g8c13uGXOni1vBY+7Y+b+t6gc30t3gqPN4/lN+ooHzs
z1f+3yY8noQ1BDXforlvW9dobVNpjTzNl4jrAsbQGN/qQ6xDSk6LfRzx/Ceu
BzuvqUwd83mqonxeVKYMtQ0150nn2ytkeL2ctPaUPqP69lKvjakjXasZ2zoL
h8dFa3XENZri9YWas/3NgvIrhvJx3qn6CW/po751omNHXD839VqDutI8yh+G
x7ENtFpBea3deU94HOdLFrUzPhbKaK5V7CM8oI/61onWz9Xn1XVhy1Vcl1aa
i6a2r+a1d1rzsUpxDkI8j14o/Ht+Uxnyef0+V6/UDtBnPLLqigyY5iHrc64f
/q3HReuHxHlMe4Z/32l+vLiT1r+jxid7matXd3GO8rjTeNR14fHbzX/mNQrK
a5u5KzzewRp9RJ3ENQx1XI5jRG/vo751022/RHut7fMZtmD7PPZ/KNcvZuTz
cTQp+Tz2Q2xlfjxFj4vWAdg0lNk7/FtjeRcWlH+BTe3DVxtubvnq1s6k5HOt
KxCvddT8I33m1vvtNNO9se4Lj+M2WLRu0wesMca+SXhcpzUh+kU+L0fXQepv
pz6jRc33Jejfs5vKxHv4ac5lbN+022fjXOmVzfe3/Xlgtc7j2ZZIeW5cTUo+
38wax8bY7nlPQfmYn7XemeZ9aQ7EJ7q8h66t+XJ4rPz/jT7qWzeTks+Vn3W9
oNo4mhv3pBXPH41/F+XnODd+ZkH5A0MZ5fI4N24c77nRCfm8HG2Pyulqp88P
/z/Kpl63oXkYys26dkvz5DrlN80Z1vEr3gf6oEFWHFlNSj5Xm1z5Vm3seC5b
NC9JdP2v2tjxuNptTSj1scf7oKt86pqv42BS8rnuUarPqbUIdE+W73cpv30o
v4/5Ppt5Xcq/NJTX9Wq6flHXiU/SvVDJ50B5k5LPJc410nXo1ySUj+vC6DxV
uX2RLuXjHHqV1znwqM3pGaRJyee6Flz959qG9Hm7rU+htruuUY/zlQ5JeI8r
ml6/Luvs5UI+B8qbpHyuNrquu9cxcsWE8pqTpD559asWzXlqpnGpOVb9er7D
Nin5XHRfUt2fd+9uBQPNf9faJMrlKWs76HpK3f9DbfRu9+gdN+RzoLxJyucY
nEnK5xgc8jlQHvkcOZDPkQP5HCiPfI4cyOfIgXwOlEc+Rw7kc+RAPgfKI58j
B/I5ciCfA+WRz5ED+Rw5kM+B8sjnyIF8jhzI50B55HPkQD5HDuRzoLyYzz9c
dUVQa1ovhXyOfmkbOq/qSgA1tab5fWhO1RVBrem+oORz9Ev39Pxe1ZUAaor+
duRAfztyoL8dKI98jhzI58iBfA6URz5HDuRz5EA+B8ojnyMH8jlyIJ8D5ZHP
kQP5HDmQz4HyyOfIgXyOHMjnQHnkc+RAPkcO5HOgPPI5ciCfIwfyOVAe+Rw5
kM+RA/kcKI98jhzI58iBfA6URz5HDuRz5EA+B8ojnyMH8jlyIJ8D5ZHPkQP5
HDmQz4HyyOfIgXyOHMjnQHnkc+RAPkcO5HOgPPI5ciCfo1/xWPTVqisC1BT5
HDmQz1HWli7Od/E389vQ2dVWB6ilxV38i/l96KMulq22Oqgx8jl6sZiL/V38
1Px281cXn3exQZWVAmpkLReHu7jMxd3m96PWeNDFj8zn99e4WLiSmqJuyOdI
of5AbSv3md9e7jLfN7h8lZUCamK6i/1c3GiNnH2ni4vM5+wjXHzKxbEujndx
joubXMwPZX9vfv970ZDrjXohn6OI2t3qU4/HoF+72M1oLwApppnvz/qt+f1H
Ofpd5s+PUyzlYmcXX3PxlIsnzOd9+uTRDvkcRRZ18SZr5HMdU84zP94HoLNV
XNxgfr9Ru3ybPl9vZRdnunjaxZ9c7NLn62H8kM+RahMXXzDfRtA2878u9nbx
nArrBIyi7V084OIxF+9wsVDG136Fi1+6eMbFJ4y+MjSQz9Gr57s4xsXvzG87
97j4gIsXV1kpYES82fy4920u1h3Qeyxpvp9M+5/64qcP6H1QL+RzlKW++Dda
o08x9sW/sspKARV6vfnrN+e6eMGA30tj8x83v+99Kfwbk418jhxe5mKONfri
Ne+HvnhMko1cPO7iFvN9WMOidRm1zx07xPfEaCKfIycdx46yRl+85u3QF49x
pzVhdO3HXyx97nouGj+/1Hy/wBZDfm+MFvI5BiH2xV9njbnxVxp98RhP8Ti6
U0Xvr3UgdA6teXKMpU8u8jkGZTUXJ1kjn+s6m1nm15gDxoXa45o78pWK66F1
IbSfHVxxPVAd8jly0pycV7v4pvn8rWtqvu1iR8t7zQ4wKk4zP2/kJYnl93Ix
z/z6cLtmrsvV5tvptNEnE/kcOej6mbeb7+/T9vSI+Xk6a1VZKWDAlja/rZ+R
WF7XpT/p4r/Mz1/TecA6GeujNWu0/+2V8TXH0SLmxwMvNL92te5Doe9F6+lf
bn4t65dWVrvyyOejp939GeL1YFo3UtebblZZ7aZSn/rJ5u8foTre7uIQF8tU
WSlgSLQmu7b7jRLKao1WrcP+vqbnTnHxrcx1utXFFZlfc5xofCSuo3+9i63N
t0d0LY7WzLrQGsfcuiGfj6bmPC4zXLzBfD9dHIt+YyU1a/SpX2JT+9R3MPrU
MVnUlrs9sez7XfzG/FzR6HkuHnLxqox1OsH8XPcZGV9zXCxh/nxHx1DdI7Ld
9bQ6vl1g9cyL5PPR1JrPo02bnr91yHXSOazWrmzuU/+00aeOyaQx6kddnJ5Q
Vtezaf3XA9r8TONS52esV+xzf0PG1xwXWtcyHj//o6DcOja8vKhrDA/KFJeH
eud6vX3M3xMI/emUz6c3Pf/kkOqiPnXd1/Epa/Spv9foU8dk29D8/rB/Qtm3
mh+TWrzNz7QWk/blXGvQLBnqdWKm1xsnapPH4+ew1wno5FfWeYx1FCL3nM1J
1Cmfb9b0/Nwh1OPl5vsI43v+3MWqQ3hfYNTtaX6fSOkrv8aK2/E/s7zXmWme
zUUZX29c6P448Vg2KtcAaFxk40yh8f+tMr7e2oP72BOlNZ9rLo3ujzgvPKd1
qIa1NovWn9K1rVeH99bYnMaXth7S+wOj6FDz+8PMLuV031TNMSm6x/BsFz/K
U61/+LH5OV+YqjmfL9qlLJBLUf/HxVbdXBfdL0rX5sT9Qu2KA619PyIwzo4z
vw88L6HcLV3KqM9LOX+VLuVmujg8oW51nZ89aDpexb8Na1BjWJrzt+ZbrmmN
eWiKT1RXtX/Q+cRh5tfEUH3ud/ER695WAcZFaj7/V2s/D67VD8zf+6CIfv6r
hNcin7d3vHUfF14r/Dz+nVuvGb7DxSeN+UNI1278fKum53Sd2AYFv39Gm98f
BPXFaxzgKmv0xWvcjr54jLvU/vZU77TidrzO6zUX9eiE11LfPf3tC1IOnmf+
e9Ochnb3mD0z/Py94d96rPUuNV9xOfNrBui5KwdcV4yPTvPhvtn0/FUdfldr
q95pwz9HV1+85vw8Gt73ZvPXPNAXj3HUy3y4FGrna577xh1+vqX58/iUdWW1
ztnFmeo1blZ38Qvz393XXaxnfm7cC61x/bbW01gklNe/V2v6/SXCc09kqo+u
R1g1Y6yb8bVS1zBGsU75XH1B85t+tmPLz3UO+QfzfXxV9bnFvvg7rNEXr/uy
zKygLsCg6Dozbd/7ZnzNb5jvy23nHEtbS47r1brTOjK6zlDXa99jvh9dc4Ju
Mt8uL5ort5L5v++vM9XlFqv+mrSi2CXT55xU7f6mzU5r+VnzeJr6uuN+XPUY
mtaK29um1vULxv3VMB7UplMOSFlPJtXuLu61RtswWsH8GuO7JbyGxrqKxodR
nr5zrQeruYt7ZnpNrbV5RKbQGMKzGV/vPcY8gapoLemfWOO6yirzufoRtO7V
I0310PW1S1ZUH2AQtE56rnaaaN/V/UFac4X6t9SOS1lP+YPm57Esl7Fe8OMq
Wo9G1/aP6tp7rPc6Ph624n6TQdOxZifzY086f9VYn8b7df7Zbt4JUHeat659
a8OMr6l+YK3lHPuxtPaoxtV3Svx9nV8wVysfjatrnF1zErTedXN7adSQz8fX
sPK4+mNmmZ97q/fTupZqT6xW9EvAGND9UtXn/tmMr6m+dvWzXWq+z1xzW+ck
/m7say9amxy90fyfqtpIvSKfj69Bb3O6P3Bzn7r6A3UPdPrUMUm0Dzxuedcn
0dxirfH2ZxdnW/rapN81f0/WUVnLdBxU2efZK/L5eBrUdqc+9Z1tap+65uTS
p45JNdP8/OhzK66HxnTjPBVMJvI5Umj9+OY+dd37kT51wNPaiNovdqjo/Zc3
P09La0i2u6c3JgP5HEXWMN+fGNv5mhNCnzowlfaH21zcZ8O/D6f6xS4xP6d9
qyG/N0YL+RxFNN9H1yDGfK459FrvcPUqKwWMIK0vozXDdM+PYV4rFtejeN8Q
3xOjiXyOFBo3f5359ZTiuLnWqtrOGDcHIq0Ho3ay1hl7/oDfS/td7Of/krEf
gnyO3qkP/lRrXO+u613f5WKpKisFjIh9zOd07RfrDug9dE+EL5rf/7ReGfPZ
IeRzlKW++HebX/tC29BD5vM8ffGYdFr7RfuDrk1/m6Wt65ZqE2us+a37Ji+c
8bVRb+Rz9Cv2xav/vbkvXs/RB4hJpWvIdU9zHV91/9It+3w93etK69Zo/9J1
6Xv0+XoYP+Rz5BT74tU2iX3xasPTF49JpHNd3TNYa7zEvK72+osSf1/35tQ9
FDU+/mQIzX9bPntNMQ7I5xiE2BevfB7nxmudqzWqrBRQEV0Trjw+1xr7g/aN
r5m/f4rWdtB6Doe6OMbFWS5+aD5/q6zuufZx437UKEY+x6CoDTHbpq5Td4Jx
v1RMtvVcHGn+ninK0+3WEX3U/Bx5jY+/1orvxw1E5HPktr6Lz5u/X7O2Ld1b
QveMIo8DC1Jf1ubm9xW1wVestjqoMfI5ctA9oXTt7bXmt6f5Ls63/ucAAZNA
a8ppvzmy6oqg1sjnyCHOf9O8W21TjPMB6cjnyIF8jhxiv/pzq64IUEPkc+RA
PkcO2oY+U3UlgJoinyMH8jlyIJ8D5ZHPkQP5HDmQz4HyyOfIgXyOHMjnQHnk
c+RAPkcO5HOgPPI5ciCfIwfyOVAe+Rw5kM+RA/kcKI98jhzI58iBfA6URz5H
DuRz5EA+B8ojnyMH8jlyIJ8D5ZHPkQP5HDmQz4HyyOfIgXyOHMjnQHnkc+RA
PkcO5HOgPPI5ciCfIwfyOVAe+Rw5kM+RA/kcKG918/vQnKorglq7xMjn6J+2
oWuqrgRQU7F9fmLVFUGtfc7I5+iftqGvVl0JoKbob0cO9LcjB/rbgfLI58iB
fI4cyOdAeeRz5EA+Rw7kc6A88jlyIJ8jB/I5UB75HDmQz5ED+Rwoj3yOHMjn
yIF8DpRHPkcO5HPkQD4HyiOfIwfyOXIgnwPlkc+RA/kcOZDPgfLI58iBfI4c
yOdAeeRz5EA+Rw7kc6A88jlyIJ8jB/I5UB75HDmQz5ED+Rwoj3yOHMjnyIF8
DpRHPke/lnZxvvntaO2K64J6I58D5ZHP0Y9NXdxtfhtSPOPiVBfTqqwUaot8
DpRHPkdZi7u4yxq5vDkOqLBeqC/yOVBezOeKMwiih7jU2udyxT0jUD+ifkE+
B8przucEQRBVB/kcAIZL54Lzrf0x+bQK6wUAAHpzlC2Yy+e5WK7COgEAgN7t
4uIO87n8ZBczqq0OAAAoifVkAACoP/I5AAD1Rz4HAKD+yOcAANQf+RwAgPoj
nwMAUH/kcwAA6o98DgBA/ZHPAQCoP/I5AAD1Rz4HAKD+yOcAANQf+RwAgPoj
nwMAUI0VXGycKeaYz+e5Xm89F9MG99EBABgbt5rPwaMauw/uowMAMDY2dXFQ
pjjExYkZX+8tLhYf3EcHAAAAAAAAAAAAAAAAAAAAAAAAAAyR1nS5zMV3BhDH
D+9jAAAw0bZwcYuL3wwgzh7i5wAAAAAAAAAAAAAAAAAAAAAAAAAAjL6VXWzb
Epu7WLjKSgEAgJ7c4eLZNrFXlZUCAAA92dDFHi2xi4vFqqwUAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAyvs7PX16cg==
     "], {{0, 211}, {500, 0}}, {0, 255},
     ColorFunction->RGBColor],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   BaseStyle->"ImageGraphics",
   ImageSizeRaw->{500, 211},
   PlotRange->{{0, 500}, {0, 211}}]], "Input"],
 "\n\nYou can solve for ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["V", "out"], TraditionalForm]]],
 " by applying Kirkhoff\[CloseCurlyQuote]s Laws at the junction J in the \
middle of the top of the circuit and around the left and right loops.  \
Kirkhoff\[CloseCurlyQuote]s First Law comes from conservation of charge.  If \
charge is to be conserved, the total current in and out of the junction J \
just be zero.  Letting ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["I", "1"], " "}], TraditionalForm]]],
 ", ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["I", "2"], TraditionalForm]]],
 ", and  ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["I", "3"], TraditionalForm]]],
 " being the currents through ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["L", "1"], TraditionalForm]]],
 ", ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["C", "2"], TraditionalForm]]],
 ", and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["L", "3"], " ", 
     RowBox[{"(", 
      RowBox[{"and", " ", 
       SubscriptBox["R", "4"]}], ")"}], " ", "as", " ", "shown"}], ",", " ", 
    RowBox[{
     RowBox[{"this", " ", "requires", " ", "that", " ", 
      SubscriptBox["I", "1"]}], "=", 
     RowBox[{
      SubscriptBox["I", "2"], "+", 
      SubscriptBox["I", "3"]}]}]}], TraditionalForm]]],
 ".  \n\n",
 Cell[BoxData[
  GraphicsBox[{
    TagBox[RasterBox[CompressedData["
1:eJzt3QncI0WZx/FnOEa5GVAUlWWA5ZAbQVkUlmNRkUvkcIVVuXE9kQEWhkNY
FcUDFEQFEcZFBRU5FBBQBBTwYNnRFUUFhAEvUORGjhGw/lbVJ3kzSafSqaTT
ye/7+TyQyVtvUnnT3U/X0dWr7HfwrgctZGaHPtf9Z9d9j9h61qx9Z++2iPvH
NrMPO3C/hd2Dm108Os1MTwIAAAAAAAAAAAAAAAAAAAAAAMCebRNAWWxPAFAd
jr3Iie0JAKrB8Rc5sT0BQDU4/iInticAqAbHX+TE9gQA1eD4i5zYngCgGhx/
kRPbEwBUg+MvcmJ7AoBq9Hr8Xd7F6S6e7uF3MDlSt6fmctqW7nNxhYvNBlo7
ABhf3Y6/rc/f6+K0Lr+DyZW6Pen/F5g/P1zcxe7huT8NuoIAMKZ6zecbtPwe
0KyXfL5yeLyoi53Dc9cPtHYAMJ7arc+ZumYn+Rytym5P8fmrXSw1lJoCACLy
OXKZ7uJE89vTqRXXBQAmDfkcOS1nfnu6r+qKAMCEIZ+jH9p2XtL072XCc49V
Ux0AmFjkc/RD2865LpZ1McP8NZB67pwqKwUAE6SXOXNAJ9u6uMTFQy6ecnGb
iw+5eG6VlQIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAMACprlYqMffGXT5hXssj+r1+p0Nuvy0EAAwznSce5OLa1084eJJFz9w
sZ+LRTr8zutcXOziry7mu/ipi/e6WLxD+c1cfMnFgy6ecfFrF8e6WL5D+bVd
nOHiT+bvj/5bFx91sVLyp8KwvcjFh13caf47+4uLM12s36H8DBdHufiVi6dd
POziay4271Be9zZ/l/ltTductr3LXOzUobzOG9/q4nvmt+knwuO3WO/nlMCo
erZNfKVNuWVbymD86Jh6jfnv9+fmc+hnXcwNz91o/jgdPcf8tqKf3e3ibBef
cnF9eO4287k40rnCSeZzuHKzcvopLq40fwy/x8WWLXWaZf74+5CLr7r4pIuL
zB+Pdcz/934/NLLbxfy5mr63S8x/Z+eG55R7Z7eUf6WL35vfBr4Typ/j4g/m
txVtU81t8DVd/NL8NnZD+PlZLn4TnrvApp5LrmD+nFQ/u9nF6ea37ZvDc9e5
eH6/HxojY9Jz2vnW+EyfLyh3oPn9E+NnMRc3ufibi0NtwTbLAeaPz2pLK+8r
N2tb0DajHP2clvI7mj9+K2+vEp47NZTXsX2ZlvJqs+uc4DEXm4bnZoXy37Wp
5xGylov/D/XdNflTYtC2d/GUi1+4WLflZy9wcbn57/To8NzLzJ+XKXdv0VJ+
KRf/E8qfFZ5bKZTV77R+79NdfCiU/7b5cwC9hvK2ziPeYVP72fVYbXxtQz9z
sWQvHxQjbZJzms6P42d/3Dqfq2of3XpYlcJQnWb++9+voIzaXWpDqZ18WCj/
/oLym5jPzz90sXso/0Xr3L+5qos/mu+j3cp8XrjafN9qO+qf1zb5gNH3Pgpe
6OI+F7ebz93tKOd+y3wO3db8+aF+Z80O5ZVzP2d+29nLfB+5+mZeVVCPo0N5
9d/rfEBt/DcWlH9TKHNWQRnUy6TntB9b4/Mf1+bn27n4yVBrhGFRO0p5OuV4
9hHz24jy9FXWfezxP0N5HbPVR9ppTD16jfljq9rq95rPEUVUd+2v53Qph8FT
H7bOwTbuUk7nYb8LoW1j5y7l1fejcfL7Q/mDu5TXOYDG0pX3tS2d0qW8fDqU
7VZ31Mck5zSNQ8bPrnHM1v5TjXG+ddiVwlB83fz49PMSyiofP2p+O1m7S1nR
sfXuUH7HxPrcEMofnlhe/f1q762VWB75qW9FfdqfSSyvvm99x3MTy29tjWNT
ynz21cznZ53rLZ1QXuM/mrN3WWJ9MPomOadp7vJd1vj8zf2u65ifrzK9gnqJ
xnbVh6a/v+a8jtIcKM21+Zj5MV717bWOAY66Fc0fh09LLK9tQHOJU/O59JrP
rwvlZyWWV1+7+hdOTiw/ijTu/GXzfR4aw0jJQaPkBPP5858Ty8d+m5sSy/9b
KK8+m5RrzVYN5TXnY4nE99A1E/oMMxPLjxrNFTje/JzC81y8vtLaTPVi8/Mc
NX6mebOvGMJ7jnJOG4Y4Jqr4WdPzmk9wdJvyakddP+A6aez0J031inHSgN83
xT+ZP74010t5Zd8qK9WjQ8zX++WJ5XcJ5XXcOyGh/PqhvPo+z0sov5z5Plv1
F/w4sU6iPKix9zpee3SkLbh9a672jCor1aN55o8HqXQdxSPm95cVE8rPMb9d
6G+zaZeycqw1/pZ7JtZpvVC+df59HSiXay5C63bUrp952NawxlhJDLUhdh/C
e/ea08aJ+py0j8XP/2rz7U99F+2uDdY8p1724TLaHetiPtlkwO/dzXnWvm6a
e7tshfXqxaWW3uYRtePVt32LpbWt4v50rfkx9G759g2hvOac6lifmtMODr+3
QWL5UfESa+Sp1ji1wnr1YnVrzD9LoTEbtZsvC7/35oTf0ZoDcRzmmITymjd3
h/nzyDmJ9RLNxbymh/KjQtf6t9uGtK92mms4LPF7bg0dDxYb8Hv3mtNyGZVr
4DR3JNZF81B1fnd6hfXptC0o1O97f4XxdEHdHqm4bjHUztU+/WCHn+u86BfJ
34Yfj9TvfSP8brf5an8Mf4+Ph/+/pkv5eK177I89LLFeG1ljnl7K3+OBLuWG
FXEuQqdjcdX1i6Hv/Ykun2G7rt+SF8/x1A7WPnRjl/Kbh/Ka86hz5d92Kb9U
KK/X1RoIjyXWSzRupu26299Df4vHE8oNK+Zb5+2o2z4x6HimoG4pfS39qiKn
jUo+17hTzFNxu243z6j5O2n33BHWuP64n3GcL1vnbeH75ufUVhX3F9Tt4orr
FkNtk7nmx6za/VzrbOyR+F1orEk5Rrn88PA5O63fFen719zkHUP5ouvh5P/M
9xesFsp/NLFu6l9Qn7uupSv6e5wT3uPMLuWGFZda523o3hGoXwwdB7/b4Wfa
R9UeTh3riNeTqS9F45u/7FJ+t1Be16upT/DhLuU3COX/2xp9aEsn1k3b6Y+s
+99DY9RXJJQbVjSPE7dGp+9tWNHcPm6NddK+lr6k5jRtv7PNjx3ND/9XHot9
l605r10ObH1+FPL6hU31KJrvWfRZ9nSxYXh8ex91ieO1raHvpFvbcNDeZ+3r
pnGacVxnPI4vvtP8eLse719QXu0k7T+a67B8KP+hLu+hHHZReKy29Ll91LcO
tIaJ2pvttqO3VVivQdK5lNq32kd0LtAtP6sfX38PzVc5ITwu6ivdK5TZ0vz5
ox4PY/5Vlfa29tuQ+seqHvs7ydrXTedmw1pHPyWnxe1M62mp7RLnFh3RVKZT
G7bVKOTxSHO0Y322LShXlM91bcC08PjpPuvzQZvat63rSrbv8zVz0HeutSWb
t1Gdu7SuizUuXmv+M+5gfn0GPT6uoPyaocy7w7/VL/uFgvLTQ/mTw7+1/tu1
pWtbH1obRWueNW9H6g8c13uGXOni1vBY+7Y+b+t6gc30t3gqPN4/lN+ooHzs
z1f+3yY8noQ1BDXforlvW9dobVNpjTzNl4jrAsbQGN/qQ6xDSk6LfRzx/Ceu
BzuvqUwd83mqonxeVKYMtQ0150nn2ytkeL2ctPaUPqP69lKvjakjXasZ2zoL
h8dFa3XENZri9YWas/3NgvIrhvJx3qn6CW/po751omNHXD839VqDutI8yh+G
x7ENtFpBea3deU94HOdLFrUzPhbKaK5V7CM8oI/61onWz9Xn1XVhy1Vcl1aa
i6a2r+a1d1rzsUpxDkI8j14o/Ht+Uxnyef0+V6/UDtBnPLLqigyY5iHrc64f
/q3HReuHxHlMe4Z/32l+vLiT1r+jxid7matXd3GO8rjTeNR14fHbzX/mNQrK
a5u5KzzewRp9RJ3ENQx1XI5jRG/vo751022/RHut7fMZtmD7PPZ/KNcvZuTz
cTQp+Tz2Q2xlfjxFj4vWAdg0lNk7/FtjeRcWlH+BTe3DVxtubvnq1s6k5HOt
KxCvddT8I33m1vvtNNO9se4Lj+M2WLRu0wesMca+SXhcpzUh+kU+L0fXQepv
pz6jRc33Jejfs5vKxHv4ac5lbN+022fjXOmVzfe3/Xlgtc7j2ZZIeW5cTUo+
38wax8bY7nlPQfmYn7XemeZ9aQ7EJ7q8h66t+XJ4rPz/jT7qWzeTks+Vn3W9
oNo4mhv3pBXPH41/F+XnODd+ZkH5A0MZ5fI4N24c77nRCfm8HG2Pyulqp88P
/z/Kpl63oXkYys26dkvz5DrlN80Z1vEr3gf6oEFWHFlNSj5Xm1z5Vm3seC5b
NC9JdP2v2tjxuNptTSj1scf7oKt86pqv42BS8rnuUarPqbUIdE+W73cpv30o
v4/5Ppt5Xcq/NJTX9Wq6flHXiU/SvVDJ50B5k5LPJc410nXo1ySUj+vC6DxV
uX2RLuXjHHqV1znwqM3pGaRJyee6Flz959qG9Hm7rU+htruuUY/zlQ5JeI8r
ml6/Luvs5UI+B8qbpHyuNrquu9cxcsWE8pqTpD559asWzXlqpnGpOVb9er7D
Nin5XHRfUt2fd+9uBQPNf9faJMrlKWs76HpK3f9DbfRu9+gdN+RzoLxJyucY
nEnK5xgc8jlQHvkcOZDPkQP5HCiPfI4cyOfIgXwOlEc+Rw7kc+RAPgfKI58j
B/I5ciCfA+WRz5ED+Rw5kM+B8sjnyIF8jhzI50B55HPkQD5HDuRzoLyYzz9c
dUVQa1ovhXyOfmkbOq/qSgA1tab5fWhO1RVBrem+oORz9Ev39Pxe1ZUAaor+
duRAfztyoL8dKI98jhzI58iBfA6URz5HDuRz5EA+B8ojnyMH8jlyIJ8D5ZHP
kQP5HDmQz4HyyOfIgXyOHMjnQHnkc+RAPkcO5HOgPPI5ciCfIwfyOVAe+Rw5
kM+RA/kcKI98jhzI58iBfA6URz5HDuRz5EA+B8ojnyMH8jlyIJ8D5ZHPkQP5
HDmQz4HyyOfIgXyOHMjnQHnkc+RAPkcO5HOgPPI5ciCfo1/xWPTVqisC1BT5
HDmQz1HWli7Od/E389vQ2dVWB6ilxV38i/l96KMulq22Oqgx8jl6sZiL/V38
1Px281cXn3exQZWVAmpkLReHu7jMxd3m96PWeNDFj8zn99e4WLiSmqJuyOdI
of5AbSv3md9e7jLfN7h8lZUCamK6i/1c3GiNnH2ni4vM5+wjXHzKxbEujndx
joubXMwPZX9vfv970ZDrjXohn6OI2t3qU4/HoF+72M1oLwApppnvz/qt+f1H
Ofpd5s+PUyzlYmcXX3PxlIsnzOd9+uTRDvkcRRZ18SZr5HMdU84zP94HoLNV
XNxgfr9Ru3ybPl9vZRdnunjaxZ9c7NLn62H8kM+RahMXXzDfRtA2878u9nbx
nArrBIyi7V084OIxF+9wsVDG136Fi1+6eMbFJ4y+MjSQz9Gr57s4xsXvzG87
97j4gIsXV1kpYES82fy4920u1h3Qeyxpvp9M+5/64qcP6H1QL+RzlKW++Dda
o08x9sW/sspKARV6vfnrN+e6eMGA30tj8x83v+99Kfwbk418jhxe5mKONfri
Ne+HvnhMko1cPO7iFvN9WMOidRm1zx07xPfEaCKfIycdx46yRl+85u3QF49x
pzVhdO3HXyx97nouGj+/1Hy/wBZDfm+MFvI5BiH2xV9njbnxVxp98RhP8Ti6
U0Xvr3UgdA6teXKMpU8u8jkGZTUXJ1kjn+s6m1nm15gDxoXa45o78pWK66F1
IbSfHVxxPVAd8jly0pycV7v4pvn8rWtqvu1iR8t7zQ4wKk4zP2/kJYnl93Ix
z/z6cLtmrsvV5tvptNEnE/kcOej6mbeb7+/T9vSI+Xk6a1VZKWDAlja/rZ+R
WF7XpT/p4r/Mz1/TecA6GeujNWu0/+2V8TXH0SLmxwMvNL92te5Doe9F6+lf
bn4t65dWVrvyyOejp939GeL1YFo3UtebblZZ7aZSn/rJ5u8foTre7uIQF8tU
WSlgSLQmu7b7jRLKao1WrcP+vqbnTnHxrcx1utXFFZlfc5xofCSuo3+9i63N
t0d0LY7WzLrQGsfcuiGfj6bmPC4zXLzBfD9dHIt+YyU1a/SpX2JT+9R3MPrU
MVnUlrs9sez7XfzG/FzR6HkuHnLxqox1OsH8XPcZGV9zXCxh/nxHx1DdI7Ld
9bQ6vl1g9cyL5PPR1JrPo02bnr91yHXSOazWrmzuU/+00aeOyaQx6kddnJ5Q
Vtezaf3XA9r8TONS52esV+xzf0PG1xwXWtcyHj//o6DcOja8vKhrDA/KFJeH
eud6vX3M3xMI/emUz6c3Pf/kkOqiPnXd1/Epa/Spv9foU8dk29D8/rB/Qtm3
mh+TWrzNz7QWk/blXGvQLBnqdWKm1xsnapPH4+ew1wno5FfWeYx1FCL3nM1J
1Cmfb9b0/Nwh1OPl5vsI43v+3MWqQ3hfYNTtaX6fSOkrv8aK2/E/s7zXmWme
zUUZX29c6P448Vg2KtcAaFxk40yh8f+tMr7e2oP72BOlNZ9rLo3ujzgvPKd1
qIa1NovWn9K1rVeH99bYnMaXth7S+wOj6FDz+8PMLuV031TNMSm6x/BsFz/K
U61/+LH5OV+YqjmfL9qlLJBLUf/HxVbdXBfdL0rX5sT9Qu2KA619PyIwzo4z
vw88L6HcLV3KqM9LOX+VLuVmujg8oW51nZ89aDpexb8Na1BjWJrzt+ZbrmmN
eWiKT1RXtX/Q+cRh5tfEUH3ud/ER695WAcZFaj7/V2s/D67VD8zf+6CIfv6r
hNcin7d3vHUfF14r/Dz+nVuvGb7DxSeN+UNI1278fKum53Sd2AYFv39Gm98f
BPXFaxzgKmv0xWvcjr54jLvU/vZU77TidrzO6zUX9eiE11LfPf3tC1IOnmf+
e9Ochnb3mD0z/Py94d96rPUuNV9xOfNrBui5KwdcV4yPTvPhvtn0/FUdfldr
q95pwz9HV1+85vw8Gt73ZvPXPNAXj3HUy3y4FGrna577xh1+vqX58/iUdWW1
ztnFmeo1blZ38Qvz393XXaxnfm7cC61x/bbW01gklNe/V2v6/SXCc09kqo+u
R1g1Y6yb8bVS1zBGsU75XH1B85t+tmPLz3UO+QfzfXxV9bnFvvg7rNEXr/uy
zKygLsCg6Dozbd/7ZnzNb5jvy23nHEtbS47r1brTOjK6zlDXa99jvh9dc4Ju
Mt8uL5ort5L5v++vM9XlFqv+mrSi2CXT55xU7f6mzU5r+VnzeJr6uuN+XPUY
mtaK29um1vULxv3VMB7UplMOSFlPJtXuLu61RtswWsH8GuO7JbyGxrqKxodR
nr5zrQeruYt7ZnpNrbV5RKbQGMKzGV/vPcY8gapoLemfWOO6yirzufoRtO7V
I0310PW1S1ZUH2AQtE56rnaaaN/V/UFac4X6t9SOS1lP+YPm57Esl7Fe8OMq
Wo9G1/aP6tp7rPc6Ph624n6TQdOxZifzY086f9VYn8b7df7Zbt4JUHeat659
a8OMr6l+YK3lHPuxtPaoxtV3Svx9nV8wVysfjatrnF1zErTedXN7adSQz8fX
sPK4+mNmmZ97q/fTupZqT6xW9EvAGND9UtXn/tmMr6m+dvWzXWq+z1xzW+ck
/m7say9amxy90fyfqtpIvSKfj69Bb3O6P3Bzn7r6A3UPdPrUMUm0Dzxuedcn
0dxirfH2ZxdnW/rapN81f0/WUVnLdBxU2efZK/L5eBrUdqc+9Z1tap+65uTS
p45JNdP8/OhzK66HxnTjPBVMJvI5Umj9+OY+dd37kT51wNPaiNovdqjo/Zc3
P09La0i2u6c3JgP5HEXWMN+fGNv5mhNCnzowlfaH21zcZ8O/D6f6xS4xP6d9
qyG/N0YL+RxFNN9H1yDGfK459FrvcPUqKwWMIK0vozXDdM+PYV4rFtejeN8Q
3xOjiXyOFBo3f5359ZTiuLnWqtrOGDcHIq0Ho3ay1hl7/oDfS/td7Of/krEf
gnyO3qkP/lRrXO+u613f5WKpKisFjIh9zOd07RfrDug9dE+EL5rf/7ReGfPZ
IeRzlKW++HebX/tC29BD5vM8ffGYdFr7RfuDrk1/m6Wt65ZqE2us+a37Ji+c
8bVRb+Rz9Cv2xav/vbkvXs/RB4hJpWvIdU9zHV91/9It+3w93etK69Zo/9J1
6Xv0+XoYP+Rz5BT74tU2iX3xasPTF49JpHNd3TNYa7zEvK72+osSf1/35tQ9
FDU+/mQIzX9bPntNMQ7I5xiE2BevfB7nxmudqzWqrBRQEV0Trjw+1xr7g/aN
r5m/f4rWdtB6Doe6OMbFWS5+aD5/q6zuufZx437UKEY+x6CoDTHbpq5Td4Jx
v1RMtvVcHGn+ninK0+3WEX3U/Bx5jY+/1orvxw1E5HPktr6Lz5u/X7O2Ld1b
QveMIo8DC1Jf1ubm9xW1wVestjqoMfI5ctA9oXTt7bXmt6f5Ls63/ucAAZNA
a8ppvzmy6oqg1sjnyCHOf9O8W21TjPMB6cjnyIF8jhxiv/pzq64IUEPkc+RA
PkcO2oY+U3UlgJoinyMH8jlyIJ8D5ZHPkQP5HDmQz4HyyOfIgXyOHMjnQHnk
c+RAPkcO5HOgPPI5ciCfIwfyOVAe+Rw5kM+RA/kcKI98jhzI58iBfA6URz5H
DuRz5EA+B8ojnyMH8jlyIJ8D5ZHPkQP5HDmQz4HyyOfIgXyOHMjnQHnkc+RA
PkcO5HOgPPI5ciCfIwfyOVAe+Rw5kM+RA/kcKG918/vQnKorglq7xMjn6J+2
oWuqrgRQU7F9fmLVFUGtfc7I5+iftqGvVl0JoKbob0cO9LcjB/rbgfLI58iB
fI4cyOdAeeRz5EA+Rw7kc6A88jlyIJ8jB/I5UB75HDmQz5ED+Rwoj3yOHMjn
yIF8DpRHPkcO5HPkQD4HyiOfIwfyOXIgnwPlkc+RA/kcOZDPgfLI58iBfI4c
yOdAeeRz5EA+Rw7kc6A88jlyIJ8jB/I5UB75HDmQz5ED+Rwoj3yOHMjnyIF8
DpRHPke/lnZxvvntaO2K64J6I58D5ZHP0Y9NXdxtfhtSPOPiVBfTqqwUaot8
DpRHPkdZi7u4yxq5vDkOqLBeqC/yOVBezOeKMwiih7jU2udyxT0jUD+ifkE+
B8przucEQRBVB/kcAIZL54Lzrf0x+bQK6wUAAHpzlC2Yy+e5WK7COgEAgN7t
4uIO87n8ZBczqq0OAAAoifVkAACoP/I5AAD1Rz4HAKD+yOcAANQf+RwAgPoj
nwMAUH/kcwAA6o98DgBA/ZHPAQCoP/I5AAD1Rz4HAKD+yOcAANQf+RwAgPoj
nwMAUI0VXGycKeaYz+e5Xm89F9MG99EBABgbt5rPwaMauw/uowMAMDY2dXFQ
pjjExYkZX+8tLhYf3EcHAAAAAAAAAAAAAAAAAAAAAAAAAAyR1nS5zMV3BhDH
D+9jAAAw0bZwcYuL3wwgzh7i5wAAAAAAAAAAAAAAAAAAAAAAAAAAjL6VXWzb
Epu7WLjKSgEAgJ7c4eLZNrFXlZUCAAA92dDFHi2xi4vFqqwUAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAyvs7PX16cg==
      "], {{0, 211}, {500, 0}}, {0, 255},
      ColorFunction->RGBColor],
     BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
     Selectable->False], InsetBox["", {227., 192.}, {Left, Baseline},
     Alignment->{Left, Top}], InsetBox["", {233., 199.}, {Left, Baseline},
     Alignment->{Left, Top}], InsetBox[
     StyleBox[Cell["J",
       GeneratedCell->False,
       CellAutoOverwrite->False,
       CellBaseline->Baseline,
       TextAlignment->Left],
      FontSize->24,
      FontColor->RGBColor[1, 0, 0],
      Background->RGBColor[1., 1., 1., 0]], {229., 176.}, {Left, Baseline},
     Alignment->{Left, Top}], InsetBox[
     StyleBox[Cell[TextData[Cell[BoxData[
       FormBox[
        SubscriptBox["I", "1"], TraditionalForm]]]],
       GeneratedCell->False,
       CellAutoOverwrite->False,
       CellBaseline->Baseline,
       TextAlignment->Left],
      FontSize->24,
      FontColor->RGBColor[1, 0.501961, 0.25098],
      Background->RGBColor[1., 1., 1., 0]], {149., 138.}, {Left, Baseline},
     Alignment->{Left, Top}], InsetBox[
     StyleBox[Cell[TextData[Cell[BoxData[
       FormBox[
        SubscriptBox["I", "2"], TraditionalForm]]]],
       GeneratedCell->False,
       CellAutoOverwrite->False,
       CellBaseline->Baseline,
       TextAlignment->Left],
      FontSize->24,
      FontColor->RGBColor[1, 0.501961, 0.25098],
      Background->RGBColor[1., 1., 1., 0]], {273., 102.}, {Left, Baseline},
     Alignment->{Left, Top}], InsetBox[
     StyleBox[Cell[TextData[Cell[BoxData[
       FormBox[
        SubscriptBox["I", "3"], TraditionalForm]]]],
       GeneratedCell->False,
       CellAutoOverwrite->False,
       CellBaseline->Baseline,
       TextAlignment->Left],
      FontSize->24,
      FontColor->RGBColor[1, 0.501961, 0.25098],
      Background->RGBColor[1., 1., 1., 0]], {299., 139.}, {Left, Baseline},
     Alignment->{Left, Top}], 
    {RGBColor[0.501961, 0, 0.501961], AbsolutePointSize[8], AbsoluteThickness[
     3], Arrowheads[{{0.04, Automatic}}], StrokeForm[{RGBColor[
     1, 0.501961, 0], Opacity[1.]}], EdgeForm[{RGBColor[1, 0.501961, 0], 
     Opacity[1.], AbsoluteThickness[3]}], FaceForm[{RGBColor[
     0.0196078, 0.980392, 0.141176], Opacity[0.23]}], 
     ArrowBox[{{137., 127.}, {199., 127.}}]}, 
    {RGBColor[0.501961, 0, 0.501961], AbsolutePointSize[8], AbsoluteThickness[
     3], Arrowheads[{{0.04, Automatic}}], StrokeForm[{RGBColor[
     1, 0.501961, 0], Opacity[1.]}], EdgeForm[{RGBColor[1, 0.501961, 0], 
     Opacity[1.], AbsoluteThickness[3]}], FaceForm[{RGBColor[
     0.0196078, 0.980392, 0.141176], Opacity[0.23]}], 
     ArrowBox[{{299., 120.}, {299., 62.}}]}, 
    {RGBColor[0.501961, 0, 0.501961], AbsolutePointSize[8], AbsoluteThickness[
     3], Arrowheads[{{0.04, Automatic}}], StrokeForm[{RGBColor[
     1, 0.501961, 0], Opacity[1.]}], EdgeForm[{RGBColor[1, 0.501961, 0], 
     Opacity[1.], AbsoluteThickness[3]}], FaceForm[{RGBColor[
     0.0196078, 0.980392, 0.141176], Opacity[0.23]}], 
     ArrowBox[{{274., 135.}, {347., 135.}}]}},
   BaseStyle->"ImageGraphics",
   ImagePadding->{{0., 0.}, {0., 0.}},
   ImageSizeRaw->{500, 211},
   PlotRange->{{0., 500.}, {0., 211.}},
   PlotRangePadding->Automatic]], "Input"],
 "\n\nKirkhoff\[CloseCurlyQuote]s Second Law is related to conservation of \
energy.  It implies that the voltage change around any closed loop be zero.   \
Thus, for the left loop we have ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"V", "-", 
     RowBox[{
      SubscriptBox["I", "1"], 
      SubscriptBox["Z", "1"]}], "-", 
     RowBox[{
      SubscriptBox["I", "2"], 
      SubscriptBox["Z", "2"]}]}], "=", "0"}], TraditionalForm]]],
 ".  For the right loop we have ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{
      SubscriptBox["Z", "2"], 
      SubscriptBox["I", "2"]}], "-", 
     RowBox[{
      SubscriptBox["Z", "3"], 
      SubscriptBox["I", "3"]}], "-", 
     RowBox[{
      SubscriptBox["Z", "4"], 
      SubscriptBox["I", "3"]}]}], "=", "0"}], TraditionalForm]]],
 ".\n\nThese laws give us three complex equations for the three unknown \
currents ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["I", "1"], " ", ",", " ", 
    SubscriptBox["I", "2"], ",", " ", 
    RowBox[{"and", " ", 
     RowBox[{
      SubscriptBox["I", "3"], ".", "  ", "The"}], " ", "current", " ", 
     SubscriptBox["I", "3"], "  ", "is", " ", "the", " ", "current", " ", 
     "through", " ", "the", " ", "resistor", " ", 
     SubscriptBox["R", "4"], " ", "as", " ", "well", " ", "as", " ", 
     "through", " ", 
     SubscriptBox["L", "3"]}]}], TraditionalForm]]],
 ".  Therefore the voltage ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["V", "out"], "  ", "must", " ", "equal", " ", 
    SubscriptBox["I", "3"], 
    SubscriptBox["R", "4"]}], TraditionalForm]]],
 ".  \n\nLet L1=3/2 H, C2=1/7500 F, L3=1/2 F, and R4=100 \[CapitalOmega].  \
Solve the coupled complex equations resulting from applying Kirkhoff\
\[CloseCurlyQuote]s Laws.  Letting ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["V", "in"], "=", "1"}], TraditionalForm]]],
 " Volt, plot the magnitude and phase of voltage ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["V", "out"], TraditionalForm]]],
 " as a function of the frequency \[Omega] for \[Omega] from 0 to 300 radians \
per second.  What is the frequency at which the filter cuts off?"
}], "Text",
 CellChangeTimes->{{3.5255778701376*^9, 3.5255779218828*^9}, 
   3.5255808845973997`*^9, 3.5255809742106*^9, {3.5255986265198*^9, 
   3.5255994133602*^9}, {3.5255994478518*^9, 3.5255997811614*^9}, {
   3.5255998238742*^9, 3.5256006166506*^9}, {3.525600648381*^9, 
   3.5256008017886*^9}, {3.5256008555462*^9, 3.5256008698202*^9}, {
   3.53036748040838*^9, 3.530367481948303*^9}}],

Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<`*\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.531664201055249*^9, 3.5316642055451593`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"l1", " ", "=", " ", 
   RowBox[{"3", "/", "2"}]}], ";", " ", 
  RowBox[{"c2", " ", "=", " ", 
   RowBox[{"1", "/", "7500"}]}], ";", " ", 
  RowBox[{"l3", " ", "=", " ", 
   RowBox[{"1", "/", "2"}]}], ";", " ", 
  RowBox[{"r4", " ", "=", " ", "100"}], ";", " ", 
  RowBox[{"vin", " ", "=", " ", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"z1", " ", "=", " ", 
   RowBox[{
    RowBox[{"-", "I"}], "*", "l1", "*", "w"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"z2", " ", "=", " ", 
   RowBox[{"I", "/", 
    RowBox[{"(", 
     RowBox[{"c2", "*", "w"}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"z3", " ", "=", " ", 
   RowBox[{
    RowBox[{"-", "I"}], "*", "l3", "*", "w"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"z4", " ", "=", " ", "r4"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"{", 
   RowBox[{"eq1", ",", "eq2", ",", "eq3"}], "}"}], " ", "=", " ", 
  RowBox[{"{", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"i1", "\[Equal]", " ", 
     RowBox[{"i2", "+", "i3"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"vin", "-", 
      RowBox[{"i1", "*", "z1"}], "-", 
      RowBox[{"i2", "*", "z2"}]}], "\[Equal]", " ", "0"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"i2", "*", "z2"}], "-", 
      RowBox[{"i3", "*", "z3"}], "-", 
      RowBox[{"z4", "*", "i3"}]}], "\[Equal]", " ", "0"}]}], 
   "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{"eq1", "&&", "eq2", "&&", "eq3"}], ",", 
    RowBox[{"{", 
     RowBox[{"i1", ",", "i2", ",", "i3"}], "}"}]}], "]"}], "[", 
  RowBox[{"[", "1", "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.525578494651*^9, 3.5255786937742*^9}, {
   3.5255787334294*^9, 3.5255788184337997`*^9}, {3.5255788861534*^9, 
   3.5255789769765997`*^9}, {3.5255790114526*^9, 3.525579022513*^9}, {
   3.525579078829*^9, 3.5255790914806004`*^9}, {3.5255792644382*^9, 
   3.5255793152386*^9}, {3.5255797921703997`*^9, 3.5255798391214*^9}, {
   3.5255798754244003`*^9, 3.5255799674198*^9}, {3.525580375599*^9, 
   3.525580434167*^9}, {3.5255804854378*^9, 3.5255804917202*^9}, {
   3.5255805475188*^9, 3.5255805998238*^9}, {3.5255806691507998`*^9, 
   3.5255807023202*^9}, {3.5255809926822*^9, 3.5255810491422*^9}, {
   3.525600622797*^9, 3.5256006407682*^9}, {3.5256008156102*^9, 
   3.5256008325206003`*^9}, {3.5256008821286*^9, 3.5256009749486*^9}, {
   3.5256010211246*^9, 3.5256011101382*^9}, 3.5256012141949997`*^9, {
   3.530367497977502*^9, 3.5303675337357135`*^9}, {3.5303677616343184`*^9, 
   3.5303677851631413`*^9}, {3.530368183333232*^9, 3.5303682059621005`*^9}, {
   3.530368243750211*^9, 3.5303684202713842`*^9}, {3.5303684628092575`*^9, 
   3.5303684839282017`*^9}, {3.5316641696758766`*^9, 3.531664252104228*^9}, 
   3.5316643049931707`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"i1", "\[Equal]", 
    RowBox[{"i2", "+", "i3"}]}], ",", 
   RowBox[{
    RowBox[{"1", "-", 
     FractionBox[
      RowBox[{"7500", " ", "\[ImaginaryI]", " ", "i2"}], "w"], "+", 
     FractionBox[
      RowBox[{"3", " ", "\[ImaginaryI]", " ", "i1", " ", "w"}], "2"]}], 
    "\[Equal]", "0"}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"-", "100"}], " ", "i3"}], "+", 
     FractionBox[
      RowBox[{"7500", " ", "\[ImaginaryI]", " ", "i2"}], "w"], "+", 
     FractionBox[
      RowBox[{"\[ImaginaryI]", " ", "i3", " ", "w"}], "2"]}], "\[Equal]", 
    "0"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.531664296613338*^9, 3.5316643144929805`*^9}, {
  3.5316644816296377`*^9, 3.5316644843795824`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"i1", "\[Rule]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"15000", " ", "\[ImaginaryI]"}], "+", 
         RowBox[{"200", " ", "w"}], "-", 
         RowBox[{"\[ImaginaryI]", " ", 
          SuperscriptBox["w", "2"]}]}], ")"}]}], 
      RowBox[{"3", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "1000000"}], " ", "\[ImaginaryI]"}], "-", 
         RowBox[{"20000", " ", "w"}], "+", 
         RowBox[{"200", " ", "\[ImaginaryI]", " ", 
          SuperscriptBox["w", "2"]}], "+", 
         SuperscriptBox["w", "3"]}], ")"}]}]]}]}], ",", 
   RowBox[{"i2", "\[Rule]", 
    FractionBox[
     RowBox[{"2", " ", "\[ImaginaryI]", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"200", " ", "\[ImaginaryI]", " ", "w"}], "+", 
        SuperscriptBox["w", "2"]}], ")"}]}], 
     RowBox[{"3", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "1000000"}], " ", "\[ImaginaryI]"}], "-", 
        RowBox[{"20000", " ", "w"}], "+", 
        RowBox[{"200", " ", "\[ImaginaryI]", " ", 
         SuperscriptBox["w", "2"]}], "+", 
        SuperscriptBox["w", "3"]}], ")"}]}]]}], ",", 
   RowBox[{"i3", "\[Rule]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"10000", " ", "\[ImaginaryI]"}], 
      RowBox[{
       RowBox[{
        RowBox[{"-", "1000000"}], " ", "\[ImaginaryI]"}], "-", 
       RowBox[{"20000", " ", "w"}], "+", 
       RowBox[{"200", " ", "\[ImaginaryI]", " ", 
        SuperscriptBox["w", "2"]}], "+", 
       SuperscriptBox["w", "3"]}]]}]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.531664296613338*^9, 3.5316643144929805`*^9}, {
  3.5316644816296377`*^9, 3.5316644843895826`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Re", "[", 
    RowBox[{
     RowBox[{"-", 
      FractionBox[
       RowBox[{"10000", " ", "\[ImaginaryI]"}], 
       RowBox[{
        RowBox[{
         RowBox[{"-", "1000000"}], " ", "\[ImaginaryI]"}], "-", 
        RowBox[{"20000", " ", "w"}], "+", 
        RowBox[{"200", " ", "\[ImaginaryI]", " ", 
         SuperscriptBox["w", "2"]}], "+", 
        SuperscriptBox["w", "3"]}]]}], " ", "*", " ", "100"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"w", ",", "0", ",", "300"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.5316645443283834`*^9, 3.5316646666759367`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJwV1nk4VesXB3AylWSquFRCKZEhktm7jBH5hXAGEmkwZDhJpTJFkjFDhiRd
okwpKUN5S5ln5SLT5prFoUyV+O17/jnP5zlrn+fda33XfraEk6fl2Q0sLCxK
rCws/30X26wuzhT06FSs//dhovCaU10W0W+QV+wQY5V07Nfg62LRtShT6VPj
POlZ6TyOu7nt6MRYDjdBOmEkoZk9ugsx8iIVaklrZPgnBnj3o9EghkYO6Tm5
V/I3c4eQuwtVNpD0x83P4jTSRlCao+4GS9L3Jx8uLUeNowoXGbyTtEttHK0k
YArlB25zItaYSOtJWCXDewYRWetTaaTv6OoIJB+aQ7u+TFMtSXsXqX30zZ1H
Tpt7CllI03YrX7be8wM1GdVO5vxhIoNouf2H0xaQVdBrbmPSwu6SEfNRy2iy
O2mNscpELL07tds4f6L4kfD2P7+ZaMpEmFkY8AvtbrpxN4j02/08Vu7ef5DT
onPhpV9MlH2fk8N0ag0RW2kiwz+ZqC44sDfhEAuo1P7P1YT0i3m/qEu5rDAd
rFW5YYWJ9h24OjZ8bgPMmSl/OLnMRKmnLyPLPWzgJC+T+2iJiUJaPecV09ih
646wvPgiE9kWOFvPRnGBQdrUn8Z5JmoacSy0P7YRFKFPcXSOiWCnA1cz5ybg
ZmkyWWYykUwEtSwvgBtsTbPkOGeZaPWC+S4X7y2wYCr7rmWS7E+GqW+3HC9w
67KKP59gorEu49ajU7xwW6f9wp1xJrqQ+RjiD/HDPQ+7fKlRJrIQTPvunSsA
v6w3/uYmmIinUPTRs42CcDYxKerlABPVmKSYDp0ThKUEEU6rfnLeQfezTuzZ
CpMLc0/9vzLR3rlYG4W0bXCzo6Yk8AsTLTeHln+LEoZQh/gphVomckbcagIL
wrB1SYIVVTNRR1F0iQrtL9DKrq80/MhEhfFJRf77RECAy0ZBA5P11GfZ/FgU
WOIXRipfk/UjTXGH53bB01SFdNUssh82FvxUGzE4elVz74fH5PW1nVE334pB
QTafhd4jMs+5A3dq7uyG2sCFdNlUJhJXu4ryY8WBatzDnRrDRF1/wlV0DkiC
tj1tx9hVJoo+YuZzwk4S4jRWNk1dJvPjyVvsFCMJiaz16aMMJnpJxCmGLUqC
P9Fe/tGdrP/4QLbtwx74Wc1fseM0ExmGF0g40aRAT9qxVcOQiYq3tW+5HSEN
2wtjag9vIvPkvWNEpUIa3P8SXvHmYKJPLWfLR6ekYbb9yUAOKxP9c+fXOcNj
B0A37nrzn5+zaGV1z3v2TTLQMmynYDk1i3RGfRm3bsvCkY6xb2n1s6ihZGdX
YJA8xOgeu1YWPIs6BM8XKL6Qh9QZeeUt/rOo1/PFLYKQh0NaYo+o12bRtwNG
igAKwHbzUmSf5yziS/cMX19TAK13iqV37WaRjP7QLlSpCKZFDrJ3Ds8iL9nD
be80leDh08BtnIMzaED16PouKyXw11poi+iZQccNaPL+rkrQzZcVxP1lBsnY
B0bqpChBI6qo/F43g0ajm4zxkhLEBBVmeLycQbTvzh/ev1CG6Ajluq0hM0i/
LPHlx/0qwBIkly4gOYNeVj8d2oNUoPEH07ZkxwwS76jgD7FRgZe8HqsW22fQ
2tSQh0GoCmB2ZXbfjTOodKe8bPWwCrSK1rC7zH5DBwNrMmseHgF7K1PfX6Xf
kNDR5YT6rWrwM5QwqzP+hr7Xma7slVODwRIR1mn4hpqPZdADjdRgvRROcKh/
QyHmJpKq19TAIn/hrfgBst76wfOsATXoLVys/L6RrHdGDQHP1OGEJ61nQ+00
CgkOW1dBmvDA1qGuRWsa/Xgn7Pq3qw6oHNw59413Cq1YKKaYBeuAG5te/QOO
KbQ6aly3lKIDHVmdB/RXJxE7r98+03odmH4d7n99chIJneob/rGfjLXbpFPc
x0mktpZBNxxFMDv9/AbFdxKh3Yn7Fp4DCB07uE33nwkU6iD2V5KMHhA9zyTs
A8aRjnNjvYuqHmzRVh9RvTSOli5cva5loAf1Fu8LNp0fRxcYHQND9nrg/eiF
ZZz5ODoWevvJwXt68Efdu1V11zjizZtVqlrWg577/YsdpWMoeany+MwnfQiW
sb1tODmK8qMcbuk7GELVe1sHNoURtOOanftKiDFIF6xezHIkUM6z3ubbPqbA
RkxbeJV3o5aw8DfXM81Bp/4f7r8NW9Ddzj4eqZYT4MXDDptjX6O26o4b/PqW
cM79UojMQAEe4SEUn3dZQdUfY7/nDxvwXaPHpxL7reBN49Pjn4kGfCjQKfL6
v1Zg/jH/buueRuz/Y2T8KNMK8q0Zq/971oj/+jqZTnCehAlWsYnzL5vw8Zwf
PIJHTkK9SuiGwrct+LUu16RPwklYDpkdKbNtx3bX64ToqSeh+k6M4W3fdsxW
Em6gm3ESGP55WzQS2/EJaZ6MLfknQSb6qpFtRzue4hWwzf54Evb37gp1Nu3A
Yn2i1V3fT4LF2XW9fLXPOMxX/rGGhTUEJ9yy37L+Bd/ZwpL2yNYa7qlHenze
2YnvZrXfZz9lDR4BQmNXNDpxdIdPZIurNeh4St6gX+7EifIVV5xCrOGrhlBw
+GQnzhw7an73jTUc8nx22LnxH4xtHH/37LKBjoGieX2fbvx+RmlJZ68NcPDN
XUyN6sZVIezzmTI2EG8zUNKY3Y1rXuaMXVS1Abmdjywru7txM+9sO6uFDVQ7
ivoPafTg3hq/pwdCbGCAS1qQb6UHLx9JsL42ZQMSm3LVHlj3Yh9DR8f3czZw
sIXXoMGlF89ZyV/kWraB+4vMks83e/GEV11IIpstcOYxiy8/6cVfc1eLX+y0
BdPr6YGL33vxW7GzglPmtuD9Npt96HYfVpNTEjtkbQtKFr/Pv0ruw6801w9c
pduCTl/fmmNuHy6gpOhyXrAFqW6fetPmPpwe1+wlGWQLB16/WKEK9OMgziOt
tGJb4GYmWpyJ68dr29h6H5fZwkjmlc29j/ux3562sQlsC7YSDw/JvejHDHBd
822yhQLm1sHTrf3Y2S9dLn7UFjT0zz7g5B7ARrOckY3CFCjn+/PJ6uoArlr9
nCQoRoHk8FJn39ABrLP5cSZ1LwXkynn4fOIGsKq0ZsW4IgX4WY+UsuQPYGkn
zym2YxRQ7S8aOt0/gDf/02WsdYMCt2Q4h03UB7HgZCKXcDAF1nmJ3y76g/iv
Vaua+TAKsJVrNrgeH8T7JNv0c+Ip8LNk9D2v4yAGjzodwTwKiH4Lahi6PYh9
OMsOT/RQoOXw0puqpkHsJ3LlR9UgBYpa5/MWvwzioIMqLx+Okr+fU3Pk7h/E
0ZYvFKzmKdCX/Tet59sgfpr+TKZyIxVERt62hXEQuO9IqniCKhVozPO+y+IE
HjahDHpoU6HG90Tinr0EnrQTSjfRpwI3w+uI7n4CLwXH7Vg3p4KyDpeshRyB
+VvvCrmeo8KIuc62ajUCCw0bdxq4U0HqKNPPX5PAuxY5E3YzqDC51/vdAR0C
y+y4JdB5kwoRSobsNvoENjx/nQcSqWBvIjLMeZzAZn7qjaIPqLCnPNfzxP8I
bBm1HL6YQYXW+GrVSAsCny6+xJWXTwUxW+rTr9YE9lt32yD0iQqZQRLOX+wJ
HCgo82Gungruyk/EXjgQOExqIqCxlQoFC8u+gY4ETjB1/hPYS4XjbePKy84E
LkyyW5n+ToVzlVQjIzfyfjbKhhj+pMKXbA/JbncCM67+5Hu0TgWefV/KaR4E
VqHe32/JQ4Mr2V/OKHkT+H69c3GeIA36bdH9MAaBV9SVEYcIDRZkU+qaLxH4
rWibTakUDS7r+XnL+RJYLCJ9WOAgDZxV6dxHr5Dn/e3u4aZEA/Xh/nGLq2T/
3TR/fVKjgdiCzQ7zawTW79t0WwzRIMdS5rWmH4GzzLoFrhrSQKeooV70OoE5
32U/bDelwfzesvPTpBse6peEUGiwerThjuNNAh/kFdQdOEU6TFmBy5/A0f5E
k+pZGmxRvZKdTnputpByz40Gze4UFukAAls43ByZ8qZBtEG2eSbpl62mXgZX
aWBzTTOTP5DA20B09aE/6Q1rfF6kfYsmwpZDaND7fCD7A+lu8TdbLSJo0FjX
fY0jiMAa90If5d6jwZOn86mapNNYT8qyJ9OA65TaTmfSa96Sb+zTaVBsUs0X
QNpheE7vTRYNNCvLwiJJv7fELfx5NBDPQPf/s+THKJrrC/J8nOHH/6sPUbYb
+/iGBvl9rfi//xvLlGHsqiTnc8t6XYu08baff3w/0UDbx0lsI+nckNrwtgYa
PPvXUKGGPC/PYuJ2mXYaeJ61NrhC+uJZ58e3umiQEPvNcwfplk4luf5+Ghhl
uX96SfZD0Yi17MgIDTzktE5qk4573WoQO0WDmvyaQxVkPxf2pbdNztEgT/uG
50HSNknudvrLNLip3b77HjmPUi7NibQ/NCj/oW09eYPAolc3+Syx0eG5ho6k
CunrE13r/+Omw4C0RYoPOc8+SnbEM346cFSsNOWQ89ep9xFmE6ZDl39ZawuZ
jw25Agqv99Bhf35m5AqZJ2dRopxPhg4f+Ai332Teau4WGrko0sHvB835+2UC
h7uZntqpTYfFGp3pt2Q+p3pFpi7r00FUsyo9lsyvmdnE5VYTOvybVFpCIfPN
LxcaFWxDB93Phyg1ZP4ZD61E+uzoIPWuaaP7RQJ/2SL5ROUMHZo2c5/nJPcl
abby7YQnHaotonxFXMi8F61Mm4fTIWSL7ES5E4G5pUpltGLosM9tjiZF7uNS
yhWXA4l0SL0S43Wb3NeWW0tjbI/pcPAe5f1BOwL72y4MlZbSIdHXMnEzue+u
TcXi2ZV0+FyrXHXQiuyv7iWH+E902JAQu8mQfD7Iy37vu9hGh2gtvT108nky
sMbskpygQ2aClORuQ3I/Lj0X4p+lg1jXo6pfegR+PeFh/ecHHcZNJRaagdyP
jpmOrnU6+H8WMaRrkf3Onm6OFLaDW2bP1bcqEzj9+PjHJSM7GClykefYTeC7
VdkbRszsgFX3ROnpneQ+qJ7Tbbck67++q3glQmBzidHKvFN2wL3B9ILRNjLv
C8Nlp33tYEh475jAJgKfSht43vDEDqb6K2LyhgfxrunOB+ns9rC5KjLp32uD
2PndkxzuzfbQebm5mMoYxPkxl4t9BexhSTxLrsp1EGsc3t5oLmYP+PvTSlf6
ILa5efLXmqo91PsrMHdpDeJYvs8UBzd7eHTRd0L69wBmP9y2XbzDHoL1XhsX
eA3gqRsNMY8fnQLd9ZdX+1A/LvA1d0wQOQ1OgcHHAnK+YjnoprR0noanEm7O
GZLdeGvJxe9Djx2hPKa1sdKvE+tW7JlyO+0E0OMmISHzGX8oMmZV23EGNo6X
qlCE23GOxbXy/tEzELz0lc9pXwvuvNXQ/vNvZ7jA2TIe09aAXR33RzA9z0Ju
4uUOi79rsYX8jzP71c/B6QXEljzxCQdEDqZ2LpyD2BRN8XOFVXjb/a5L9u/P
Q2RuNb/Gvfd4TnEul+5/ARQOptpXF77DYhVXWNPUXCA7XCqhu7gcF89x/yrZ
4ApD3/O8Uvve4Jg3lSeMsCt8IByvCd8pwR0H/E2KItzgcujsdK15MbaTO5UR
e8wdSh7ukDvi9wKriRcIFXNcBKmz4nr2n57j65VcCs/bLsLpL4JO5sX5mGM2
+IlEtAcMhBROpUvn4qW6TZUX6Z4Qei/ggmVJDk6rX/91U9ALwnVxn0LcE+y4
zG0U6OUFlnkxfoH1mbjn1w4nz3+8YClaBb3Y8jdeNNIuSFHxBrGmxJH+lAxc
zi20cTTOG5KyvF4LP07HSlkLyrtWvME3NGjCbGcaNr/9b3SsDQPC4gZja1ZT
8NFj0WZHKAz4a9FV4cOPFAy86tx9VAbwxEQV4KkUfOh+dOh+ewYcFy2Duu4U
vC1b/UblGQak+7VEcJWk4N7qGJdvXgz4oPuZVdsjBV/g0DIwjmCAtPESr++/
ydixfox1NpIBvXa3Rie+JmNa1D0cH80A39GWUw4dydhs+7jG4D0GmOz/n5Lt
h2SsIBV3yDeZAUKUuQOMR8l4yWBCLOsJAwJ2s9da2SVj5sb4PpMcBuSYsc2t
WyXjiSbtVOZTBmwNnE9/bpqMe07Gb9fMZ8C9IxFhIprJ+K2zDk/HSwbUmvtb
Cosm4xLpyforrxiwvlB6bVAgGRd+iw/b9ZoBDk79f+VtSsYZPpMbXMoYoMK5
8MbsZxJOUUt4z1vBAPUfXq8k55Nw3KqO/6u3DDi6dUZidSIJ330/qUmrZECG
ZtFaN5GEb4Uk/Fwn3xp7tNlMyrqT8P8B4EaweA==
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  PlotRange->{{0, 300}, {-0.5158141073743572, 0.9999999999999923}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{{3.5316645478583126`*^9, 3.531664580397662*^9}, {
  3.5316646497662745`*^9, 3.5316646670759287`*^9}},
 ImageCache->GraphicsData["CompressedBitmap", "\<\
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
VOaGkznFs1sFofHBGn9f2fhdjfgPgIOE4g==\
\>"]]
}, Open  ]],

Cell[BoxData[{
 FormBox[
  RowBox[{
   RowBox[{"Z", "=", 
    FractionBox["\[ImaginaryI]", 
     RowBox[{" ", 
      RowBox[{"C", " ", "\[Omega]"}]}]]}], " ", 
   RowBox[{"(*", "capacitor", "*)"}]}], 
  TraditionalForm], "\[IndentingNewLine]", 
 FormBox[
  RowBox[{
   RowBox[{"Z", " ", "=", "  ", 
    FormBox[
     RowBox[{
      RowBox[{"-", "\[ImaginaryI]"}], " ", "L", " ", "\[Omega]"}],
     TraditionalForm]}], " ", 
   RowBox[{"(*", "inductor", "*)"}]}], 
  TraditionalForm], "\[IndentingNewLine]", 
 FormBox[
  RowBox[{"Z", "=", "R", " ", 
   RowBox[{"(*", "resistor", "*)"}]}], TraditionalForm]}], "Input",
 CellChangeTimes->{{3.5316643509522514`*^9, 3.5316643887114964`*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
AutoGeneratedPackage->None,
WindowSize->{784, 1122},
WindowMargins->{{0, Automatic}, {0, Automatic}},
ShowSelection->True,
Magnification->0.8999999761581421,
FrontEndVersion->"8.0 for Microsoft Windows (32-bit) (February 23, 2011)",
StyleDefinitions->FrontEnd`FileName[{"Creative"}, "PastelColor.nb", 
  CharacterEncoding -> "WindowsANSI"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[579, 22, 784, 12, 58, "Title"],
Cell[1366, 36, 330, 6, 39, "Subtitle"],
Cell[1699, 44, 2285, 32, 77, "Text"],
Cell[CellGroupData[{
Cell[4009, 80, 1752, 23, 67, "Section"],
Cell[CellGroupData[{
Cell[5786, 107, 297, 4, 33, "Subsection"],
Cell[6086, 113, 2292, 71, 96, "Text"],
Cell[CellGroupData[{
Cell[8403, 188, 552, 10, 145, "Input"],
Cell[8958, 200, 180, 3, 36, "Output"],
Cell[9141, 205, 146, 2, 36, "Output"],
Cell[9290, 209, 146, 2, 36, "Output"],
Cell[9439, 213, 157, 3, 39, "Output"],
Cell[9599, 218, 170, 3, 48, "Output"],
Cell[9772, 223, 213, 5, 55, "Output"],
Cell[9988, 230, 180, 3, 36, "Output"]
}, Open  ]],
Cell[10183, 236, 1288, 46, 77, "Text"],
Cell[CellGroupData[{
Cell[11496, 286, 1159, 23, 127, "Input"],
Cell[12658, 311, 166, 4, 36, "Output"]
}, Open  ]],
Cell[12839, 318, 838, 27, 60, "Text"],
Cell[CellGroupData[{
Cell[13702, 349, 848, 24, 91, "Input"],
Cell[14553, 375, 2678, 51, 343, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[17280, 432, 219, 3, 33, "Subsection"],
Cell[17502, 437, 2542, 41, 43, "Text"],
Cell[CellGroupData[{
Cell[20069, 482, 630, 12, 91, "Input"],
Cell[20702, 496, 305, 8, 50, "Output"],
Cell[21010, 506, 328, 9, 50, "Output"],
Cell[21341, 517, 173, 3, 36, "Output"],
Cell[21517, 522, 173, 3, 36, "Output"]
}, Open  ]],
Cell[21705, 528, 480, 14, 43, "Text"],
Cell[CellGroupData[{
Cell[22210, 546, 431, 7, 36, "Input"],
Cell[22644, 555, 201, 5, 36, "Output"]
}, Open  ]],
Cell[22860, 563, 1067, 26, 77, "Text"],
Cell[CellGroupData[{
Cell[23952, 593, 408, 7, 36, "Input"],
Cell[24363, 602, 237, 6, 36, "Output"]
}, Open  ]],
Cell[24615, 611, 2413, 37, 43, "Text"],
Cell[CellGroupData[{
Cell[27053, 652, 474, 8, 55, "Input"],
Cell[27530, 662, 474, 12, 50, "Output"],
Cell[28007, 676, 382, 10, 52, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[28438, 692, 791, 10, 33, "Subsection"],
Cell[29232, 704, 1457, 34, 93, "Text"],
Cell[CellGroupData[{
Cell[30714, 742, 2421, 58, 127, "Input"],
Cell[33138, 802, 1618, 34, 469, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[34805, 842, 322, 4, 22, "Subsection"],
Cell[35130, 848, 1214, 36, 47, "Text"],
Cell[CellGroupData[{
Cell[36369, 888, 1010, 23, 91, "Input"],
Cell[37382, 913, 284, 8, 31, "Output"]
}, Open  ]],
Cell[37681, 924, 892, 20, 63, "Text"],
Cell[CellGroupData[{
Cell[38598, 948, 1446, 34, 104, "Input"],
Cell[40047, 984, 414, 12, 26, "Output"],
Cell[40464, 998, 585, 18, 24, "Output"],
Cell[41052, 1018, 432, 13, 39, "Output"],
Cell[41487, 1033, 617, 20, 37, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[42153, 1059, 295, 4, 22, "Subsection"],
Cell[42451, 1065, 2429, 40, 29, "Text"],
Cell[CellGroupData[{
Cell[44905, 1109, 1057, 27, 64, "Input"],
Cell[45965, 1138, 498, 15, 37, "Output"],
Cell[46466, 1155, 193, 3, 24, "Output"],
Cell[46662, 1160, 193, 3, 24, "Output"],
Cell[46858, 1165, 193, 3, 24, "Output"]
}, Open  ]],
Cell[47066, 1171, 2811, 45, 67, "Text"],
Cell[CellGroupData[{
Cell[49902, 1220, 7506, 154, 261, "Input"],
Cell[57411, 1376, 2747, 68, 262, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[60219, 1451, 465, 6, 47, "Section"],
Cell[CellGroupData[{
Cell[60709, 1461, 508, 6, 22, "Subsection"],
Cell[61220, 1469, 1097, 31, 42, "Text"],
Cell[CellGroupData[{
Cell[62342, 1504, 1126, 23, 91, "Input"],
Cell[63471, 1529, 1767, 35, 168, "Output"],
Cell[65241, 1566, 164, 3, 24, "Output"],
Cell[65408, 1571, 231, 5, 24, "Output"],
Cell[65642, 1578, 164, 3, 24, "Output"],
Cell[65809, 1583, 147, 2, 24, "Output"]
}, Open  ]],
Cell[65971, 1588, 734, 17, 31, "Text"],
Cell[CellGroupData[{
Cell[66730, 1609, 620, 13, 52, "Input"],
Cell[67353, 1624, 2824, 52, 161, "Output"],
Cell[70180, 1678, 144, 2, 24, "Output"],
Cell[70327, 1682, 182, 3, 24, "Output"]
}, Open  ]],
Cell[70524, 1688, 890, 25, 65, "Text"],
Cell[CellGroupData[{
Cell[71439, 1717, 640, 11, 25, "Input"],
Cell[72082, 1730, 350, 9, 24, "Output"]
}, Open  ]],
Cell[72447, 1742, 1231, 37, 54, "Text"],
Cell[CellGroupData[{
Cell[73703, 1783, 1031, 27, 40, "Input"],
Cell[74737, 1812, 456, 13, 35, "Output"],
Cell[75196, 1827, 242, 5, 24, "Output"]
}, Open  ]],
Cell[75453, 1835, 1283, 25, 41, "Text"],
Cell[CellGroupData[{
Cell[76761, 1864, 553, 15, 52, "Input"],
Cell[77317, 1881, 178, 3, 24, "Output"],
Cell[77498, 1886, 177, 3, 24, "Output"],
Cell[77678, 1891, 620, 18, 38, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[78347, 1915, 718, 11, 22, "Subsection"],
Cell[CellGroupData[{
Cell[79090, 1930, 425, 5, 16, "Subsubsection"],
Cell[79518, 1937, 784, 23, 34, "Text"],
Cell[CellGroupData[{
Cell[80327, 1964, 777, 14, 26, "Input"],
Cell[81107, 1980, 229, 6, 27, "Output"]
}, Open  ]],
Cell[81351, 1989, 1023, 31, 45, "Text"],
Cell[CellGroupData[{
Cell[82399, 2024, 810, 15, 26, "Input"],
Cell[83212, 2041, 763, 24, 37, "Output"]
}, Open  ]],
Cell[83990, 2068, 599, 18, 42, "Text"],
Cell[CellGroupData[{
Cell[84614, 2090, 294, 7, 25, "Input"],
Cell[84911, 2099, 2345, 78, 59, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[87305, 2183, 580, 7, 16, "Subsubsection"],
Cell[87888, 2192, 988, 27, 37, "Text"],
Cell[CellGroupData[{
Cell[88901, 2223, 773, 14, 39, "Input"],
Cell[89677, 2239, 156, 3, 24, "Output"],
Cell[89836, 2244, 796, 26, 37, "Output"]
}, Open  ]],
Cell[90647, 2273, 1920, 61, 89, "Text"],
Cell[92570, 2336, 1200, 26, 39, "Input"],
Cell[CellGroupData[{
Cell[93795, 2366, 291, 7, 52, "Input"],
Cell[94089, 2375, 509, 10, 24, "Message"],
Cell[94601, 2387, 322, 8, 24, "Output"],
Cell[94926, 2397, 511, 10, 24, "Message"],
Cell[95440, 2409, 424, 10, 24, "Output"]
}, Open  ]],
Cell[95879, 2422, 920, 30, 49, "Text"],
Cell[CellGroupData[{
Cell[96824, 2456, 1068, 23, 52, "Input"],
Cell[97895, 2481, 511, 10, 24, "Message"],
Cell[98409, 2493, 351, 9, 37, "Output"],
Cell[98763, 2504, 511, 10, 24, "Message"],
Cell[99277, 2516, 455, 11, 39, "Output"]
}, Open  ]],
Cell[99747, 2530, 901, 26, 49, "Text"],
Cell[CellGroupData[{
Cell[100673, 2560, 1833, 45, 91, "Input"],
Cell[102509, 2607, 258, 4, 24, "Output"],
Cell[102770, 2613, 256, 5, 24, "Output"],
Cell[103029, 2620, 158, 2, 24, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[103236, 2628, 478, 6, 16, "Subsubsection"],
Cell[103717, 2636, 3010, 70, 193, "Text"],
Cell[106730, 2708, 135, 2, 36, "Input"],
Cell[CellGroupData[{
Cell[106890, 2714, 3204, 57, 109, "Input"],
Cell[110097, 2773, 2013, 64, 85, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[112147, 2842, 4398, 94, 199, "Input"],
Cell[116548, 2938, 172202, 2821, 346, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[288787, 5764, 1138, 32, 91, "Input"],
Cell[289928, 5798, 858, 23, 67, "Output"],
Cell[290789, 5823, 283, 6, 50, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[291109, 5834, 1165, 32, 91, "Input"],
Cell[292277, 5868, 763, 20, 67, "Output"],
Cell[293043, 5890, 233, 5, 50, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[293313, 5900, 3021, 57, 91, "Input"],
Cell[296337, 5959, 700, 18, 63, "Output"],
Cell[297040, 5979, 219, 3, 36, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[297296, 5987, 1356, 37, 109, "Input"],
Cell[298655, 6026, 628, 18, 63, "Output"],
Cell[299286, 6046, 118, 2, 36, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[299477, 6056, 1489, 21, 67, "Section"],
Cell[CellGroupData[{
Cell[300991, 6081, 1090, 17, 33, "Subsection"],
Cell[302084, 6100, 4276, 124, 237, "Text"],
Cell[306363, 6226, 137, 2, 36, "Input"],
Cell[306503, 6230, 1469, 22, 36, "Input"],
Cell[CellGroupData[{
Cell[307997, 6256, 641, 15, 55, "Input"],
Cell[308641, 6273, 362, 5, 36, "Output"]
}, Open  ]],
Cell[309018, 6281, 1469, 49, 77, "Text"],
Cell[CellGroupData[{
Cell[310512, 6334, 2336, 45, 109, "Input"],
Cell[312851, 6381, 425, 7, 36, "Output"],
Cell[313279, 6390, 50517, 839, 214, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[363845, 7235, 903, 12, 33, "Subsection"],
Cell[364751, 7249, 2889, 82, 198, "Text"],
Cell[CellGroupData[{
Cell[367665, 7335, 1861, 47, 91, "Input"],
Cell[369529, 7384, 168158, 2756, 236, 118575, 1942, "CachedBoxData", \
"BoxData", "Output"]
}, Open  ]],
Cell[537702, 10143, 1190, 32, 112, "Text"],
Cell[CellGroupData[{
Cell[538917, 10179, 2199, 64, 117, "Input"],
Cell[541119, 10245, 2361, 47, 359, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[543529, 10298, 1016, 15, 33, "Subsection"],
Cell[544548, 10315, 3607, 104, 176, "Text"],
Cell[CellGroupData[{
Cell[548180, 10423, 1937, 44, 73, "Input"],
Cell[550120, 10469, 646, 19, 50, "Output"],
Cell[550769, 10490, 640, 16, 52, "Output"]
}, Open  ]],
Cell[551424, 10509, 1348, 32, 93, "Text"],
Cell[CellGroupData[{
Cell[552797, 10545, 1742, 27, 55, "Input"],
Cell[554542, 10574, 595, 14, 50, "Output"],
Cell[555140, 10590, 566, 13, 50, "Output"]
}, Open  ]],
Cell[555721, 10606, 2345, 75, 103, "Text"],
Cell[558069, 10683, 158, 3, 36, "Input"],
Cell[CellGroupData[{
Cell[558252, 10690, 2205, 38, 36, "Input"],
Cell[560460, 10730, 727, 14, 19, "Message"],
Cell[561190, 10746, 694, 19, 60, "Output"]
}, Open  ]],
Cell[561899, 10768, 1027, 25, 77, "Text"],
Cell[CellGroupData[{
Cell[562951, 10797, 2029, 41, 55, "Input"],
Cell[564983, 10840, 314, 8, 58, "Output"],
Cell[565300, 10850, 21678, 390, 230, "Output"]
}, Open  ]],
Cell[586993, 11243, 903, 14, 60, "Text"],
Cell[CellGroupData[{
Cell[587921, 11261, 1758, 35, 36, "Input"],
Cell[589682, 11298, 20371, 369, 230, "Output"]
}, Open  ]],
Cell[610068, 11670, 1003, 18, 77, "Text"],
Cell[CellGroupData[{
Cell[611096, 11692, 1949, 42, 55, "Input"],
Cell[613048, 11736, 20325, 367, 230, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[633434, 12110, 103, 1, 67, "Section"],
Cell[633540, 12113, 132, 2, 36, "Input"],
Cell[CellGroupData[{
Cell[633697, 12119, 214, 3, 33, "Subsection"],
Cell[633914, 12124, 1228, 24, 93, "Text"],
Cell[635145, 12150, 563, 15, 87, "Input"],
Cell[CellGroupData[{
Cell[635733, 12169, 4186, 120, 289, "Input"],
Cell[639922, 12291, 25347, 425, 230, "Output"]
}, Open  ]],
Cell[665284, 12719, 249, 5, 26, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[665570, 12729, 223, 5, 33, "Subsection"],
Cell[665796, 12736, 3979, 116, 214, "Text"],
Cell[669778, 12854, 137, 2, 36, "Input"],
Cell[669918, 12858, 928, 24, 127, "Input"],
Cell[670849, 12884, 1260, 30, 100, "Input"],
Cell[CellGroupData[{
Cell[672134, 12918, 1623, 41, 93, "Input"],
Cell[673760, 12961, 2134, 41, 329, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[675943, 13008, 232, 5, 33, "Subsection"],
Cell[676178, 13015, 138, 1, 26, "Text"],
Cell[676319, 13018, 30299, 626, 938, "Text"],
Cell[706621, 13646, 135, 2, 36, "Input"],
Cell[CellGroupData[{
Cell[706781, 13652, 2898, 66, 217, "Input"],
Cell[709682, 13720, 768, 22, 50, "Output"],
Cell[710453, 13744, 1792, 50, 103, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[712282, 13799, 635, 17, 53, "Input"],
Cell[712920, 13818, 11357, 193, 215, 6749, 116, "CachedBoxData", "BoxData", \
"Output"]
}, Open  ]],
Cell[724292, 14014, 686, 21, 89, "Input"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
