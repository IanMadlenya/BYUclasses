(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 8.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[    377434,       7919]
NotebookOptionsPosition[    368259,       7631]
NotebookOutlinePosition[    368730,       7649]
CellTagsIndexPosition[    368687,       7646]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["\<\
Physics 230 -- Lab 11 (Complex Analysis)\
\>", "Title",
 CellChangeTimes->{{3.399308987464324*^9, 3.399308997477577*^9}, {
   3.3996509147507887`*^9, 3.3996509168582067`*^9}, 3.4274817158062444`*^9, {
   3.427505828304313*^9, 3.427505832757467*^9}, {3.4275745555520296`*^9, 
   3.42757455564578*^9}, {3.427574731865658*^9, 3.4275747372563176`*^9}, {
   3.4294834587838097`*^9, 3.4294834590806885`*^9}, 3.430327560654002*^9, {
   3.430601265670842*^9, 3.430601266858365*^9}, 3.4311905217116194`*^9, 
   3.4318058743262105`*^9, 3.4322908055044465`*^9, 3.432910136263564*^9, {
   3.433259931559206*^9, 3.4332599434032593`*^9}, {3.433259974357177*^9, 
   3.4332599768259897`*^9}, {3.439677149771514*^9, 3.4396771505840187`*^9}, {
   3.523960219538739*^9, 3.523960220113739*^9}}],

Cell["\<\
Branton J. Campbell, BYU Physics & Astronomy, Winter 2010
R. Steven Turley, BYU Physics & Astronomy, Fall 2011\
\>", "Subtitle",
 CellChangeTimes->{{3.433259527908248*^9, 3.433259551315097*^9}, 
   3.442877770853633*^9, {3.471790437262633*^9, 3.4717904378720117`*^9}, {
   3.524861134187694*^9, 3.5248611476250377`*^9}}],

Cell["\<\
Complex numbers are essential to the mathematical analysis of physical \
systems.  Because the field of complex numbers is algebraically closed while \
the field of real numbers is not, we can't help running into them from time \
to time.  Loosely speaking, \"algebraically closed\" essentially means that \
real polynomial equations will always have complex solutions when no real \
solutions exist.  In this lab, we will explore the behavior of several \
well-known functions in the complex plane and their application to \
oscillatory phenomena.\
\>", "Text",
 CellChangeTimes->{{3.4303328171611757`*^9, 3.4303328617557817`*^9}, {
   3.430337158416401*^9, 3.430337162963363*^9}, {3.4303440447361155`*^9, 
   3.4303440608145494`*^9}, {3.430352154594947*^9, 3.430352177017253*^9}, 
   3.430497670206213*^9, {3.4306011277463193`*^9, 3.4306011281682024`*^9}, 
   3.430601271436578*^9, {3.4306013425004425`*^9, 3.430601366329025*^9}, {
   3.4307097552544365`*^9, 3.430709783676858*^9}, {3.4307694207016554`*^9, 
   3.43076964619036*^9}, {3.430769681566039*^9, 3.4307700168381014`*^9}, {
   3.4311197804732823`*^9, 3.431119796661093*^9}, {3.431190525414815*^9, 
   3.4311905257429466`*^9}, 3.4311905979787083`*^9, {3.4311907394970503`*^9, 
   3.431190742981492*^9}, {3.431492886761525*^9, 3.431492887223022*^9}, {
   3.431494062343462*^9, 3.431494337141776*^9}, {3.4317255415822144`*^9, 
   3.4317255520667906`*^9}, {3.4318058441225057`*^9, 3.431805844450637*^9}, {
   3.4318073279009933`*^9, 3.4318073289478884`*^9}, {3.4318785406526766`*^9, 
   3.431878608466479*^9}, {3.4322908285673895`*^9, 3.4322909571167326`*^9}, {
   3.4322922730482473`*^9, 3.432293150330716*^9}, {3.4329099693228593`*^9, 
   3.432909970526007*^9}, {3.4329102356092215`*^9, 3.4329102393905444`*^9}, {
   3.432910984811106*^9, 3.432911019280518*^9}, {3.4329110574843764`*^9, 
   3.4329111183292947`*^9}, {3.432911200955881*^9, 3.4329112138936296`*^9}, {
   3.4329118104050827`*^9, 3.43291181107697*^9}, {3.4329135996738105`*^9, 
   3.4329136611593657`*^9}, {3.4329142475925007`*^9, 3.432914473831219*^9}, 
   3.432916189082901*^9, 3.43291645930684*^9, {3.4329167501092978`*^9, 
   3.4329167720315933`*^9}, {3.4330158750885677`*^9, 3.433015875463575*^9}, {
   3.433072742352726*^9, 3.433073376817874*^9}}],

Cell[CellGroupData[{

Cell["Complex algebra (35 min)", "Section",
 CellChangeTimes->{{3.4306009820872726`*^9, 3.4306009986500907`*^9}, {
   3.430607504087493*^9, 3.4306075152908325`*^9}, {3.431182354054803*^9, 
   3.4311823567267294`*^9}, {3.4311825544336505`*^9, 3.431182554574278*^9}, {
   3.431190573165732*^9, 3.431190601072518*^9}, {3.431201043366756*^9, 
   3.431201044929286*^9}, 3.4314665256696043`*^9, 3.4314665763961973`*^9, 
   3.431466615222662*^9, 3.431488602552561*^9, {3.4318058304191175`*^9, 
   3.4318058361536026`*^9}, {3.431806408320838*^9, 3.431806410414628*^9}, {
   3.43180665273178*^9, 3.4318066534036684`*^9}, {3.4318077228617015`*^9, 
   3.431807724346105*^9}, {3.431808201011507*^9, 3.431808201183385*^9}, {
   3.431811172787314*^9, 3.4318111733341994`*^9}, {3.4318135733021526`*^9, 
   3.4318135734896564`*^9}, {3.431897525064046*^9, 3.431897525142172*^9}, 
   3.4319917298815885`*^9, 3.432072668283319*^9, {3.43229167834933*^9, 
   3.432291683161922*^9}, {3.4322920767788544`*^9, 3.4322920768413553`*^9}, {
   3.4324110366565547`*^9, 3.432411036828433*^9}, 3.432488565189156*^9, {
   3.432516046826768*^9, 3.432516069749083*^9}, 3.432516203673529*^9, 
   3.4325876102902927`*^9, {3.432587649744175*^9, 3.432587698635739*^9}, 
   3.432659693804842*^9, {3.4326644461611924`*^9, 3.4326644463174458`*^9}, {
   3.4329101771549745`*^9, 3.432910181076925*^9}, {3.432910213999432*^9, 
   3.432910216343227*^9}, {3.4329160468301697`*^9, 3.432916047830189*^9}, {
   3.432916726843226*^9, 3.432916730218291*^9}, {3.433081780106669*^9, 
   3.4330817803302298`*^9}, 3.433089522477521*^9, 3.43308968236663*^9, {
   3.4330909348163157`*^9, 3.433090934975607*^9}, {3.4330909799131927`*^9, 
   3.433090980408948*^9}, 3.4332003298553667`*^9, 3.433203638268185*^9}],

Cell[CellGroupData[{

Cell["(#1) Complex numbers (10 min)", "Subsection",
 CellChangeTimes->{{3.4329211263495703`*^9, 3.432921138224798*^9}, {
   3.4330121399699793`*^9, 3.4330121465794816`*^9}, {3.4330817403389797`*^9, 
   3.433081749760988*^9}, 3.433090931863811*^9, {3.433090982385178*^9, 
   3.433090983217084*^9}}],

Cell[TextData[{
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " uses a ",
 StyleBox[ButtonBox["capital \"",
  BaseStyle->"Link",
  ButtonData->"paclet://ref/I"],
  FontWeight->"Bold"],
 StyleBox[ButtonBox["I",
  BaseStyle->"Link",
  ButtonData->"paclet://ref/I"],
  FontFamily->"Courier",
  FontSize->14],
 StyleBox[ButtonBox["\"",
  BaseStyle->"Link",
  ButtonData->"paclet://ref/I"],
  FontWeight->"Bold"],
 " to represent the imaginary number ",
 Cell[BoxData[
  FormBox[
   SqrtBox[
    RowBox[{"-", "1"}]], TraditionalForm]]],
 "in standard input.  In descriptive cells like this one, however, we will \
follow standard conventions by using a lower-case italicized \"",
 StyleBox["i ",
  FontSlant->"Italic"],
 "\".  \n\n(a) In the cell below, we define the complex number, ",
 StyleBox["zzz",
  FontSlant->"Italic"],
 " = 1 + ",
 StyleBox["i , ",
  FontSlant->"Italic"],
 "and calcluate its real part (",
 StyleBox[ButtonBox["Re",
  BaseStyle->"Link",
  ButtonData->"paclet://ref/Re"],
  FontWeight->"Bold"],
 "), imaginary part (",
 StyleBox[ButtonBox["Im",
  BaseStyle->"Link",
  ButtonData->"paclet://ref/Im"],
  FontWeight->"Bold"],
 "), absolute value (",
 StyleBox[ButtonBox["Abs",
  BaseStyle->"Link",
  ButtonData->"paclet://ref/Abs"],
  FontWeight->"Bold"],
 "), phase in radians (",
 StyleBox[ButtonBox["Arg",
  BaseStyle->"Link",
  ButtonData->"paclet://ref/Arg"],
  FontWeight->"Bold"],
 "), normalized value (",
 StyleBox[ButtonBox["Sign",
  BaseStyle->"Link",
  ButtonData->"paclet://ref/Sign"],
  FontWeight->"Bold"],
 ") and complex conjugate (",
 StyleBox[ButtonBox["Conjugate",
  BaseStyle->"Link",
  ButtonData->"paclet://ref/Conjugate"],
  FontWeight->"Bold"],
 ").  Make sure that you understand the output, and then explain it to your \
TA."
}], "Text",
 CellChangeTimes->{{3.433074213475914*^9, 3.433074249626502*^9}, {
  3.4330743880551043`*^9, 3.433074395390542*^9}, {3.433074437480103*^9, 
  3.433074446927741*^9}, {3.433074524069641*^9, 3.433074555124158*^9}, {
  3.433074589542066*^9, 3.4330746689909563`*^9}, {3.433074708251258*^9, 
  3.433074958737583*^9}, {3.433075038389904*^9, 3.433075322723749*^9}, {
  3.433075423933835*^9, 3.433075484728795*^9}, {3.4330895461697206`*^9, 
  3.4330895985277433`*^9}, {3.44287171198079*^9, 3.4428717395585623`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"zzz", "=", 
  RowBox[{"1", "+", "I"}]}], "\[IndentingNewLine]", 
 RowBox[{"Re", "[", "zzz", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Im", "[", "zzz", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Abs", "[", "zzz", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Arg", "[", "zzz", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Sign", "[", "zzz", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Conjugate", "[", "zzz", "]"}]}], "Input",
 CellChangeTimes->{{3.4428716705281963`*^9, 3.442871671465684*^9}, {
  3.529241436694379*^9, 3.529241466386348*^9}}],

Cell[BoxData[
 RowBox[{"1", "+", "\[ImaginaryI]"}]], "Output",
 CellChangeTimes->{{3.5292414414108505`*^9, 3.529241466852394*^9}, 
   3.5292515699267063`*^9}],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{{3.5292414414108505`*^9, 3.529241466852394*^9}, 
   3.5292515699267063`*^9}],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{{3.5292414414108505`*^9, 3.529241466852394*^9}, 
   3.5292515699367065`*^9}],

Cell[BoxData[
 SqrtBox["2"]], "Output",
 CellChangeTimes->{{3.5292414414108505`*^9, 3.529241466852394*^9}, 
   3.529251569946706*^9}],

Cell[BoxData[
 FractionBox["\[Pi]", "4"]], "Output",
 CellChangeTimes->{{3.5292414414108505`*^9, 3.529241466852394*^9}, 
   3.529251569946706*^9}],

Cell[BoxData[
 FractionBox[
  RowBox[{"1", "+", "\[ImaginaryI]"}], 
  SqrtBox["2"]]], "Output",
 CellChangeTimes->{{3.5292414414108505`*^9, 3.529241466852394*^9}, 
   3.529251569946706*^9}],

Cell[BoxData[
 RowBox[{"1", "-", "\[ImaginaryI]"}]], "Output",
 CellChangeTimes->{{3.5292414414108505`*^9, 3.529241466852394*^9}, 
   3.529251569946706*^9}]
}, Open  ]],

Cell[TextData[{
 "\n(b)  Because ",
 StyleBox["z",
  FontSlant->"Italic"],
 " = ",
 StyleBox["x",
  FontSlant->"Italic"],
 " + ",
 StyleBox["i y",
  FontSlant->"Italic"],
 "  is a number in the complex plane, it can also be represented as a point {",
 StyleBox["x",
  FontSlant->"Italic"],
 ", ",
 StyleBox["y",
  FontSlant->"Italic"],
 "} in the traditional ",
 StyleBox["xy",
  FontSlant->"Italic"],
 " plane.  With this analogy in hand, we often use the traditional ",
 StyleBox["xy",
  FontSlant->"Italic"],
 " plane to represent the complex plane, and refer to the ",
 StyleBox["x",
  FontSlant->"Italic"],
 " and ",
 StyleBox["y",
  FontSlant->"Italic"],
 " axes as the real and imaginary axes, respectively.  In the cell below, \
create a function ",
 StyleBox["comp2pair[z_]",
  FontWeight->"Bold"],
 " that converts a complex number ",
 StyleBox["z",
  FontSlant->"Italic"],
 " into the corresponding {",
 StyleBox["x",
  FontSlant->"Italic"],
 ", ",
 StyleBox["y",
  FontSlant->"Italic"],
 "} point, and demonstrate its use."
}], "Text",
 CellChangeTimes->{{3.4330760804400883`*^9, 3.433076082216835*^9}, {
   3.433076197620494*^9, 3.43307666088288*^9}, {3.433076712726297*^9, 
   3.433076783358365*^9}, {3.433089611565016*^9, 3.4330896469700947`*^9}, 
   3.442871761792653*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"comp2pair", "[", "z_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"x", ",", "y"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"x", " ", "=", " ", 
      RowBox[{"Re", "[", "z", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"y", " ", "=", " ", 
      RowBox[{"Im", "[", "z", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"x", ",", "y"}], "}"}]}]}], "\[IndentingNewLine]", 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"comp2pair", "[", "zzz", "]"}]}], "Input",
 CellChangeTimes->{{3.4329211402873373`*^9, 3.4329215971242332`*^9}, {
   3.4330007149245167`*^9, 3.433000994179878*^9}, {3.4330734204660673`*^9, 
   3.433073423023419*^9}, {3.433073458699136*^9, 3.4330735482724247`*^9}, {
   3.433073816499959*^9, 3.4330738588278837`*^9}, {3.433073900839611*^9, 
   3.43307392468605*^9}, {3.4330739591525784`*^9, 3.4330741244237423`*^9}, 
   3.433076187264431*^9, {3.433076671124091*^9, 3.433076704868967*^9}, {
   3.4330767946032476`*^9, 3.433076805736382*^9}, 3.4332026685246105`*^9, {
   3.5292414995546637`*^9, 3.5292415962263308`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "1"}], "}"}]], "Output",
 CellChangeTimes->{3.5292415967383814`*^9, 3.5292515704966893`*^9}]
}, Open  ]],

Cell[TextData[{
 "\n(c) Use ",
 StyleBox[ButtonBox["RandomComplex",
  BaseStyle->"Link",
  ButtonData->"paclet://ref/RandomComplex"],
  FontWeight->"Bold"],
 " to generate 100 random complex numbers within the rectangle defined by \
corners at -1-",
 StyleBox["i",
  FontSlant->"Italic"],
 "  and 1+",
 StyleBox["i",
  FontSlant->"Italic"],
 " .  Use your comp2pair function above to convert them to ",
 StyleBox["xy",
  FontSlant->"Italic"],
 " points and ",
 StyleBox["ListPlot",
  FontWeight->"Bold"],
 " them using ",
 StyleBox["AspectRatio \[Rule] 1",
  FontWeight->"Bold"],
 "."
}], "Text",
 CellChangeTimes->{{3.433075643693678*^9, 3.433075831781397*^9}, {
   3.433075896030319*^9, 3.4330759305883827`*^9}, {3.433076000105831*^9, 
   3.433076037535781*^9}, {3.4330760924341707`*^9, 3.433076092858045*^9}, 
   3.442875162333538*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"zz", " ", "=", " ", 
   RowBox[{"RandomComplex", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "1"}], "-", "I"}], ",", 
       RowBox[{"1", "+", "I"}]}], "}"}], ",", "100"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"xy", " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"comp2pair", "[", "#", "]"}], "&"}], "/@", "zz"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", 
  RowBox[{"xy", ",", 
   RowBox[{"AspectRatio", "\[Rule]", "1"}]}], 
  "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.4330755008785057`*^9, 3.433075508298902*^9}, {
   3.4330755537085743`*^9, 3.43307562998597*^9}, {3.433075949991221*^9, 
   3.433075988183559*^9}, 3.4332026761810565`*^9, {3.5292416222099285`*^9, 
   3.529241728355542*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, 
   {Hue[0.67, 0.6, 0.6], PointBox[CompressedData["
1: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
/r4ouA7ohAOPf86E/wFIVXn7
     "]]}, {}},
  AspectRatio->1,
  Axes->True,
  AxesOrigin->{0, 0},
  PlotRange->{{-0.9697446163090997, 0.9991060198802337}, {-0.9863541803701024,
    0.9989866959714822}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{
  3.529241639078615*^9, {3.5292416732780347`*^9, 3.5292417289165983`*^9}, 
   3.5292515710266733`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["(#2) Euler formula (10 min)", "Subsection",
 CellChangeTimes->{{3.432920137221204*^9, 3.4329201397056265`*^9}, {
  3.433012148688897*^9, 3.4330121514702005`*^9}, {3.4330817523852673`*^9, 
  3.433081761401729*^9}}],

Cell[TextData[{
 "(a) Use ",
 StyleBox[ButtonBox["TrigToExp",
  BaseStyle->"Link",
  ButtonData->"paclet://ref/TrigToExp"],
  FontWeight->"Bold"],
 " to convert hyperbolic trig functions cosh(x) and sinh(x) into exponential \
form.  These should look familiar.  Then use ",
 StyleBox[ButtonBox["ExpToTrig",
  BaseStyle->"Link",
  ButtonData->"paclet://ref/ExpToTrig"],
  FontWeight->"Bold"],
 " to bring them back to trigonometric form."
}], "Text",
 CellChangeTimes->{{3.4303328171611757`*^9, 3.4303328617557817`*^9}, {
   3.430337158416401*^9, 3.430337162963363*^9}, {3.4303440447361155`*^9, 
   3.4303440608145494`*^9}, {3.430352154594947*^9, 3.430352177017253*^9}, 
   3.430497670206213*^9, {3.4306011277463193`*^9, 3.4306011281682024`*^9}, 
   3.430601271436578*^9, {3.4306013425004425`*^9, 3.430601366329025*^9}, {
   3.4307097552544365`*^9, 3.430709783676858*^9}, {3.4307694207016554`*^9, 
   3.43076964619036*^9}, {3.430769681566039*^9, 3.4307700168381014`*^9}, {
   3.4311197804732823`*^9, 3.431119796661093*^9}, {3.431190525414815*^9, 
   3.4311905257429466`*^9}, 3.4311905979787083`*^9, {3.4311907394970503`*^9, 
   3.431190742981492*^9}, {3.431492886761525*^9, 3.431492887223022*^9}, {
   3.431494062343462*^9, 3.431494337141776*^9}, {3.4317255415822144`*^9, 
   3.4317255520667906`*^9}, {3.4318058441225057`*^9, 3.431805844450637*^9}, {
   3.4318073279009933`*^9, 3.4318073289478884`*^9}, {3.4318785406526766`*^9, 
   3.431878608466479*^9}, {3.4322908285673895`*^9, 3.4322909571167326`*^9}, {
   3.4322922730482473`*^9, 3.432293150330716*^9}, {3.4329099693228593`*^9, 
   3.432909970526007*^9}, {3.4329102356092215`*^9, 3.4329102393905444`*^9}, {
   3.432910984811106*^9, 3.432911019280518*^9}, {3.4329110574843764`*^9, 
   3.4329111183292947`*^9}, {3.432911200955881*^9, 3.4329112138936296`*^9}, {
   3.4329118104050827`*^9, 3.43291181107697*^9}, {3.4329135996738105`*^9, 
   3.4329136611593657`*^9}, {3.4329142475925007`*^9, 3.432914473831219*^9}, 
   3.432916189082901*^9, 3.43291645930684*^9, {3.432916745640462*^9, 
   3.4329167462810993`*^9}, 3.432918455923299*^9, {3.4329200177189093`*^9, 
   3.4329200295472617`*^9}, {3.4329201734875255`*^9, 3.432920174690674*^9}, {
   3.4330771548679743`*^9, 3.433077155785262*^9}, {3.433077225749404*^9, 
   3.433077266621011*^9}, {3.4330774963861027`*^9, 3.433077496386738*^9}, {
   3.433077544376306*^9, 3.433077546645076*^9}, {3.4330776410949593`*^9, 
   3.4330776410955667`*^9}, {3.4330778044380903`*^9, 
   3.4330778207405357`*^9}, {3.433077931529765*^9, 3.4330780259910383`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"exp", " ", "=", " ", 
  RowBox[{"TrigToExp", "[", 
   RowBox[{"Cosh", "[", "x", "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"exp2", " ", "=", 
  RowBox[{"TrigToExp", "[", 
   RowBox[{"Sinh", "[", "x", "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"ExpToTrig", "[", "exp", "]"}], "\[IndentingNewLine]", 
 RowBox[{"ExpToTrig", "[", "exp2", "]"}]}], "Input",
 CellChangeTimes->{{3.433077180268805*^9, 3.433077218380033*^9}, {
   3.433077950529808*^9, 3.433077951521818*^9}, {3.433078041468444*^9, 
   3.433078061477008*^9}, 3.4332026933064947`*^9, {3.5292417434260488`*^9, 
   3.529241787779484*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox[
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", "x"}]], "2"], "+", 
  FractionBox[
   SuperscriptBox["\[ExponentialE]", "x"], "2"]}]], "Output",
 CellChangeTimes->{{3.529241767792485*^9, 3.52924178814552*^9}, 
   3.5292515714366612`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox[
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"-", "x"}]], "2"]}], "+", 
  FractionBox[
   SuperscriptBox["\[ExponentialE]", "x"], "2"]}]], "Output",
 CellChangeTimes->{{3.529241767792485*^9, 3.52924178814552*^9}, 
   3.529251571446661*^9}],

Cell[BoxData[
 RowBox[{"Cosh", "[", "x", "]"}]], "Output",
 CellChangeTimes->{{3.529241767792485*^9, 3.52924178814552*^9}, 
   3.529251571446661*^9}],

Cell[BoxData[
 RowBox[{"Sinh", "[", "x", "]"}]], "Output",
 CellChangeTimes->{{3.529241767792485*^9, 3.52924178814552*^9}, 
   3.529251571446661*^9}]
}, Open  ]],

Cell[TextData[{
 "\n(b) Use ",
 StyleBox[ButtonBox["ExpToTrig",
  BaseStyle->"Link",
  ButtonData->"paclet://ref/ExpToTrig"],
  FontWeight->"Bold"],
 " to convert exponential function ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["\[ExponentialE]", "x"], TraditionalForm]]],
 " into trigonometric form."
}], "Text",
 CellChangeTimes->{{3.433078087550971*^9, 3.433078152878661*^9}, {
  3.433078196682399*^9, 3.433078220080944*^9}, {3.433086623011244*^9, 
  3.433086634537491*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ExpToTrig", "[", 
  RowBox[{"Exp", "[", "x", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.4329201754250627`*^9, 3.432920300864971*^9}, {
   3.432920331271805*^9, 3.432920339193832*^9}, {3.433078173889935*^9, 
   3.433078174007903*^9}, {3.43308661479539*^9, 3.433086614937471*^9}, {
   3.4332005961434336`*^9, 3.433200602362343*^9}, 3.433202696384699*^9, {
   3.529241794001106*^9, 3.5292418017298784`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Cosh", "[", "x", "]"}], "+", 
  RowBox[{"Sinh", "[", "x", "]"}]}]], "Output",
 CellChangeTimes->{3.529241802001906*^9, 3.529251571836649*^9}]
}, Open  ]],

Cell[TextData[{
 "\n(c) Use ",
 StyleBox[ButtonBox["ExpToTrig",
  BaseStyle->"Link",
  ButtonData->"paclet://ref/ExpToTrig"],
  FontWeight->"Bold"],
 " to convert the exponential function ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{" ", 
     RowBox[{"i", " ", "x"}]}]], TraditionalForm]]],
 " into trigonometric form.  This identity, often called ",
 StyleBox[ButtonBox["Euler's formula",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://en.wikipedia.org/wiki/Euler's_formula"], None}],
  FontWeight->"Bold",
  FontSlant->"Italic"],
 ", provides a geometric link between the complex plane and the unit circle.  \
Euler's formula is the most important concept that you will encounter in this \
lab -- commit it to memory if you haven't already done so."
}], "Text",
 CellChangeTimes->{{3.433078087550971*^9, 3.433078152878661*^9}, {
  3.433078196682399*^9, 3.433078290627386*^9}, {3.43307836862392*^9, 
  3.43307851697832*^9}, {3.43307866483902*^9, 3.433078858468082*^9}, {
  3.433200615800187*^9, 3.4332006291442785`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ExpToTrig", "[", 
  RowBox[{"Exp", "[", 
   RowBox[{"I", "*", "x"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.4329201754250627`*^9, 3.432920300864971*^9}, {
   3.432920331271805*^9, 3.432920339193832*^9}, {3.433078173889935*^9, 
   3.433078174007903*^9}, {3.4330782552350473`*^9, 3.4330782554742823`*^9}, 
   3.433202700369176*^9, {3.5292418083215375`*^9, 3.529241817027408*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Cos", "[", "x", "]"}], "+", 
  RowBox[{"\[ImaginaryI]", " ", 
   RowBox[{"Sin", "[", "x", "]"}]}]}]], "Output",
 CellChangeTimes->{3.529241817374443*^9, 3.529251572316635*^9}]
}, Open  ]],

Cell[TextData[{
 "\n(d) Use ",
 StyleBox[ButtonBox["TrigToExp",
  BaseStyle->"Link",
  ButtonData->"paclet://ref/TrigToExp"],
  FontWeight->"Bold"],
 " to convert sin(x) and cos(x) into exponential form.  You should also \
commit these identities to memory."
}], "Text",
 CellChangeTimes->{{3.4303328171611757`*^9, 3.4303328617557817`*^9}, {
   3.430337158416401*^9, 3.430337162963363*^9}, {3.4303440447361155`*^9, 
   3.4303440608145494`*^9}, {3.430352154594947*^9, 3.430352177017253*^9}, 
   3.430497670206213*^9, {3.4306011277463193`*^9, 3.4306011281682024`*^9}, 
   3.430601271436578*^9, {3.4306013425004425`*^9, 3.430601366329025*^9}, {
   3.4307097552544365`*^9, 3.430709783676858*^9}, {3.4307694207016554`*^9, 
   3.43076964619036*^9}, {3.430769681566039*^9, 3.4307700168381014`*^9}, {
   3.4311197804732823`*^9, 3.431119796661093*^9}, {3.431190525414815*^9, 
   3.4311905257429466`*^9}, 3.4311905979787083`*^9, {3.4311907394970503`*^9, 
   3.431190742981492*^9}, {3.431492886761525*^9, 3.431492887223022*^9}, {
   3.431494062343462*^9, 3.431494337141776*^9}, {3.4317255415822144`*^9, 
   3.4317255520667906`*^9}, {3.4318058441225057`*^9, 3.431805844450637*^9}, {
   3.4318073279009933`*^9, 3.4318073289478884`*^9}, {3.4318785406526766`*^9, 
   3.431878608466479*^9}, {3.4322908285673895`*^9, 3.4322909571167326`*^9}, {
   3.4322922730482473`*^9, 3.432293150330716*^9}, {3.4329099693228593`*^9, 
   3.432909970526007*^9}, {3.4329102356092215`*^9, 3.4329102393905444`*^9}, {
   3.432910984811106*^9, 3.432911019280518*^9}, {3.4329110574843764`*^9, 
   3.4329111183292947`*^9}, {3.432911200955881*^9, 3.4329112138936296`*^9}, {
   3.4329118104050827`*^9, 3.43291181107697*^9}, {3.4329135996738105`*^9, 
   3.4329136611593657`*^9}, {3.4329142475925007`*^9, 3.432914473831219*^9}, 
   3.432916189082901*^9, 3.43291645930684*^9, {3.432916745640462*^9, 
   3.4329167462810993`*^9}, 3.432918455923299*^9, {3.4329200177189093`*^9, 
   3.4329200295472617`*^9}, {3.4329201734875255`*^9, 3.432920174690674*^9}, {
   3.4330771548679743`*^9, 3.433077155785262*^9}, {3.433077225749404*^9, 
   3.433077266621011*^9}, {3.4330774963861027`*^9, 3.433077496386738*^9}, {
   3.433077544376306*^9, 3.433077546645076*^9}, {3.4330776410949593`*^9, 
   3.4330776410955667`*^9}, {3.4330778044380903`*^9, 
   3.4330778207405357`*^9}, {3.433077931529765*^9, 3.4330780259910383`*^9}, {
   3.433086649532115*^9, 3.433086710875428*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"TrigToExp", "[", 
  RowBox[{"Sin", "[", "x", "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"TrigToExp", "[", 
  RowBox[{"Cos", "[", "x", "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.433077180268805*^9, 3.433077218380033*^9}, {
   3.433077950529808*^9, 3.433077951521818*^9}, {3.433078041468444*^9, 
   3.433078061477008*^9}, {3.43308667139784*^9, 3.433086694470402*^9}, 
   3.4332027037442617`*^9, {3.5292418324019456`*^9, 3.529241863779083*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   FractionBox["1", "2"], " ", "\[ImaginaryI]", " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"-", "\[ImaginaryI]"}], " ", "x"}]]}], "-", 
  RowBox[{
   FractionBox["1", "2"], " ", "\[ImaginaryI]", " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"\[ImaginaryI]", " ", "x"}]]}]}]], "Output",
 CellChangeTimes->{{3.52924184635034*^9, 3.529241864002105*^9}, 
   3.5292515727566214`*^9}],

Cell[BoxData[
 RowBox[{
  FractionBox[
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"-", "\[ImaginaryI]"}], " ", "x"}]], "2"], "+", 
  FractionBox[
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"\[ImaginaryI]", " ", "x"}]], "2"]}]], "Output",
 CellChangeTimes->{{3.52924184635034*^9, 3.529241864002105*^9}, 
   3.5292515727566214`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["(#3) The unit circle (5 min)", "Subsection",
 CellChangeTimes->{{3.4322913386865587`*^9, 3.432291347014843*^9}, {
   3.4322914131723633`*^9, 3.4322914151880274`*^9}, 3.432470192010652*^9, {
   3.432471282219102*^9, 3.432471283576335*^9}, 3.432480755039879*^9, {
   3.432480793555401*^9, 3.4324808120161247`*^9}, 3.432480854859672*^9, {
   3.43248165598464*^9, 3.4324816571925917`*^9}, 3.4325629132540216`*^9, 
   3.4325877117453656`*^9, {3.4325880147980595`*^9, 3.432588014938687*^9}, 
   3.4326596846686373`*^9, {3.432910168545434*^9, 3.4329101705454726`*^9}, {
   3.432916829188941*^9, 3.4329168620176964`*^9}, 3.4329169445661564`*^9, {
   3.4330203714717712`*^9, 3.4330203752843447`*^9}, 3.4331659932031183`*^9, 
   3.433200326339652*^9, 3.433203493951991*^9, 3.433203586610613*^9}],

Cell[TextData[{
 "In the sciences, we will often use ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"i", " ", "\[Omega]", " ", "t"}]], TraditionalForm]]],
 " to represent a time-oscillating quantity, though it is implicitly \
understood that only the real part of the expression is physical.  The \
expression ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"i", " ", "\[Theta]"}]], TraditionalForm]]],
 " is often referred to as a complex sinusoid.  \n\nEvaluate the cell below, \
which animates the arrow pointing towards ",
 StyleBox["z",
  FontSlant->"Italic"],
 " = ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"i", " ", "\[Theta]"}]], TraditionalForm]]],
 " in the complex plane as \[Theta] is varied between 0 and 2\[Pi].  The real \
and imaginary components of ",
 StyleBox["z",
  FontSlant->"Italic"],
 " are also animated as large red and blue dots, respectively.  Explain the \
various features of the graphic to your TA."
}], "Text",
 CellChangeTimes->{{3.433104339387271*^9, 3.433104362777733*^9}, {
  3.4331044015730343`*^9, 3.433104434132139*^9}, {3.433104464837641*^9, 
  3.4331049174681787`*^9}, {3.433104951057165*^9, 3.4331049771819897`*^9}, {
  3.433158206239605*^9, 3.433158215545282*^9}, {3.4332018459879293`*^9, 
  3.4332018778481197`*^9}, {3.433203355682826*^9, 3.433203376464608*^9}, {
  3.433203450278998*^9, 3.4332035682976437`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"g", "[", "th_", "]"}], " ", ":=", 
   RowBox[{"Exp", "[", 
    RowBox[{"I", "  ", "th"}], "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"objects", "[", "th_", "]"}], " ", ":=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Circle", "[", "]"}], ",", 
     RowBox[{"Arrowheads", "[", "0.1", "]"}], ",", "Thick", ",", 
     RowBox[{"Arrow", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Cos", "[", "th", "]"}], ",", 
          RowBox[{"Sin", "[", "th", "]"}]}], "}"}]}], "}"}], "]"}], ",", " ", 
     RowBox[{"PointSize", "[", "0.05", "]"}], ",", "Red", ",", 
     RowBox[{"Point", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Cos", "[", "th", "]"}], ",", "0"}], "}"}], "]"}], ",", " ", 
     "Blue", ",", 
     RowBox[{"Point", "[", 
      RowBox[{"{", 
       RowBox[{"0", ",", 
        RowBox[{"Sin", "[", "th", "]"}]}], "}"}], "]"}]}], "}"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Manipulate", "[", " ", 
  RowBox[{
   RowBox[{"Graphics", "[", 
    RowBox[{
     RowBox[{"objects", "[", "t", "]"}], " ", ",", 
     RowBox[{"Axes", "\[Rule]", "True"}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<x\>\"", ",", "\"\<y\>\""}], "}"}]}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", 
     RowBox[{"2", "Pi"}]}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{
  3.4329168415485535`*^9, {3.433026735750213*^9, 3.43302681368921*^9}, {
   3.4330269104566927`*^9, 3.433027039287291*^9}, {3.43302707203792*^9, 
   3.4330271913683357`*^9}, {3.433027237197341*^9, 3.433027741691402*^9}, {
   3.4330277757858067`*^9, 3.4330277939267797`*^9}, {3.4330279711020565`*^9, 
   3.433028222388131*^9}, {3.433028253591855*^9, 3.4330282576075573`*^9}, {
   3.43302828951442*^9, 3.4330283863131533`*^9}, {3.433028426157668*^9, 
   3.433028467033453*^9}, {3.433028532815966*^9, 3.433028602082921*^9}, {
   3.433028644958744*^9, 3.433028650615103*^9}, {3.4330287005066857`*^9, 
   3.4330290709825487`*^9}, {3.43302912520234*^9, 3.4330291428745537`*^9}, {
   3.433070243601173*^9, 3.433070314464368*^9}, {3.433104367550991*^9, 
   3.433104393454063*^9}, 3.433201802721196*^9, {3.433533587891034*^9, 
   3.433533594234744*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`t$$ = 0., Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`t$$], 0, 2 Pi}}, Typeset`size$$ = {
    360., {179., 182.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`t$11112$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`t$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`t$$, $CellContext`t$11112$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Graphics[
        $CellContext`objects[$CellContext`t$$], Axes -> True, 
        AxesLabel -> {"x", "y"}], 
      "Specifications" :> {{$CellContext`t$$, 0, 2 Pi}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{409., {224., 229.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.529241899804685*^9, 3.5292515733566036`*^9, 
  3.529755086444953*^9, 3.5297579498110495`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["(#4) Complex algebra (5 min)", "Subsection",
 CellChangeTimes->{{3.4329201511433463`*^9, 3.4329201627529445`*^9}, {
  3.433012149470162*^9, 3.43301215326711*^9}, {3.433079302779764*^9, 
  3.4330793056729403`*^9}, {3.4330817641297197`*^9, 3.4330817659857283`*^9}, {
  3.4332035885169115`*^9, 3.4332035887044163`*^9}}],

Cell[TextData[{
 "(a)  Euler's formula makes it possible to express any complex number in \
terms of a magnitude and a phase.  Use ",
 StyleBox["Exp",
  FontWeight->"Bold"],
 ", ",
 StyleBox["Abs",
  FontWeight->"Bold"],
 " and ",
 StyleBox["Arg",
  FontWeight->"Bold"],
 " to define a function ",
 StyleBox["convexp[z_]",
  FontWeight->"Bold"],
 " that converts a complex number ",
 StyleBox["z",
  FontSlant->"Italic"],
 " into exponential form.  Try your new function to show that 1+",
 StyleBox["i",
  FontSlant->"Italic"],
 "  = ",
 Cell[BoxData[
  RowBox[{
   SqrtBox["2"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    FractionBox[
     RowBox[{"\[ImaginaryI]", " ", "\[Pi]"}], "4"]]}]],
  CellChangeTimes->{3.433200675223583*^9}],
 "."
}], "Text",
 CellChangeTimes->{{3.433078882974042*^9, 3.43307888589203*^9}, {
  3.433082036852902*^9, 3.433082086667053*^9}, {3.4330828011772003`*^9, 
  3.433083067951339*^9}, {3.433083101584722*^9, 3.433083111377016*^9}, {
  3.4330831461893883`*^9, 3.43308314625975*^9}, {3.433083614289933*^9, 
  3.433083674416317*^9}, {3.433083709100815*^9, 3.43308370910152*^9}, {
  3.4332006606138344`*^9, 3.433200740959641*^9}, {3.433202724916679*^9, 
  3.4332027254635677`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"convexp", "[", "z_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"r", ",", "\[Theta]"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"r", " ", "=", " ", 
      RowBox[{"Abs", "[", "z", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[Theta]", " ", "=", " ", 
      RowBox[{"Arg", "[", "z", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"r", "*", 
      RowBox[{"Exp", "[", 
       RowBox[{"I", "*", "\[Theta]"}], "]"}]}]}]}], "\[IndentingNewLine]", 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"convexp", "[", 
  RowBox[{"1", "+", "I"}], "]"}]}], "Input",
 CellChangeTimes->{
  3.433082095766203*^9, {3.4330825447223663`*^9, 3.433082792218308*^9}, {
   3.433083072433079*^9, 3.433083133946705*^9}, {3.4330837425414658`*^9, 
   3.433083753765985*^9}, {3.4332007298499813`*^9, 3.433200730178115*^9}, {
   3.4332027295886736`*^9, 3.4332027376045036`*^9}, {3.5292419638890924`*^9, 
   3.5292420783695397`*^9}}],

Cell[BoxData[
 RowBox[{
  SqrtBox["2"], " ", 
  SuperscriptBox["\[ExponentialE]", 
   FractionBox[
    RowBox[{"\[ImaginaryI]", " ", "\[Pi]"}], "4"]]}]], "Output",
 CellChangeTimes->{
  3.5292420788175845`*^9, {3.529251564536868*^9, 3.529251573576597*^9}}]
}, Open  ]],

Cell[TextData[{
 "\n(b) In the cell below, we use the exponential form to define two complex \
numbers, ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["z", "1"], TraditionalForm]]],
 " and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["z", "2"], TraditionalForm]]],
 ".  Evaluate the cell to see how their magnitudes and phases combine under \
multiplication and division.  Explain the output to your TA.  Observe that ",
 StyleBox["ComplexExpand",
  FontWeight->"Bold"],
 " separates a complex expression into overall real and imaginary parts by \
assuming that all of the variables in the expression are real numbers.  This \
is a very useful trick -- remember it."
}], "Text",
 CellChangeTimes->{{3.4330821012263308`*^9, 3.433082151932662*^9}, {
  3.4330831577247677`*^9, 3.433083338935546*^9}, {3.433083783285644*^9, 
  3.433083862990687*^9}, {3.433091048558035*^9, 3.4330910574366093`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"z1", " ", "=", " ", 
    RowBox[{
     SubscriptBox["r", "1"], "*", 
     RowBox[{"Exp", "[", 
      RowBox[{"I", " ", 
       SubscriptBox["\[Phi]", "1"]}], "]"}]}]}], ";", " ", 
   RowBox[{"z2", " ", "=", " ", 
    RowBox[{
     SubscriptBox["r", "2"], "*", 
     RowBox[{"Exp", "[", 
      RowBox[{"I", " ", 
       SubscriptBox["\[Phi]", "2"]}], "]"}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"z1", "*", "z2"}], "//", "Simplify"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"z1", "*", "z2"}], "//", "ComplexExpand"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"z1", "/", "z2"}], "//", "Simplify"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"z1", "/", "z2"}], "//", "ComplexExpand"}]}], "Input",
 CellChangeTimes->{{3.432919490521288*^9, 3.4329195593038588`*^9}, {
  3.432919621226922*^9, 3.4329197652765627`*^9}, {3.432920734576423*^9, 
  3.43292082946887*^9}, {3.43292163260929*^9, 3.4329216405469427`*^9}, {
  3.433082161937335*^9, 3.433082166917935*^9}, {3.4330821971232843`*^9, 
  3.433082408453038*^9}, {3.4330825256897917`*^9, 3.433082529848185*^9}, {
  3.4330833605324097`*^9, 3.433083412750367*^9}, {3.433083890776697*^9, 
  3.433083897896113*^9}, {3.4330861690378437`*^9, 3.4330861765332403`*^9}, {
  3.433086209532446*^9, 3.433086210181573*^9}, {3.442872146695242*^9, 
  3.442872163742008*^9}}],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{"\[ImaginaryI]", " ", 
    RowBox[{"(", 
     RowBox[{
      SubscriptBox["\[Phi]", "1"], "+", 
      SubscriptBox["\[Phi]", "2"]}], ")"}]}]], " ", 
  SubscriptBox["r", "1"], " ", 
  SubscriptBox["r", "2"]}]], "Output",
 CellChangeTimes->{
  3.5292421201807203`*^9, {3.5292515650668526`*^9, 3.529251573926586*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Cos", "[", 
    RowBox[{
     SubscriptBox["\[Phi]", "1"], "+", 
     SubscriptBox["\[Phi]", "2"]}], "]"}], " ", 
   SubscriptBox["r", "1"], " ", 
   SubscriptBox["r", "2"]}], "+", 
  RowBox[{"\[ImaginaryI]", " ", 
   RowBox[{"Sin", "[", 
    RowBox[{
     SubscriptBox["\[Phi]", "1"], "+", 
     SubscriptBox["\[Phi]", "2"]}], "]"}], " ", 
   SubscriptBox["r", "1"], " ", 
   SubscriptBox["r", "2"]}]}]], "Output",
 CellChangeTimes->{
  3.5292421201807203`*^9, {3.5292515650668526`*^9, 3.529251573926586*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"\[ImaginaryI]", " ", 
     RowBox[{"(", 
      RowBox[{
       SubscriptBox["\[Phi]", "1"], "-", 
       SubscriptBox["\[Phi]", "2"]}], ")"}]}]], " ", 
   SubscriptBox["r", "1"]}], 
  SubscriptBox["r", "2"]]], "Output",
 CellChangeTimes->{
  3.5292421201807203`*^9, {3.5292515650668526`*^9, 3.529251573926586*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{
    RowBox[{"Cos", "[", 
     RowBox[{
      SubscriptBox["\[Phi]", "1"], "-", 
      SubscriptBox["\[Phi]", "2"]}], "]"}], " ", 
    SubscriptBox["r", "1"]}], 
   SubscriptBox["r", "2"]], "+", 
  FractionBox[
   RowBox[{"\[ImaginaryI]", " ", 
    RowBox[{"Sin", "[", 
     RowBox[{
      SubscriptBox["\[Phi]", "1"], "-", 
      SubscriptBox["\[Phi]", "2"]}], "]"}], " ", 
    SubscriptBox["r", "1"]}], 
   SubscriptBox["r", "2"]]}]], "Output",
 CellChangeTimes->{
  3.5292421201807203`*^9, {3.5292515650668526`*^9, 3.529251573926586*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["(#5) Complex roots (5 min)", "Subsection",
 CellChangeTimes->{{3.4329197984646997`*^9, 3.4329198006209917`*^9}, {
   3.4330121501576753`*^9, 3.4330121546577616`*^9}, {3.433081769121841*^9, 
   3.43308177328174*^9}, 3.433089520167234*^9, {3.433203590407585*^9, 
   3.4332035906888423`*^9}}],

Cell[TextData[{
 "(a) In the cell below, we use ",
 StyleBox["Solve",
  FontWeight->"Bold"],
 " to find the two square roots of -1.  Modify the equation to find the 3 \
cube roots of ",
 StyleBox["i",
  FontSlant->"Italic"],
 ".  Then manually cube each root to make sure you get ",
 StyleBox["i",
  FontSlant->"Italic"],
 "  back again."
}], "Text",
 CellChangeTimes->{{3.4303328171611757`*^9, 3.4303328617557817`*^9}, {
   3.430337158416401*^9, 3.430337162963363*^9}, {3.4303440447361155`*^9, 
   3.4303440608145494`*^9}, {3.430352154594947*^9, 3.430352177017253*^9}, 
   3.430497670206213*^9, {3.4306011277463193`*^9, 3.4306011281682024`*^9}, 
   3.430601271436578*^9, {3.4306013425004425`*^9, 3.430601366329025*^9}, {
   3.4307097552544365`*^9, 3.430709783676858*^9}, {3.4307694207016554`*^9, 
   3.43076964619036*^9}, {3.430769681566039*^9, 3.4307700168381014`*^9}, {
   3.4311197804732823`*^9, 3.431119796661093*^9}, {3.431190525414815*^9, 
   3.4311905257429466`*^9}, 3.4311905979787083`*^9, {3.4311907394970503`*^9, 
   3.431190742981492*^9}, {3.431492886761525*^9, 3.431492887223022*^9}, {
   3.431494062343462*^9, 3.431494337141776*^9}, {3.4317255415822144`*^9, 
   3.4317255520667906`*^9}, {3.4318058441225057`*^9, 3.431805844450637*^9}, {
   3.4318073279009933`*^9, 3.4318073289478884`*^9}, {3.4318785406526766`*^9, 
   3.431878608466479*^9}, {3.4322908285673895`*^9, 3.4322909571167326`*^9}, {
   3.4322922730482473`*^9, 3.432293150330716*^9}, {3.4329099693228593`*^9, 
   3.432909970526007*^9}, {3.4329102356092215`*^9, 3.4329102393905444`*^9}, {
   3.432910984811106*^9, 3.432911019280518*^9}, {3.4329110574843764`*^9, 
   3.4329111183292947`*^9}, {3.432911200955881*^9, 3.4329112138936296`*^9}, {
   3.4329118104050827`*^9, 3.43291181107697*^9}, {3.4329135996738105`*^9, 
   3.4329136611593657`*^9}, {3.4329142475925007`*^9, 3.432914473831219*^9}, 
   3.432916189082901*^9, 3.43291645930684*^9, {3.432916745640462*^9, 
   3.4329167462810993`*^9}, 3.432918455923299*^9, {3.4329197817768793`*^9, 
   3.432919810824312*^9}, {3.433012080250083*^9, 3.4330120805782146`*^9}, {
   3.4330798940358267`*^9, 3.433079929298854*^9}, {3.43307996238834*^9, 
   3.433080459659609*^9}, {3.433080518743017*^9, 3.433080580574551*^9}, {
   3.433081260827094*^9, 3.433081278181785*^9}, {3.4330813408473387`*^9, 
   3.43308134934129*^9}, {3.4330814311280813`*^9, 3.433081501081936*^9}, {
   3.43308154720511*^9, 3.43308161584527*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"root", " ", "=", " ", 
  RowBox[{
   RowBox[{"z", "/.", 
    RowBox[{"Solve", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"z", "^", "3"}], "\[Equal]", 
       RowBox[{"-", "1"}]}], ",", "z"}], "]"}]}], "//", 
   "ComplexExpand"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"root", "[", 
   RowBox[{"[", "1", "]"}], "]"}], "^", "3"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"root", "[", 
    RowBox[{"[", "2", "]"}], "]"}], "^", "3"}], "//", 
  "Simplify"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"root", "[", 
    RowBox[{"[", "3", "]"}], "]"}], "^", "3"}], "//", "Simplify"}]}], "Input",
 CellChangeTimes->{{3.433011865386583*^9, 3.4330118890276613`*^9}, 
   3.4330119790293894`*^9, {3.4330120664685683`*^9, 3.433012070140514*^9}, {
   3.4330812820527353`*^9, 3.433081332368745*^9}, {3.4330814830670357`*^9, 
   3.4330814832109528`*^9}, {3.433081532772684*^9, 3.433081533892001*^9}, {
   3.433091421905314*^9, 3.4330914272735367`*^9}, {3.52924215857856*^9, 
   3.5292421992986317`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "1"}], ",", 
   RowBox[{
    FractionBox["1", "2"], "+", 
    FractionBox[
     RowBox[{"\[ImaginaryI]", " ", 
      SqrtBox["3"]}], "2"]}], ",", 
   RowBox[{
    FractionBox["1", "2"], "-", 
    FractionBox[
     RowBox[{"\[ImaginaryI]", " ", 
      SqrtBox["3"]}], "2"]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.5292421402217245`*^9, 3.5292421996056623`*^9}, {
  3.5292515655268383`*^9, 3.5292515742865753`*^9}}],

Cell[BoxData[
 RowBox[{"-", "1"}]], "Output",
 CellChangeTimes->{{3.5292421402217245`*^9, 3.5292421996056623`*^9}, {
  3.5292515655268383`*^9, 3.5292515742965755`*^9}}],

Cell[BoxData[
 RowBox[{"-", "1"}]], "Output",
 CellChangeTimes->{{3.5292421402217245`*^9, 3.5292421996056623`*^9}, {
  3.5292515655268383`*^9, 3.5292515742965755`*^9}}],

Cell[BoxData[
 RowBox[{"-", "1"}]], "Output",
 CellChangeTimes->{{3.5292421402217245`*^9, 3.5292421996056623`*^9}, {
  3.5292515655268383`*^9, 3.5292515742965755`*^9}}]
}, Open  ]],

Cell[TextData[{
 "\n(b) Evaluate the cell below in order to define ",
 StyleBox["circleroots[n_]",
  FontWeight->"Bold"],
 ", a function that graphically and dynamically illustrates the ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["n", "th"], TraditionalForm]]],
 "roots of complex numbers that lie on the unit circle.  The example provided \
allows you to visualize the square roots (i.e. ",
 StyleBox["n",
  FontSlant->"Italic"],
 " = 2) of unit-circle points.  Use your mouse to continuously vary the \
sample point.  After interactively exploring several different ",
 StyleBox["n",
  FontSlant->"Italic"],
 " values, demonstrate and explain one interesting case in detail for your TA."
}], "Text",
 CellChangeTimes->{{3.4303328171611757`*^9, 3.4303328617557817`*^9}, {
   3.430337158416401*^9, 3.430337162963363*^9}, {3.4303440447361155`*^9, 
   3.4303440608145494`*^9}, {3.430352154594947*^9, 3.430352177017253*^9}, 
   3.430497670206213*^9, {3.4306011277463193`*^9, 3.4306011281682024`*^9}, 
   3.430601271436578*^9, {3.4306013425004425`*^9, 3.430601366329025*^9}, {
   3.4307097552544365`*^9, 3.430709783676858*^9}, {3.4307694207016554`*^9, 
   3.43076964619036*^9}, {3.430769681566039*^9, 3.4307700168381014`*^9}, {
   3.4311197804732823`*^9, 3.431119796661093*^9}, {3.431190525414815*^9, 
   3.4311905257429466`*^9}, 3.4311905979787083`*^9, {3.4311907394970503`*^9, 
   3.431190742981492*^9}, {3.431492886761525*^9, 3.431492887223022*^9}, {
   3.431494062343462*^9, 3.431494337141776*^9}, {3.4317255415822144`*^9, 
   3.4317255520667906`*^9}, {3.4318058441225057`*^9, 3.431805844450637*^9}, {
   3.4318073279009933`*^9, 3.4318073289478884`*^9}, {3.4318785406526766`*^9, 
   3.431878608466479*^9}, {3.4322908285673895`*^9, 3.4322909571167326`*^9}, {
   3.4322922730482473`*^9, 3.432293150330716*^9}, {3.4329099693228593`*^9, 
   3.432909970526007*^9}, {3.4329102356092215`*^9, 3.4329102393905444`*^9}, {
   3.432910984811106*^9, 3.432911019280518*^9}, {3.4329110574843764`*^9, 
   3.4329111183292947`*^9}, {3.432911200955881*^9, 3.4329112138936296`*^9}, {
   3.4329118104050827`*^9, 3.43291181107697*^9}, {3.4329135996738105`*^9, 
   3.4329136611593657`*^9}, {3.4329142475925007`*^9, 3.432914473831219*^9}, 
   3.432916189082901*^9, 3.43291645930684*^9, {3.432916745640462*^9, 
   3.4329167462810993`*^9}, 3.432918455923299*^9, {3.4329197817768793`*^9, 
   3.432919810824312*^9}, {3.433012080250083*^9, 3.4330120805782146`*^9}, {
   3.4330798940358267`*^9, 3.433079929298854*^9}, {3.43307996238834*^9, 
   3.433080459659609*^9}, {3.433080518743017*^9, 3.43308056008604*^9}, 
   3.4330812517015676`*^9, {3.433089437508999*^9, 3.433089446331621*^9}, {
   3.4330894934784727`*^9, 3.433089494997398*^9}, {3.439749380297411*^9, 
   3.439749383578682*^9}, {3.4428724094123106`*^9, 3.4428725211928453`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"circleroots", "[", "rootnum_", "]"}], " ", ":=", 
   RowBox[{"DynamicModule", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"p", "=", 
        RowBox[{"{", 
         RowBox[{"1", ",", "0"}], "}"}]}], ",", "zz", ",", "pair2comp", ",", 
       "comp2pair", ",", "makeroots", ",", "setpoint", ",", "arrows", ",", 
       "objects", ",", "options"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"pair2comp", "[", 
        RowBox[{"{", 
         RowBox[{"x_", ",", "y_"}], "}"}], "]"}], " ", ":=", " ", 
       RowBox[{"x", " ", "+", " ", 
        RowBox[{"I", " ", "y"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"comp2pair", "[", "z_", "]"}], " ", ":=", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Re", "[", "z", "]"}], ",", 
         RowBox[{"Im", "[", "z", "]"}]}], "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"makeroots", "[", 
        RowBox[{"z_", ",", "n_"}], "]"}], " ", ":=", " ", 
       RowBox[{"(", 
        RowBox[{"zz", "/.", 
         RowBox[{"Solve", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"zz", "^", "n"}], "\[Equal]", "z"}], ",", "zz"}], "]"}]}],
         ")"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"setpoint", " ", "=", " ", 
       RowBox[{"Dynamic", "@", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Arrow", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "0"}], "}"}], ",", 
             RowBox[{"Normalize", "[", "p", "]"}]}], "}"}], "]"}], ",", 
          RowBox[{"PointSize", "[", "0.025", "]"}], ",", "Black", ",", 
          RowBox[{"Point", "[", 
           RowBox[{"Normalize", "[", "p", "]"}], "]"}]}], "}"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"arrows", " ", "=", " ", 
       RowBox[{"Dynamic", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Arrow", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "0"}], "}"}], ",", "#"}], "}"}], "]"}], "&"}],
          "/@", " ", 
         RowBox[{"comp2pair", "/@", " ", 
          RowBox[{"makeroots", "[", 
           RowBox[{
            RowBox[{"pair2comp", "[", 
             RowBox[{"Normalize", "[", "p", "]"}], "]"}], ",", "rootnum"}], 
           "]"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"objects", " ", "=", " ", 
       RowBox[{"Dynamic", "@", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Circle", "[", "]"}], ",", 
          RowBox[{"Arrowheads", "[", "0.1", "]"}], ",", "Thick", ",", "Blue", 
          ",", "arrows", ",", "Red", ",", "setpoint"}], "}"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"options", " ", "=", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"PlotRange", "\[Rule]", 
          RowBox[{"1.1", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "}"}]}]}], ",", 
         RowBox[{"PlotLabel", "\[Rule]", 
          RowBox[{"Dynamic", "[", 
           RowBox[{"Magnify", "[", 
            RowBox[{
             RowBox[{"pair2comp", "[", 
              RowBox[{"Normalize", "[", "p", "]"}], "]"}], ",", "2"}], "]"}], 
           "]"}]}], ",", 
         RowBox[{"Axes", "\[Rule]", "True"}], ",", 
         RowBox[{"AxesLabel", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"\"\<x(real)\>\"", ",", "\"\<y(imag)\>\""}], "}"}]}], ",", 
         RowBox[{"LabelStyle", "\[Rule]", "Medium"}]}], "}"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"LocatorPane", "[", 
       RowBox[{
        RowBox[{"Dynamic", "[", "p", "]"}], ",", 
        RowBox[{"Graphics", "[", 
         RowBox[{"objects", ",", "options"}], "]"}], ",", 
        RowBox[{"Appearance", "\[Rule]", "None"}]}], "]"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], "\n"}], "\[IndentingNewLine]", 
 RowBox[{"circleroots", "[", "5", "]"}]}], "Input",
 CellChangeTimes->{
  3.4329216967980223`*^9, {3.4330020921697087`*^9, 3.4330021060449753`*^9}, {
   3.4330021456863613`*^9, 3.4330021459519916`*^9}, {3.4330021799213934`*^9, 
   3.433002241563202*^9}, {3.4330024933649116`*^9, 3.4330025350375867`*^9}, {
   3.43300256724133*^9, 3.433002621086114*^9}, {3.43300268835303*^9, 
   3.4330027599637804`*^9}, {3.4330027953863354`*^9, 3.433002861309476*^9}, {
   3.4330029059509583`*^9, 3.433002999343376*^9}, {3.433003067891567*^9, 
   3.4330030821105905`*^9}, {3.4330031535182114`*^9, 3.433003161596492*^9}, {
   3.4330034417424955`*^9, 3.4330034557115135`*^9}, {3.4330034866027317`*^9, 
   3.4330035616354218`*^9}, {3.433003598870512*^9, 3.4330036518246536`*^9}, {
   3.4330036921848035`*^9, 3.4330039030638523`*^9}, {3.4330039970344067`*^9, 
   3.4330040138003535`*^9}, {3.4330040467072353`*^9, 
   3.4330042019289656`*^9}, {3.433004294243238*^9, 3.433004294399491*^9}, {
   3.4330044646527596`*^9, 3.4330044731841736`*^9}, {3.4330045098411274`*^9, 
   3.4330045113099055`*^9}, {3.4330045511544204`*^9, 3.433004736079846*^9}, 
   3.433004850285164*^9, {3.4330049964598455`*^9, 3.433005098154001*^9}, {
   3.433005133771896*^9, 3.4330051624532638`*^9}, {3.4330052130509377`*^9, 
   3.4330054672784853`*^9}, {3.4330055536897984`*^9, 
   3.4330056895236526`*^9}, {3.4330057410241117`*^9, 
   3.4330058833728166`*^9}, {3.433005918112586*^9, 3.43300595369851*^9}, {
   3.4330059918825884`*^9, 3.4330060322852182`*^9}, {3.4330060689069366`*^9, 
   3.433006097748102*^9}, {3.433006133448028*^9, 3.433006161461143*^9}, {
   3.433006192473989*^9, 3.433006264500307*^9}, {3.4330063714663186`*^9, 
   3.4330064328084984`*^9}, {3.433006498119326*^9, 3.4330064997442846`*^9}, 
   3.4330065311966047`*^9, {3.4330065656496453`*^9, 3.433006616806223*^9}, {
   3.4330066752909718`*^9, 3.433006755510236*^9}, {3.4330068629016895`*^9, 
   3.433006945683999*^9}, 3.4330096605004997`*^9, {3.4330097046107216`*^9, 
   3.4330097086107984`*^9}, {3.43300975790862*^9, 3.433009966037616*^9}, {
   3.433009998850746*^9, 3.4330102667933903`*^9}, {3.4330103076848*^9, 
   3.433010324481998*^9}, {3.4330103692016068`*^9, 3.4330104290933814`*^9}, {
   3.433010541517415*^9, 3.4330105638303432`*^9}, {3.433010683348263*^9, 
   3.4330107447400665`*^9}, {3.4330108049755983`*^9, 3.433010807725651*^9}, {
   3.433010849226448*^9, 3.433011023198538*^9}, {3.4330110567616825`*^9, 
   3.4330110569648113`*^9}, {3.4330111340131655`*^9, 
   3.4330111762014756`*^9}, {3.4330112347494745`*^9, 
   3.4330112380776634`*^9}, {3.4330112979694386`*^9, 3.43301141731548*^9}, {
   3.4330114504098654`*^9, 3.4330114535505505`*^9}, {3.4330115125048075`*^9, 
   3.4330116133192434`*^9}, {3.4330116507730875`*^9, 
   3.4330117338684325`*^9}, {3.4330118289796333`*^9, 
   3.4330118311671753`*^9}, {3.43301190951243*^9, 3.4330119216220374`*^9}, {
   3.4330119608571653`*^9, 3.433012027639698*^9}, {3.4330704866178513`*^9, 
   3.433070529912182*^9}, {3.4330790776512012`*^9, 3.433079200322688*^9}, {
   3.433079230658354*^9, 3.4330792309918747`*^9}, {3.433079287426455*^9, 
   3.433079287961388*^9}, {3.433080467270529*^9, 3.43308046994022*^9}, {
   3.433080652634178*^9, 3.433080654552219*^9}, {3.433089454060758*^9, 
   3.433089472927231*^9}, {3.433091441097948*^9, 3.4330914431507463`*^9}, {
   3.529242335617262*^9, 3.529242375582258*^9}, {3.5297580517479916`*^9, 
   3.5297580794371605`*^9}, 3.5297581311256104`*^9}],

Cell[BoxData[
 DynamicModuleBox[{$CellContext`p$$ = {0.9619999999999997, 
  0.010000000000000009`}, $CellContext`zz$$, $CellContext`pair2comp$$, \
$CellContext`comp2pair$$, $CellContext`makeroots$$, $CellContext`setpoint$$ = 
  Dynamic[{
    Arrow[{{0, 0}, 
      Normalize[$CellContext`p$$]}], 
    PointSize[0.025], Black, 
    Point[
     Normalize[$CellContext`p$$]]}], $CellContext`arrows$$ = Dynamic[
   Map[Arrow[{{0, 0}, #}]& , 
    Map[$CellContext`comp2pair$$, 
     $CellContext`makeroots$$[
      $CellContext`pair2comp$$[
       Normalize[$CellContext`p$$]], 5]]]], $CellContext`objects$$ = Dynamic[{
    Circle[], 
    Arrowheads[0.1], Thick, Blue, $CellContext`arrows$$, 
    Red, $CellContext`setpoint$$}], $CellContext`options$$ = {
  PlotRange -> {{-1.1, 1.1}, {-1.1, 1.1}}, PlotLabel -> Dynamic[
     Magnify[
      $CellContext`pair2comp$$[
       Normalize[$CellContext`p$$]], 2]], Axes -> True, 
   AxesLabel -> {"x(real)", "y(imag)"}, LabelStyle -> Medium}}, 
  LocatorPaneBox[Dynamic[$CellContext`p$$], 
   GraphicsBox[
    DynamicBox[Typeset`ToBoxes[{
       Circle[], 
       Arrowheads[0.1], Thick, Blue, $CellContext`arrows$$, 
       Red, $CellContext`setpoint$$}, StandardForm, Graphics],
     ImageSizeCache->{{10.682993735879222`, 
      310.41700626412074`}, {-128.41700626412077`, 171.31700626412075`}}],
    Axes->True,
    AxesLabel->{
      FormBox["\"x(real)\"", TraditionalForm], 
      FormBox["\"y(imag)\"", TraditionalForm]},
    LabelStyle->Medium,
    PlotLabel->FormBox[
      DynamicBox[
       ToBoxes[
        Magnify[
         $CellContext`pair2comp$$[
          Normalize[$CellContext`p$$]], 2], TraditionalForm]], 
      TraditionalForm],
    PlotRange->{{-1.1, 1.1}, {-1.1, 1.1}}],
   Appearance->None],
  DynamicModuleValues:>{{DownValues[$CellContext`pair2comp$$] = {HoldPattern[
         $CellContext`pair2comp$$[{
           Pattern[$CellContext`x, 
            Blank[]], 
           Pattern[$CellContext`y, 
            Blank[]]}]] :> $CellContext`x + I $CellContext`y}}, {
    DownValues[$CellContext`comp2pair$$] = {HoldPattern[
         $CellContext`comp2pair$$[
          Pattern[$CellContext`z, 
           Blank[]]]] :> {
         Re[$CellContext`z], 
         Im[$CellContext`z]}}}, {
    DownValues[$CellContext`makeroots$$] = {HoldPattern[
         $CellContext`makeroots$$[
          Pattern[$CellContext`z$, 
           Blank[]], 
          Pattern[$CellContext`n$, 
           Blank[]]]] :> ReplaceAll[$CellContext`zz$$, 
         Solve[$CellContext`zz$$^$CellContext`n$ == $CellContext`z$, \
$CellContext`zz$$]]}}}]], "Output",
 CellChangeTimes->{
  3.529242205354237*^9, {3.5292423360203023`*^9, 3.529242376260326*^9}, 
   3.529251430123398*^9, {3.5292515660468225`*^9, 3.5292515748965573`*^9}, {
   3.5297580521079807`*^9, 3.529758079497159*^9}, 3.529758131225607*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Complex Functions (40 min)", "Section",
 CellChangeTimes->{{3.4329160567366104`*^9, 3.4329160598772955`*^9}, {
   3.4329167224525166`*^9, 3.432916723874419*^9}, 3.433090835694138*^9, {
   3.433090918863393*^9, 3.433090919015108*^9}, {3.4330909767210827`*^9, 
   3.433090977168829*^9}, 3.433104271786031*^9, 3.433200328120948*^9, 
   3.433203710613787*^9, {3.4332040107777214`*^9, 3.4332040108558483`*^9}, {
   3.5248681695012503`*^9, 3.5248681697196503`*^9}}],

Cell[CellGroupData[{

Cell["(#6) Functions in the complex plane I (15 min)", "Subsection",
 CellChangeTimes->{{3.432916080721446*^9, 3.432916083690253*^9}, {
   3.4330121588140917`*^9, 3.433012160501624*^9}, {3.433022326540558*^9, 
   3.4330223824478817`*^9}, {3.433086219862739*^9, 3.433086221708778*^9}, 
   3.4330896905879602`*^9, 3.4331042507108088`*^9, 3.433203195631854*^9, {
   3.433203599110933*^9, 3.4332035992203107`*^9}, {3.433203643533945*^9, 
   3.4332036437839513`*^9}, 3.4332037091137486`*^9, 3.433203836632638*^9}],

Cell[TextData[{
 "(a) Plot ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["\[ExponentialE]", "x"], TraditionalForm]]],
 " over the range {",
 StyleBox["x",
  FontSlant->"Italic"],
 ", -\[Pi], \[Pi]}.  Then evaluate ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"\[Pi]", " ", "i"}]], TraditionalForm]]],
 " and use Euler's formula to explain the result.  Could ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["\[ExponentialE]", "x"], TraditionalForm]]],
 " have returned -1 for any real ",
 StyleBox["x",
  FontSlant->"Italic"],
 " value?  Obviously, if we take an otherwise \"real\" function like ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["\[ExponentialE]", "x"], TraditionalForm]]],
 " and feed it a complex number like \[Pi]",
 StyleBox["i",
  FontSlant->"Italic"],
 " , we can't always expect to get a real number out again.  "
}], "Text",
 CellChangeTimes->{{3.432916107565711*^9, 3.4329161115189123`*^9}, {
  3.4330164392087736`*^9, 3.4330164563653526`*^9}, {3.433083940882568*^9, 
  3.433084351517437*^9}, {3.4428730595643997`*^9, 3.442873122501497*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Exp", "[", "x", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Exp", "[", 
  RowBox[{"\[Pi]", "*", "I"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"ExpToTrig", "[", 
  RowBox[{"Exp", "[", "x", "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Cosh", "[", 
  RowBox[{"\[Pi]", "*", "I"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Sinh", "[", 
  RowBox[{"\[Pi]", "*", "I"}], "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.4330186702984843`*^9, 3.433018676704858*^9}, {
   3.433018706736684*^9, 3.433018715830609*^9}, {3.4330187951915073`*^9, 
   3.4330188167700467`*^9}, {3.433019620129221*^9, 3.4330196211448655`*^9}, {
   3.433019665973851*^9, 3.433019666270732*^9}, {3.4330197051777287`*^9, 
   3.4330197070840154`*^9}, {3.4330842076171913`*^9, 
   3.4330842119096518`*^9}, {3.433084824613349*^9, 3.433084846813184*^9}, 
   3.4332027801212173`*^9, {3.442872563880072*^9, 3.4428725649269404`*^9}, {
   3.5292424147381735`*^9, 3.529242526626361*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJwBcQOO/CFib1JlAgAAADYAAAACAAAASkkOQ/shCcBh4/KqIiCmPzu1fPAI
HgnAfNQTmg8rpj8sIeudFhoJwOUFU+4BNqY/DvnH+DESCcBzctXQ9kumP9Go
ga5oAgnArj/VyCF4pj9YCPUZ1uIIwGsUceB+0aY/Z8fb8LCjCMB3uhPSaIin
P4RFqZ5mJQjARWamYZkHqT9x1PoSkxMHwKGD+o48nKw/yl0a6OQTBsAve3B1
EzWwP/2+qrA6GQXAefTFlElRsj/jsvGRUQkEwApKGsMZ67Q/NqEG1I0LA8AD
8IMYga23Pzwi0i6L+AHAZdU1TaMUuz8cew59jOoAwDExS8SS5b4/0JwxWGbd
/7/M2RNJSXjBP89os+c1u/2/nVZ35z32wz+mKdE4UL37v6WOzMiwm8Y/MJrQ
cHLJ+b/VlA7d6YrJPyEwPdoWq/e/kavgIK4ozT/qukUFBrH1v3uZNicsf9A/
G2u7YXeM87/jqe0lYtzSP/7KEqXwcfG/aNx0rdKC1T9zPwxUaffuv532sCYw
Udg/uDPNwPW16r8ZvkzQpcbbP68RxrAXvea/8UiZOGhy3z9zOpkDPm/ivy/R
4JS0/OE/OoVfSOhq3L9pVSC3wIbkP+9o/I9/iNS/hQSnpqs35z+DxJs6P/jH
v8da7HoDieo/1rs8xKoDsL/F1hnAPQ/uP18sRv1Uka4/6hU+Lf378D/hSFhV
bp7IPz1XyjuqZPM/9K8/rxg71D9U4hhpzPL1P9qlHm7x0Nw/txusa24Z+T97
brtIVZ/iP0wMK0Pkofw/WKAvV5yN5j+GO7j58y8AQGaHyQLf0Oo/3bh3RW1+
AkDDhCsrjMvuP/VUBsBS8QRAXhHlwhRZ8T+G+5voYKgHQPM6xz7hdvM/pesE
puIAC0Cvbw35YnD1P5jq6NHqjA5ABH/mgWKU9z9XD7PLPnYRQIGZI0kXlPk/
KauWkhbJE0BLBH8pxIn7P9uqtDAMXRZArklt2O6p/T/nVe/KeYoZQDiav8XO
pf8/EOTU+5rpHECuYtJAFuYAQNEwZvoFiSBAZiBUK0H0AUBF/3nr8N0iQLLj
B7VG8AJAURZ2O2tWJUBKFAUmiwEEQAAVkcYjYihAdko0NqoABUDYBxCrPJ4r
QMmo8lLF+gVADDbEnpo0L0CJIUocYxQGQETmcnxyny9AnuCr7A==
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  PlotRange->
   NCache[{{-Pi, Pi}, {0., 15.811420334840598`}}, {{-3.141592653589793, 
    3.141592653589793}, {0., 15.811420334840598`}}],
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{{3.5292424228899884`*^9, 3.52924252691739*^9}, 
   3.5292515753465443`*^9}],

Cell[BoxData[
 RowBox[{"-", "1"}]], "Output",
 CellChangeTimes->{{3.5292424228899884`*^9, 3.52924252691739*^9}, 
   3.5292515753565435`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Cosh", "[", "x", "]"}], "+", 
  RowBox[{"Sinh", "[", "x", "]"}]}]], "Output",
 CellChangeTimes->{{3.5292424228899884`*^9, 3.52924252691739*^9}, 
   3.5292515753565435`*^9}],

Cell[BoxData[
 RowBox[{"-", "1"}]], "Output",
 CellChangeTimes->{{3.5292424228899884`*^9, 3.52924252691739*^9}, 
   3.5292515753565435`*^9}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{{3.5292424228899884`*^9, 3.52924252691739*^9}, 
   3.5292515753565435`*^9}]
}, Open  ]],

Cell[TextData[{
 "(b) Plot ln(",
 StyleBox["x",
  FontSlant->"Italic"],
 ") over the range {x, -2, 2}.  Then evaluate ln(1) and ln(-1).  While the \
second result may surprise you, recall that we have already demonstrated the \
inverse relation, ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"\[Pi]", " ", "i"}]], TraditionalForm]]],
 " = -1."
}], "Text",
 CellChangeTimes->{{3.432916107565711*^9, 3.4329161115189123`*^9}, {
   3.4330164392087736`*^9, 3.4330164563653526`*^9}, {3.433083940882568*^9, 
   3.433084351517437*^9}, {3.4330847918071938`*^9, 3.433084809571741*^9}, {
   3.4330848689764843`*^9, 3.433085163902152*^9}, {3.433085205258771*^9, 
   3.433085213617989*^9}, 3.4428731366107817`*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Log", "[", "x", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "2"}], ",", "2"}], "}"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Log", "[", "1", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Log", "[", 
  RowBox[{"-", "1"}], "]"}]}], "Input",
 CellChangeTimes->{{3.433018774066102*^9, 3.4330187887226334`*^9}, {
   3.4330196246605577`*^9, 3.433019625582451*^9}, {3.433019799117032*^9, 
   3.4330198147423325`*^9}, {3.4330850554383574`*^9, 3.4330850603852453`*^9}, 
   3.4332028077469244`*^9, {3.52925145406518*^9, 3.529251469084729*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
YAabP+I4Dptp6qJDZkL4H+75hPY=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  PlotRange->{{-2, 2}, {-3.2425218871201507`, 0.693147139743618}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{{3.529251460144997*^9, 3.529251469484717*^9}, 
   3.529251575766531*^9}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{{3.529251460144997*^9, 3.529251469484717*^9}, 
   3.529251575776531*^9}],

Cell[BoxData[
 RowBox[{"\[ImaginaryI]", " ", "\[Pi]"}]], "Output",
 CellChangeTimes->{{3.529251460144997*^9, 3.529251469484717*^9}, 
   3.529251575776531*^9}]
}, Open  ]],

Cell[TextData[{
 "\n(c) Almost any function defined over the real numbers can also operate in \
the complex plane.  In general, when we feed a function a complex argument of \
the form ",
 StyleBox["z",
  FontSlant->"Italic"],
 " = ",
 StyleBox["x ",
  FontSlant->"Italic"],
 "+ ",
 StyleBox["i y",
  FontSlant->"Italic"],
 ", we expect a complex result.  Use ",
 StyleBox["ComplexExpand",
  FontWeight->"Bold"],
 " to separate the real and imaginary parts of ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"x", "+", 
     RowBox[{"i", " ", "y"}]}]], TraditionalForm]]],
 ".  From the results, you can see that a complex function can be viewed as \
two separate functions, a real one and an imaginary one."
}], "Text",
 CellChangeTimes->{{3.433084386709207*^9, 3.433084755577489*^9}, {
   3.433085209786045*^9, 3.433085421119315*^9}, 3.4330854589847317`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ComplexExpand", "[", 
  RowBox[{"Exp", "[", 
   RowBox[{"x", "+", 
    RowBox[{"I", "*", "y"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.4330186702984843`*^9, 3.433018676704858*^9}, {
   3.433018706736684*^9, 3.433018715830609*^9}, {3.4330187951915073`*^9, 
   3.4330188167700467`*^9}, {3.433019557128011*^9, 3.433019557971778*^9}, {
   3.4330196282700024`*^9, 3.433019628426255*^9}, {3.4330196697551737`*^9, 
   3.4330197011932774`*^9}, 3.4330841582011747`*^9, 3.433084778789974*^9, {
   3.433085439217433*^9, 3.433085463719816*^9}, 3.4332028154033704`*^9, {
   3.5292514868641963`*^9, 3.52925149875634*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox["\[ExponentialE]", "x"], " ", 
   RowBox[{"Cos", "[", "y", "]"}]}], "+", 
  RowBox[{"\[ImaginaryI]", " ", 
   SuperscriptBox["\[ExponentialE]", "x"], " ", 
   RowBox[{"Sin", "[", "y", "]"}]}]}]], "Output",
 CellChangeTimes->{3.5292514991263285`*^9, 3.52925157615652*^9}]
}, Open  ]],

Cell[TextData[{
 "\n(d) Here, we use ",
 StyleBox["ComplexExpand",
  FontWeight->"Bold"],
 " to separate the real and imaginary parts of ln(",
 StyleBox["x",
  FontSlant->"Italic"],
 " + ",
 StyleBox["i y",
  FontSlant->"Italic"],
 ").  We also perform some variable substitutions and simplifications in \
order to represent the result in terms of the magnitude and the phase of ",
 StyleBox["z",
  FontSlant->"Italic"],
 " = ",
 StyleBox["x ",
  FontSlant->"Italic"],
 "+ ",
 StyleBox["i y = ",
  FontSlant->"Italic"],
 Cell[BoxData[
  FormBox[
   RowBox[{"r", " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{" ", 
      RowBox[{"i", " ", "\[Phi]"}]}]]}], TraditionalForm]]],
 ".  Evaluate the cell and use the resulting expression to explain why ln(-1) \
= \[Pi] ",
 StyleBox["i",
  FontSlant->"Italic"],
 " ."
}], "Text",
 CellChangeTimes->{{3.4330854737128763`*^9, 3.433085550865954*^9}, 
   3.433085604678664*^9, {3.433085643916246*^9, 3.4330856839333878`*^9}, {
   3.4330857322588654`*^9, 3.4330857615757923`*^9}, {3.433086308779463*^9, 
   3.43308631872086*^9}, {3.433087586029895*^9, 3.4330875875654984`*^9}, {
   3.4332008189772635`*^9, 3.4332009204329853`*^9}, {3.433202841372785*^9, 
   3.433202844154106*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Log", "[", 
   RowBox[{"x", "+", 
    RowBox[{"I", " ", "y"}]}], "]"}], "//", 
  "ComplexExpand"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"%", "/.", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"Arg", "[", 
       RowBox[{"x", "+", 
        RowBox[{"I", " ", "y"}]}], "]"}], "\[Rule]", "\[Phi]"}], ",", " ", 
     RowBox[{
      RowBox[{
       SuperscriptBox["x", "2"], "+", 
       SuperscriptBox["y", "2"]}], "\[Rule]", 
      SuperscriptBox["r", "2"]}]}], "}"}]}], "//", 
  RowBox[{
   RowBox[{"Simplify", "[", 
    RowBox[{"#", ",", 
     RowBox[{"r", ">", "0"}]}], "]"}], "&"}]}]}], "Input",
 CellChangeTimes->{{3.4330185899844427`*^9, 3.4330186054534893`*^9}, {
   3.433019540283938*^9, 3.4330195468621893`*^9}, {3.4330196537079906`*^9, 
   3.4330196616768937`*^9}, {3.433019721865549*^9, 3.4330197869917994`*^9}, 
   3.43308549473199*^9, {3.4330855693758802`*^9, 3.433085570469654*^9}, 
   3.433086249362112*^9, {3.4428732110478053`*^9, 3.4428732147821565`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[ImaginaryI]", " ", 
   RowBox[{"Arg", "[", 
    RowBox[{"x", "+", 
     RowBox[{"\[ImaginaryI]", " ", "y"}]}], "]"}]}], "+", 
  RowBox[{
   FractionBox["1", "2"], " ", 
   RowBox[{"Log", "[", 
    RowBox[{
     SuperscriptBox["x", "2"], "+", 
     SuperscriptBox["y", "2"]}], "]"}]}]}]], "Output",
 CellChangeTimes->{{3.5292515114159603`*^9, 3.5292515356502333`*^9}, 
   3.5292515770464926`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[ImaginaryI]", " ", "\[Phi]"}], "+", 
  RowBox[{"Log", "[", "r", "]"}]}]], "Output",
 CellChangeTimes->{{3.5292515114159603`*^9, 3.5292515356502333`*^9}, 
   3.5292515770464926`*^9}]
}, Open  ]],

Cell[TextData[{
 "\n(e)  Evaluate cos(",
 StyleBox["i z",
  FontSlant->"Italic"],
 ") and cosh(",
 StyleBox["i z",
  FontSlant->"Italic"],
 ").  Any surprises?  Then use ",
 StyleBox["TrigToExp",
  FontWeight->"Bold"],
 " to obtain the exponential forms of cos(z) and cosh(z), which should help \
you to see the origin of these identities."
}], "Text",
 CellChangeTimes->{{3.4330857711162643`*^9, 3.4330857743276367`*^9}, {
   3.433085816545458*^9, 3.433085899603113*^9}, {3.433085955162187*^9, 
   3.433086038203598*^9}, {3.433086074529662*^9, 3.4330861182424803`*^9}, {
   3.433086327393674*^9, 3.4330863953140993`*^9}, {3.433086480844647*^9, 
   3.433086506733759*^9}, {3.433086732479525*^9, 3.433086889601739*^9}, {
   3.43308694275844*^9, 3.433087069270968*^9}, {3.433087114905696*^9, 
   3.433087259484728*^9}, {3.433087290039892*^9, 3.433087378631572*^9}, {
   3.433087408714189*^9, 3.433087458377318*^9}, {3.433087572934869*^9, 
   3.433087573044888*^9}, {3.433087638578711*^9, 3.433087679247827*^9}, {
   3.43320287338923*^9, 3.43320288745209*^9}, 3.433203188303541*^9, 
   3.433203649299718*^9, {3.433527379665142*^9, 3.433527386055726*^9}, {
   3.4428725994735947`*^9, 3.4428728715499783`*^9}, 3.4428752638029375`*^9, {
   3.4903439875103717`*^9, 3.4903439884503717`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Cos", "[", 
  RowBox[{"I", "*", "z"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Cosh", "[", 
  RowBox[{"I", "*", "z"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"TrigToExp", "[", "#", "]"}], "&"}], "/@", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"Cosh", "[", 
     RowBox[{"I", "*", "z"}], "]"}], ",", 
    RowBox[{"Cos", "[", 
     RowBox[{"I", "*", "z"}], "]"}]}], "}"}]}]}], "Input",
 CellChangeTimes->{{3.4428725891142855`*^9, 3.4428725894736586`*^9}, {
  3.529251544507468*^9, 3.5292516219426465`*^9}}],

Cell[BoxData[
 RowBox[{"Cosh", "[", "z", "]"}]], "Output",
 CellChangeTimes->{{3.529251552032243*^9, 3.5292515899011073`*^9}, 
   3.5292516225026293`*^9}],

Cell[BoxData[
 RowBox[{"Cos", "[", "z", "]"}]], "Output",
 CellChangeTimes->{{3.529251552032243*^9, 3.5292515899011073`*^9}, 
   3.5292516225026293`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    FractionBox[
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", "\[ImaginaryI]"}], " ", "z"}]], "2"], "+", 
    FractionBox[
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"\[ImaginaryI]", " ", "z"}]], "2"]}], ",", 
   RowBox[{
    FractionBox[
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"-", "z"}]], "2"], "+", 
    FractionBox[
     SuperscriptBox["\[ExponentialE]", "z"], "2"]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.529251552032243*^9, 3.5292515899011073`*^9}, 
   3.5292516225026293`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
(#7-#9) Calculus in the complex plane (25 min)\
\>", "Subsection",
 CellChangeTimes->{{3.432916080721446*^9, 3.432916083690253*^9}, {
   3.4329161416444902`*^9, 3.432916144269541*^9}, {3.4329167066397133`*^9, 
   3.432916713405468*^9}, {3.433012166079856*^9, 3.433012167923641*^9}, {
   3.4330203646122646`*^9, 3.433020365581033*^9}, {3.433026002923643*^9, 
   3.433026002970519*^9}, {3.4330261055037374`*^9, 3.4330261055506134`*^9}, {
   3.433090804467703*^9, 3.433090833356823*^9}, 3.433090915631301*^9, 
   3.4330909739771852`*^9, {3.4332031629122667`*^9, 3.4332031629903936`*^9}, {
   3.4332036051110864`*^9, 3.4332036076736517`*^9}, 3.433204019324815*^9, {
   3.52486815098405*^9, 3.52486816140485*^9}}],

Cell[CellGroupData[{

Cell["(#8) Power series expansions (5 min)", "Subsubsection",
 CellChangeTimes->{{3.432916153566594*^9, 3.4329161704887943`*^9}, {
   3.4330259780481653`*^9, 3.4330259795013185`*^9}, {3.433026041236879*^9, 
   3.4330260412993803`*^9}, {3.433090551139954*^9, 3.433090554899514*^9}, {
   3.433090749340619*^9, 3.433090751113748*^9}, 3.433091130806314*^9, 
   3.433104247574733*^9, {3.433203610720605*^9, 3.433203613064415*^9}}],

Cell[TextData[{
 "(a) Use ",
 StyleBox[ButtonBox["D",
  BaseStyle->"Link",
  ButtonData->"paclet://ref/D"],
  FontWeight->"Bold"],
 " to compute the first derivative of ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["e", 
    RowBox[{" ", 
     RowBox[{"(", 
      RowBox[{"-", 
       SuperscriptBox["z", "2"]}], ")"}]}]], TraditionalForm]]],
 " with respect to complex variable ",
 StyleBox["z",
  FontSlant->"Italic"],
 ".  Observe that the result is the same whether or not you think of z as a \
complex."
}], "Text",
 CellChangeTimes->{{3.432916107565711*^9, 3.4329161115189123`*^9}, {
  3.432916161285493*^9, 3.4329161616448746`*^9}, {3.433089709629429*^9, 
  3.433089830479382*^9}, {3.433089985268371*^9, 3.433090005236478*^9}, {
  3.433090038646154*^9, 3.433090127944206*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"D", "[", 
  RowBox[{
   RowBox[{"Exp", "[", 
    RowBox[{"-", 
     SuperscriptBox["z", "2"]}], "]"}], ",", "z"}], "]"}]], "Input",
 CellChangeTimes->{{3.4329161124720554`*^9, 3.4329161129564395`*^9}, {
   3.4330214800711813`*^9, 3.433021492571421*^9}, {3.4330216022922773`*^9, 
   3.433021602542282*^9}, {3.433021634292892*^9, 3.433021636902317*^9}, {
   3.4330218362498946`*^9, 3.4330218664067235`*^9}, {3.433021906126236*^9, 
   3.4330219968623533`*^9}, {3.43302204853522*^9, 3.433022048910228*^9}, {
   3.433022140021352*^9, 3.433022171631334*^9}, {3.43302601187694*^9, 
   3.433026027455364*^9}, 3.4330901356254063`*^9, 3.433202970938602*^9, {
   3.4428734834835615`*^9, 3.442873484889803*^9}, {3.5292516384271517`*^9, 
   3.5292516477468724`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "2"}], " ", 
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{"-", 
    SuperscriptBox["z", "2"]}]], " ", "z"}]], "Output",
 CellChangeTimes->{3.5292516480468636`*^9}]
}, Open  ]],

Cell[TextData[{
 "\n(b) Compute the ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["10", "th"], TraditionalForm]]],
 "-order power ",
 StyleBox[ButtonBox["Series",
  BaseStyle->"Link",
  ButtonData->"paclet://ref/Series"],
  FontWeight->"Bold"],
 " expansion of ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["e", 
    RowBox[{" ", 
     RowBox[{"(", 
      RowBox[{"-", 
       SuperscriptBox["z", "2"]}], ")"}]}]], TraditionalForm]]],
 " around the point ",
 StyleBox["z",
  FontSlant->"Italic"],
 " = 0 + 0 ",
 StyleBox["i",
  FontSlant->"Italic"],
 " .  Once again, observe that the result is the same whether or not you \
think of z as a complex."
}], "Text",
 CellChangeTimes->{{3.4330898455899363`*^9, 3.43308997382664*^9}, {
  3.433090027317369*^9, 3.4330900275973883`*^9}, {3.433090143106371*^9, 
  3.4330902002583323`*^9}, {3.433090253894534*^9, 3.433090271229126*^9}, {
  3.433090351703814*^9, 3.43309036844107*^9}, {3.43309047517867*^9, 
  3.433090476266185*^9}, {3.433090527132863*^9, 3.4330905278357487`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Series", "[", 
  RowBox[{
   RowBox[{"Exp", "[", 
    RowBox[{"-", 
     SuperscriptBox["z", "2"]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"z", ",", "0", ",", "10"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.4329161124720554`*^9, 3.4329161129564395`*^9}, {
   3.4330214800711813`*^9, 3.433021492571421*^9}, {3.4330216022922773`*^9, 
   3.433021602542282*^9}, {3.433021634292892*^9, 3.433021636902317*^9}, {
   3.4330218362498946`*^9, 3.4330218664067235`*^9}, {3.433021906126236*^9, 
   3.4330219968623533`*^9}, {3.43302204853522*^9, 3.433022048910228*^9}, {
   3.433022140021352*^9, 3.433022171631334*^9}, {3.43302601187694*^9, 
   3.433026027455364*^9}, {3.433090209971775*^9, 3.433090248380548*^9}, 
   3.433202972735523*^9, {3.5292516560666227`*^9, 3.529251681685855*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"1", "-", 
   SuperscriptBox["z", "2"], "+", 
   FractionBox[
    SuperscriptBox["z", "4"], "2"], "-", 
   FractionBox[
    SuperscriptBox["z", "6"], "6"], "+", 
   FractionBox[
    SuperscriptBox["z", "8"], "24"], "-", 
   FractionBox[
    SuperscriptBox["z", "10"], "120"], "+", 
   InterpretationBox[
    SuperscriptBox[
     RowBox[{"O", "[", "z", "]"}], "11"],
    SeriesData[$CellContext`z, 0, {}, 0, 11, 1],
    Editable->False]}],
  SeriesData[$CellContext`z, 0, {1, 0, -1, 0, 
    Rational[1, 2], 0, 
    Rational[-1, 6], 0, 
    Rational[1, 24], 0, 
    Rational[-1, 120]}, 0, 11, 1],
  Editable->False]], "Output",
 CellChangeTimes->{{3.5292516704761915`*^9, 3.529251682155841*^9}}]
}, Open  ]],

Cell[TextData[{
 "\n(c) Compute the ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["10", "th"], TraditionalForm]]],
 "-order power series expansion of ln(",
 StyleBox["z",
  FontSlant->"Italic"],
 ") around the point ",
 StyleBox["z",
  FontSlant->"Italic"],
 " = ",
 StyleBox["i",
  FontSlant->"Italic"],
 " .  This time, you should see a result that is explicity complex."
}], "Text",
 CellChangeTimes->{{3.433090289496154*^9, 3.43309034615829*^9}, {
  3.433090378976132*^9, 3.433090387034522*^9}, {3.433090481458239*^9, 
  3.4330904823618717`*^9}, {3.433090532556641*^9, 3.4330905330675507`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Series", "[", 
  RowBox[{
   RowBox[{"Log", "[", "z", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"z", ",", "I", ",", "10"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.4330903421276627`*^9, 3.433090342702098*^9}, {
  3.5292516935879984`*^9, 3.5292517067876024`*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   FractionBox[
    RowBox[{"\[ImaginaryI]", " ", "\[Pi]"}], "2"], "-", 
   RowBox[{"\[ImaginaryI]", " ", 
    RowBox[{"(", 
     RowBox[{"z", "-", "\[ImaginaryI]"}], ")"}]}], "+", 
   RowBox[{
    FractionBox["1", "2"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"z", "-", "\[ImaginaryI]"}], ")"}], "2"]}], "+", 
   RowBox[{
    FractionBox["1", "3"], " ", "\[ImaginaryI]", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"z", "-", "\[ImaginaryI]"}], ")"}], "3"]}], "-", 
   RowBox[{
    FractionBox["1", "4"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"z", "-", "\[ImaginaryI]"}], ")"}], "4"]}], "-", 
   RowBox[{
    FractionBox["1", "5"], " ", "\[ImaginaryI]", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"z", "-", "\[ImaginaryI]"}], ")"}], "5"]}], "+", 
   RowBox[{
    FractionBox["1", "6"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"z", "-", "\[ImaginaryI]"}], ")"}], "6"]}], "+", 
   RowBox[{
    FractionBox["1", "7"], " ", "\[ImaginaryI]", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"z", "-", "\[ImaginaryI]"}], ")"}], "7"]}], "-", 
   RowBox[{
    FractionBox["1", "8"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"z", "-", "\[ImaginaryI]"}], ")"}], "8"]}], "-", 
   RowBox[{
    FractionBox["1", "9"], " ", "\[ImaginaryI]", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"z", "-", "\[ImaginaryI]"}], ")"}], "9"]}], "+", 
   RowBox[{
    FractionBox["1", "10"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"z", "-", "\[ImaginaryI]"}], ")"}], "10"]}], "+", 
   InterpretationBox[
    SuperscriptBox[
     RowBox[{"O", "[", 
      RowBox[{"z", "-", "\[ImaginaryI]"}], "]"}], "11"],
    SeriesData[$CellContext`z, 
     Complex[0, 1], {}, 0, 11, 1],
    Editable->False]}],
  SeriesData[$CellContext`z, 
   Complex[0, 1], {Complex[0, 
      Rational[1, 2]] Pi, 
    Complex[0, -1], 
    Rational[1, 2], 
    Complex[0, 
     Rational[1, 3]], 
    Rational[-1, 4], 
    Complex[0, 
     Rational[-1, 5]], 
    Rational[1, 6], 
    Complex[0, 
     Rational[1, 7]], 
    Rational[-1, 8], 
    Complex[0, 
     Rational[-1, 9]], 
    Rational[1, 10]}, 0, 11, 1],
  Editable->False]], "Output",
 CellChangeTimes->{3.5292517073075867`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["(#11) Radius of convergence (10 min)", "Subsubsection",
 CellChangeTimes->{{3.432916153566594*^9, 3.4329161772232985`*^9}, {
   3.4329162102239323`*^9, 3.4329162145677657`*^9}, {3.433025989439009*^9, 
   3.4330259909390383`*^9}, {3.433026051455825*^9, 3.4330260518933334`*^9}, {
   3.433090772274535*^9, 3.4330907787227297`*^9}, 3.433090890665155*^9, {
   3.4330937189954977`*^9, 3.433093719400535*^9}, 3.4330940100830193`*^9, 
   3.433094257338853*^9, 3.433104244998651*^9, {3.4332036190176926`*^9, 
   3.433203619158321*^9}, {3.43320400623073*^9, 3.4332040067619934`*^9}}],

Cell[TextData[{
 "(a) Evaluate the cell below to compute the ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["6", "th"], TraditionalForm]]],
 "-order series expansion of ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["\[ExponentialE]", "x"], TraditionalForm]]],
 " around z = 0, and observe that the coefficient of the ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["z", "n"], TraditionalForm]]],
 " term is ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["a", "n"], "=", 
    FractionBox["1", 
     RowBox[{"n", "!"}]]}], TraditionalForm]]],
 "."
}], "Text",
 CellChangeTimes->{{3.432916107565711*^9, 3.4329161115189123`*^9}, {
  3.432916161285493*^9, 3.4329161616448746`*^9}, {3.433092708794242*^9, 
  3.4330927097620277`*^9}, {3.43309275421327*^9, 3.4330928178543053`*^9}, {
  3.4330928609915133`*^9, 3.4330928772230597`*^9}, {3.4330930514044647`*^9, 
  3.4330930586211977`*^9}, {3.433093735210875*^9, 3.433093744666276*^9}, {
  3.433203062831579*^9, 3.4332030637378526`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"f", " ", "=", " ", 
  RowBox[{"Exp", "[", "z", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"ser", " ", "=", " ", 
  RowBox[{"Series", "[", 
   RowBox[{"f", ",", 
    RowBox[{"{", 
     RowBox[{"z", ",", "0", ",", "6"}], "}"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.4329161124720554`*^9, 3.4329161129564395`*^9}, {
   3.4330236520503826`*^9, 3.433023787818614*^9}, {3.433023823131792*^9, 
   3.4330240379796667`*^9}, {3.4330240770897927`*^9, 
   3.4330241292470446`*^9}, {3.4330246591947193`*^9, 3.433024959981744*^9}, {
   3.4330254218812375`*^9, 3.4330254518349376`*^9}, {3.4330256315102625`*^9, 
   3.433025718933816*^9}, {3.433025752450084*^9, 3.433025867717922*^9}, {
   3.4330927350089006`*^9, 3.433092749140236*^9}, 3.433093732562429*^9}],

Cell[BoxData[
 SuperscriptBox["\[ExponentialE]", "z"]], "Output",
 CellChangeTimes->{3.529251796112435*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"1", "+", "z", "+", 
   FractionBox[
    SuperscriptBox["z", "2"], "2"], "+", 
   FractionBox[
    SuperscriptBox["z", "3"], "6"], "+", 
   FractionBox[
    SuperscriptBox["z", "4"], "24"], "+", 
   FractionBox[
    SuperscriptBox["z", "5"], "120"], "+", 
   FractionBox[
    SuperscriptBox["z", "6"], "720"], "+", 
   InterpretationBox[
    SuperscriptBox[
     RowBox[{"O", "[", "z", "]"}], "7"],
    SeriesData[$CellContext`z, 0, {}, 0, 7, 1],
    Editable->False]}],
  SeriesData[$CellContext`z, 0, {1, 1, 
    Rational[1, 2], 
    Rational[1, 6], 
    Rational[1, 24], 
    Rational[1, 120], 
    Rational[1, 720]}, 0, 7, 1],
  Editable->False]], "Output",
 CellChangeTimes->{3.529251796112435*^9}]
}, Open  ]],

Cell[TextData[{
 "\n(b) A series like ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    UnderoverscriptBox["\[Sum]", 
     RowBox[{"i", "=", "0"}], "\[Infinity]"], 
    RowBox[{
     SubscriptBox["a", "n"], 
     SuperscriptBox["z", "n"]}]}], TraditionalForm]]],
 " may not converge for all complex values of z.  In general, the series will \
only converge when |z| is less than some \"radius of convergence\".  Two \
techniques for determining the radius of convergence ",
 StyleBox["R",
  FontSlant->"Italic"],
 " are the Cauchy limit test, ",
 Cell[BoxData[
  FormBox[
   FractionBox["1", "R"], TraditionalForm]]],
 "= ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    UnderscriptBox[
     RowBox[{"lim", " "}], 
     RowBox[{"n", "\[Rule]", "\[Infinity]"}]], "|", 
    FractionBox[
     SubscriptBox["a", 
      RowBox[{"n", "+", "1"}]], 
     SubscriptBox["a", "n"]], "|"}], TraditionalForm]]],
 ", and the Cauchy-Hadamard limit test, ",
 Cell[BoxData[
  FormBox[
   FractionBox["1", "R"], TraditionalForm]]],
 "= ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    UnderscriptBox[
     RowBox[{"lim", " "}], 
     RowBox[{"n", "\[Rule]", "\[Infinity]"}]], 
    SqrtBox[
     RowBox[{"|", 
      SubscriptBox["a", "n"], "|"}]]}], TraditionalForm]]],
 ".  Evaluate the cells below, where both tests agree on an infinite limit of \
convergence for the series expansion of ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["\[ExponentialE]", "z"], TraditionalForm]]],
 " at ",
 StyleBox["z",
  FontSlant->"Italic"],
 " = 0.  This simply means that the series expansion converges for any value \
of ",
 StyleBox["z",
  FontSlant->"Italic"],
 " (as we might expect)."
}], "Text",
 CellChangeTimes->{{3.433092843253105*^9, 3.433093020115192*^9}, {
  3.433093063156644*^9, 3.433093389854488*^9}, {3.433093446995777*^9, 
  3.433093518683016*^9}, {3.4330941315961227`*^9, 3.433094164165374*^9}, {
  3.442874000245879*^9, 3.442874004511477*^9}}],

Cell[BoxData[{
 RowBox[{"cauchytest", ":=", 
  RowBox[{"Limit", "[", 
   RowBox[{
    RowBox[{"Abs", "[", 
     RowBox[{
      RowBox[{"cof", "[", 
       RowBox[{"n", "+", "1"}], "]"}], "/", 
      RowBox[{"cof", "[", "n", "]"}]}], "]"}], ",", 
    RowBox[{"n", "\[Rule]", "Infinity"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"cauchyhadamardtest", " ", ":=", " ", 
  RowBox[{"Limit", "[", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"Abs", "[", 
      RowBox[{"cof", "[", "n", "]"}], "]"}], "^", 
     RowBox[{"(", 
      RowBox[{"1", "/", "n"}], ")"}]}], ",", 
    RowBox[{"n", "\[Rule]", "Infinity"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.4329161124720554`*^9, 3.4329161129564395`*^9}, {
  3.4330236520503826`*^9, 3.433023787818614*^9}, {3.433023823131792*^9, 
  3.4330240379796667`*^9}, {3.4330240770897927`*^9, 3.4330241292470446`*^9}, {
  3.4330246591947193`*^9, 3.433024959981744*^9}, {3.4330254218812375`*^9, 
  3.4330254518349376`*^9}, {3.4330256315102625`*^9, 3.433025718933816*^9}, {
  3.433025752450084*^9, 3.433025867717922*^9}, {3.4330927350089006`*^9, 
  3.433092749140236*^9}, {3.433093395033349*^9, 3.433093413779523*^9}, {
  3.433093671442987*^9, 3.433093673344874*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"cof", "[", "n_", "]"}], " ", ":=", " ", 
  RowBox[{"1", "/", 
   RowBox[{
   "n", "!"}]}]}], "\[IndentingNewLine]", "cauchytest", \
"\[IndentingNewLine]", "cauchyhadamardtest"}], "Input",
 CellChangeTimes->{{3.4330934088868523`*^9, 3.433093439114934*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.529251839781125*^9}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.529251839871122*^9}]
}, Open  ]],

Cell[TextData[{
 "\n(c) Consider the series,  ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    UnderoverscriptBox["\[Sum]", 
     RowBox[{"i", "=", "0"}], "\[Infinity]"], 
    RowBox[{
     SubscriptBox["a", "n"], 
     SuperscriptBox["z", "n"]}]}], TraditionalForm]]],
 ", where ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["a", "n"], "=", 
    SuperscriptBox[
     RowBox[{"(", 
      FractionBox[
       RowBox[{"n", "+", "3"}], 
       RowBox[{
        RowBox[{"2", "n"}], "+", "1"}]], ")"}], "n"]}], TraditionalForm]]],
 ".  Evaluate the cell below to see that the radius of convergence is finite \
(",
 StyleBox["R",
  FontSlant->"Italic"],
 " = 2)."
}], "Text",
 CellChangeTimes->{{3.43309354348145*^9, 3.4330936409740353`*^9}, {
   3.433093689706449*^9, 3.433093691296414*^9}, {3.433093773065126*^9, 
   3.4330938355249662`*^9}, {3.4330941990590773`*^9, 3.433094228758924*^9}, 
   3.433201570465251*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"cof", "[", "n_", "]"}], " ", ":=", " ", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"n", "+", "3"}], ")"}], "/", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"2", "n"}], "+", "1"}], ")"}]}], ")"}], "^", "n"}]}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{"1", "/", "cauchytest"}], "\[IndentingNewLine]", 
 RowBox[{"1", "/", "cauchyhadamardtest"}]}], "Input",
 CellChangeTimes->{{3.4329161124720554`*^9, 3.4329161129564395`*^9}, {
  3.4330236520503826`*^9, 3.433023787818614*^9}, {3.433023823131792*^9, 
  3.4330240379796667`*^9}, {3.4330240770897927`*^9, 3.4330241292470446`*^9}, {
  3.4330246591947193`*^9, 3.4330249118245697`*^9}, {3.433025019686015*^9, 
  3.4330251814078703`*^9}, {3.433025215064767*^9, 3.43302531887926*^9}, {
  3.4330253797554283`*^9, 3.433025404349651*^9}, {3.43302549388262*^9, 
  3.433025516664307*^9}, {3.4330255834468393`*^9, 3.433025616353721*^9}, {
  3.433025886655786*^9, 3.4330258952184505`*^9}, {3.433093646033526*^9, 
  3.433093683664667*^9}}],

Cell[BoxData["2"], "Output",
 CellChangeTimes->{3.5292518575305924`*^9}],

Cell[BoxData["2"], "Output",
 CellChangeTimes->{3.5292518575605917`*^9}]
}, Open  ]],

Cell[TextData[{
 "\n(d)  Here, we test the radius of converge (",
 StyleBox["R",
  FontSlant->"Italic"],
 " = 2) by numerically evaluating the series  ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    UnderoverscriptBox["\[Sum]", 
     RowBox[{"i", "=", "0"}], "\[Infinity]"], 
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       FractionBox[
        RowBox[{"n", "+", "3"}], 
        RowBox[{
         RowBox[{"2", "n"}], "+", "1"}]], ")"}], "n"], 
     SuperscriptBox["z", "n"]}]}], TraditionalForm]]],
 " for several different values of ",
 StyleBox["z",
  FontSlant->"Italic"],
 ".  Explain the output to your TA."
}], "Text",
 CellChangeTimes->{{3.4330937091523447`*^9, 3.433093711360126*^9}, {
  3.4330938413481894`*^9, 3.4330939341595497`*^9}, {3.4330939941145353`*^9, 
  3.43309399929669*^9}, {3.4332015751059947`*^9, 3.433201675639818*^9}, {
  3.433203079222624*^9, 3.43320308120705*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"cof", "[", "n_", "]"}], " ", ":=", " ", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"n", "+", "3"}], ")"}], "/", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"2", "n"}], "+", "1"}], ")"}]}], ")"}], "^", "n"}]}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"g", "[", "z_", "]"}], " ", ":=", 
   RowBox[{"NSum", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"cof", "[", "n", "]"}], "*", 
      RowBox[{"z", "^", "n"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "0", ",", "Infinity"}], "}"}]}], "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"g", "[", "I", "]"}], "\[IndentingNewLine]", 
 RowBox[{"g", "[", 
  RowBox[{"1", "+", "I"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"g", "[", "3", "]"}], " ", 
  RowBox[{"(*", 
   RowBox[{
   "outside", " ", "raduis", " ", "of", " ", "convergence", " ", "and", " ", 
    "therefore", " ", 
    RowBox[{"no", " ", "[", "finite", "]"}], " ", "solution"}], " ", 
   "*)"}]}]}], "Input",
 CellChangeTimes->{{3.4329161124720554`*^9, 3.4329161129564395`*^9}, {
   3.4330236520503826`*^9, 3.433023787818614*^9}, {3.433023823131792*^9, 
   3.4330240379796667`*^9}, {3.4330240770897927`*^9, 
   3.4330241292470446`*^9}, {3.4330246591947193`*^9, 
   3.4330249118245697`*^9}, {3.433025019686015*^9, 3.4330251814078703`*^9}, {
   3.433025215064767*^9, 3.43302531887926*^9}, {3.4330253797554283`*^9, 
   3.433025404349651*^9}, {3.43302549388262*^9, 3.433025516664307*^9}, {
   3.4330255834468393`*^9, 3.433025616353721*^9}, {3.433025886655786*^9, 
   3.4330258952184505`*^9}, {3.433093646033526*^9, 3.433093658480473*^9}, {
   3.4330939607694187`*^9, 3.433093976976737*^9}, 3.433530734096799*^9, {
   3.529251908699057*^9, 3.5292519301884127`*^9}}],

Cell[BoxData[
 RowBox[{"0.28003952714460223`", "\[VeryThinSpace]", "+", 
  RowBox[{"0.8611540352827103`", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{{3.5292518673802967`*^9, 3.529251894739476*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "0.26081036497622123`"}], "+", 
  RowBox[{"2.9437329024163708`", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{{3.5292518673802967`*^9, 3.529251894739476*^9}}],

Cell[BoxData["ComplexInfinity"], "Output",
 CellChangeTimes->{{3.5292518673802967`*^9, 3.5292518947494755`*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["(#13) The residue theorem (10 min)", "Subsubsection",
 CellChangeTimes->{{3.43291643250945*^9, 3.432916476479044*^9}, {
  3.4330259930328283`*^9, 3.433025994376604*^9}, {3.4330260541277514`*^9, 
  3.4330260780032096`*^9}, {3.4330261089413033`*^9, 3.4330261090038047`*^9}, {
  3.4330907954272957`*^9, 3.43309079679529*^9}, {3.433100129305299*^9, 
  3.433100132532735*^9}, {3.433203146521222*^9, 3.4332031466618505`*^9}, {
  3.4332036223459024`*^9, 3.4332036225021563`*^9}}],

Cell[TextData[{
 "An important theorem of complex analysis states that when we integrate a \
function along a right-handed closed path in the complex plane (e.g. a \
circle), the result is equal to the 2\[Pi]",
 StyleBox["i",
  FontSlant->"Italic"],
 "  times the sum of the residues of any poles enclosed by the path.  This \
theorem turns out to be a powerful tool for solving really hard definite \
integrals.  The purpose of this exercise is to obtain the residues of a \
function by computing circular path integrals in the complex plane and to \
help you to visualize the whole concept.\n\n(a) Evaluate the cells below.  \
The first cell defines ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"g", "(", "z", ")"}], " ", "=", " ", 
    FractionBox["3", 
     RowBox[{"(", " ", 
      RowBox[{"z", "+", 
       SuperscriptBox["z", "3"]}], ")"}]]}], TraditionalForm]]],
 ", which has three poles in the complex plane (",
 StyleBox["z",
  FontSlant->"Italic"],
 " = -",
 StyleBox["i",
  FontSlant->"Italic"],
 ", ",
 StyleBox["z",
  FontSlant->"Italic"],
 " = 0, ",
 StyleBox["z = i",
  FontSlant->"Italic"],
 " ), and computes its Laurent series around the pole at ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["z", "0"], TraditionalForm]]],
 " = 0.  The second cell plots g(x) in the region of the complex plane \
containing the poles and also shows the integration path (defined \
parametrically) as a thick black circle.  The third cell prepares and \
executes the path integral.\n\n(b) Now change ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["z", "0"], TraditionalForm]]],
 " and ",
 StyleBox["r",
  FontSlant->"Italic"],
 " and reevaluate the cells below in order to try the integration around each \
of the other two poles.  Make sure that the integration path encloses only \
one pole at a time.  Record (on a piece of paper) the residue of each pole.\n\
\n(c)  Change ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["z", "0"], TraditionalForm]]],
 " back to 0 and make ",
 StyleBox["r",
  FontSlant->"Italic"],
 " large enough to include all three poles.  Verify that this larger path \
integral yields the sum of the enclosed residues."
}], "Text",
 CellChangeTimes->{{3.432916484291694*^9, 3.432916573090274*^9}, {
  3.432916670060886*^9, 3.4329166849830475`*^9}, {3.43309758879572*^9, 
  3.4330975926107903`*^9}, {3.4330976636914873`*^9, 3.4330978896051817`*^9}, {
  3.433097977719325*^9, 3.433098283463173*^9}, {3.433099845433208*^9, 
  3.433099874037698*^9}, {3.43310014881365*^9, 3.4331001715901957`*^9}, {
  3.433100309450761*^9, 3.43310032905993*^9}, {3.433102644723119*^9, 
  3.433102804187496*^9}, {3.433102896502488*^9, 3.433102940648197*^9}, {
  3.433102989804809*^9, 3.433103230232378*^9}, {3.433103543103356*^9, 
  3.433103605029059*^9}, {3.4331036810092154`*^9, 3.433103967504189*^9}, {
  3.433104068942431*^9, 3.433104227190669*^9}, {3.433104449176092*^9, 
  3.4331044492935658`*^9}, {3.442874354821735*^9, 3.442874395008978*^9}, {
  3.4903721923733034`*^9, 3.490372195620303*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"g", "[", "z_", "]"}], " ", ":=", " ", 
   RowBox[{"3", "/", 
    RowBox[{"(", 
     RowBox[{"z", "+", 
      RowBox[{"z", "^", "3"}]}], ")"}]}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"z0", " ", "=", " ", "0"}], ";", "  ", 
  RowBox[{"r", "=", " ", 
   RowBox[{"3", "/", "2"}]}], ";", "  ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"z0", " ", "is", " ", "the", " ", "expansion", " ", "point"}], 
    ",", " ", 
    RowBox[{
     RowBox[{"r", " ", "is", " ", "the", " ", "integration"}], "-", 
     RowBox[{"path", " ", "radius"}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"Series", "[", 
   RowBox[{
    RowBox[{"g", "[", "z", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"z", ",", "z0", ",", "6"}], "}"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.432911838514997*^9, 3.432911871265626*^9}, {
   3.4329119403450775`*^9, 3.4329119508452787`*^9}, {3.432912086176002*^9, 
   3.432912086597885*^9}, {3.4329122130846887`*^9, 3.4329122610856104`*^9}, {
   3.4329123338057566`*^9, 3.4329123338526325`*^9}, {3.4329123701033287`*^9, 
   3.432912646874267*^9}, {3.432912758845167*^9, 3.4329127850331697`*^9}, {
   3.432912858112698*^9, 3.4329128939258857`*^9}, {3.433012184173953*^9, 
   3.433012213283887*^9}, {3.4330122436282196`*^9, 3.433012467023134*^9}, {
   3.433012510039585*^9, 3.4330126479328575`*^9}, {3.4330127363876805`*^9, 
   3.433012813326658*^9}, {3.433012861155701*^9, 3.433012972439088*^9}, {
   3.4330130123929796`*^9, 3.433013307304892*^9}, {3.4330133539932885`*^9, 
   3.4330134318072824`*^9}, {3.4330135014336195`*^9, 
   3.4330136989374113`*^9}, {3.4330137581260476`*^9, 
   3.4330137584698043`*^9}, {3.433013828205518*^9, 3.433013829189912*^9}, {
   3.4330141354145412`*^9, 3.4330145177656326`*^9}, {3.4330145876263485`*^9, 
   3.433014676268676*^9}, {3.433014712378744*^9, 3.4330148457719297`*^9}, {
   3.4330148781319265`*^9, 3.4330149235077977`*^9}, {3.4330149811651545`*^9, 
   3.4330149869933915`*^9}, {3.43301504447887*^9, 3.4330150773857517`*^9}, {
   3.4330151278242207`*^9, 3.433015184325305*^9}, {3.433015222138531*^9, 
   3.4330152617955427`*^9}, {3.433015306093268*^9, 3.433015406204565*^9}, {
   3.433015440611476*^9, 3.4330155431915703`*^9}, 3.433015586442401*^9, {
   3.433015620068046*^9, 3.4330156514592743`*^9}, {3.4330157239919167`*^9, 
   3.4330157439923005`*^9}, {3.433016682479069*^9, 3.4330167159015856`*^9}, {
   3.433020454301487*^9, 3.4330204561140213`*^9}, {3.433081936947554*^9, 
   3.433081953144578*^9}, {3.433097520099688*^9, 3.4330975600674667`*^9}, {
   3.433097599708685*^9, 3.4330976398839006`*^9}, {3.433097953901331*^9, 
   3.4330979727036133`*^9}, {3.433102836590602*^9, 3.433102891479381*^9}, 
   3.4331029732138653`*^9, {3.4331032911986923`*^9, 3.433103399455777*^9}, {
   3.4331034333429937`*^9, 3.43310348634026*^9}, {3.433103637110345*^9, 
   3.433103660038569*^9}, 3.433103753378821*^9, {3.433103970251843*^9, 
   3.4331039744478827`*^9}, 3.4331719969183207`*^9, {3.5292521052531605`*^9, 
   3.5292521523917465`*^9}, {3.5292521935905104`*^9, 3.529252251798764*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   FractionBox["3", "z"], "-", 
   RowBox[{"3", " ", "z"}], "+", 
   RowBox[{"3", " ", 
    SuperscriptBox["z", "3"]}], "-", 
   RowBox[{"3", " ", 
    SuperscriptBox["z", "5"]}], "+", 
   InterpretationBox[
    SuperscriptBox[
     RowBox[{"O", "[", "z", "]"}], "7"],
    SeriesData[$CellContext`z, 0, {}, -1, 7, 1],
    Editable->False]}],
  SeriesData[$CellContext`z, 0, {3, 0, -3, 0, 3, 0, -3}, -1, 7, 1],
  Editable->False]], "Output",
 CellChangeTimes->{
  3.5292519937865047`*^9, {3.529252109903021*^9, 3.5292521541116943`*^9}, {
   3.52925219561045*^9, 3.5292522525187426`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"parametricpath", "[", "th_", "]"}], " ", ":=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"r", "*", 
       RowBox[{"Cos", "[", "th", "]"}]}], "+", 
      RowBox[{"Re", "[", "z0", "]"}]}], ",", 
     RowBox[{
      RowBox[{"r", "*", 
       RowBox[{"Sin", "[", "th", "]"}]}], "+", 
      RowBox[{"Im", "[", "z0", "]"}]}], ",", " ", 
     RowBox[{"Abs", "[", 
      RowBox[{"g", "[", 
       RowBox[{
        RowBox[{"r", "*", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Cos", "[", "th", "]"}], "+", 
           RowBox[{"I", " ", 
            RowBox[{"Sin", "[", "th", "]"}]}]}], ")"}]}], "+", "z0"}], "]"}], 
      "]"}]}], "}"}]}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Plot3D", "[", 
    RowBox[{
     RowBox[{"Abs", "[", 
      RowBox[{"g", "[", 
       RowBox[{"x", "+", 
        RowBox[{"I", " ", "y"}]}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "3"}], ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", 
       RowBox[{"-", "3"}], ",", "3"}], "}"}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<x\>\"", ",", "\"\<y\>\"", ",", "None"}], "}"}]}], ",", 
     RowBox[{"Axes", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"True", ",", "True", ",", "False"}], "}"}]}], ",", 
     RowBox[{"MeshStyle", "\[Rule]", "Gray"}], ",", 
     RowBox[{"PlotPoints", "\[Rule]", "20"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "10"}], "}"}]}], ",", 
     RowBox[{"LabelStyle", "\[Rule]", "Medium"}], ",", 
     RowBox[{"ViewPoint", "->", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "20"}], "}"}]}], ",", 
     RowBox[{"SphericalRegion", "\[Rule]", "True"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"ParametricPlot3D", "[", 
    RowBox[{
     RowBox[{"parametricpath", "[", "th", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"th", ",", "0", ",", 
       RowBox[{"2", "Pi"}]}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Thickness", "[", "0.01", "]"}], ",", "Black"}], "}"}]}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}], 
  "\[IndentingNewLine]", "]"}]}], "Input",
 CellChangeTimes->{{3.432911838514997*^9, 3.432911871265626*^9}, {
   3.4329119403450775`*^9, 3.4329119508452787`*^9}, {3.432912086176002*^9, 
   3.432912086597885*^9}, {3.4329122130846887`*^9, 3.4329122610856104`*^9}, {
   3.4329123338057566`*^9, 3.4329123338526325`*^9}, {3.4329123701033287`*^9, 
   3.432912646874267*^9}, {3.432912758845167*^9, 3.4329127850331697`*^9}, {
   3.432912858112698*^9, 3.4329128939258857`*^9}, {3.433012184173953*^9, 
   3.433012213283887*^9}, {3.4330122436282196`*^9, 3.433012467023134*^9}, {
   3.433012510039585*^9, 3.4330126479328575`*^9}, {3.4330127363876805`*^9, 
   3.433012813326658*^9}, {3.433012861155701*^9, 3.433012972439088*^9}, {
   3.4330130123929796`*^9, 3.433013307304892*^9}, {3.4330133539932885`*^9, 
   3.4330134318072824`*^9}, {3.4330135014336195`*^9, 
   3.4330136989374113`*^9}, {3.4330137581260476`*^9, 
   3.4330137584698043`*^9}, {3.433013828205518*^9, 3.433013829189912*^9}, {
   3.4330141354145412`*^9, 3.4330145177656326`*^9}, {3.4330145876263485`*^9, 
   3.433014676268676*^9}, {3.433014712378744*^9, 3.4330148457719297`*^9}, {
   3.4330148781319265`*^9, 3.4330149235077977`*^9}, {3.4330149811651545`*^9, 
   3.4330149869933915`*^9}, {3.43301504447887*^9, 3.4330150773857517`*^9}, {
   3.4330151278242207`*^9, 3.433015184325305*^9}, {3.433015222138531*^9, 
   3.4330152617955427`*^9}, {3.433015306093268*^9, 3.433015406204565*^9}, {
   3.433015440611476*^9, 3.4330155431915703`*^9}, 3.433015586442401*^9, {
   3.433015620068046*^9, 3.4330156514592743`*^9}, {3.4330157239919167`*^9, 
   3.4330157439923005`*^9}, {3.433016682479069*^9, 3.4330167159015856`*^9}, {
   3.433020454301487*^9, 3.4330204561140213`*^9}, {3.433081936947554*^9, 
   3.433081953144578*^9}, {3.433097520099688*^9, 3.4330975600674667`*^9}, {
   3.433097599708685*^9, 3.4330976108483677`*^9}, {3.4330976416130047`*^9, 
   3.433097643492508*^9}, {3.433102841346714*^9, 3.433102869109619*^9}, {
   3.433103977100994*^9, 3.433103983420609*^9}, {3.5292520178857813`*^9, 
   3.529252035645249*^9}}],

Cell[BoxData[
 Graphics3DBox[{GraphicsComplex3DBox[CompressedData["
1:eJy9vXV4FUnQ/5vgEAIEJ7i7a1igB3d3d3dYbIHF3d0liwULwQME5oQAwSEE
OECQJMjBI0hICHD55dS35p0i5977Ps997v5znnzo7emu6q6uru6pyd9nZJv+
SZycnPa5ODkl/f07ZOmWe79+pbTg9+Gwe7PdsuxUrxb3q1Z3UnLmKXctX3V2
7x7VZ1HJTXOjkzCv4b4jW97n+9XTBdE/rgx1Yv4qa94VF/r7qKMZxvq7X/2u
g0+ukqRSXOmjap+r8zxPv6/MA26nnv+6ygnlmWZZs2KHopif+nDwyIt2p1S5
9NUL9aj7hvnos0H7Jtf0UzUzHuhhbfWU+cva5341WXROVUp7+c2LyheYP2oy
ts+Xu7rKaOeK+0u8lL0e5q+onmL25zIfR8/dYm8n8zPUzt32fjG/RP06ZJeD
knJ4bJebBv6a5NbLLmfmtUnOL+x6Ye5CeqG/NalH7g/ps/mbTwWuddzD+sVv
yVHfdngkPcD6BS+zu2GHV498WL/glYPKv3zf9BjrF3xRjMv5Bb18Wb/gZwtm
Ot8m/VnWL3jLbos2Ds7oz/oF75Ei99G/1gSwfsGPjV3gsu3gRdYv+HGn4bPf
vLjE+gU/QRz65fJUD/QL3pOeC/2Ct6F2Qr/gFuoX9Au+jOQA/YJXI7lBv+Dl
Sc7QL3g50gv0K/UI/UJvRe5FtwpKtp/bAZ7kzLGkneb7sH7x26F/PtfJXY+x
fsGP+vy6M6fMKdYv+I8nlV63q6SzfsEP73185nSDANYveOtz+6ZMXRbI+gV/
55HWt3Kh66xf8NdbTi3uWvA26xd8/PEy762Dg1i/4OOIQ7/gb6ke6Bc8gp4L
/YK3o3ZCv+DHqF/QL3jSp3Y5QL/gJ0lu0C94F5Iz9AuenPQC/Uo9Qr/QT/38
a0Zudz3E+gXf/iFi7ch+R7l94F8rr/lvzERf1i9+52zRVy4orbN+wT3eZX86
J/kF1i/4A8/VnpvvXmH9sj3wiy97eett1i944VTtXDO73GP9gvcbtmzSwGUP
Wb/g/Re+Wlpk32PWL/gg4tAvc6oH+gUvTs+FfsHfUjuhX5YH9Qv6Ba9JcoB+
wReR3KBf8DiSM/QLvoP0Av1KPUK/0MOYaqkyVNl7mPULXmLPv0eKzDrB+gUv
Mvt1xO58Z7nd4EviJ0WULxTA+sVvixl7atVefoX1y/o/Hfc2c/sg1i/42JDe
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
7quiCXJ4wfzNy/LNW2x/okol8LvMl64v0eto1nCV115egUdS+SIJ/LNeJkFO
sXqa5UUv2a5Z+bngz09cnDAwWxg/F7x28MUvu2+/5ueC7622vPz5/lHK3c4V
uDdxtAe8EdVT3v5c5q/puWgnfv2KFHN/4RbK7QRfmi8yZeVKb7id4H383bvU
LfSF2wne4+T3rJu3JdXQTvBBxNFO8CFUD9oJvo6ei7/RrhQ3pof+PPmC24nf
oikvTVg3MorbCV7Ca0mpb7WcNC5H/x7YP0nXid+N9oN/eD54dEzGLNx+8Fji
+Bv/37tdrQ50T5Jaw9/49Q1xnvCsszvXA36ZOP7Gv+uiPH5vE4fcwH+I5+Lf
I0T7wb8Th5zB75Mc8Df+vRrJDX/jtwLJuYBdL8zdhF7w76vF+AEfIsYP+FAx
fsAniPEDPlaMH/Bt9Fz8jd+LYpyXsM8L9VrMR/BmYj6CHxXzEdxXzEfw1mI+
gn+k56J94NnIbqA9lex2Rn0hO4Pngq8Xdgk8nsrjueBDye55JdjnFBb8VvYo
lK7oZmMdBL+fJuO0y1671B7735qD8posDzlvT1gfnC2trUU6PE95iznfpyoe
OrBpwB3uL8oPabd6yoLDBkf5JP3fW553s7JeUL5/qex5M7W4xxzlm4Tvftd7
cAjF7/39UN4/e66BLTrfZw573vLmprkflj3ndmLdvuE1YM3f70K4PeAPhtys
Ojrdc34u+Psd578P2/aa9YX6V5C+8FzY50dpunVs3+0zr78o3y7nKH3UklC2
4/h90DOzz/DXRnwGPOvcJTvTO99l/wG84/l1szz/fsx2Ff9fnjQ5f/y8GMJ+
Bcpr7TYlGb7emNd8j+XZ25fWRy/Y30D5fO2v37jr84Hlg/KBW/zC52uRLB/w
+s1WjH/iFct+COrp57TlWreZn1gO4MWofvyNfjRLVSs86bR7LAfwW6l7/7QU
fsRyAN+ReWTvu/HPub/g/w5qUuNU0UjuL/4/l792fg2L+cD9Rfnn3m8yvOgf
z/3l+x5Tcpb6cTWO9YvyO5cPqOxkS89xS/BMrd3iqmR24bgleBTVj/GDdlUu
sWrqsRSZ2B6CVxR2G7w02W2MJ/Dz6Ru+a7MhiOUJ7rRnXK3lbR+xPHke5Let
mNc/lOUJvvvNiyrBW96yPMEvHjj0qczgGNY7eH5qP+TDz8X5GpVHfWq2dZr3
+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
DrTpmcrYR4CPFfsI8I5iHwFeR+wjpBwgTyk3yBPvvVYQ+1bwILFvBb8m9q3g
HmLfyvm0TftKG/MTtA9FfICfS/tWyFm+5ws5g+fL+tRp50ljnws+IG/1uHnb
jH1u4u2JUbL9kLPsL+Qs5QM5S3lCzsjn+kXEYcC3ijgMeBURhwF3EXEY8LQi
DgNeXsRhwJuJOIzMaw05y/KQM3gFEYcBTy/iMOBpRBxG9hdylvKBnME/izgM
8uNOEnFazhct4rHg10TcFdxXxFfBvUUcFTy9iJeCXxVxUZl3GnKW5SFn8HQi
ngl+UMQtOd+1iE+C3xBxSM5TLeKN4BNFXBH3HhEnF/FwDfFwEffWEPcW8W0N
8VURx9YQxxbxas0cr+a4tIa4tIg/c/5nEWfWzHFmjidriCeLuLH21tQejg9z
+0UcWEMcWMR7NcR7RVxXE3FdS/6nBSb6zU1pGdRPG+S0eC/L+UFpL/dJrikt
XrvbLxnT1oflvHRq6bOVV6ewNGy/c0pw+DGWc4MbR3pGu6ewjH69dGv82tMs
5x+5qiU55JnckvFLgfpxR4zx7DHia+1ih1JaToR3/lYxvxHnjzw7+cWLyikt
4eOb+g/Z489ypnwIlsxtg92PDOTxr3p0n1u8R90UltqzWh3aERrAcs5y0OW6
+9XklqONj79v5GKM59Y/r7istqa05K69c9Wi5Yac6b6tZVKXhfdb+bOdVJYt
d1u5vkxhKZNmXu/M+4+ynMd/6PzpytAUlvGjOh2I9fZhOZeu+WzN3Ojklkyj
vPZW+rHf8Evpt5Bzkbj3/bxZzu1KjZzqNzeZpcC+tIXrxB1lOaeZ8jnvJNdk
lmHznw/YM+I0y/n8tUnnK69OavH4WaR+7hn+LOdJOX/1i3ZPalmyP7K60y+e
1/rxYWd3Di2W3OJ2w5Z3aMmLLOdhfnUaFjuUzPLdZ1HT2VeusJwLJuy/klnu
Ve7v3ewx23P1qGvzxZ5+SS09G4c9KtLpBst5xf47ZXrUTWopETY5vE/7ayzn
G/HLR1hbJbcUH739gHdlf5bz7GZZ3VZbk1lar9zUdNX6syznGps3HW3VI5ll
xfrxqb1O+7Kco9/l6+D6Mqnlxoci53a15/VO2/vX7m9Xhia15G5Y7uiddSx/
S44Qn5p1JyWxuN3517l78iMsZ7Yf7jWmaUN8Wc5z/zkz02+usyU+OsuqRhfZ
vum1rmqFJ7k6W4pkqZLVqUEgy/lLjkuBlVc7WQbeD5npVtZY17ZR/ttLlMcJ
cuvQJXPEi8rOFq1i7y37krK/p1z3bVjh6edkeX5a+5FrxF2WW+PvHYPcryax
LO0WO+LWUWNdc2r6ZKy1VRJLttNDZw8fz/658t3YJ+tqq7Pl5oqg6K7ldZbb
iLc231Y9nC1Ohc7ePeXny3IrXH14V9eXTpYsyXKc9V95lOVW4miE5vryl/5o
wdaYU1WPs9zWt4mbMzf6p15Er5Zj+G7Wl47fqgU7XXOveJHlNpbegyvQ9qfV
yfkWyy28nHv7aPd4/Waf7NUm5zTi5FXofbr2lO8Lctt5+MSOVj1+6NMWp+yk
5j5nuWVs7f/6ytB4/a/tZzdviHrGcrsQm6dSj7pOlqubD3wvtc/wu76tbHSw
8upf+pnODy/PCeB9sRpYoW20t+dP/U6fo4Wj/gtguQUHda9a7NAP3bt07PvJ
L8+y3GqPHjTF0y9e/xQ2M6JQ2AnDfvpMTbHaGqdf6dVk2RkfHreWZS3nN3V9
Gas/q5qzXM9L/iy37x9XLp8b/U3vdLD30CJjr4p16vfvtxR720QEs9weJtjh
GP1IiwWvR7Q09lOl6H3G55Q/DXLb6F1vsLXVN71Q17f1Sy+LZrnZ36eI0Rfu
2pi08oU3LLfpkddK1530XQ/qUPKGh5+xL4ig9wjyV5882T1ZEMutR9mwk5VX
x+qWBa+ed5h2meV29ea7eG/Pb3rr+atqP7b6s9yqJdj5GH3D4qSP+/dmP9aS
PcE+f9F3Rb9ecVZjf8wyN8E+fNYvB85JHhJ+geVmtwOf9Ma37pZMn5P1S+d9
0fpa/6Kx2uSHLDf8vtk7PMfs7q9YboXofYQTlGcP8rHPr2j9cNsHWZyyfmb5
TEiw8191r6L7vk68YZwjvKL3Hf57ve7p/Pz3WT7tE+z5Z923WXzLuF83WD7+
CXb7k+65eMOxBi8vsHzKDp2d8pBntD7sZKHPnUJ4vFnSJ9iHSL3EjdkbK3vy
vLbEJoznCP3oh7ffmoQGsnyCEsbtB71o6JZJDRrdYfn4UB6Dk0erny5clOeL
vjRhfL7RNx8+9Sv7qfc8ftwS5td7vctit0KV4jOwfD4mjIe3+q2ZmdqebRbP
8rHbmSi9eO3GgzpHGHGMJ3SP7vb0xX0fPTHiGHZ78lHXtnT+WeSBEccYnWA3
Puhda0++2MQayPJpdrvQxqHF3um1H41q3n6GEedJmzCebfrhfLYGZWv5s3xs
CXp5qQ/vMOHqyz5XWT56gvyf61+G/pOt2Z67LJ9t9P7Uk2cu/bP/4v2ybpfz
Mz1y5lHbTlcjHviryf8ZJ+F6jpu2xjeaZWL52PdlofqhUaWyTF3lzPFAL3qf
5nK5bFc3njTiXfZx/kIPOJg/6svQuyyHngnjOVy/X3pctevtr7Ic/kpYj8L0
ndGT/BZYeH5ZPifo5ZF+ZOa8Ws1qGXFR+3s89/UZJRdNrpfeiA93S6j/jt52
dZ/lY2rcZzlUofdgHvjH9vw56znLwV7PJX33zWGZ3+w34sP2/t7WRxbfnDTy
fTYjLppgl67o7S272vhkTKahv28S9HJPX/+q7rHgVve5v5sS5B+kb67SMih7
CiMOvCth3F7TA+fGHdg2y4h/Nkio/9Qf5wINE+b1zj/OBTom8NV/xMPz032f
Vjtvd2521eivvT3+6sXeYpGlzxn9rZ4gH2/V4sGr8yNccxvnAgn8nGp3q/a1
LZuN/g60P/eP+L+yt/OPuHcde7+UjP/vsMtBXSI5oL/29/iC1BaSG/prfw/r
ntpAckZ/S9J7VRMHDv/rlb8R9x6VMO+eqKnb+2+vp6J4vbDbjRD16XLmW4Gr
kmho/377uFIYV2j/J/s4VBiHaH91+7hVGLdoP41zdY/GOftj9nmhMC/QfppH
CvMI7bevO6+V2+by/ZrWNeLVDRP2I6/UOMuE+Cd1M7K+8FukdaFtjw7+ZL2Q
3VDDyG6gX2RnFOwM+kV2ScEuoV9kx1QXsmPoF9k9VYvsHvpFdlLBTqJfZFeV
2a5a1YHBTYdEu0eqVxciZlX/mI77ZfdXo1TnLVNXBo/7yv2i9UIdofUC/aL1
RRWj9QX9ovVIDaf1CP2i9Uth/UK/aL1TJ2m9Q79ofVSetD6iX7Seqj20nop1
WZ0R67Jdj19Vz3key2Laf2D7Sf6AakL+APpL/oMKJP8B/SV/Q+0gfwP9Jf9E
wT9Bf8mfUfBn0F/yf5Q/+T/oL/lLCv4S+kv+lYJ/Jfw3FWry32yqVcK4+q7S
1p8Y+KOEcX5EfqPqSH4j+kt+poKfif6SX6qukl+K/pIfqz6TH4v+kt+r4Pei
v+QnqyDyk9Ff8quVH/nV6C/54Rr8cOHnK+nnXx7jmaNH3V/KZ9bLmZlyhLIc
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
GaN7Jn6+o28gLs4T1RCqR7wHqqaTPKeY730pn7/3atVf5GA5gH97+TlT9gX5
qV/ePN7iyb867Gbyu/RfxP3N5VUccbO+bHqfMT5Fim75g6vexM3545ycSpMf
btajVb/r8z3jlLLSrlr1B8RFeRWceHmF8jnpPqe0qxdze1Zv4+epy/k4LHZQ
rXTF7/yxXhP/Y31vmsdUD9df62uFjVU67/x//dw+dq7+/24PvjeMe8I4f8f3
dME30Xk9vhfLeTnofB/fQwWvTPcB6F4Bcze6V1Cf/B+ZbwTfCwTHvQV8hw88
lO454Ptn4AfovgS+EwbekO5X4DtY4LiPge828XeY6f4Gvh+M87gndD+E7pMw
z0j3SfD9V3DcP9lojhdZcL+lhzleZDlP92HoXg1z3KvB97rAfegeDr4vBY57
O/heL/yBknQvCN+jBX9K94jems9h9eoUH5tnPm/Vcc6L74SB4/4SvmvF54N0
34nOl3lfGUvny17CfuLcHN/BAsf9K7oPxuc+uA+G722AZ6T7Y8gPBY57dPj+
Bzju3eG7ZeDZ6Z4evrMFjnt9+D4H7NVbujeIfL5sVx/b7z3i+2fg3+meJL7X
BT6A7lVWpjx3mOm4t1lKnGvgnie+EwxeieIV5vxTTk7lyA4j7x447p3ie2zg
j+j+Kr4fBj6C7rtuNJ9bqVMUb19pPp9Slyk+39B8TqT+pnMTfIcMHPdynczn
dAr7C7o/zPf9cH+Y7hszn0X3jfG9bfDhdD95uvncVh2m+8wTzPd21CC6/4zv
+YE/pPve+P4c3z+h++H4Xho47pPj++hY93FfHd//Bsf99gjzObvCffhX5vtL
aj3dn8f3BcFx/x/fwwM/SO8L4Ptt4Pvo/QJ8d5y/60jvL+C72uB43wHfkwbH
+xH43h443uPA9+HA8d4Hvs+N+DneK6H3UJh70Xso++g7r+BX6d4FvpMKvoLu
b+D7c+B4/4Xer+F7dHi/ht7T4fts/eg9nVqUDxT2KoLed8B3O7C+96T79jPM
/rDePOWERuvzJ9UOm/c7Ou7f4vtYHAfDPStz/Qr3+XuZ7/+rflT/efP9/9/7
F3v5Mub2q8/Ufnfzexwqjvh5F9P9TL6vktV8n1nf3y2o5j8Nf9tV831mfczJ
jHnGtA1TXub74frCfztrNfMY31tCfzcSx/dUYAcy0/2B5GY7r6ZT/enMdl6d
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
    "], {{
      {EdgeForm[None], GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJxFnHccjtX//+/7uu/7mi0NRUM00CTtvQgV2aMokmhICpVKKi2phAolbauI
trRoSntpkRIa2nv9Xs/P6/we3z/O4/26z32u6zrXuc55n/c8Dfue1XFQVCqV
eiSlUkX0xXKpxO+6KsfGpdKbovNEb89Kpdn674i8VLpYeKZwW9V/psYPqtyv
3x30e5XaLxB9vVYqrRX+qFoq3Zn5/0Z6Rj89pKnaz9XvF0QfiHyvBWr/jNov
VvtL1f523WN8USr9JpqqzVTRR9TmTrV5SG0u0++puu5g0cvpn/ChovO4p/A7
ajdS95kl3EL0bJVL6Y/otnqHKcI/qj/3q/0MtVmo33N1/9mij+v+r6v+WJXH
9d/6at+S++raIfr/TtWdLVqo/gjeXfXtRZ9Q/Y4qvdSPjUV/0n0eZXzKHos/
1e5x/f5WdLrovaqfrvr2GpOqft+n3x+KfiV6j8oalbtVRqrNXerbeNHZuufd
kesn6Pc9kdtOFG4d+34b6b0+yXz/3UQj9fNetVsu3EF0geobq1yu39N0zQSN
c3PhGbq2lJZKv6juP/1/s+iFqr9F9CK1+Vn0X9XfxLdRnz/SvSoqu2fuy9d6
7gz182rhe9XPizL36xvVz1T9NcL3qb6Dfk/XfY7SfaapbozKtSpvq81y0ffU
5kDdv1nk+fSO6leIvq/6ndW/34XXib6r+s+EP1D9dOGrGA/hacIjhG8Tfkb4
EeGnha/IPD7/6fn3qf5K4btVP1b9uIu5LdpXY/WDnltH9Dy1n6w2P6j9nsLH
6P87NQ6H6b+t1b9GomNVP0dtqurP9cJzhWvC2+i/B4Qrwh3VdjOVmu47QfdY
p2ddLdpH922j+hNFr9XvH1U/Bqryg/A1or+EOXAJ801t1+keg5k76v8VzAv1
/6wwB0bp9/dl19PvlWr/B9eLvqH2yxhjtT9Y/XxS9QeJtigb76nyg35/KtpP
9Bq1P13tx6t9Z73LbrrHzqKXqL6X6q9W/Vt67jvME5Ufdc0K0f6ibzNHVLqp
XW+VKWVf83HmdbpIY9Ja92uhMq3sZ95W9vM+Fr1V5TThnTJf+4ja/5R5PQwS
fTfys1j/e+gek0SPV/uzNI6D9XuQ6M+Z19Fg0ZtrXkPT1OdTmc+qn6973qi2
H+he3+j3hRrrM9RmX9FT1OZM+J7aTNZ/n6ucUHIf6SvteDZ9oN1AtR8s+rDa
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
3mug8Ot6r8ZhT2dvxy+G/3mn3DytT2Re9mbZe2GrsH+zj2PHnhrZj3FxOehc
8JPMdfg4Bpatp/YNGBv2wMjX01/4LPbEO6se55PUnw1z62Yd9N3Xj63fNeWd
VHdS5LWwQWyZZyfVP5vZPnFf0Guxl+Lv2Dvx/nOH7n1l1W3wI8Dr4fnop7to
3E6JfA08Ed4IyztI1x4i8A5yEDwz6IEvqG8nqK4rMm9sm9knQec6IOhdb8e2
OZyieyyNbUv7uGr99cjI/iZ0XPxN6Lnogh2F9wp9pz/4bH5iPYvm7Cep/V0v
5uZR2Oh+Vl0c9O+/9IyzKrZbnRp0ZXRmeAHPQq+Gxw0M78K79cbeRJ+xFeXW
24/TPZ9kTNnH1ecnauavi6qWwZEr3hD+PPMav1p0duDDT5as14FHB51vvcjx
D7Mi23jhz8jgyDyvVX3t5oGHP17z/8+pfkVmfn4Zelxk2Rt+grw/J/DzOZF1
RmyeldzPwkCGXI88trRqXQFf+VGJbRe8L2O6UW5esV1uvRbZ6fWq5R1kQfgv
uEdkmXAy4xV4KXEn8Dpss//UzI/riX6Qmd8+IvpG5PFkjk0RPTFyu76p7Qq0
OSa3neHhzPoU+3CH3Lyb7/aB7rkktq23bmK+An+5SL+/ih1ngQFvQcXXzqh4
D+kV+vlN7Dl1AnKO8B9qvnniuYHvE1vKB6r/T/VrquaXw1W+hPcl9g1PUP2E
inn+6iA/IIvwaHzcrYOfHRmvbcX8qEWoR8bDPnRmmKPY1gYR26A2b+k9V+nZ
J2od1VXduSp/qv57tRtKPyLv4eCZus+ZiZ9zVbDNMtc3LTnOgefCN2ZnnteZ
7t0j2ACxBS7KzAf+zsxz4JXwmn6pvw86Rcug2xKDtENkzDgQR9Ql7Cv4NPBt
sIfxf/fQ5uPIsg5yztTMfg/2HWQrZCzihJBz2wVZF/4NJlaD+IhDK9ZnDqvY
t806PzQzX8DHPiKxj5zveFhmW9x+uddvS9UP0DsurzgG6RPRWyuWhz8L8vWQ
8CzWPesfGxB4QOBpazWHttP//wQ76tGRf+8H/0Ue0LMOTM2r8tx2X+y/+CuZ
L33COLwW2ZaKHfVDjMyia6v21beO/F4v6fq+8HR994NSz8H1iFlIzReJb8JW
2i6y3Pxf1Xbfk0M9sVD8PpV9C54T23Z7bHju50HexhaNvNA3+KPb5uaRP+g5
TSv2VVOPTa9Xxbwa2yq4uWhrtf9T7buH+YCPGzljj4B5X+LTjg/+qjSMJ2N7
QZBP6B/xZsirozLvEdgP2Rv2yuwLI36NmLV+YX0h54Dnhu/F3rNB2fO6f8AD
Ag8/MPTlpNC3VyPjPYKM1Cf0ARmc+UlcFDFXbHAjsDHULNc/qjFul3pdwovg
STdH5lNv6/2/ZA8szNsmB95SL/C9dfpv/9T9mhPm5k3hWuypt7AvinZKza/g
W9iJx6tsWraM97zqqoXHfUxkPnVhxXESyBerqt67XoqtUyGPfB87rgNbPf1e
hOwj3KZsefnWICe8mzk+hPiN+sFW8F3wV0yM3KctIsfqsU+hu8yMrL/gzxwV
2edXJ/H+1ib2/jY7+r99EYrvcvNQT7sNE/tAkCdZ78TI3Vzy2N8XedwXh72B
ccTGgF8f+Yp5ck1k2XfPxHGMG4s+VrVuRFzdIXqfTZDLcsfkTS9ZL/tf3F/k
duyfs8KeuyyzzYN4Ffzf+G2IU6L9sMjXY6OaH9lvuGliio1gbWL5lDnzdXiv
yfDhxP7D+9gHE78T+/VeieM2Xw96NzL2TSXr1cinE2PH3z0cOQYPv+WcsI+z
fwyJLNNulth3PEftd6/6no+HPeG4sEfAz9F1uS/jf0n4LhdVLNvhP98ncdsj
E/uQH4rsR34/M4/6BZtw5n0Qmerlisf8tsALxkXmg/gibow87ujxyMfMRWRe
MLr/E1Xbdu5mTGL7uO+PHXuK/HJXbDloZPguyFLIVMep/t/E3w3ZaU1iHeKC
zDLOxWF8/k6sK48K8hey0TNBVkNmuye2rkAcJ/oCMX13Rd4bsHsRl8I8+Cbz
WHyBLSv+v2/+TOyxebNq/Q7f8arU85F5iW72VrAPEyf5XGzf8ltVy7+0gb99
HWyen2Ojjv0d+Z7w46aB9/YLFL6HHIttf6/Icg/yz5fsHZFt8uifjSt+Lrri
C7HXR1X3XFHz3vRD1Ty8efheD4Tx5ztg294nstw2I7IdY0aYxxPCem0fbAbI
G18lHj9iXPFD4I/AvnF/zeP/iJ51ecX1yJed1T6JHN/7WM32iWer5r3Uz2J+
ViwrICcQ41kNz7o1dl9aiV5WsTxEP7YIMgXXzo7NV+BDHXPPdWIn1qtYZmJ+
T6x4D4D/9wn7APvU25nX23e0r1m2HRj0XeI7scsQu8wcIX6ya+I9j1hrbOqM
9zK9y9zINmRka3wByDnIO8QxEb8ET3k2d6z096JLM8+lZbrn65nlWObDq5nn
2wfYJzPrR8zDNzPrU8y3o4kz0T2Hir5a8bNur/j5o0MfkD2QWa8I++AO4X1f
yczTidP4PfP+PE20YcV2e9bJmsx8h749HJuPwc9WB9s+fUPmbRrm52H67xXh
hol5JHObdfth1XOzE3pJzesXPk1cO/vGg6JzY+8t8HDs+k0i6xt/ZMbYVc4L
+zXvgu9iZcmxx9hsG0aO8VibeU9aiT1EuL7wSRrnR2PzhhfUvnnhGLiRuedd
p7DvE1PN/CYOvGViuyB2AMYEnx3vv5XolhXrV+hLzOtWiefXNkEO3y7oTcQn
U7d1qEe+3jTInTwX3xDzFl0Uef1/ds2K+3x/kJ3LQY5CP0BP2LBsnzK8AD4A
PwAjt+2R2TZFfgA2UPQQ9PU5YW4wR65CFxU9M7cPkvfCxn5k4P/YlutorI4r
226WYC8t23bHvoM9BRt1Hjs2YPOa/TH4ZdbXvTeMzeO3wl8aW9bYAptizTwf
3k8s9uZh3a5LvOeX1Yd6uTF17YJcjkx+bO71vqXo2YmvHx/bhkk9OhEx4/XC
eB6euO7kxHVbhPoL1M++ZdteZlasD6IXPhl5bBnPvXLvt8wf+NV+FcedD08c
64zPZVFu+9w/xEvklsXgG+XUMhH6/r6hnv/x7zTn/rF5eZMgx56TGCOfN83N
85G9r0Rernh+Nw5+KGLDrqgYYxd4r+Z95gv1p6Pus0/F8fzHBJkf2Z99gP2A
fWWW6Eb6vQS5ILH+ObFqW91eFfsp2AeJccf2tzjgwWF+MefQTy+ueF6h25JL
kQYZ++CA0QeYs3XCOkUuyCreawYkxvjWk3BPxrxFblnmu8QFPDRzP+kbsZ3w
m4ZhDTJnwfCo5rn7Tgz4yIrXETrv4cH3Su5JrOuP0PM30ZjVYsdybFxzvAp2
i/74bTPrT9eKN6yOHbuBDvZ7zb7+qmi9xHI/Ojkx/MRlH5M6JnlQ2b6/dTXH
kBCz8Yfw7mXHNhDTgs7VMXUcS+Mg7xPvESELVC03IT8hYxHvQVzcV1XHhoA3
K1snQDfgAxAvTRzLXtiE4JPCnXXPAzPLX8i/2NKwZSDfE8Pwa5gz22X2ST6L
n1/17ZGX2K+F+5YcPzZcuJ3wJfSNdV5y/NjOmX1HxMKfltnW8pHus0tmXxMx
9cPQQUqOrR1Ss99yBP4v4TbCF2LLFD5Z+Drhi2ruzxXEZQU5HHn8hGC3xH65
Y2a/Z2/s4ZnX0+2F42+7lByTfGHNPtXRyIyx5xc60bgg87Am0Q2Zq8zZbWLz
hJ1rjhsnNgZ/bgPhk4V3qdkui30W+y0x52eKtqg5Lv0M9N2a48xp00y4ofAp
ZcfYbCvcT3jXmmNv8Efggzgms03iHvW/fmK9ER2SWC/0QmxgBKExP9dnLsTW
ETeoOWb+dOHmyHTC7YW3rtnfcWDZPpetYvNkbMJ1hbsLbye8aewYs4bCWySO
4fokdvwVtgVsDMuDvQAb7qex48WOjx0TRGwQ8U+TNH6rIuuWbwfeME/0vdi2
1M6ioyvmy/DeLyLbN7BzzM+s1x6aOk6km3Aj9Wdz4R5l+4C2jB2/1IT1JNxL
uDFrMHZc3I41x30hRxO/Ruw//nfWQ9vMNr0+qeXH9mH/RU9GX+Z77prbV0z+
BXkP6MmNwp4Jj8PGPSnUYyNDT0JfuqFsHgwvfiPIfMh+bRPfG538Itat6Plc
G3gSvAmfJX0ZH2RX9rdRQR4gl+uyUP9tYl2Q/Q7ZGRmavRN+NjrsZdjCb6j4
PeHblwRe3SHYSMmfWqe6S1W+Vemm39dXnIeCrYxriVXrktsGSdwie9y1Fcfh
8y5XV+yfIGacetZez8R8rzt8tOKxY9zG1uwTuanqsbqmYhv90CCjNgx73VVh
78O/Pa7iZ2NHBRPnzzgwPshg2Eexn9KWPCEw9s3zQx/oC3PquortZuclxsQ0
gukbeZXIjMiO7Ivdg83q+9SyEHviqsw5Wtgdn2DOqkxR+Z5+VCzL4TebH8Z4
RcWyMjIzPj7s5Mh/fXLrUOQcIsfz3OFhH0QXH1axjAU9LsgtlfAf8xPaIdTX
glzKt0Z+IYeNuh65ZcADUss+HcKcOTnIPMhFyOATwjjTB+xc6DnY2yYGPC+s
2dW8S8XvQlz5MpWdVD6sOJ4PHvmm6CPMbeEXRbcK8hhyWZMgtyC/9Ar+RPyK
J+Re++TzoV/Qp3657Y3Y77DdoduCWwQ+ckuYS6w51h51q8I6ZA32Du/Cd5xK
P0QXVmwv51p42X+Z1w5rCHseuiSyPTmYYORMdGZ0585BDkH+Y0zZE5BpmB/s
meRKsW+Sy7Yoch4ZMhGyETISuR7Uk++B74Fvjh8Xv9NjkXW253Pzzi6F81+e
iRyTQq4fmDgN8kqejRzDQp7dc5Fzx4jHBhOT/XuQyXi3/WLnZZCfQd4f15Ir
1z61TZp8tCaJZRhkmZ+DPote2yfM1eNzr++dA7/CXkQ985C1u0vgdeT/7Vpx
/iBrmzV+eGybEW3wxWE7WRfGBNsq+jW2VvJtway1nRPH4BCbs0PiPYW95bOa
7ds/Vu1DwJeADgOfYM4wh7+q2Z6NnZscZmzC5Ekwn2jzG7Jbap8VcU2sDb4n
eW3dsVlX7Pv+KzOvJRbmn8x6DPE4L2S2aSJznl0xr4HPYKNbGTkXoxps49jI
0UepRz9Fp8fOj15/SGx7P/nQzRPnAI6OnafNOxE7gP/t08i6LnZLMLEE2Mix
lfNuzGv8KPhQsOV/Hfn9iQUjJoxvz1rEd4LfBL/kV5HjkbDxg7Hz4yPmWmKT
iPvGb8H8IJ96TWSfAr6I1ZH3e/Kpwfgvjg7t+U5pbts1NmxsY/QB+Wy3xLFG
5G5+VHGbL0RPr3jdsmaJS+dZ+CXQHb+JPO6DE2PycNm7mD+XlmwDxhaM3vf/
/UDohHFuHQJ/C7HV+Cn53l0DZq43K5zPdnFuvyl60hO6/46Fc+HOzR1Dj/9v
QWY97gA9e2/RAal13io+iNw+eGIysfljqz8w9x56gfo9s3BO7hhde23uWCD0
tbtyx3JgM8R2iD8bHkD8B7mX8BLiZshLR9YiZvugoBOhG72eOy6mVjhHHV70
bu54RGw6xG0uzR1v8q9ow9Txb3fib8qdwzZTdStz57bNQr/InTf4AHpK6rye
r0XPKBy/+GRuPyPzAv5xeuG4nMeRjwrnEszMHWeJXYb4VWJ/sTdig+xZOAdg
lurfyB1nHavui8w2XOJIV4V9lrjo93L7afBD4n8kz5R8U3yX5A6TQ/x+blsJ
Pkn0WfaXcxPHPWPnJa6VGFP83cS7DiocL/IUvLZwTPls4Z+r1oOIt1+RO69v
ht7x4tSxQLz7kNQxS7zvRanlc+T03qljzh9GbiocS7FA+LrC8RZPhDmDvB0F
3gLf+DvwFuJg/s1CzGrk9oel1uEYT3xn7GftcsvByMMzhPFVoxuSD3JC6tj4
+bltKNhSiH36Xzx/5P70Sh1X/1BuWww2mVPVZmDq+KtHsJmkjr96LHcMGzlc
xP3+mTjGaQJ2sNSxXjcLx6ljwG7KHVOBrHkA6y91vNktue1oi0qO4STfnvix
iaqfEOxv2OE2Sx3/OTV3LCW2RGyKp6WO73pU9b9U/e7kPmBPxxZK/OXYwr55
1unEYMfDnrdp6njR23LHmpKbRnzy+GDPxK6Jz5qYsINV371wngxj2034s9j+
oGuEu8XOeVmZWLclNv4P4TtKjslflTgWifj5YwvHnvIur6q+Q8kx5O0L52nc
rfoCO2nJcf6/Jo5LIm4/TR0/Ri4A8cPs/+T4E1NEHHDfzHmX+B4O0X2a5bbP
dM2d80/e+B6i9ySOUyQ+n5gr8sTJF1+cObaA+Tad9VJyTH5SOO/uN+HbE+di
Et++KLEOTjz8y4l1f2LgsQkQx0nec1bYlvGP6h9PnHdJjH2l8LkP3xIDw95a
cpx8UdjeUc5sB0Bm4awAdHn8ds+JlgufMQH/mZA4LpN8gbRwTuDvwpMS56oS
tx8VPnviG+H/cp+hsDq1TQD+DJ+enzhPmfh8ksvIu/6KNoVzTu5Xm3cT2xnI
ZWCP5iyAZqrrH+IXWeOnFI5fZB3hz2VvQaboVzh+kTV4cuF4xHnCfQvHKT4o
3KdwvONc4dMKxzKy1gYWjilkng8oHIPIeuxQOI/lXuGOhfNh7oPPF87Xms66
Lpz38kDu3Ax8Mfhhjiuc93JP7lwR4ofIC+hdON9mTm4ZaQl7vegI1beMHVM6
Sfj9mvMokcGIRdgRXVD1F9ccG4asSLzvTonlTM5T2DXxXs+5D7vDMwrLVexN
yDmcmbJHYjnnE+EWwh+onFJyTsodhW2U76j9NOFraz6rATstug1xzTeqflLN
+bP3Co+pOYcO+ZBzB7ZPLENy5sUuiWVCzohpLHy32p8UO+4LuZe4oqbMi9Q5
QYwtuV3kBLFOW6TOA2IMpySOn79ZddtnjnfnbIanEud0Y1vC7kT8PTliLya2
a10tfGNqexF2o5cS28quUf3TifPoRws/kzi//orcNivi7DkX4YrU8a4Lc+di
I/tzdkfjwucCDFX9xMS5uuQvEotIHj05BNemjvdjv7sjce7tJNW9kwTbXW4b
HXmanGvxZeLYy+tz5wQRY3ldbpsdtrunU/NA4ilfZcwTnxWzJHWuwmkl536u
SHy2zCup7WvY2cjrX5747JeXVf9p4nNdXhKeWvX9OUflzcS5qI+mPrsEfYL8
/durtiVy7sqMxDn1t4Z3IV/1CeFlic+TWSj8duLc1cdT2wqxGZLL/1biPNbH
kIkSx6U+lTp2c6Dw3NTnj2Cf5JwZ4raxhcLHhgX5Hz2AM3qQQZmrnFOEr6eB
6FGpbbnww3aZ4yfItzg1tf2tktmmR7wCORac7UNsATF6+NbRhQ9OfI4NMjtn
I7H/kmv8Zuo4TORh5OImqc98gO+9mvvspaMK26iJyyT/ABsX8RzkARGbcm/J
ZzZhByaPjxiS41PbvUmuRZbAjwN/xj5MbAdxRDumzrmGZyJPkpcNj90y9Zk/
y1PHGuKHJwccGYC873dF66c+L+jT1Psy59t8JLpe6tzzd1LLIR2CjETc/Geq
X5Had4k9CB8IZyrhR+acoyW5zz06tHBeFfZG9oVXcp97dAj5dpn9+sRXEr+I
n5OcdM7/Ia+EXKfdUtvV2fteS5xzPUd4aeI8a+ThhxOf+TA19TraruT8Ms6l
Igb4BuE7E5+3QJ7aIJUnK/Ynfpo7T/tOxi9xLPE41X2SOx/+9tS2tbFhH5+a
+KwGctZmFLaXoTtgz5mMzQrZLPFZEOTK3ZL4jAh0lpsTnz9wTuBXnO0Af1ie
+xyKu/SsuxKfpUCu3G2Jz44gz+7j3DnqvOPPiWOnb1Rd29Q5mOwXXVLnET8Y
5jk5p8jPh6fOOUW2JxYLXy+x7Xunzotkn+qaOteYPZG4O2yC6Ep7ps6pZI8j
To+4PWRI/BP4KdgrsWtj3yaf9KPc5xGw9pflzgOHJ5O/RNwfeaBtUud+sif+
kjhme3xumzi2cXJXP8x93gH8sHXq/FBkgJsSn0ExRPjuxOdskG84I/BYzkXA
J4FctHdsX0Xrks8SgZ93CXvBzLAv0H5c0HHQdZ5PnIOPfjG1sH8OfZDcJeIQ
iEfAP4svmPOrXkh8JgD6GnsNZ6rwHR9JfCYJ8+exxGdfXJ47550cJXIGH018
lshluc8ZIIeLPEH2pj4l630LE58Pw/wkd36w3mMPdD6V9WL7atsFHaRNbr/n
/kEXnpX4rBj0aOwe2OzIJ+XdOeOF3Ezy8MnHvyS33xafbPvc9jdsuOSK8i6c
f3Kp8LzE59KMEn6Ida+yVmV24rNlRob9jjM6zs5tn+fclt1y+1XJl9gzt79v
zyAPtw/Prc+cL+yzh1djK8DfQA44tgtsEcS7kqNaN+ynyP74IrBjn1k4f4+9
mFwtYog5D2xM6vNAtsysm+OXIwYKXYN4pdGFzx/grBfOrEL/xS9HzBS6JD6g
Opn1zf5Br7wwtT9oI9UfHfLK0KeIPcaPSv4xsabYMvHPXBQ7lhR5df3CfiBs
FBsU9mUmmeNJRpV83hUyCeeoNGQ/Kpwjh650UOGcFvZ95AfOPNkqMy8lDmuk
/r+p5nMeRgU+TDwbcW3k1Y4Icg5xONUg4xHDw9mAnBG4eWHf0qa63+DU/qY0
c7w6sZ2/679WhXOW0DfJCyAvm/xszh5kT+wkfFZqfxDvxfmH2MDIifk299kZ
yCprcp95wV6/JNhba2pzcOGcK+QcYrbxk5JzT5wtPlTy7Pcr7GtEHqtX2DdW
N7OOjO8py5yPQI4SuUrkTrKn90q87xMTNEzXtS2cr4i+zHlil5R87teBhX2l
yGB/5z4nhf1un8J+VtYyZ2chB7ZLLOei93GGE/mf2PiQt8nLI8eGs+iQ+ZD9
OEvp+tTnz2wTZEj8zpvDdwvncbFnIfMh+3FWx76FfaLIojekPhungdqPTu3H
5N0vT+3HJF8bGZi8ybMKx+oQizkpdj4g9l1ygy5L7X/kW3MOJHZq9IJxqc/2
2Vb1LQvnTcGfWxfO88Q+sFHhmBLGeVXu86SQzdAJOEeDs6CwIRDPeAW6de6z
rti70VHQJTkjqk3h/FJsFMhI95Qc99c36NTk4x9ZOIeN/W517jNTkD85Pwqb
9jBkrtxnryArXpP6zJ/6usfVqc84qpc5J5fcHnjo/oV95Mj/xAaTl8d5jRfE
tu+jmxD/xjmNnNf4de5zWxYGOZO4zgvhwSr4d5EbsekR00VsF/YJzgPhXJA1
sXN80MV+zX3+JrIiPgVi+Yg3J26QuDXigxsV9j2z9ok5JDeNHDXir5oGfZBz
FYilx46JzkQsMmdX/Fu1zRd9cF1uXsAZdw0L+7D5pi0K+/Lh+eiR+HCI6apb
OGYIXrdZYZ80/G3jwjFA6wn/kPssJPSCH3OfTYO+QO4McvIfsX3Hhwdd77fc
Z0ciQ/6R+ywhZEtyi/AXEBePPoxeTM7lVoX9xHw7zrsjjoKzMbYs7DPmO25T
2C8O39uh8LlmyFTEdmKzLeu5v+c+Awj5FjskZxmOU9uvcp+tgz5Sv7CvmnW3
dWFfNXvEdoXPQWP/IkaUuNBI1/+Z+5wm5GRkbmRvzoPZtnCcAevxr9xnNiFv
Nygcl8Aa377w2W3ILfjljwk6L2e94mMht4/cpK5B512b+7wh9KOfcp/vg76W
F45lQRfAbov9lvOTRqSOc9gw87kqxKNzngC5Qujy6PQ/5z4zCH1wz8IxHOzj
exWO82B/P6Jw7igycLvC+YTYpfcuHEeCrDI0tR+/yByPSmwGMRrYhDlrcEzh
fC5ibIi1qVM4zoz25ETg0yD3inwi4iWIm0CWIeeIGHtyk4lR4zzPDQvH/bAH
cQYKsQTMQ/QIYoaJHSafkXN4sF1w9ix+Qs5GJVaQeML/+D/32UnoxZwBSx4i
55UeUDh+BX2f2Ehsm/+y/xWOgWM8yQfHj8GZo//TxyKfs3JLzfGgnG+HbZP4
xyuD/YO8SfxrxO4Sr8I5KsRAYs/BroMtB984cbD/D5oRNX8=
          "]], Polygon3DBox[CompressedData["
1:eJw1nHngFdP/xufeOzN3Zq59S4gWrV9bUvZSVIqKdiEVWUqFqGQrabcrIUrI
vhNFlkLIlsjSolKRSot993tenvn9cT6f855z5szcWd7L837eU6PPoI4Di0EQ
DIuCINT/R+MgeEn/r9HGP9WvlgZB70IQ9FG7MQmCdpq0Z+C5p2ifB7MgSDS2
WRtOrQTBSfpfRWMltQ4af1jjmca3ansnjb8quZfkBhobKHlPrX+65DPUxmn9
XSR3Ur+z2gjJj2rO8HIQHKcFT5Z8mtbZT2trc9BVa7yi9Xpobm31B2jjHI2X
de4Pa9vT2vaIfsMbmnu1tv2hfm+t0Vhjm9S/QfNP1/zqGt9OrZvmnyW5lvo7
qp0m+UzJNdXfQa275G6S91Vfhw26SN5V59tF63VVG6m1p2pgJx3rfq1/tdZ/
SHKqsS3ar6PkVL/lVo3/q/2/0Jyztb22+jurna71Zmn+oZqfqH+u5nfQeFWN
SQxO1Z852udD9Udz07RWPc3/QtfmevUf1vwPdD7Xsb7m3S75U8lPa73Pte+d
kmto3kKNj9M+l6n/kcbHSi6oP0XjiySPk1yUfIfkJZJvlBxJvktyqP8TJTdU
W6Bj3CV5H51KH63/pc7la81/RGOPaFtD9WdrW0sdf3eN99P+mba1lnyi2qW6
XnM03kr9PTTeX+OrNf4w90/7j1H/Qo3fyLlo/E3NX6xtEzT+q8YfVP9LncOu
BV9Tru0KbXtA/UkaP1j9J3X9LpG8RXNmao2WWmMvnlf1Ux3vQ835WnM/kDxO
ck+tV0fj7bXPqtjXkevJM/Si+rGOcZPkjewj+R+1UZLnS56l/r1lPy/nab2l
OvfTdLyDtN5vkjOt31tzXpV8vK7/FZp7s+TJmj9Ia/wY+z5wPz7Ttldj3wfu
x+eSX5dckjxe8heS50uuoWPso7WeknyDfsu/+r3tNP6R2gYds43kPTTG49Je
8vPav4n6l6q/XPt+pX1mFn0OV6n/t9YcKbmq2pPqr9baozQ2Uv83qRU1p5HO
/zC1Xvpt92vbjupP1f9tam/qeFdq38e07WUdo4eOcZe2b1Hrp/7fOv7lGv9N
a9+m67FK2y+SPEL/N6otUvtDx7tc/zeoPaZ5L0seoTl/qd9Ta1yq7Xuo7aN+
TZ3PeTrW+WqTdD6Z1r+NHyt5qea/pfO5SvLOanN1PnO1T0eNVVf/Qh1/luYf
rumXSV6hsRlad4rka/V/s9oL2nas5u+k8fM1v7/W/EDyh2oXqn95Yv24g/o3
8b5rvQba/0LNX6Z9hyXWd9tr/EbeR217UOfyhM5rhuRY599c4y3UBqA/Yj/7
QzTnF/XfT/188ZxN1vyB+v+R5i5SG6T+i1qvqfo763gXaLyv1q2j/XdRO0Pb
Iu3fTOPHcb5avy86XP1/NTZE84/X+e6p31lV7QT1/1EbruP9rrUnafxUrbeX
1pIYdNQ+X6nTVuMfqtXW3C4ar6YxHSborPHz1Fmt9a/SvG90bos0p6fGbtTY
t5JHo8M1XkXje2n9d/X/O40frvUWcq81vyn3n2Np/pOaf57km3ScNZLfSa3/
3tD4KO3/k/a5VPvO1LYnItsQbElVbd+74t/B7+EZeknju2t8qfrvqH9yxXoa
fc0zy7P7q+Rh6s/RnNmRn1OeV2ziHMkLNOdN9WsUrQ+e0nrnS75Z29dyvjr/
QyT309hQrT9T/3cp+hnkWeR53oP3A50i+Wntf4Hm36L+Ou2/WPv3Yj0d6zvJ
L2t8mOShaks09mXZ12OSxjdp/CWND5F8l/bfIPkpjTeUPIDfoeN/Lvlcybdp
/kaNfyi5s+RxkY/3uPY/R/LZau9q7InE8/uqvS95juTL1L8z9PnMlTyc+4P9
0viLkgerPyX0/Z0t+VLJd0heL/kTzenN74t8fkvLvl6TJX8v+TXNv0rytNDy
xxo/i/sdef9XNH6F5LtDn/+rkq+UfE/o37+D5A/QhZp/kn5vIvltya9Jbiv5
MT0vL+h56KbrMYH3U/tN1Ph0fB3NmSl5POupPYyNTKwPLgqtvx/Q/3EcX+0h
jd+t8Wboi9Dv99TEz+ux7K9zv1/bx6o/Ffuk+Xck1reNOabG39b5DNa9vwuf
S/131T5S/03Nva7i+9EB30ptoeZP0nn/qfO/Q/IDmvOjtj2t/rPqt9D8KYnv
d//Q9vdPjc/GVmm8lcZf1v61dbyntMap6JDE+qk+z5Dm3p74eT2Ye4yNl3yM
+kerzZT8oNadwP1Re0RrfsNvVP8x9Y/V+os5ruQDi7ZH76j9Jbm55CXq19R6
WyR/rPntNb+ztv0tuQU2Tv0ftP/x6n+gtlpzPg5t2w4o2t6Vtf8CbCG2TPvv
IXkZz6rkdpLvTXytuGZzdG4dtM8T+q3PaP/Gkk+R/KTkZyUvQpfpGu0uXXex
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
uT/eCd6Nm0r2OY8gHlK/e24Peb6519xj7nW/xPyAUux8/1mxuQ7wj07nt8fe
Hx2GLqur+at0fp/q3hc1v57k1ZKXSC5JriN5JViO5ILkptgsrXeTWkOtNT11
fq6r1vqbc8NG8Pzz/sSOD/Cf8aNn4k/o/2vc24LxlOqJ82+L1P9Xc8epTdJY
E3Sb5n+Smq8DbyeUvL/mf4Xt03xIVBM1f3LBWOTFFdtUbCsxSc/8fhCrEUP0
Vv/gsrEw8LdR+D9lx3oDAuf80Wfoe/T+fVqveex7B+YC9tIo8/3rWDb/AR2B
rrge3LAS/EesWlY0pgy2fGjZWC45DvJZ+BDoZnR0B2xJ7NzDgSXrL+K9L4u2
idhG8htriuZAwYUiH4ruRQdzzYnHPsdf0fEfrDhegivUNv+9m2PbOzAssKxv
cn9shZ7LfzLzzdDd6PDOZdsF7AMYFFgU9gR/E79zesX5dXJ9HfP4YmhmPhu8
tvoaHy+5neQRko+qOAcGxgfecqXO/67YvBD4IRu1/zUaf0DyE0zR2mPAJCSv
RR+QK5c8OXb8t7XsHBO5pnmSd0nMUYMDgX3eOXHODB90vuSS5NGcs+RFkndM
nGMh1wIfh9z1WHIWse3VToltHrYP/A+u3YbYOAJ4QqfEGChcFTgpYKO8Y3Br
4LDw7pFzJfcKvw1uFjoFbhicMXQNNpdrTDwJtwabArcMDhm2preu2/6ci1oP
chglx+7EcMRy5LzIfcFvhEtCvoHcBzmQVolzQOTO4AuSG/pNraSxjaH95V8T
+yIbQvvjcObgbKFPH9B6v2s8LHifgxNzduDuEE/dlZrzBKeEeOba1BwbOCrg
tdel5tzB+SL/PTM1hw8OGnyTqakxPHw68HywPXQquhX/qUFim4bOx17BDSRf
Q66HnM/xiWPkgWXjn8TO+CTYfDhBcJn+zv29MDI/jmeWZ5d8QO3U7zTvNvyu
w1LbWGwt7x+xz8w85gd/PTl1DoJcBPZpm/4X8csic6ouSJxDxs/H3z8hNecR
7iMcs7MS54TJDcOJ7Jk/T+Be4F8vaf5RmfU7mAX5JnLO5J7JWXZJnKMkV8nv
70ZuEAwgNp51MrkHMNLY8cUT2r+X5D6SX5P8dGqdie4EH/iQ3AQ+scZna3xr
6pwouVFyol0T2yN8bzAS8lvHqu1XMObRNHWOj1wf205KnBMjN0YOsG3iHBi5
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
bjPfsPy85G/MkG/+P0yVDaw=
          "]], Polygon3DBox[CompressedData["
1:eJwt2Hm4TuUWAPBPHENR3FCZ3bpFKWmu2yANIkOZcpFE4VBkOlSGzGMZykyD
IWMZwlFyDmWeZ1GPIxmLurkNmp7ubz1n/7Eee/32Wu/7fvt837v3VrF15wad
LkqlUgdFmni7YCrV3cFL+VKpO+XLC6RSmewNNoI9w3azhRenUj+wNFE1TypV
U81KMVo+Ul0rdXvULWJD2UDWiO1gH7MxbBR7lu1l7xhvO/uCfc2mFUqljoo5
FreSvZs/lRok/1Td5Y6rqm1r3r6xNj6XrVK3WO9o+W6+Qs0yNpP9bo5+vIDx
Gjmuo/42+X51a9WtUbdSXRH5PrGGZbNMVli+yryX6rmetzJvtt5PWBFWmT3D
ssLUjpW/rre13n3mKq/ukbgWbCqrIF+t7k11o1k7dsj5TWwKm8i6sSNsM5vK
JrHuLCeuFevBurC72AqWxd5iY1h7dphtsJ6uPu+HbLx1Zsiz1Y1XN5alq/tS
3RY2jU1mPdhRdph9EX/ruC56p+rdxt5WN5X1dO6Yujk+yyn2ByvrGtyuZi47
zf5k5dgdbAE7x/KK61kNNp+dlV8kKrMH2Qy2W56j93tzVGSz2Qn2Gyut7lZ2
1npW+mwlrSHb+mbJJ/LW6hrGWvROde59vSfZ76yM3tvUnFa7TG9x51fonSI/
IZawquoW5k2lhsV4ogxbqmaJGC+fbrxNxtur7pA5isc1YZvZPnaYlWCz2HF2
gZUybzU2j33H8ohKrDpraMwOxu6orpreRvL5fICavqwO22CdH7IhbABryLaz
M2qXW1+J+G4Z4y35YnXD1A1S11jdTude5eMcL2ST1PWW77OWBs7VlM+1lhw2
WW87vU+ru1r9e8435i+qeYHdwprIp6l7IX5/7AY2T90M9jLrwR5gq1l/tbMd
Z7J3jDFAPtO8B9QdZ784d618q97pbArLYF/rncf6sz7scbaeLWADWT9Wl21k
M9krLINVZ1lsvzGb+reBORf5bOfM+01cV9fqE3Wz+Aj5QHU99b6WjJepZzW7
MvYG3knvEOMXi9++3vm+FxtEa/m7YoeaQ3qHsobyWsZsq7cQv11vbXk+kYdd
yu5l7Y2XyZoYr6X52jtXJ/Yr/V87voSNd+4BdW1jD9TTm98V+4z8EnGx4yuM
V8u5HuoKh7MrWW2WwYqwwux78TjryfKw35I9+2bWguVlKTVF2L9ZO/a6tYxL
fucZyR5Wkl1jXYt81h2ijfwyvZfpLaO2vt5X9RaKPZYVZ4+wLqwgy88uZw+z
l+JewZoarzBLd66evFiE43LsSXV91K0Tk+RD+VnWNX6TEcm+G3vxqNhLrWe5
PMual1rzz7FmdSXVXc3/o26wuuKsOKvInmIDWSu9n/pMq/Pm/t7jdz+JfaZm
m/G2JfeFiryi3puSe884Vo6VYzewNmw0m6g3W75Z7wa9BWLPjT2fbWTr4l7L
iuotqrcsfyL+zrGHq8tM7keZyX2rvLry6qrw59SNUTdBXZZ8k7r18SdkFdRV
UHcjf17dWHaDOO78Or5e7NBXQF2a43+oe0hdZzWl4nfp858TA0R9+TSxQc2u
uKauy8n4norhjvNa1+fG2K6mJnvO8TfiSeeWyc8b82Dsxey0+avIP4v7oPxR
MY+dNUZldr35DokvRCX5e2Kn3i/Nu8J43xpvKlvPdubL3adjvz4oxjguYJxd
xtylZrL4XN12ddvNMUZNfXNnqbtK3Ql1e9SsE085bioquAZ3xb03XO+OeI5Q
f1zvzeIxNUVjT2LH5AfEaMf52Q7nduproz+blWIn2V62St1Zxy3YQz7bfXE9
1U02Rw3exfq+cm45GxX7WlxDa0nXV1dtNz3LxMH4XsrXxN9dXX91J9R1VLdQ
dHS+g3HSxYH4/KwL6yzvJA7G3iS+YZniZVEv7tHOdbfmn4w3QWxhZ1gP9rN8
otjK/mS92K/yt8U2dq+11GZH5M3ju8U2ilaOj4sGztVVs0yMjHsZOxb7n7U9
wRo7f4q1Fpv03cfqsJy4XmIDe0Dtaj3Nzf+KeIotiXuW69YlnlHVbWZz9PaV
/yhPN8ZafVm8rPxu3j3ZI0rwEuyfrCkbxEqz0qxS8gw3kg3W21s+OLmHZptz
lLr31dV0XMb1q6jm2fhOOp4ripi3qHyLuv6O/1L7gXgzfhvxfVazWFzr3AU2
ir1ujgnmuIk3kg8RfdgQ1sS8a8w1iPWKvzmrx1ayASwjuQ/WSZ7/RrDB7I3k
uXMTG84GJc+izyb3y87mPhOf3dqqi7Vqhop+6obFPd5aqsr/ch2+T55fSifP
93fwe5xvbJx6ej+XN49naOfrs9vZv+TN4vki9mr5reKaeL6KZ7b4vhtvLZvN
RuofYY432VfqW7MP2H9Z/uQe9Zi+xexn+WXJPbQRW8p+lRcT97Mm7CP2e1ru
vefh5P72MSsU62LNYk3sQ/ajvICoxmqxRey8vKC4Je7dbAn7RV5U3Mcax/eZ
/SEvkdzfnmYvWvepuJeY536xRs2XfGOy369PnhOfV5cT90k194hsdStEXsfl
k3teetwbWcG4bsl9K+6hy+N3KC8pHmUt4zmC5Yv9izVgHdgV5rgi6W2WPL8M
U/eafLi1tIhnrviOxv7CerPH2NL4jbF01jV5r5jBLug/nDyP/8CqxnOeuvbJ
+8edyXNiP/YSe5nViGdN1pd1Zr3Yg2wB6806xm+S3cNmxfMp68C6sbvZTJay
xgssX1ru+2XzeLdUt1C+PHmnO6mulLpSPu91vKW6EequYlexa+NZlg1nffR2
kvdMnhPn6x3HlrHVcU9hP7Gx7CP2afIu+T82hi1Ny32/XMTOszfYgrTc98sZ
7DhbEvu23/ffrI35H5b/au5D6o4k7zM3yXvpbcs6s9vinVvvd3wvO8COsuvk
34o9bD/Lib+bPEPvc+zF5Hl8WuzXcf9Jy31Gr5a897zGurJX8+Xul7Fv9mTP
x3Mtu5VNZ6eMuSt5nzmcvG/liK1sa/LsUzr+TyD2O9Yh9is2SW+32O/j+Y3d
yCayLqwla5e8G4xn5/TvT8t9tz/GKsuPim3J81Xcp8vIfxJ/Oz4V88YzQry/
Gu8Zde1ZFecmGO+Iui1sC9vKSsXeEu/t7GDy/weV5P8HSZZAxw==
          "]]}]}, {}, 
      {GrayLevel[0.82], EdgeForm[None], 
       GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJw1VLluU1EQvXlv4odt4pgsCDDZIGFTICwRBLPYIkiAgAbxBZFSoEQsNYJA
CFAAYikQDQ0NHwAFFVQoidJBQ8UvIBFe7GyYc3SG4urMu2/unZkzZ27f2I0r
16MQwhRWjHXaQpiEUQH+AV7CSrGW4NQL/AKf80kIt/HdDbyPdQv2DDAFtsT6
t4K1E3Yp0j7tzzhbh93v99Rgt8L+BvsCzk8zBvAe1h7EfwH87XfybAN2EXZ3
pP2Cx2r4PTz/EGeGYD8Cvs+H8AT4IxfC8UQ1vMsoh79YXZH2eQdr2mjKqwW4
yxRntyk+49GvHd8ZYAfwJM40498s7jxjskdNRA5gfYdZTfT9ET5zOLcaqV7m
23A7cpvxXmfFWRtynsD6iX9VYMnE6XYTl7TJyTxwPVKsB4j1FPa010qeWSP5
GMcahl32fJgXzy37WeZV83zmYu1vQKzHyKcV9gLQ8H0Z/5pN+dOfnI8l2n+Z
UUzGJo/kbDESX2XvL/tMPlPPv+Dc0ue/Vhiv03R2s0mL1GQVOJLI9y1i9SSq
v9c1+Is1NEmT6/B/lqhH5ITcHDTZh4BrrlHGPGbiZwQ4kSjWJNBi+ZM37hOn
gLVYserADxnlS13tN3F5gL2KldNqLD2RjwLwlNfCOVvKKn/W8RyrzVRXn6kP
O4CfPAfmXoLPV2oA+Car3rZDGycSaYca44zOOv/0Jx93gV3OG/nbauJ+G3CL
29xLXeOsh/68pwLszEkPjDXjXDOH2PVAXSy4TljLUeeTvFb8Hr4VjVj5B9dw
6vwX+dYANwF7vXZycDWveR7PSVd1n9mizwv1NOick/tFf6/4bg3iTBl714Bp
VrPXAfuIqa/DpneGvJG/Ve/Xmr8dQ66BUZ/rs6beUwOc9yXnn33oN83wgGnu
532mOBcX8X0nUQ/YC87ITfbMVBfnq+bznjPVmOfbY8q5x1QT7+H5V7jnnGnG
U38r+GbsxV4Mn30mXVKfy8DDXi/rZm/YI2qWPWAvmoD/AIAdr9I=
          "]], Polygon3DBox[CompressedData["
1:eJxFk81vTFEYxo97T+41U+mIGkTNtD5KQkNIST8kuiAIK/EXNGmQCrEWCUVI
EB8LsbGx8QewsGI5I3ZsrPwLklZntNrh9+Q5icWb+7wf55z3fd7n7py5fuFa
FkI4iUVsczWEVQKD2FIlhAH8ZfAa9gp/vgzhNIWnsLvghTyEc9h5bBFrFSGM
UfsYO07+O+cLam+B3/aFsB+cUxewA+AnxFfBN6i/A37P+SZ4I7Fp/H5qPlHe
IlYDd4h314XwE78LblJzE9wPPgFeSr2oRrWvua8gP8DZp+SPRvc3S+4YeBf2
lfv/EtsNPkPNMLkO/gR4jFjMfUZnNYNm0czTzHYWPJLmmQT3UfM7c88bwFux
BfyP+NvAQ7ofmyf2BT43cUcX/Ad7iT9CTZabg73g8eheD2ET4B2ludJ8g6V7
UC/awxz4TeHeG9i7wvkf5B4l/sWXuNSMmrVOvodf4e5LVe9Xu/tA/gV4OTfX
enMF/IzYvuj+boOvVN2X+hutegfahThvgC/y5kO+k9F5cSyuNeOeaL218Zvg
y+Dt0VytSIPRHIkrcfSgYu4+Z+Zc3M9yZir6Db31vDA34mSmtGY07y9pSvxF
3y2NN6I1Jq3pDe3vILFvwZpvE79HrMd3Lf+vT+1aGp4qrWH5OjOaZtC9ul+z
6Z/Rv6OeOxXvWLtup/9LnK+Pfq+e9lfLrGnpT3rRHhvp/HjpWVqJ3y2cXcys
MWntcPT+pNkj4KuldyP9zpXWm/7tWuJT/7fu7qX3h6J70z8xHK0L5aTpqvYV
vVu9WU871f33E///AE4ZfNQ=
          "]], 
         Polygon3DBox[{{2661, 1925, 1926, 1084, 2672}, {1851, 771, 1065, 1064,
           1920}, {1820, 709, 1023, 1022, 1924}, {1923, 1093, 1092, 773, 
          1852}, {1919, 1089, 1088, 876, 1899}, {1900, 876, 1085, 1084, 
          1926}, {1918, 1026, 1025, 709, 1819}, {1681, 845, 1027, 1026, 
          1918}, {1735, 773, 1090, 1089, 1919}, {1917, 1030, 1029, 845, 
          1890}, {1693, 1042, 1041, 756, 1848}}]}]}, {}, {}}, {
      {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0ktLVVEYBuBP85KX1FJRhyJCgYI0TtS8m4qKhkiIeC0Qz9TgeLeL1xo4
aWI5EX+ATqIfoOJYHOgomudImvUchP3t5117sNbLYleOJwbm0iLim1l8EJHK
bTwVSuW97IhnPGI9f7GfF5ziFd9zx/yRD/iPJ8x7GHHGCt6wmrfMtPdzuYJt
rOUImzjHIa7yHSfSIzb0WZCT3LdelBsyI5bYyGU2cYUvucpmrnHdtMgf2MqP
qTP5ie38zA5ucNN0ylvs4jZfcYfd3GUPv3BKj019vsoL/G6dlPf0fstlDnKW
jRxmTaoLy5lh6uS/7qOK1yzjKXN4zDv3+IPb5rc8z0tO8px9/MkXPOTT1Hf7
LulTIic4o1exPJkR8YTjfMwxFnGUhXzDAj4yI3I+h5nH18zlIHM4QBXDkdEn
Z7GXria66YkuL8dHB1WI6fT7/+s/x/c/OQ==
        "]], 
       Line3DBox[{2662, 1031, 1934, 2668, 924, 993, 1004, 994, 932, 954, 929, 
        1006, 1005, 982, 1927, 949, 983, 948, 1001, 962, 963, 947, 992, 1003, 
        991, 989, 2662}], 
       Line3DBox[{1071, 940, 2669, 971, 939, 967, 950, 959, 937, 955, 938, 
        966, 934, 1930, 980, 933, 965, 936, 964, 935, 930, 925, 969, 941, 970,
         2670, 956, 957, 926, 960, 927, 972, 943, 974, 942, 981, 1929, 958, 
        975, 944, 973, 928, 961, 953, 1071}], 
       Line3DBox[{1094, 995, 951, 1002, 976, 977, 945, 997, 998, 996, 987, 
        2671, 988, 1937, 1007, 2666, 1008, 1009, 931, 1000, 999, 946, 979, 
        978, 986, 985, 984, 1932, 1094}], 
       Line3DBox[{1928, 1083, 2672, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 
        1091, 1092, 1093, 1095, 1938, 952, 1072, 1073, 1074, 1075, 1076, 1077,
         1078, 1079, 1080, 1081, 2665, 1082, 1928}], 
       Line3DBox[{1028, 1027, 1026, 1025, 1024, 1023, 1022, 1021, 1933, 1020, 
        1019, 1018, 1017, 1016, 1015, 1014, 1013, 1012, 1011, 1010, 2667, 990,
         1931, 2776, 1030, 1029, 1028}], 
       Line3DBox[{1040, 1039, 1038, 1037, 1036, 1035, 1034, 1033, 2663, 1032, 
        968, 1070, 1069, 1068, 1067, 1066, 1065, 1064, 1936, 1063, 1062, 1061,
         1060, 1059, 1058, 1057, 1056, 1055, 1054, 2664, 1053, 1052, 1051, 
        1050, 1049, 1048, 1047, 1046, 1045, 1044, 1043, 1935, 1042, 1041, 
        1040}]}, 
      {GrayLevel[0.5], 
       Line3DBox[{1940, 2197, 1939, 1373, 1941, 2673, 2851, 1942, 2674, 2852, 
        1943, 2675, 2853, 1944, 2676, 2854, 1945, 2198, 1946, 2777, 2199, 
        1947, 2677, 2855, 1948, 2678, 2856, 1949, 2679, 2857, 1950, 2680, 
        2858, 1951, 2200, 1952, 2778, 2201, 1953, 2681, 2859, 1954, 2682, 
        2860, 1955, 2683, 2861, 1956, 2684, 2862, 1957, 2202, 1958}], 
       Line3DBox[{1960, 2203, 1959, 2779, 2204, 1961, 1389, 1962, 2685, 2863, 
        1963, 2686, 2864, 1964, 2687, 2865, 1965, 2385, 2386, 1966, 2935, 
        2387, 2388, 1967, 2936, 2389, 2390, 1968, 2391, 2866, 2761, 1969, 
        2688, 2867, 1970, 2689, 2868, 1971, 2205, 1972, 2780, 2206, 1973, 
        2781, 2207, 1974, 2690, 2869, 1975, 2691, 2870, 1976, 2692, 2871, 
        1977, 2208, 1978}], 
       Line3DBox[{1980, 2209, 1979, 2782, 2210, 1981, 2783, 2211, 1982, 1403, 
        1983, 2693, 2872, 1984, 2694, 2873, 1985, 2339, 2393, 2212, 1986, 
        2927, 2340, 2394, 2213, 2605, 2606, 2975, 2341, 2395, 2214, 2521, 
        2392, 2498, 2960, 2215, 2497, 2396, 2607, 2695, 2937, 2398, 2342, 
        2696, 2928, 1987, 2216, 1988, 2784, 2217, 1989, 2785, 2218, 1990, 
        2786, 2219, 1991, 2697, 2874, 1992, 2698, 2875, 1993, 2220, 1994}], 
       Line3DBox[{1996, 2221, 1995, 2787, 2222, 1997, 2788, 2223, 1998, 2789, 
        2224, 1999, 2399, 1417, 2400, 2343, 2402, 2699, 2929, 2401, 2344, 
        2404, 2545, 2225, 2403, 2938, 2345, 2406, 2546, 2226, 2405, 2751, 
        2790, 2407, 2227, 2522, 2397, 2623, 2982, 2228, 2408, 2645, 2646, 
        2608, 2976, 2229, 2409, 2609, 2610, 2603, 2644, 2700, 2985, 2602, 
        2346, 2230, 2000, 2791, 2231, 2001, 2792, 2232, 2002, 2793, 2233, 
        2003, 2794, 2234, 2004, 2701, 2876, 2005, 2235, 2006}], 
       Line3DBox[{2008, 2236, 2007, 2795, 2237, 2009, 2796, 2238, 2010, 2797, 
        2239, 2011, 2410, 2798, 2240, 2411, 2347, 1431, 2412, 2348, 2414, 
        2547, 2241, 2413, 2752, 2799, 2416, 2548, 2242, 2415, 2753, 2800, 
        2524, 2243, 2523, 2417, 2662}], 
       Line3DBox[{2019, 2253, 2018, 2252, 2805, 2017, 2251, 2804, 2016, 2250, 
        2803, 2015, 2249, 2802, 2014, 2248, 2801, 2013, 2247, 2501, 2349, 
        2012, 2246, 2962, 2500, 2558, 2557, 2419, 2245, 2961, 2775, 2499, 
        2556, 2555, 2418, 2244, 2668}], Line3DBox[CompressedData["
1:eJwV0DlOQgEUheGLheMKHBJxA1JYK4paKgkLsHAB0oATuAVF7Egs3IqFJpBo
Y4s2oDgPKJb6Ufw5/znvvuTlzWzmc1uJiFhHeyjiajiiJQ9HI+bHIu75EV/g
D3xvJCLN67aOvq8v6g39US/pZRzYnvRZ3kQKz3ptMOK2/xwv+rn3Sm4LevA/
+Wqf5GuYwgaW3EzILMbx5iYhB3DnnRt55mZOvntWtF1gu/899g/bDr/ELj71
U/u0+yS+9IrM2Lr8mC/zb17lK/yHn/BV3uPX/tWv/AevLjEl
        "]], Line3DBox[CompressedData["
1:eJwVzj0yg2EUhuGThPzQUKViJmQBEtmAFIgKo6ORBciMBSARZmKIQtCksh5F
ZAXIHox/rhT3nPt5zve+71eoN7YPEhGxg49MxCAb8W6+TUU88U/e46vTEV/8
JBexxh9133JTbuFG9yOf8me00dP96s74C87xJx/ql/grSgjvpNy3kY44kstY
kRewiBnsYxd59J3fM+uYxRaKqGLZ2WNU8OC7ii7h/o48wsV4r0/q5uw2MY+U
3NRf2hfkK3NC19J1+TUm5Vu7dV2a3/Eaz/D78f/zLB8ih3/mLSnb
        "]], 
       Line3DBox[{2059, 2259, 2058, 2807, 2260, 2060, 2808, 2261, 2061, 2712, 
        2891, 2062, 2448, 2713, 2947, 2504, 2449, 2532, 2714, 2948, 2505, 
        2450, 2642, 2262, 2063, 2949, 2451, 2506, 2263, 2064, 2951, 2453, 
        2455, 2656, 2670}], 
       Line3DBox[{2071, 2268, 2070, 2893, 2718, 2069, 2892, 2717, 2068, 2267, 
        2809, 2067, 2266, 2459, 2966, 2509, 2265, 2536, 2458, 2965, 2508, 
        2264, 2535, 2457, 2066, 2944, 2716, 2534, 2443, 2065, 2942, 2715, 
        2533, 2440, 2669}], Line3DBox[CompressedData["
1:eJwVzbsyg1EUBtCtQvQmiEtijCdIXoBIpxCtBjWFdzD0ZpgJEhFPoiY8gLhf
cukJcVmKNd+39znn/9Orm0sbfRGxzMhAxA1JPhMRDTnKl34rx+jpdzLF4WBE
2bwzFHGpH1E0V9i1G3dnRp/lXp9g237PvSYP5qyzHOd8U7afk3nmOTYPyzVW
SFLyjXf7df1DVljQC2T1Kpn+iK48IUfrvzvf8nbSf0/NbR71uty3r8kOT3ZX
8sDuTD6br+WF9z+8mKf41V9lmqq+6H5Gf2OaP9PmNBc=
        "]], Line3DBox[CompressedData["
1:eJwVzTlOAlAQxvEBZVFPYSKbC9rhEZCCgsrOxAPoeaSgMXG5jBIV9AoKKLiA
WPl7xT/fMjPvbZ6ed84yEdFGqRjxii3ERsQbLSPDj2gFWX5Mq1jhJ7SW9tYj
LtHTbctXaxEPeOd3cGe2avao+5Ab8mG60Q3oRP+Hqdmx3EQbRzjBjb0qrWFm
p5XeQw5P7i7MP/W7uE7/4iXnjjbSn/gyG9Cu3Vv6LQ/pfXpH9yM/y305L8/l
PRT4Ba2jyP/SfSxxgH+xlC1P
        "]], 
       Line3DBox[{2098, 2298, 2097, 2724, 2895, 2099, 2725, 2896, 2100, 2726, 
        2897, 2101, 2727, 2898, 2102, 2728, 2899, 2103, 2360, 2474, 2361, 
        2104, 2756, 2954, 2475, 2567, 2566, 2105, 2635, 2955, 2774, 2476, 
        2569, 2568, 2106, 2479, 2671}], 
       Line3DBox[{2116, 2299, 2115, 2906, 2731, 2114, 2905, 2730, 2113, 2904, 
        2729, 2112, 2483, 2903, 2769, 2111, 2364, 1629, 2110, 2363, 2478, 
        2573, 2572, 2109, 2758, 2902, 2477, 2571, 2570, 2108, 2757, 2901, 
        2544, 2362, 2107, 2649, 2650, 2666}], 
       Line3DBox[{2118, 2300, 2117, 2825, 2301, 2119, 2732, 2907, 2120, 2733, 
        2908, 2121, 2734, 2909, 2122, 2735, 2910, 2123, 2365, 2366, 2124, 
        2986, 2647, 2367, 2618, 2368, 2619, 2125, 2759, 2980, 2617, 2369, 
        2620, 2126, 2485, 2636, 2911, 2770, 2127, 2370, 2480, 2912, 2760, 
        2128, 2574, 2371, 2481, 2372, 2956, 2129, 2575, 2373, 2482, 2374, 
        2130, 2932, 2375, 2484, 2376, 2131, 1770, 2490, 2132, 2736, 2913, 
        2133, 2737, 2914, 2134, 2738, 2915, 2135, 2302, 2136}], 
       Line3DBox[{2138, 2303, 2137, 2826, 2304, 2139, 2827, 2305, 2140, 2739, 
        2916, 2141, 2740, 2917, 2142, 2741, 2918, 2143, 2306, 2144, 2933, 
        2377, 2378, 2145, 2957, 2491, 2621, 2492, 2146, 2486, 2520, 2919, 
        2771, 2147, 2379, 2487, 2380, 2981, 2622, 2148, 2381, 2488, 2382, 
        2934, 2149, 2383, 2489, 2384, 2150, 2828, 2307, 2151, 2829, 2308, 
        2152, 1538, 2153, 2742, 2920, 2154, 2743, 2921, 2155, 2309, 2156}], 
       Line3DBox[{2158, 2310, 2157, 2830, 2311, 2159, 2831, 2312, 2160, 2832, 
        2313, 2161, 2744, 2922, 2162, 2745, 2923, 2163, 2314, 2164, 2833, 
        2315, 2165, 2834, 2316, 2166, 2493, 2835, 2317, 2167, 2494, 2746, 
        2958, 2168, 2495, 2747, 2959, 2169, 2496, 2318, 2170, 2836, 2319, 
        2171, 2837, 2320, 2172, 2838, 2321, 2173, 1554, 2174, 2748, 2924, 
        2175, 2322, 2176}], 
       Line3DBox[{2178, 2323, 2177, 2839, 2324, 2179, 2840, 2325, 2180, 2841, 
        2326, 2181, 2842, 2327, 2182, 2749, 2925, 2183, 2328, 2184, 2843, 
        2329, 2185, 2844, 2330, 2186, 2845, 2331, 2187, 2846, 2332, 2188, 
        2750, 2926, 2189, 2333, 2190, 2847, 2334, 2191, 2848, 2335, 2192, 
        2849, 2336, 2193, 2850, 2337, 2194, 1570, 2195, 2338, 2196}]}, 
      {GrayLevel[0.5], 
       Line3DBox[{1096, 1358, 1097, 1373, 1126, 1388, 2779, 1141, 1401, 2782, 
        1154, 1414, 2787, 1167, 1427, 2795, 1180, 1439, 1192, 2877, 1451, 
        1204, 1462, 2806, 1215, 1472, 2807, 1226, 1482, 2810, 1237, 1490, 
        2816, 1248, 1499, 1260, 2895, 1508, 1272, 1518, 2825, 1284, 1528, 
        2826, 1298, 1541, 2830, 1313, 1556, 2839, 1328, 1571, 1343}], 
       Line3DBox[{1098, 1359, 1099, 2851, 1374, 1127, 1389, 1142, 1402, 2783, 
        1155, 1415, 2788, 1168, 1428, 2796, 1181, 1440, 1193, 2878, 1452, 
        1205, 2886, 1463, 1216, 1473, 2808, 1227, 1483, 2811, 1238, 1491, 
        2817, 1249, 1500, 1261, 2896, 1509, 1273, 2907, 1519, 1285, 1529, 
        2827, 1299, 1542, 2831, 1314, 1557, 2840, 1329, 1572, 1344}], 
       Line3DBox[{1100, 1360, 1101, 2852, 1375, 1128, 2863, 1390, 1143, 1403, 
        1156, 1416, 2789, 1169, 1429, 2797, 1182, 1674, 1778, 1441, 1194, 
        2879, 1686, 1780, 1453, 1206, 2887, 1694, 1783, 1464, 1217, 2891, 
        1474, 1228, 1484, 2812, 1239, 1492, 2818, 1250, 1501, 1262, 2897, 
        1510, 1274, 2908, 1520, 1286, 2916, 1530, 1300, 1543, 2832, 1315, 
        1558, 2841, 1330, 1573, 1345}], 
       Line3DBox[{1102, 1361, 1103, 2853, 1376, 1129, 2864, 1391, 1144, 2872, 
        1404, 1157, 1655, 1656, 1417, 1170, 1664, 1665, 1430, 2798, 1183, 
        1675, 1676, 1442, 1195, 2880, 1687, 1781, 1454, 1207, 1695, 2963, 
        1784, 1465, 1218, 1706, 1787, 2947, 1475, 1229, 1721, 1792, 2952, 
        1485, 1240, 1493, 2819, 1251, 1502, 1263, 2898, 1511, 1275, 2909, 
        1521, 1287, 2917, 1531, 1301, 2922, 1544, 1316, 1559, 2842, 1331, 
        1574, 1346}], 
       Line3DBox[{1104, 1362, 1105, 2854, 1377, 1130, 2865, 1392, 1145, 2873, 
        1405, 1158, 1591, 1657, 2929, 1418, 1171, 1597, 1666, 1431, 1184, 
        1603, 1677, 1443, 1196, 1688, 2941, 1689, 1455, 1208, 1696, 2964, 
        1785, 1466, 1219, 1707, 1788, 2948, 1476, 1230, 1722, 2953, 1486, 
        1241, 1866, 2974, 1494, 1252, 1503, 1264, 2899, 1512, 1276, 2910, 
        1522, 1288, 2918, 1532, 1302, 2923, 1545, 1317, 2925, 1560, 1332, 
        1575, 1347}], Line3DBox[CompressedData["
1:eJwVz7FKglEchvF/8FVkgzVEhFOLBIqRITQ5NeTiYENhgyClUJEQhPTRFjY0
eAF1B1J2E9UNOHUVbW5Bv294eN73PXA4Z7s7aN0sREQTrSTieBHc5Z9cxJV8
uRQxXJX5GlUM9H2+RWk5ooxUTu0H/ICKbRePch2/7hvxnq2KsXyIvPzCc7xi
TT/K7nZXg9f1Nx7p7/yHKZ70D95w/slfSGyJ/i2fcw8XmOnPzk74FG3bPSa2
lM/Qsa/4d4/v7H3e1HPZG/SivCUX5Jq8k72f/wFtHSJt
        "]], Line3DBox[CompressedData["
1:eJwV0L8rhHEcwPGPOlwuhltIFtNlUMqPonSWu4GcXM7vwY8FcTdYlGzKIJFZ
SfwBWP0VZDTKdEqZldd3ePd+fz7f53nunqd/q1Gtt0TEGhYyaI2ocSEXsa33
9UFbxJG5zg2MoNIecWs3quf0IQ/yOB9jAl8dESc8ZF/kU0zhx77L7lL/4grX
6T7PK3EZNxh2zTTfYSb9rjmPR33m2id+xixq9hX+8+xF/aLnsaSrvMz37unm
V3OW33iHJ/Guz53v6j2smD+wmt49zXhwvmH+xGb6v3braOoLZ536W/f4bjnO
2xV0r+7TY3pAl/gfA1EqPw==
        "]], 
       Line3DBox[{1110, 1365, 1111, 2856, 1380, 1133, 2866, 1648, 1393, 1146, 
        1649, 1777, 1406, 2960, 1159, 1653, 1662, 1419, 2982, 1172, 1916, 
        1670, 1671, 1432, 1934}], Line3DBox[CompressedData["
1:eJwVy78rxHEcx/G38mO4/AOScqL7ZhQp0023KNxx0UW6Uhbfk0RSbj0lpRhs
zo9RWSXbKZtJ6gZZZJR/QB6GZ+/X6/n6fAartWLaEREVLHZGlLsiltwkE7Em
p/KYvCXvy9vdETvY4+pcg9vtiZji6jjiLmxn/Cyf5xrYkGtIcWJv2ifkTRza
T3Ht7y3ftBf5Ajfn3vH3/Lw8zV3aS/ID3+KvuAPuSX/Rx20z3COy8hDafEl/
8+bc20/9WX/FB/ejL/AV/R3D/ozgl1/lq9wXclyCjD8r7jp3Y1/+f8v14Zs7
5nrdRO93B/RJeVQuuH92YS8K
        "]], Line3DBox[CompressedData["
1:eJwVzc9HwwEYx/Fn1DqU/oF0iIjpmIhOnXYpSTZq9IvossXY6cu+1ygRjV2n
HbpE13Qt6lKnGR3SZbJTZvft1eHj+bzfz8OzcFzZKWciYkv2JiKKkxH7Zm46
4lSv6Ct6VU/01WzEOU7xBV7Hm1MRNbnnr/gGv8E39RuuhQ/tj+RA2vwDd+sm
sX/ET/gO1/EzfsFtnOJX/Im3cRV/4C/8ht+li3t4V+/Ioh8/3IAruC9x37LE
9/kRf4Iv7X7NHD/kZ+QM1/iRPid/+BrP/t/hsj6vr+nLZt4cAzIGLF8=
        "]], 
       Line3DBox[{1116, 1368, 1117, 1383, 2778, 1136, 1396, 2780, 1149, 1409, 
        2784, 1162, 1422, 2791, 1175, 1434, 2801, 1187, 1446, 1199, 1861, 
        2973, 1862, 1863, 1702, 2945, 1703, 1811, 1717, 1790, 2965, 1718, 
        1812, 1726, 1793, 2967, 1727, 1814, 1739, 1797, 2970, 1740, 1255, 
        1621, 1751, 1622, 1267, 1629, 1760, 1630, 1763, 1636, 2932, 1769, 
        1637, 1293, 1536, 2828, 1308, 1551, 2836, 1323, 1566, 2847, 1338, 
        1581, 1353}], 
       Line3DBox[{1118, 1369, 1119, 2859, 1384, 1137, 1397, 2781, 1150, 1410, 
        2785, 1163, 1423, 2792, 1176, 1435, 2802, 1188, 1447, 1200, 2882, 
        1458, 1211, 1704, 2946, 1786, 1705, 1222, 1719, 1791, 2966, 1720, 
        1233, 1728, 1794, 2968, 1729, 1244, 1741, 1798, 1742, 2821, 1256, 
        1752, 1801, 1753, 1268, 2903, 1761, 1803, 1762, 1280, 1770, 1804, 
        1771, 1294, 1537, 2829, 1309, 1552, 2837, 1324, 1567, 2848, 1339, 
        1582, 1354}], 
       Line3DBox[{1120, 1370, 1121, 2860, 1385, 1138, 2869, 1398, 1151, 1411, 
        2786, 1164, 1424, 2793, 1177, 1436, 2803, 1189, 1448, 1201, 2883, 
        1459, 1212, 2888, 1469, 1223, 1479, 2809, 1234, 1730, 1795, 1731, 
        2814, 1245, 1743, 1799, 1744, 2822, 1257, 1754, 1802, 1755, 1269, 
        2904, 1515, 1281, 2913, 1525, 1295, 1538, 1310, 1553, 2838, 1325, 
        1568, 2849, 1340, 1583, 1355}], 
       Line3DBox[{1122, 1371, 1123, 2861, 1386, 1139, 2870, 1399, 1152, 2874, 
        1412, 1165, 1425, 2794, 1178, 1437, 2804, 1190, 1449, 1202, 2884, 
        1460, 1213, 2889, 1470, 1224, 2892, 1480, 1235, 1488, 2815, 1246, 
        1497, 2823, 1258, 1506, 1270, 2905, 1516, 1282, 2914, 1526, 1296, 
        2920, 1539, 1311, 1554, 1326, 1569, 2850, 1341, 1584, 1356}], 
       Line3DBox[{1124, 1372, 1125, 2862, 1387, 1140, 2871, 1400, 1153, 2875, 
        1413, 1166, 2876, 1426, 1179, 1438, 2805, 1191, 1450, 1203, 2885, 
        1461, 1214, 2890, 1471, 1225, 2893, 1481, 1236, 2894, 1489, 1247, 
        1498, 2824, 1259, 1507, 1271, 2906, 1517, 1283, 2915, 1527, 1297, 
        2921, 1540, 1312, 2924, 1555, 1327, 1570, 1342, 1585, 1357}], 
       Line3DBox[{1350, 1578, 1335, 2845, 1563, 1320, 2835, 1548, 1774, 1305, 
        1533, 1818, 1766, 2919, 1290, 1523, 1817, 1765, 2911, 1277, 1513, 
        1816, 1757, 1937}], 
       Line3DBox[{1927, 2881, 1905, 1683, 1891, 1858, 1906, 1859, 1860, 1847, 
        1854, 2972, 1930}], 
       Line3DBox[{1929, 2971, 1857, 1825, 1909, 1867, 1907, 1724, 1895, 1868, 
        1908, 2984, 1932}]}, {}, {}}},
    VertexNormals->CompressedData["
1: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
FsQLbPe1Ncwh3IPyVpEfMshS8Ri1YX4WeHHF3JSfVUBmpLL5vxj6QkKn2NeE
z+oDVc/zhw7+KiE/1M2ag/zLybxLaT+jSrqhtZ4rPlKkgnzzbrRY/7SRLOj0
lthT0g69EkSOb3kpecVeeGAgvp00+GRXfYxtglW3viyycEkn76SDxs93dZOJ
iGa52Gl1cDYji4/SIdF45QTSBxMEZZH+eu/jrZQPZJbHaiEfDa+yCuSzuUI0
icoF37U7GLlxYRniKHfppB2aVE9QSiluQj1j95qPoJ7WPPXXqV1wtMbRB+1a
bnS8Fu2a2cPvTHGAq1eCGBycdIz3IQ4RzSsqKW7QZ7hYCnE78uo9g1tBomsd
xRkeCPUzON8bXfUacf6c6W1F/QIrxj/8TqZ+ua78hPGL6a7PJtSPYHlShPGj
RYsr40cb7jzezWGR5KuJ1mru2Cfk4P2GLgf67n+c8nTvIFc8uRk0TchLM5hI
f98luYjmjWGt6NCP6oSYvNCwTs+NJF1icUGPoum97niquCskmzxv4FTb75JI
0j46KMzVZsGWgVsG3J4FRH10aKCa7QPhu/sgcJNVH7xPTo3hZq8gHyKPHsnX
LCSPv95TlTnWA7IWApxsexqIr0fV94oj1UQmrmyHT3s7nFh9eOrJec3kS6DZ
/LYbzaR88q7CnakNcFxoZarli0YS+2rNr6rfHeS3zkvztMwisBUSnsnXUUBO
X3d4/9uqj/hqG6X51mWCqoaaAKWDeZNOAtIvqP9MRbrdieb3lA9k1q4fQz6X
30hYIJ/I50MTJvOaoTzsIh/K1b3SUoxyj9i84qB6Qqv/5WHU8xlrjRLq+Tmo
4SW1C5yzmo+iXaXS09XRLg9NKV2KAzw/vGQYcRAciAlCHJ7XLpCiuIGkk6QW
4nZWdvdGxE19RaMnxRkuFrx3RJyvTRlmcHa4/02B+gW8ckUZv1jlXGX8snvf
85+bwiLB+6E540ePc78ZP8b93P6c/2Y0kdw6jUNhvjfxIvbj+zro+Z/NEWZn
3xPrMgsFfxJIguOCy97ks+C9rd+JhGOZJO3X6fkbBd+QpebGj5Xc6ftu4ni/
b94X8lS0Xf1FdwJ54TLrRw07C4L2VexK5C0jj65VmJGxLLJDIH9vxqNeiE4x
iwnRaSCW3bFBu1ULicIKk0VvBbvgqqtT69X6VqJg+ll7T04lGW9xtX97rRni
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
zRvwq+Eqk59dgllbMT+7XMpWpXkGzB2smfwsXpDVgvn59vAzc5qXYNqUtheY
lzp/BYlgfn7XHVZP8xgoiBgw+Xn2xcsvMT9HRndl0rwHXyRWzMW8p7NkOZOf
49WTa2mehC/Vwb8wP2/eKHkJ8/P8FZvYaV4FB81IfcyrUSPr7TE/8w7Z2tM8
DCOsGCvMw352g46Yn9ksv1gjfVbcbmOkp/fut8L8/KvKeiryGWhaaYF8rIx8
UjE/O3Eb/EK5GSNJ0zE/f/rdGIj5uWJ+aT7qeejsSkHUc1aqOZOflXaO5aNd
reHBTH629ZBj8rOB8oP7iEP826gwxEFGPpzJzzuJ52rEjeNeLpOf+4e4wjA/
b+x2w/wMFdoP/rv8DP+Sn+Hv/Gxzruk31lesNevxXQaJx3OYd3lNnV4e1lfP
FJNH6DsONos0mXf8Y1eHNdZXjYrDmvTdh2M/Av+7+gr+rq++81Tex/pqqGaz
Ma0rYLOoWz3WFWfNPJZgfTWN12QXrUNAdOKYDdYhs2rMVmF91Vx/4TatW6Bk
Fkcd1i31oaOTsL4qjRNWo3UOPH379QfWOXvOXWfqK3nuVj9aF8FZDp8mrIvE
896YY32lcKDAk9ZRZMPyJDuso+b/3GWG9dWWmBu+SI+7msrQW/muZmJ95Zfq
8xb5cMgfYOqrIicdpr7qXbnRCOWSnsjfKFdV8yFTX+2K3OCGeh7fzNOKeo7O
G+TF+kqGz0kd7aoU3c7UV3zjgtZYX0mZnjuEOFStvteMOPxYqd6L9dXzMOtJ
DyhuXxONmPrKr1jiNNZXHCG/LBFn7tqDTH3lM+7yFusrNbEfnKeoXyYdiPjv
6iv4u776uz9a86c/gr/7o0BSGon9kVb2hrW0DgcNyWdMHb6ZR9oQ+6OoztI1
tG4Hwx8bmbp9kC/MCfsj7bE+HVrnw6qxeUx/dCZZTAX7I5337ka0L4CkSmNV
7AvyszTjsD8a89IOoH0EHDqTxYd9BNfX9Gbsj/RaY/Ro3wHiyiymP1q8cwYP
9kcrdk42pn0KOIic2IZ9Cjl9pgH7o/DIwELa10DXd2WmP3q7y3cN9kcXbNZ+
o/0R7Dpfk4R9UECb9lLsj/ZO3JpC+yMw8c8vRDpXhjDTH007FVeHfDZsOzwP
+Rz4qz8K+9MfQfJf/dEei+Za7I8E/bKOo57rHtoz/dHM7CuvsT+asrj3BdqV
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
mzi7abzBOgPPFTTeYGDnTQ2MNwtdg480PuFmGncOjU9Qr7u6BePT+nXHRbwv
nzfnfqP3BZqfrx7B+6J7wfIw7XMhu66yhfa5cF/t0xbsc82mxDjSewdTBUOL
6L0D7nUlM/DeZf48eYD272TuiRhN2r/DMZcV/di//wi4OTv8WA0YVqd4tYUV
wpOchTo4fxBlhXbac+SSJ8Wr2bZP0PMmF3VwvqFWabHm9JiUopBAmz3NG3/9
roHc41qfuouLQYI3dcqMIwWwEDqZeQ4rfvZG4bZ8UjY5zVHTuQVez3UdxLnQ
3/HhpZwkQ/MVsLutnWJD81VJ5N0n2Spp8N3M3Uf4WhOEZtQE4hxs2Kff0V8w
DySfBCW3X6uFoNPGSThPm2g7cY93MA+ME6dMrl9VCoUHVz3DuVyQkS+TPwMb
eRQxr2pN+ZMnkxd0J+Hcb5fXcyY/v4z6M/cTUvaYiu/Ig6FNdZgnPXerN2Ke
nDOyMR1xOOUyiQPnPAWyaxURB+7zcVKI57cFVXo4DxmecC5HPC0UuE9ifdUu
cGcm5s+GzBSmvhJtHB7CeAtXHYnHvNQ9kX8V461m3vG7GG/THTy/Yh5r6fB8
j/F2XH4zzhPgc7tNOc4T7t9/KIdxpS06KK/2uZOsOOX+2OhMNnkS2LTl+Pwm
cDinMyjkTvOVqGNpkfknwjfr8xWfTSWw03zFMt2wPpIhOiF0afJX0qeVn9Vp
nAkHwjSFKR28nZ+LIl325dSvSD8mXKQaxN1NXkzW5gkSjCRXL+8Y9RlrgNc6
QmmHPfrIQtfs0aa4GJL70LbXnta/hpJrD2B+cFKcXo3550fFIlfMD3Vn553A
fi1U4Ews5quqNaeZfm37s6m7KH+YbisqiPzFTPMnPaH8z2Q0q6HcRsuE7kDB
SFhSWDSCcqUGjxzGvKfZxyrAvq858hyT956c2s/kvfF3jhOYl4yPBgej3NE9
uqlUT+ifVjKtOS4GPuQFDKOegd2zVVCu4HjnUioXVL01pqDcsbFsxIG8KalH
HGCrG1cm4mDnlL4U8SlMyViFdOVrYflIL6tv6qc4g7v4OhbFGfp4VewR54M/
uddQv8Dt2/LR1C+wf6nXTvSL9TppZi7UzNrHwvywOp5fFP0496uLPb5f1obF
1Zhn+H3ictDvqi92DuD7Nbe84wvmpZf2O20xTq4Z9B/Cd3nn6GshrNvtdmkw
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
V5UhxzeHElYK08DtSug1I5VaZL/78F+tPRWI4aXv3dvFo7AtSedNm3grosec
KT5m3IIMWxzdC48PwV/7N+YpSzvRpRW9mSwsfcg2OqLO+kUvFPbmJb/92YQE
ppjDVFcPI6X8B7P0vc2Qwdj0IHptL3LuBj/yPDbTFgFh8tzOqqE3g1XHOtGh
vfV25Pnti0WO4+T5bbWZM7H//k7f6YV5Xcw3SsP2waJAMpTYL7z8nrK/3H/P
asfCJnToXbMJCFahe0GdExeiRkDY2GmV6t8WtNO8ZY2wTRXSOt+x/9WWEfBP
Wz0gNtGDzquZHt8U04pumJ7XmV7ZDzWXx/azP+5HD1Gq+gT+++afjzeFyraA
0vegZ+qmfUjmsIRu9I7vyLBdPbenMRd4v8nN6BkPoh1rflqS56gl40N9yXNc
u+/1CP1bT9ZZ0JN36cqI/rtdcaH9nqLlE2wfFHWRAbGfoD5TQOxXuMinrhcZ
BWXX2SMJvS1I6ffZSONtyRD0IDY2V6kexbN4azDNILRlr5hIwmoaAOuWGa63
nUhlj7dIy6ZKJD9xXy6pdAhoM/0yF6q70Oh9Ftkp7grEVjj8Y1hhCEKcx5Zt
LBpA0TXzms5VjWg077TRug09UJrYaDTuOYyW3y1tPH+2DUl11FhU3q2BVWPt
JmM2o8hue6BtCV8z8mW5KkJ0Bl3GQo3uUhpa6fmQmejDehMjW4g+/J/ed4up
lS+1e0VHO7qYn5Lnrh0PrjMlzw1uFREKIN+V81n4rty5he/KmV/dZntEmwax
9zdI1wTUoalAj+LzkUkwJGlG6Tbl4SGnu2QaUFec1ADRbcQtNO9ViDQjGy2k
KC+ahqo+B21KthqFlxsY8tLwPpzkMf4WdqoYnYlQ2Sc29h3k/Fk4iV7UdIq1
eEK1Dnm9Xy9C9KLtXG9PObYPoUUe1l9fb69G4rMTq7wLOqA26mMUHhcdGP57
hIy7T/pcHRn3RhTbVSYdGloR20PXi6tEDh96+4neG8KyNbdFloa4mJ65keeo
/ddAM3le9D/hEx8YKaza1IruXdnYXe8VhZYVVVWGz43AoucRlF6n7BKhOZyY
iaQ0/lJ6Xa+MkgbR6/Qk7k+ocRSjc0WyYUSv62HO7bD7NIryJp4v9XNvQvf6
nd6+XZHwH8et4tAYI3omc990FfudOBTCdOIE0TPhiSAj0f1exuW/I/wke/7C
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
8tyXXn3Uc+2ZzeKJnrzlrCq1zlrW/6xzy6n1JkRP7tyesJO8V/eMI/Velkv7
EdGTW3q/tBA/iD66QPmh+cmeQaInC9YNSRO/mTjJU35Tn7p+nujJYps/XiJ+
Psl0nPKzspS2HdGTmXwit5H9OmkcSe3X8FSnJ9GTH7L4UfvF+D2V2i+V9jdN
6vGeyLMzfGWL5Ffk0dbRDNg+dXKtz+srMcj7UZQKCshGdvyq3OEf6LDmzetm
VdYoFPO0uFmwqgBNMjBvXqtEh3X+y6zlLkTDoWT/Ui/vXNSqkVQgZkwH2epb
wqKV0RBt+J65NT0DeT7M0rYPwHXZBaEf2/S9YcB39+zmzG/o9R4mBjscbxr2
KwY82AKQQIP2kq5PnmjzPxnzgD90OO/+NMFDIBRJqk3syN4QgF7Ofpc1H6bD
1y/tcbnlmSAydmDDq/IKFLDtztOkjzSA8PdJ2+UzQPNUnEHMTD7yFWO71ypA
h0mutxt8XqYAm4yiwYrwDJS7XfiLtg0dLsdt3G5+PwCeS6flBp3+jsKPvepb
ip9rcwVt2aoQjtr3BR0S3ueDTNl9aXT83PWvnmwfKIhFr9BYUIhLMDr7TPer
GM6DplMprfH/ktGSGMUQ26exyIfenOCUTAedqCWDbapViEUwYfOJL41oJvvy
ZPv3QRi5PrnHjrkKjW/fkZ6f3onu3d859flKH4SayJzqD8lDy/ctSwsw+Y0+
GgQVF813wy/044ishyPIeRpdeHqkH12dPTD6Mb4LLgjQL5t/rQRxgyD9Rxr1
iEmTqaYPhmDhYtzSvLISCPexo9/jqUBdDCUM/7bSoCar64k7Ux6UilxOtqnM
Qadcdpfs5KYDl/B00Ou7GRCy3fbV69FkJGZ//VOMPR38GA4+sJwPgcMFxmxe
DN7ocPVE6tcROphdajngURWL2s+fn6z44Yviwx4JjnXQ4WVXUPtfWgoSflhm
PdoXhpxgldhIJo6f23kcR1lyUMjN2L07mXCd3bRM/bIJ5vlni2qkd5Yif5Vr
ZgFZWcijsKebuYwG94a1P939046+f/DPsP3XgQz+sEppK3eDdILAKtaAdpS8
5EtmIkMfCu3xalqyvRGSl1+RkVf7hTZv6mZW0BlGjXPrtHbxV0Dg1ME+jfWZ
EMUfHzk7QkP5f063FVQVQ/82h0IP32Y4OcFFWx4zgLZlMLkqe1fDhjlVG5uV
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
     "]], {{}, {}, 
    {GrayLevel[0], Thickness[0.01], Line3DBox[CompressedData["
1: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
R/72//fI/wPs/a6e
      "]]}}},
  AutomaticImageSize->True,
  Axes->{True, True, False},
  AxesLabel->{
    FormBox["\"x\"", TraditionalForm], 
    FormBox["\"y\"", TraditionalForm], None},
  BoxRatios->{1, 1, 0.4},
  ImageSize->{360., 360.},
  LabelStyle->Medium,
  Method->{"RotationControl" -> "Globe"},
  PlotRange->{{-3, 3}, {-3, 3}, {0, 10}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], Automatic},
  SphericalRegion->True,
  ViewPoint->{-9.849706534137091, 16.65322433555213, 5.064918599656746},
  ViewVertical->{0., 0., 1.}]], "Output",
 CellChangeTimes->{
  3.529252036175233*^9, {3.529252113452914*^9, 3.5292521545616813`*^9}, {
   3.529252198490363*^9, 3.5292522533187184`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"zzz", "=", " ", 
   RowBox[{"z0", " ", "+", "  ", 
    RowBox[{"r", "*", 
     RowBox[{"Exp", "[", 
      RowBox[{"I", " ", "\[Theta]"}], "]"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"integrand", " ", "=", " ", 
  RowBox[{
   RowBox[{"g", "[", "zzz", "]"}], " ", 
   RowBox[{
    RowBox[{"D", "[", 
     RowBox[{"zzz", ",", "\[Theta]"}], "]"}], " ", "/", 
    RowBox[{"(", 
     RowBox[{"2", " ", "Pi", " ", "I"}], ")"}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{"residue", " ", "=", " ", 
  RowBox[{"Integrate", "[", 
   RowBox[{"integrand", " ", ",", 
    RowBox[{"{", 
     RowBox[{"\[Theta]", ",", "0", ",", 
      RowBox[{"2", "Pi"}]}], "}"}]}], "]"}], " ", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"This", " ", "is", " ", "for", " ", "Z"}], " ", "=", " ", 
    RowBox[{"-", "I"}]}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.529252184230791*^9, 3.529252190630599*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{"3", " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"\[ImaginaryI]", " ", "\[Theta]"}]]}], 
  RowBox[{"5", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "\[ImaginaryI]"}], "+", 
     FractionBox[
      RowBox[{"2", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"\[ImaginaryI]", " ", "\[Theta]"}]]}], "5"], "+", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "\[ImaginaryI]"}], "+", 
        FractionBox[
         RowBox[{"2", " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"\[ImaginaryI]", " ", "\[Theta]"}]]}], "5"]}], ")"}], 
      "3"]}], ")"}], " ", "\[Pi]"}]]], "Output",
 CellChangeTimes->{3.5292522245195827`*^9}],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox["3", "2"]}]], "Output",
 CellChangeTimes->{3.5292522260695357`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"zzz", "=", " ", 
   RowBox[{"z0", " ", "+", "  ", 
    RowBox[{"r", "*", 
     RowBox[{"Exp", "[", 
      RowBox[{"I", " ", "\[Theta]"}], "]"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"integrand", " ", "=", " ", 
  RowBox[{
   RowBox[{"g", "[", "zzz", "]"}], " ", 
   RowBox[{
    RowBox[{"D", "[", 
     RowBox[{"zzz", ",", "\[Theta]"}], "]"}], " ", "/", 
    RowBox[{"(", 
     RowBox[{"2", " ", "Pi", " ", "I"}], ")"}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{"residue", " ", "=", " ", 
  RowBox[{"Integrate", "[", 
   RowBox[{"integrand", " ", ",", 
    RowBox[{"{", 
     RowBox[{"\[Theta]", ",", "0", ",", 
      RowBox[{"2", "Pi"}]}], "}"}]}], "]"}], " ", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"This", " ", "is", " ", "for", " ", "z"}], " ", "=", " ", "I"}], 
   " ", "*)"}]}]}], "Input",
 CellChangeTimes->{{3.5292521769810085`*^9, 3.5292521824408445`*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{"3", " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"\[ImaginaryI]", " ", "\[Theta]"}]]}], 
  RowBox[{"5", " ", 
   RowBox[{"(", 
    RowBox[{"\[ImaginaryI]", "+", 
     FractionBox[
      RowBox[{"2", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"\[ImaginaryI]", " ", "\[Theta]"}]]}], "5"], "+", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"\[ImaginaryI]", "+", 
        FractionBox[
         RowBox[{"2", " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"\[ImaginaryI]", " ", "\[Theta]"}]]}], "5"]}], ")"}], 
      "3"]}], ")"}], " ", "\[Pi]"}]]], "Output",
 CellChangeTimes->{3.529252213429915*^9}],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox["3", "2"]}]], "Output",
 CellChangeTimes->{3.529252215569851*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"zzz", "=", " ", 
   RowBox[{"z0", " ", "+", "  ", 
    RowBox[{"r", "*", 
     RowBox[{"Exp", "[", 
      RowBox[{"I", " ", "\[Theta]"}], "]"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"integrand", " ", "=", " ", 
  RowBox[{
   RowBox[{"g", "[", "zzz", "]"}], " ", 
   RowBox[{
    RowBox[{"D", "[", 
     RowBox[{"zzz", ",", "\[Theta]"}], "]"}], " ", "/", 
    RowBox[{"(", 
     RowBox[{"2", " ", "Pi", " ", "I"}], ")"}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{"residue", " ", "=", " ", 
  RowBox[{"Integrate", "[", 
   RowBox[{"integrand", " ", ",", 
    RowBox[{"{", 
     RowBox[{"\[Theta]", ",", "0", ",", 
      RowBox[{"2", "Pi"}]}], "}"}]}], "]"}], " ", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"This", " ", "is", " ", "for", " ", "z"}], "=", "0"}], 
   "*)"}]}]}], "Input",
 CellChangeTimes->{{3.432911838514997*^9, 3.432911871265626*^9}, {
   3.4329119403450775`*^9, 3.4329119508452787`*^9}, {3.432912086176002*^9, 
   3.432912086597885*^9}, {3.4329122130846887`*^9, 3.4329122610856104`*^9}, {
   3.4329123338057566`*^9, 3.4329123338526325`*^9}, {3.4329123701033287`*^9, 
   3.432912646874267*^9}, {3.432912758845167*^9, 3.4329127850331697`*^9}, {
   3.432912858112698*^9, 3.4329128939258857`*^9}, {3.433012184173953*^9, 
   3.433012213283887*^9}, {3.4330122436282196`*^9, 3.433012467023134*^9}, {
   3.433012510039585*^9, 3.4330126479328575`*^9}, {3.4330127363876805`*^9, 
   3.433012813326658*^9}, {3.433012861155701*^9, 3.433012972439088*^9}, {
   3.4330130123929796`*^9, 3.433013307304892*^9}, {3.4330133539932885`*^9, 
   3.4330134318072824`*^9}, {3.4330135014336195`*^9, 
   3.4330136989374113`*^9}, {3.4330137581260476`*^9, 
   3.4330137584698043`*^9}, {3.433013828205518*^9, 3.433013829189912*^9}, {
   3.4330141354145412`*^9, 3.4330145177656326`*^9}, {3.4330145876263485`*^9, 
   3.433014676268676*^9}, {3.433014712378744*^9, 3.4330148457719297`*^9}, {
   3.4330148781319265`*^9, 3.4330149235077977`*^9}, {3.4330149811651545`*^9, 
   3.4330149869933915`*^9}, {3.43301504447887*^9, 3.4330150773857517`*^9}, {
   3.4330151278242207`*^9, 3.433015184325305*^9}, {3.433015222138531*^9, 
   3.4330152617955427`*^9}, {3.433015306093268*^9, 3.433015406204565*^9}, {
   3.433015440611476*^9, 3.4330155431915703`*^9}, 3.433015586442401*^9, {
   3.433015620068046*^9, 3.4330156514592743`*^9}, {3.4330157239919167`*^9, 
   3.4330157439923005`*^9}, {3.433016682479069*^9, 3.4330167159015856`*^9}, {
   3.433020454301487*^9, 3.4330204561140213`*^9}, {3.433081936947554*^9, 
   3.433081953144578*^9}, {3.433097520099688*^9, 3.4330975600674667`*^9}, {
   3.433097599708685*^9, 3.433097608668137*^9}, 3.433102833167563*^9, {
   3.433103998641814*^9, 3.433103998777248*^9}, {3.4335339101233473`*^9, 
   3.433533912795205*^9}, {3.5292521694312353`*^9, 3.5292521744710836`*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{"3", " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"\[ImaginaryI]", " ", "\[Theta]"}]]}], 
  RowBox[{"4", " ", 
   RowBox[{"(", 
    RowBox[{
     FractionBox[
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"\[ImaginaryI]", " ", "\[Theta]"}]], "2"], "+", 
     RowBox[{
      FractionBox["1", "8"], " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"3", " ", "\[ImaginaryI]", " ", "\[Theta]"}]]}]}], ")"}], " ", 
   "\[Pi]"}]]], "Output",
 CellChangeTimes->{{3.529252086773715*^9, 3.5292521551516633`*^9}}],

Cell[BoxData["3"], "Output",
 CellChangeTimes->{{3.529252086773715*^9, 3.52925215526166*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"zzz", "=", " ", 
   RowBox[{"z0", " ", "+", "  ", 
    RowBox[{"r", "*", 
     RowBox[{"Exp", "[", 
      RowBox[{"I", " ", "\[Theta]"}], "]"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"integrand", " ", "=", " ", 
  RowBox[{
   RowBox[{"g", "[", "zzz", "]"}], " ", 
   RowBox[{
    RowBox[{"D", "[", 
     RowBox[{"zzz", ",", "\[Theta]"}], "]"}], " ", "/", 
    RowBox[{"(", 
     RowBox[{"2", " ", "Pi", " ", "I"}], ")"}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{"residue", " ", "=", " ", 
  RowBox[{"Integrate", "[", 
   RowBox[{"integrand", " ", ",", 
    RowBox[{"{", 
     RowBox[{"\[Theta]", ",", "0", ",", 
      RowBox[{"2", "Pi"}]}], "}"}]}], "]"}], " ", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"This", " ", "is", " ", "for", " ", "z"}], "=", 
     RowBox[{
     "0", " ", "with", " ", "larger", " ", "r", " ", "to", " ", "include", 
      " ", "all", " ", "three", " ", "points"}]}], ",", " ", 
    RowBox[{"residual", " ", "=", 
     RowBox[{"0", " ", "so", " ", 
      RowBox[{"good", "!"}]}]}]}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.5292522656383486`*^9, 3.529252308657058*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{"9", " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"\[ImaginaryI]", " ", "\[Theta]"}]]}], 
  RowBox[{"4", " ", 
   RowBox[{"(", 
    RowBox[{
     FractionBox[
      RowBox[{"3", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"\[ImaginaryI]", " ", "\[Theta]"}]]}], "2"], "+", 
     RowBox[{
      FractionBox["27", "8"], " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"3", " ", "\[ImaginaryI]", " ", "\[Theta]"}]]}]}], ")"}], " ", 
   "\[Pi]"}]]], "Output",
 CellChangeTimes->{3.529252300227311*^9}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.5292523006073*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Applications (45 min)", "Section",
 CellChangeTimes->{{3.4306009820872726`*^9, 3.4306009986500907`*^9}, {
   3.430607504087493*^9, 3.4306075152908325`*^9}, {3.431182354054803*^9, 
   3.4311823567267294`*^9}, {3.4311825544336505`*^9, 3.431182554574278*^9}, {
   3.431190573165732*^9, 3.431190601072518*^9}, {3.431201043366756*^9, 
   3.431201044929286*^9}, 3.4314665256696043`*^9, 3.4314665763961973`*^9, 
   3.431466615222662*^9, 3.431488602552561*^9, {3.4318058304191175`*^9, 
   3.4318058361536026`*^9}, {3.4318064206804504`*^9, 
   3.4318064225242357`*^9}, {3.4318076741107655`*^9, 
   3.4318076836890745`*^9}, {3.4318082132929926`*^9, 
   3.4318082134336205`*^9}, {3.431897534720481*^9, 3.431897534876734*^9}, 
   3.4320716408573427`*^9, {3.43207404935671*^9, 3.432074049700467*^9}, 
   3.4324110404222517`*^9, 3.43248857343566*^9, {3.432516059264507*^9, 
   3.4325160610457907`*^9}, {3.4325165428831673`*^9, 3.432516543101921*^9}, {
   3.432587619790475*^9, 3.43258763410325*^9}, {3.4325876875886517`*^9, 
   3.4325876878386564`*^9}, {3.432588000407158*^9, 3.4325880005321603`*^9}, {
   3.4326596728308268`*^9, 3.432659673010415*^9}, {3.4329101735924063`*^9, 
   3.4329101851238775`*^9}, 3.433090849373167*^9, {3.433090943136037*^9, 
   3.433090957611125*^9}, 3.4332037210203037`*^9, 3.433203776271718*^9, 
   3.4332039073531985`*^9, {3.433203964089026*^9, 3.433203964417159*^9}, {
   3.524861333554629*^9, 3.524861334816755*^9}, {3.52486817844005*^9, 
   3.52486818071765*^9}}],

Cell[CellGroupData[{

Cell["(#10) Light absorption (10 min)", "Subsection",
 CellChangeTimes->{{3.4322913386865587`*^9, 3.432291347014843*^9}, {
   3.4322914131723633`*^9, 3.4322914151880274`*^9}, 3.432470192010652*^9, {
   3.432471282219102*^9, 3.432471283576335*^9}, 3.432480755039879*^9, {
   3.432480793555401*^9, 3.4324808120161247`*^9}, 3.432480854859672*^9, {
   3.43248165598464*^9, 3.4324816571925917`*^9}, 3.4325629132540216`*^9, 
   3.4325877117453656`*^9, {3.4325880147980595`*^9, 3.432588014938687*^9}, 
   3.4326596846686373`*^9, {3.432910168545434*^9, 3.4329101705454726`*^9}, {
   3.432916829188941*^9, 3.4329168327515097`*^9}, {3.4329168992527866`*^9, 
   3.432916906049792*^9}, 3.432916949409999*^9, {3.433020386393933*^9, 
   3.4330203901596303`*^9}, {3.4330291163740454`*^9, 
   3.4330291167959285`*^9}, {3.4331847300497723`*^9, 
   3.4331847412375584`*^9}, {3.4331949926718636`*^9, 
   3.4331950121411123`*^9}, {3.4331950586110516`*^9, 3.4331950654862275`*^9}, 
   3.4332003250271187`*^9, {3.433203883868222*^9, 3.433203887227683*^9}, {
   3.52486917442205*^9, 3.52486917496805*^9}}],

Cell[TextData[{
 "Because light is an electromagnetic wave, we can describe it in terms of \
electric and magnetic fields that propagate as travelling waves.   The \
electric-field of a linearly-polarized laser beam travelling along the ",
 StyleBox["x",
  FontSlant->"Italic"],
 " direction, for example, can be described by complex sinusoid, ",
 StyleBox["A",
  FontSlant->"Italic"],
 " ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{" ", 
     RowBox[{"i", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"k", " ", "x"}], " ", "-", " ", 
        RowBox[{"\[Omega]", " ", "t"}]}], ")"}]}]}]], TraditionalForm]]],
 ", where ",
 StyleBox["A",
  FontSlant->"Italic"],
 " is amplitude, ",
 StyleBox["k",
  FontSlant->"Italic"],
 " is wavevector and \[Omega] is angular frequency.  The position dependence \
of the electric field at time ",
 StyleBox["t",
  FontSlant->"Italic"],
 " = 0 (i.e. a snapshot) can then be written as ",
 StyleBox["A",
  FontSlant->"Italic"],
 " ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{" ", 
     RowBox[{"i", " ", "k", " ", "x"}]}]], TraditionalForm]]],
 ".\n\nAll materials absorb light.  Highly transparent material absorb only \
weakly, while other material absorb strongly and therefore appear to be \
opaque.  The phenomenon of absorption is best described in terms of a complex \
electric permitivity (\[Epsilon]) which then leads to a complex index of \
refraction (",
 StyleBox["n",
  FontSlant->"Italic"],
 " = ",
 Cell[BoxData[
  FormBox[
   SqrtBox[
    RowBox[{"\[Epsilon]", "/", 
     SubscriptBox["\[Epsilon]", "0"]}]], TraditionalForm]]],
 ") and a complex wavevector (",
 StyleBox["k",
  FontSlant->"Italic"],
 " = ",
 StyleBox["n",
  FontSlant->"Italic"],
 " \[Omega] /",
 StyleBox["c",
  FontSlant->"Italic"],
 ").\n\n(a)  In the cell below, express the electric field as ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{" ", 
     RowBox[{"i", " ", "k", " ", "x"}]}]], TraditionalForm]]],
 " (implying that the incident amplitude is ",
 StyleBox["A",
  FontSlant->"Italic"],
 " = 1).  Next, use variable replacement to make the wavevector explicitly \
complex (i.e. ",
 StyleBox["k",
  FontSlant->"Italic"],
 " \[Rule] ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["k", "R"], " ", "+", " ", 
    RowBox[{"i", " ", 
     SubscriptBox["k", 
      StyleBox["I",
       FontFamily->"Courier",
       FontSize->9]]}]}], TraditionalForm]]],
 ").  Then demonstrate that ",
 StyleBox["Re",
  FontWeight->"Bold"],
 " and ",
 StyleBox["ComplexExpand",
  FontWeight->"Bold"],
 " work together to produce an expression for the real part of the field that \
doesn't contain ",
 StyleBox["i",
  FontSlant->"Italic"],
 ".   Finally, explain to your TA the distinct roles that ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["k", "R"], " "}], TraditionalForm]]],
 "and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["k", 
    StyleBox["I",
     FontFamily->"Courier",
     FontSize->9]], TraditionalForm]]],
 " play in the ",
 StyleBox["x",
  FontSlant->"Italic"],
 "-dependence of the field."
}], "Text",
 CellChangeTimes->{{3.4324110514224634`*^9, 3.432411051922473*^9}, {
   3.432411399257266*^9, 3.4324117777957845`*^9}, {3.4324807622472754`*^9, 
   3.432480783175516*^9}, 3.432910162982827*^9, {3.4331792444249687`*^9, 
   3.433179245128112*^9}, {3.4331847460814323`*^9, 3.4331849672902203`*^9}, {
   3.433185422489373*^9, 3.4331856442606754`*^9}, {3.4331856823866515`*^9, 
   3.4331856950432253`*^9}, {3.4331911510266447`*^9, 
   3.4331923607607384`*^9}, {3.433192420434141*^9, 3.433192421059157*^9}, {
   3.4331924665446963`*^9, 3.433192489685914*^9}, {3.4331925238117876`*^9, 
   3.4331925626096554`*^9}, {3.433192669784274*^9, 3.433192862242326*^9}, {
   3.4331929236345224`*^9, 3.4331929848392143`*^9}, {3.433193093263865*^9, 
   3.4331933980997934`*^9}, {3.4331934557731447`*^9, 3.433193463429591*^9}, {
   3.4331935045087676`*^9, 3.4331935980736628`*^9}, {3.433194138368744*^9, 
   3.43319416477567*^9}, {3.4331941972140007`*^9, 3.43319440051608*^9}, {
   3.433194440595231*^9, 3.4331946083338995`*^9}, {3.433201966881649*^9, 
   3.4332019679285507`*^9}, {3.4428745038989058`*^9, 3.4428745055551453`*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.433184969649656*^9, 3.4331853934261293`*^9}, {
   3.4331857237314596`*^9, 3.4331857793578835`*^9}, {3.433185836546848*^9, 
   3.433185951909176*^9}, {3.433185991925825*^9, 3.4331861384139504`*^9}, 
   3.433186182493204*^9, {3.4331867321478996`*^9, 3.4331869064023604`*^9}, {
   3.433186977232299*^9, 3.433187064437656*^9}, {3.4331870950790653`*^9, 
   3.4331870990166664`*^9}, {3.4331871679559307`*^9, 
   3.4331871737685795`*^9}, {3.433187679500276*^9, 3.4331878273790617`*^9}, {
   3.4331880872294636`*^9, 3.4331881296680503`*^9}, {3.4331881638876762`*^9, 
   3.433188296234814*^9}, {3.433188329813799*^9, 3.4331883388452797`*^9}, {
   3.433188373080531*^9, 3.4331884622234383`*^9}, {3.433189911401161*^9, 
   3.4331899129637012`*^9}, {3.4331900519828854`*^9, 3.433190054607952*^9}, {
   3.4331910585867786`*^9, 3.433191065602583*^9}, {3.4331922816180873`*^9, 
   3.433192286993225*^9}, {3.433192588641572*^9, 3.4331926023294225`*^9}, 
   3.4331926422523193`*^9, {3.433192994933223*^9, 3.4331930633724747`*^9}, {
   3.433193221689028*^9, 3.433193232954941*^9}, {3.4331934172877846`*^9, 
   3.4331934471479244`*^9}, {3.4331939708019543`*^9, 3.4331939721457386`*^9}, 
   3.4335335024697065`*^9}],

Cell[TextData[{
 "\n(b) An optical material with complex index of refraction ",
 StyleBox["n",
  FontSlant->"Italic"],
 " = 2 + 0.05",
 StyleBox["i",
  FontSlant->"Italic"],
 "  for red light (\[Omega] ~ ",
 Cell[BoxData[
  FormBox[
   RowBox[{"3", "\[Cross]", 
    SuperscriptBox["10", "15"]}], TraditionalForm]]],
 "rad/sec) for example will have wave-vector ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["k", "R"], "+", 
    SubscriptBox["k", 
     StyleBox["I",
      FontFamily->"Courier",
      FontSize->9]]}], TraditionalForm]]],
 " = 20 + 0.5",
 StyleBox["i ",
  FontSlant->"Italic"],
 Cell[BoxData[
  FormBox[
   RowBox[{" ", 
    SuperscriptBox["\[Mu]m", 
     RowBox[{"-", "1"}]]}], TraditionalForm]]],
 ".  Make this replacement (e.g. ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["k", "R"], TraditionalForm]]],
 " \[Rule] 20 and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["k", 
    StyleBox["I",
     FontFamily->"Courier",
     FontSize->9]], TraditionalForm]]],
 " \[Rule] 0.5) and plot the electric field as a function of ",
 StyleBox["x",
  FontSlant->"Italic"],
 " over the range from 0 to 10 \[Mu]m."
}], "Text",
 CellChangeTimes->{{3.4331934771643176`*^9, 3.4331934882739773`*^9}, {
  3.4331937421242256`*^9, 3.4331938759714017`*^9}, {3.4331939073315797`*^9, 
  3.43319392373825*^9}, {3.433193987755513*^9, 3.4331941075085793`*^9}, {
  3.4331946267562466`*^9, 3.43319464644425*^9}, {3.4428745423361597`*^9, 
  3.4428745441798983`*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.433184969649656*^9, 3.4331853934261293`*^9}, {
   3.4331857237314596`*^9, 3.4331857793578835`*^9}, {3.433185836546848*^9, 
   3.433185951909176*^9}, {3.433185991925825*^9, 3.4331861384139504`*^9}, 
   3.433186182493204*^9, {3.4331867321478996`*^9, 3.4331869064023604`*^9}, {
   3.433186977232299*^9, 3.433187064437656*^9}, {3.4331870950790653`*^9, 
   3.4331870990166664`*^9}, {3.4331871679559307`*^9, 
   3.4331871737685795`*^9}, {3.433187679500276*^9, 3.4331878273790617`*^9}, {
   3.4331880872294636`*^9, 3.4331881296680503`*^9}, {3.4331881638876762`*^9, 
   3.433188296234814*^9}, {3.433188329813799*^9, 3.4331883388452797`*^9}, {
   3.433188373080531*^9, 3.4331884622234383`*^9}, {3.433189911401161*^9, 
   3.4331899129637012`*^9}, {3.4331900519828854`*^9, 3.433190054607952*^9}, {
   3.4331910585867786`*^9, 3.433191065602583*^9}, {3.4331922816180873`*^9, 
   3.433192286993225*^9}, {3.433192588641572*^9, 3.4331926023294225`*^9}, 
   3.4331926422523193`*^9, {3.433192994933223*^9, 3.4331930633724747`*^9}, {
   3.433193221689028*^9, 3.433193232954941*^9}, {3.4331934172877846`*^9, 
   3.43319343075688*^9}, {3.433193934379147*^9, 3.4331939828022614`*^9}, 
   3.433533504672817*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["(#11) Electrostatics (15 min)", "Subsection",
 CellChangeTimes->{{3.4322913386865587`*^9, 3.432291347014843*^9}, {
   3.4322914131723633`*^9, 3.4322914151880274`*^9}, 3.432470192010652*^9, {
   3.432471282219102*^9, 3.432471283576335*^9}, 3.432480755039879*^9, {
   3.432480793555401*^9, 3.4324808120161247`*^9}, 3.432480854859672*^9, {
   3.43248165598464*^9, 3.4324816571925917`*^9}, 3.4325629132540216`*^9, 
   3.4325877117453656`*^9, {3.4325880147980595`*^9, 3.432588014938687*^9}, 
   3.4326596846686373`*^9, {3.432910168545434*^9, 3.4329101705454726`*^9}, {
   3.432916829188941*^9, 3.4329168327515097`*^9}, {3.4329169165968695`*^9, 
   3.4329169517850447`*^9}, {3.4330203925346756`*^9, 
   3.4330203944409623`*^9}, {3.4330291195616064`*^9, 3.4330291204834995`*^9}, 
   3.433203917759715*^9, 3.4332039592920284`*^9, 3.4428761075986524`*^9, {
   3.5248691777136497`*^9, 3.52486917804125*^9}}],

Cell[TextData[{
 "An analytical technique known as the \"conformal mapping\" makes it \
possible to use the complex plane to visualize 2D electric-field \
distributions.  Suppose that we have an infinite line charge with charge \
density \[Lambda] running perpendicular to the ",
 StyleBox["xy",
  FontSlant->"Italic"],
 " plane.  The field in the plane will then be equal to",
 StyleBox[" - ",
  Magnification->1.25],
 Cell[BoxData[
  FormBox[
   FractionBox[
    RowBox[{"\[Lambda]", " ", 
     RowBox[{"ln", "(", "r", ")"}]}], 
    RowBox[{"2", " ", "\[Pi]", " ", 
     SubscriptBox["\[Epsilon]", "0"]}]], TraditionalForm]],
  Magnification->1.25],
 ", where ",
 StyleBox["r",
  FontSlant->"Italic"],
 " = ",
 Cell[BoxData[
  FormBox[
   SqrtBox[
    RowBox[{
     SuperscriptBox["x", "2"], "+", 
     SuperscriptBox["y", "2"]}]], TraditionalForm]]],
 "is perpendicular distance from the line charge.  Now, if we replace the \
distance ",
 StyleBox["r",
  FontSlant->"Italic"],
 " in this expression with complex number ",
 StyleBox["z",
  FontSlant->"Italic"],
 " = ",
 StyleBox["x",
  FontSlant->"Italic"],
 " + ",
 StyleBox["i",
  FontSlant->"Italic"],
 " ",
 StyleBox["y",
  FontSlant->"Italic"],
 " , something fascinating happens -- the real part turns out to be the \
electric potential in the plane, and readily yields equipotential contour \
lines.  And if this isn't weird enough already, the contours of the imaginary \
part are the electric field lines.\n\n(a) Evaluate the cell below, where we ",
 StyleBox["Plot3D",
  FontWeight->"Bold"],
 " the real part of ",
 StyleBox["g",
  FontSlant->"Italic"],
 "(",
 StyleBox["z",
  FontSlant->"Italic"],
 ") = -ln(",
 StyleBox["z",
  FontSlant->"Italic"],
 ") and use ",
 StyleBox["MeshFunctions",
  FontWeight->"Bold"],
 " to draw in lines of constant Re(",
 StyleBox["z",
  FontSlant->"Italic"],
 ") and Im(",
 StyleBox["z",
  FontSlant->"Italic"],
 ").  Observe that the real part corresponds to the electric potential of a \
point charge, while the imaginary part produces the corresponding field lines."
}], "Text",
 CellChangeTimes->{{3.4324110514224634`*^9, 3.432411051922473*^9}, {
   3.432411399257266*^9, 3.4324117777957845`*^9}, {3.4324807622472754`*^9, 
   3.432480783175516*^9}, 3.432910162982827*^9, {3.4329169273158255`*^9, 
   3.432916931894038*^9}, {3.4331971226013885`*^9, 3.433197252714094*^9}, {
   3.433197285589936*^9, 3.4331977075538626`*^9}, {3.433197758773924*^9, 
   3.433197928590771*^9}, {3.433198163628038*^9, 3.4331982109886255`*^9}, {
   3.4331982609117785`*^9, 3.4331984410101385`*^9}, {3.433198571810362*^9, 
   3.4331986269211483`*^9}, {3.4331986598907423`*^9, 
   3.4331987523931103`*^9}, {3.4331988081132865`*^9, 
   3.4331991638255177`*^9}, {3.4335337292963796`*^9, 3.433533817327066*^9}, {
   3.4428749098556466`*^9, 3.442874922887397*^9}, {3.4428759913493967`*^9, 
   3.442876033302253*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"g", "[", "z_", "]"}], " ", ":=", " ", 
  RowBox[{"-", 
   RowBox[{"Log", "[", "z", "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"Plot3D", "[", 
  RowBox[{
   RowBox[{"Re", "[", 
    RowBox[{"g", "[", 
     RowBox[{"x", "+", 
      RowBox[{"I", " ", "y"}]}], "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "3"}], ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", 
     RowBox[{"-", "3"}], ",", "3"}], "}"}], ",", 
   RowBox[{"MeshFunctions", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"Re", "[", 
        RowBox[{"g", "[", 
         RowBox[{"#1", "+", 
          RowBox[{"I", " ", "#2"}]}], "]"}], "]"}], "&"}], ",", 
      RowBox[{
       RowBox[{"Im", "[", 
        RowBox[{"g", "[", 
         RowBox[{"#1", "+", 
          RowBox[{"I", " ", "#2"}]}], "]"}], "]"}], "&"}]}], "}"}]}], ",", 
   RowBox[{"MeshStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Thick", ",", "Orange"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Thick", ",", "Green"}], "}"}]}], "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{
  3.433195414557664*^9, 3.433195473293542*^9, {3.433195514372719*^9, 
   3.4331955274980545`*^9}, 3.433195633391391*^9, {3.433195699268077*^9, 
   3.433195738956593*^9}, 3.4331958653035774`*^9, {3.4331963505191236`*^9, 
   3.4331963792229834`*^9}, {3.4331977402422*^9, 3.4331977451173244`*^9}, {
   3.4331980433280835`*^9, 3.4331980436405916`*^9}, {3.4331980938137507`*^9, 
   3.433198094048132*^9}, {3.433198134908553*^9, 3.43319813518981*^9}, {
   3.433198486323799*^9, 3.4331984870113163`*^9}, {3.433198521449698*^9, 
   3.433198523793508*^9}, 3.4331985585756483`*^9, {3.433199196685734*^9, 
   3.433199199123296*^9}, 3.4331998003730626`*^9, {3.4335337176245794`*^9, 
   3.4335337241245375`*^9}}],

Cell[TextData[{
 "\n(b) Copy the code from the previous cell into the cell below.  Then \
evaluate the cell for each of the following functions ",
 StyleBox["g",
  FontSlant->"Italic"],
 "(",
 StyleBox["z",
  FontSlant->"Italic"],
 ").  Modify the same line each time -- don't make multiple copies of the \
same code.\n\t(1) Two line charges of opposite signs:  ln(",
 StyleBox["z",
  FontSlant->"Italic"],
 "-1) - ln(",
 StyleBox["z",
  FontSlant->"Italic"],
 "+1)\n\t(2) Two line charges of the same sign:    -ln(",
 StyleBox["z",
  FontSlant->"Italic"],
 "-1) - ln(",
 StyleBox["z",
  FontSlant->"Italic"],
 "+1)\n\t(3) The edge of a sharp sheet of charge:  ",
 Cell[BoxData[
  FormBox[
   SqrtBox["z"], TraditionalForm]]]
}], "Text",
 CellChangeTimes->{{3.43319938756562*^9, 3.433199392065735*^9}, {
   3.433199436238741*^9, 3.4331998515774984`*^9}, {3.4331999046569824`*^9, 
   3.4331999120321712`*^9}, {3.4331999545176334`*^9, 
   3.4332001057715054`*^9}, {3.4332037668339767`*^9, 
   3.4332037688809037`*^9}, {3.4335338315926*^9, 3.4335338316707244`*^9}, {
   3.442874823788346*^9, 3.4428748254916563`*^9}, 3.442876058583341*^9, {
   3.4903722225203037`*^9, 3.4903722245523033`*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{
  3.433199494521483*^9, {3.433199871328004*^9, 3.433199942423574*^9}, {
   3.4332002664631195`*^9, 3.4332002875574093`*^9}, 3.4332043273170743`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
(#12) Steady-state circuit analysis (20 min)\
\>", "Subsection",
 CellChangeTimes->{{3.4322913386865587`*^9, 3.432291347014843*^9}, {
   3.4322914131723633`*^9, 3.4322914151880274`*^9}, 3.432470192010652*^9, {
   3.432471282219102*^9, 3.432471283576335*^9}, 3.432480755039879*^9, {
   3.432480793555401*^9, 3.4324808120161247`*^9}, 3.432480854859672*^9, {
   3.43248165598464*^9, 3.4324816571925917`*^9}, 3.4325629132540216`*^9, 
   3.4325877117453656`*^9, {3.4325880147980595`*^9, 3.432588014938687*^9}, 
   3.4326596846686373`*^9, {3.432910168545434*^9, 3.4329101705454726`*^9}, {
   3.432916829188941*^9, 3.4329168327515097`*^9}, {3.4329168693147116`*^9, 
   3.4329168781586313`*^9}, 3.4329169478005934`*^9, {3.433020382253228*^9, 
   3.433020383581379*^9}, {3.433029112827102*^9, 3.4330291129521046`*^9}, 
   3.433165996190505*^9, 3.4331950667362595`*^9, 3.433200324198972*^9, {
   3.433200392435094*^9, 3.433200392560097*^9}, 3.4428761060674124`*^9, {
   3.52486918013165*^9, 3.5248691803032503`*^9}}],

Cell[TextData[{
 "In a previous lab exercise, we explored both transient and steady-state \
effects in a damped mechanical oscillator system.  Here, we will explore the \
time-independent amplitude of a steady-state oscillation to gain experience \
working with complex sinusoids of the form ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"i", " ", "\[Phi]"}]], TraditionalForm]]],
 ".\n\n(a) A series electrical circuit containing an inductor (",
 StyleBox["L",
  FontSlant->"Italic"],
 "), a resistor (",
 StyleBox["R",
  FontSlant->"Italic"],
 ") and a capacitor (",
 StyleBox["C",
  FontSlant->"Italic"],
 ") is another example of a damped harmonic oscillator.  The relevant \
differential equation is ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"L", 
      FractionBox[
       RowBox[{
        SuperscriptBox["d", "2"], "q"}], 
       RowBox[{"d", " ", 
        SuperscriptBox["t", "2"]}]]}], "+", 
     RowBox[{"R", " ", 
      FractionBox[
       RowBox[{"d", " ", "q"}], 
       RowBox[{"d", " ", "t"}]]}], "+", 
     FractionBox["q", "C"]}], "=", 
    RowBox[{"V", " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"i", " ", "\[Omega]", " ", "t"}]]}]}], TraditionalForm]]],
 ", where ",
 StyleBox["q",
  FontSlant->"Italic"],
 "(",
 StyleBox["t",
  FontSlant->"Italic"],
 ") is the charge on the capacitor, and ",
 StyleBox["v",
  FontSlant->"Italic"],
 "(t) = ",
 StyleBox["V",
  FontSlant->"Italic"],
 " ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"i", " ", "\[Omega]", " ", "t"}]], TraditionalForm]]],
 " is a sinusoidal driving voltage with amplitude ",
 StyleBox["V",
  FontSlant->"Italic"],
 ".  Knowing that the steady-state solution to this equation is sinusoidal, \
we simply define a trial solution of the form ",
 StyleBox["q",
  FontSlant->"Italic"],
 "(",
 StyleBox["t",
  FontSlant->"Italic"],
 ") = ",
 StyleBox["Q",
  FontSlant->"Italic"],
 " ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"i", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"\[Omega]", " ", "t"}], "+", "\[Phi]"}], ")"}]}]], 
   TraditionalForm]]],
 " that contains an unknown amplitude (",
 StyleBox["Q",
  FontSlant->"Italic"],
 ") and phase (\[Phi]).  Substituting the trial solution into the \
differential equation produces an ordinary complex equation containing both ",
 StyleBox["Q",
  FontSlant->"Italic"],
 " and \[Phi].  Also knowing that these steady-state parameters can't depend \
on time, we use variable replacement to set ",
 StyleBox["t",
  FontSlant->"Italic"],
 " \[Rule] 0.  We call the result ",
 StyleBox["steadyq",
  FontSlant->"Italic"],
 "."
}], "Text",
 CellChangeTimes->{{3.4324110514224634`*^9, 3.432411051922473*^9}, {
   3.432411399257266*^9, 3.4324117777957845`*^9}, {3.4324807622472754`*^9, 
   3.432480783175516*^9}, 3.432910162982827*^9, {3.432916888143198*^9, 
   3.4329168887838354`*^9}, {3.433158422988104*^9, 3.4331585667023983`*^9}, {
   3.433158624800681*^9, 3.433158995962368*^9}, {3.433159456864705*^9, 
   3.433159500015417*^9}, {3.4331609669689007`*^9, 3.433161088374659*^9}, {
   3.433161298299963*^9, 3.433161352020832*^9}, {3.4331613969576473`*^9, 
   3.433161405933517*^9}, {3.433161454449974*^9, 3.433161733714068*^9}, {
   3.433161764992413*^9, 3.4331619369760923`*^9}, {3.433161967711335*^9, 
   3.4331620688503304`*^9}, {3.4331621236461267`*^9, 3.43316212932415*^9}, {
   3.433163398441695*^9, 3.4331634972840433`*^9}, {3.4331635450213957`*^9, 
   3.433163564045766*^9}, {3.4332019801788645`*^9, 3.4332022292789907`*^9}}],

Cell[BoxData[{
 RowBox[{"diffeq", " ", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"L", " ", 
     RowBox[{
      RowBox[{"q", "''"}], "[", "t", "]"}]}], " ", "+", " ", 
    RowBox[{
     RowBox[{"q", "[", "t", "]"}], "/", "C"}], " ", "+", " ", 
    RowBox[{"R", "  ", 
     RowBox[{
      RowBox[{"q", "'"}], "[", "t", "]"}]}], "-", " ", 
    RowBox[{"V", " ", 
     RowBox[{"Exp", "[", 
      RowBox[{"I", " ", "w", "*", "t"}], "]"}]}]}], "\[Equal]", 
   "0"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"trial", "[", "t_", "]"}], " ", ":=", " ", 
  RowBox[{"Q", "*", 
   RowBox[{"Exp", "[", 
    RowBox[{"I", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"w", "*", "t"}], "+", "phi"}], ")"}]}], 
    "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"steadyq", " ", "=", " ", 
  RowBox[{
   RowBox[{"diffeq", "/.", 
    RowBox[{"q", "\[Rule]", "trial"}]}], " ", "/.", " ", 
   RowBox[{"t", "\[Rule]", "0"}]}]}]}], "Input",
 CellChangeTimes->{
  3.4330313982616067`*^9, {3.433031457278365*^9, 3.4330314663722897`*^9}, {
   3.4330718598264713`*^9, 3.4330718636394453`*^9}, {3.43307190257968*^9, 
   3.433071905649248*^9}, {3.433072013189069*^9, 3.4330720356388903`*^9}, {
   3.4331582705327663`*^9, 3.433158274969573*^9}, {3.43315833325947*^9, 
   3.433158333740396*^9}, 3.43315836734663*^9, 3.4331587162556887`*^9, {
   3.433159052422831*^9, 3.4331590539020452`*^9}, {3.433159187298977*^9, 
   3.433159187721384*^9}, {3.433159260373535*^9, 3.4331592605088863`*^9}, 
   3.433159590419676*^9, {3.4331604394447937`*^9, 3.433160439903805*^9}, {
   3.4331605140154667`*^9, 3.4331605141650677`*^9}, {3.433160580481676*^9, 
   3.433160580847064*^9}, {3.4331608296028967`*^9, 3.433160854656363*^9}, {
   3.433161133428287*^9, 3.43316115653765*^9}, 3.433161287295804*^9, {
   3.433161422413576*^9, 3.4331614502013283`*^9}, {3.433163501365728*^9, 
   3.433163504045166*^9}, 3.442876505330482*^9}],

Cell[TextData[{
 "\n(b)  A complex equation is really two separate equations, a real one and \
an imaginary one.  Use ",
 StyleBox["Re",
  FontWeight->"Bold"],
 " and ",
 StyleBox["Im",
  FontWeight->"Bold"],
 " to separate these two equations, ",
 StyleBox["ComplexExpand",
  FontWeight->"Bold"],
 " them, which conveniently forces the assumption that all of the variables \
are real, and give them both names.  Note that because ",
 StyleBox["Re",
  FontWeight->"Bold"],
 " and ",
 StyleBox["Im",
  FontWeight->"Bold"],
 " only know how to swallow simple expressions (not equations), you must map \
(",
 StyleBox["/@",
  FontWeight->"Bold"],
 ") them onto an equation in order to hit both sides."
}], "Text",
 CellChangeTimes->{{3.433159603028957*^9, 3.4331596178825493`*^9}, {
   3.433162074769763*^9, 3.4331621950773687`*^9}, {3.433162243876664*^9, 
   3.433162390499756*^9}, {3.43316250344921*^9, 3.433162727358055*^9}, {
   3.433162821428513*^9, 3.433163362464018*^9}, 3.4331634764616613`*^9, {
   3.433163513559367*^9, 3.433163529973431*^9}, {3.433163604399897*^9, 
   3.4331637523558483`*^9}, {3.433163819894046*^9, 3.433163883495516*^9}, {
   3.433164231271474*^9, 3.433164356142631*^9}, {3.4331643982440042`*^9, 
   3.43316453097149*^9}, {3.4332040738418355`*^9, 3.4332041636878853`*^9}, {
   3.433204226736375*^9, 3.433204227845778*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{
  3.4330313982616067`*^9, {3.433031457278365*^9, 3.4330314663722897`*^9}, {
   3.4330718598264713`*^9, 3.4330718636394453`*^9}, {3.43307190257968*^9, 
   3.433071905649248*^9}, {3.433072013189069*^9, 3.4330720356388903`*^9}, {
   3.4331582705327663`*^9, 3.433158274969573*^9}, {3.43315833325947*^9, 
   3.433158333740396*^9}, 3.43315836734663*^9, 3.4331587162556887`*^9, {
   3.433159052422831*^9, 3.4331590539020452`*^9}, {3.433159187298977*^9, 
   3.433159187721384*^9}, {3.433159260373535*^9, 3.4331592605088863`*^9}, 
   3.433159590419676*^9, {3.4331596521973658`*^9, 3.4331596969265614`*^9}, {
   3.4331597830490437`*^9, 3.433159843162603*^9}, {3.433159889231469*^9, 
   3.43315992465527*^9}, {3.4331600410986843`*^9, 3.4331603221843557`*^9}, {
   3.433160370075094*^9, 3.433160413906743*^9}, {3.43316047633418*^9, 
   3.433160478867753*^9}, {3.4331605265196743`*^9, 3.433160549776763*^9}, {
   3.433160600514307*^9, 3.433160621559478*^9}, {3.433160700357485*^9, 
   3.4331608276757517`*^9}, {3.433160870114787*^9, 3.4331608888718357`*^9}, 
   3.433161440185541*^9, {3.433162206751062*^9, 3.433162209462978*^9}, 
   3.4331624098125153`*^9, 3.4331624892892*^9, {3.433162765313388*^9, 
   3.433162781123055*^9}, 3.4331635188543997`*^9, {3.4331637797011957`*^9, 
   3.433163787493074*^9}, {3.433164534933024*^9, 3.433164585223959*^9}, 
   3.4332042360178623`*^9}],

Cell[TextData[{
 "\n(c)  ",
 StyleBox["Solve",
  FontWeight->"Bold"],
 " your pair of ",
 StyleBox["equations",
  FontSlant->"Italic"],
 " for the unknown amplitude (",
 StyleBox["Q",
  FontSlant->"Italic"],
 ") and the unknown phase (\[Phi]) and ",
 StyleBox["Simplify",
  FontWeight->"Bold"],
 " the result.  Then use variable replacement to isolate a physically \
meaningful expression for ",
 StyleBox["Q",
  FontSlant->"Italic"],
 ".  Now that we know the charge amplitude ",
 StyleBox["Q",
  FontSlant->"Italic"],
 ", it's a trivial matter to obtain the current amplitude, which is computed \
as ",
 Cell[BoxData[
  FormBox[
   RowBox[{"|", 
    FractionBox[
     RowBox[{"d", " ", "q"}], 
     RowBox[{"d", " ", "t"}]], "|"}], TraditionalForm]]],
 " = ",
 Cell[BoxData[
  FormBox[
   RowBox[{"|", 
    RowBox[{
     FractionBox["d", 
      RowBox[{"d", " ", "t"}]], 
     RowBox[{"(", 
      RowBox[{"Q", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"i", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[Omega]", " ", "t"}], "+", "\[Phi]"}], ")"}]}]]}], 
      ")"}]}], "|"}], TraditionalForm]]],
 " = ",
 Cell[BoxData[
  FormBox[
   RowBox[{"|", 
    RowBox[{"i", " ", "\[Omega]", " ", "Q", " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"i", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"\[Omega]", " ", "t"}], "+", "\[Phi]"}], ")"}]}]]}], "|"}], 
   TraditionalForm]]],
 " = \[Omega] ",
 StyleBox["Q",
  FontSlant->"Italic"],
 ".  So multiply your expression for ",
 StyleBox["Q",
  FontSlant->"Italic"],
 " by the driving frequency (i.e. ",
 StyleBox["w",
  FontSlant->"Italic"],
 ") and call the result ",
 StyleBox["currentamp",
  FontSlant->"Italic"],
 "."
}], "Text",
 CellChangeTimes->{{3.433160951817212*^9, 3.4331609531923323`*^9}, {
   3.4331637965108*^9, 3.433163812884693*^9}, {3.433163895250248*^9, 
   3.43316404679573*^9}, {3.433164099926835*^9, 3.4331641455916967`*^9}, {
   3.4331641905394287`*^9, 3.433164207185755*^9}, {3.433164637529026*^9, 
   3.43316463798289*^9}, {3.4331646991939983`*^9, 3.433164761938064*^9}, 
   3.433165091156496*^9, {3.433165184871644*^9, 3.4331651951510143`*^9}, {
   3.4332042501275983`*^9, 3.4332042511745005`*^9}, {3.4428766680325656`*^9, 
   3.4428766794387426`*^9}, {3.4428767199072337`*^9, 3.4428768952029867`*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.4330294485835485`*^9, 3.4330295555074763`*^9}, {
   3.433029588820616*^9, 3.433029607039716*^9}, {3.4330297398860164`*^9, 
   3.4330298327471743`*^9}, 3.433029869560381*^9, 3.4330299162800283`*^9, {
   3.433029976499934*^9, 3.433029997140956*^9}, {3.4330300612046857`*^9, 
   3.4330300792362823`*^9}, {3.4330301754412537`*^9, 3.433030373257552*^9}, {
   3.433030419180309*^9, 3.4330304652749434`*^9}, {3.4330305004318686`*^9, 
   3.4330305096820464`*^9}, {3.4330305411826515`*^9, 
   3.4330305718707404`*^9}, {3.433030708107731*^9, 3.4330308146566515`*^9}, {
   3.433031271040414*^9, 3.433031356870187*^9}, 3.4330314014335423`*^9, {
   3.4330706653714867`*^9, 3.433070735043111*^9}, {3.4330707841985693`*^9, 
   3.433070827713702*^9}, {3.433071118718321*^9, 3.433071170055215*^9}, {
   3.43307120368333*^9, 3.43307125349722*^9}, {3.433071289501226*^9, 
   3.433071290436674*^9}, 3.4330718358617363`*^9, {3.433071919291222*^9, 
   3.433071931185719*^9}, {3.433072045167148*^9, 3.433072053100321*^9}, {
   3.4330720835677853`*^9, 3.433072100469914*^9}, 3.43307214367982*^9, {
   3.433072176890348*^9, 3.433072177808148*^9}, {3.433072472739378*^9, 
   3.433072474840912*^9}, {3.433158336803706*^9, 3.433158342986998*^9}, {
   3.433159228044142*^9, 3.4331592477943773`*^9}, {3.43315927906212*^9, 
   3.433159307379876*^9}, {3.433159351831736*^9, 3.4331593864939957`*^9}, 
   3.433160866393558*^9, {3.433160913874346*^9, 3.433160941881283*^9}, {
   3.43316456561592*^9, 3.433164594390197*^9}, {3.433164711842308*^9, 
   3.433164729514162*^9}, 3.433204246955642*^9}],

Cell[TextData[{
 "\n(d)  Evaluate ",
 StyleBox["currentamp",
  FontSlant->"Italic"],
 " for the special case when ",
 StyleBox["{R \[Rule] 1, L \[Rule] 1, V \[Rule] 1, C \[Rule] 1}",
  FontWeight->"Bold"],
 " and ",
 StyleBox["Simplify",
  FontWeight->"Bold"],
 " it to obtain a clean expression containing only the driving frequency.  \
Then ",
 StyleBox["LogLinearPlot",
  FontWeight->"Bold"],
 " this expression over the range {",
 StyleBox["w",
  FontSlant->"Italic"],
 ", 0.01, 100}.  Think carefully about what the horizontal and vertical axes \
represent, and explain the physical meaning of the graph to your TA."
}], "Text",
 CellChangeTimes->{{3.433160959513442*^9, 3.4331609606405163`*^9}, {
   3.433164644758409*^9, 3.433164644902214*^9}, {3.433164769691028*^9, 
   3.433165179462496*^9}, {3.433165239543445*^9, 3.433165364443685*^9}, {
   3.433165448760047*^9, 3.4331656319558887`*^9}, {3.4332042681593103`*^9, 
   3.4332042715031457`*^9}, 3.4397495142045174`*^9, {3.439750135942872*^9, 
   3.439750136302249*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.4330294485835485`*^9, 3.4330295555074763`*^9}, {
   3.433029588820616*^9, 3.433029607039716*^9}, {3.4330297398860164`*^9, 
   3.4330298327471743`*^9}, 3.433029869560381*^9, 3.4330299162800283`*^9, {
   3.433029976499934*^9, 3.433029997140956*^9}, {3.4330300612046857`*^9, 
   3.4330300792362823`*^9}, {3.4330301754412537`*^9, 3.433030373257552*^9}, {
   3.433030419180309*^9, 3.4330304652749434`*^9}, {3.4330305004318686`*^9, 
   3.4330305096820464`*^9}, {3.4330305411826515`*^9, 
   3.4330305718707404`*^9}, {3.433030708107731*^9, 3.4330308146566515`*^9}, {
   3.433031271040414*^9, 3.433031356870187*^9}, 3.4330314014335423`*^9, {
   3.4330706653714867`*^9, 3.433070735043111*^9}, {3.4330707841985693`*^9, 
   3.433070864747609*^9}, {3.433071718654029*^9, 3.433071759452476*^9}, {
   3.4330717908970547`*^9, 3.433071794831808*^9}, {3.4330721296245213`*^9, 
   3.433072167783379*^9}, {3.433072518320525*^9, 3.433072526905971*^9}, {
   3.4330725597184477`*^9, 3.433072564926602*^9}, {3.433072630711617*^9, 
   3.433072651629586*^9}, {3.433159407176351*^9, 3.433159408670122*^9}, {
   3.4331646536564913`*^9, 3.433164681507577*^9}, {3.4331653782692757`*^9, 
   3.433165383693214*^9}, 3.4332042646592207`*^9}],

Cell[TextData[{
 "\n(e)  Redraw the current-amplitude graph above for the special case when ",
 StyleBox["{R \[Rule] 1, L \[Rule] 0, V \[Rule] 1, C \[Rule] 1}",
  FontWeight->"Bold"],
 ".  Removing the inductor from the circuit produces a \"high-pass filter\".  \
Can you see the reason for this name?"
}], "Text",
 CellChangeTimes->{{3.433160959513442*^9, 3.4331609606405163`*^9}, {
   3.433164644758409*^9, 3.433164644902214*^9}, {3.433164769691028*^9, 
   3.433165179462496*^9}, {3.433165239543445*^9, 3.433165364443685*^9}, {
   3.433165448760047*^9, 3.433165675405279*^9}, {3.433165716126402*^9, 
   3.433165761631795*^9}, {3.433165794481394*^9, 3.433165810161289*^9}, {
   3.4331659215761337`*^9, 3.43316593113306*^9}, {3.4332042863785267`*^9, 
   3.433204286628533*^9}, {3.4332043432549825`*^9, 3.433204358442871*^9}, {
   3.4428769476089015`*^9, 3.4428769521244974`*^9}, 3.4428771077641263`*^9}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.4330294485835485`*^9, 3.4330295555074763`*^9}, {
   3.433029588820616*^9, 3.433029607039716*^9}, {3.4330297398860164`*^9, 
   3.4330298327471743`*^9}, 3.433029869560381*^9, 3.4330299162800283`*^9, {
   3.433029976499934*^9, 3.433029997140956*^9}, {3.4330300612046857`*^9, 
   3.4330300792362823`*^9}, {3.4330301754412537`*^9, 3.433030373257552*^9}, {
   3.433030419180309*^9, 3.4330304652749434`*^9}, {3.4330305004318686`*^9, 
   3.4330305096820464`*^9}, {3.4330305411826515`*^9, 
   3.4330305718707404`*^9}, {3.433030708107731*^9, 3.4330308146566515`*^9}, {
   3.433031271040414*^9, 3.433031356870187*^9}, 3.4330314014335423`*^9, {
   3.4330706653714867`*^9, 3.433070735043111*^9}, {3.4330707841985693`*^9, 
   3.433070864747609*^9}, {3.4330717702880487`*^9, 3.433071778039559*^9}, {
   3.4330724014638433`*^9, 3.433072406422604*^9}, 3.4330725713348293`*^9, 
   3.433072625991496*^9, {3.433072656424292*^9, 3.4330726591178513`*^9}, 
   3.433159433153268*^9, {3.43316466453891*^9, 3.433164684091522*^9}, {
   3.433165389847578*^9, 3.433165395733706*^9}, 3.433204293503709*^9}],

Cell[TextData[{
 "\n(f)  (Optional) Redo the current-amplitude graph for the special case \
when ",
 StyleBox["{R \[Rule] 1, L \[Rule] 1, V \[Rule] 1, C \[Rule] Infinity}",
  FontWeight->"Bold"],
 ".  Note that you might need to employ a ",
 StyleBox["Limit",
  FontWeight->"Bold"],
 " to handle the capacitor.  Removing the capacitor from the circuit produces \
a \"low-pass filter\".  Can you see the reason for this name?"
}], "Text",
 CellChangeTimes->{{3.433160959513442*^9, 3.4331609606405163`*^9}, {
   3.433164644758409*^9, 3.433164644902214*^9}, {3.433164769691028*^9, 
   3.433165179462496*^9}, {3.433165239543445*^9, 3.433165364443685*^9}, {
   3.433165448760047*^9, 3.433165675405279*^9}, {3.433165716126402*^9, 
   3.433165787464551*^9}, {3.4331658393567533`*^9, 3.433165901231299*^9}, 
   3.43316594158427*^9, {3.4332042905348825`*^9, 3.4332042907692637`*^9}, {
   3.43320436874001*^9, 3.4332043747714143`*^9}, {3.4428770331708536`*^9, 
   3.4428770713581095`*^9}, 3.4428771100766115`*^9}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.4330294485835485`*^9, 3.4330295555074763`*^9}, {
   3.433029588820616*^9, 3.433029607039716*^9}, {3.4330297398860164`*^9, 
   3.4330298327471743`*^9}, 3.433029869560381*^9, 3.4330299162800283`*^9, {
   3.433029976499934*^9, 3.433029997140956*^9}, {3.4330300612046857`*^9, 
   3.4330300792362823`*^9}, {3.4330301754412537`*^9, 3.433030373257552*^9}, {
   3.433030419180309*^9, 3.4330304652749434`*^9}, {3.4330305004318686`*^9, 
   3.4330305096820464`*^9}, {3.4330305411826515`*^9, 
   3.4330305718707404`*^9}, {3.433030708107731*^9, 3.4330308146566515`*^9}, {
   3.433031271040414*^9, 3.433031356870187*^9}, 3.4330314014335423`*^9, {
   3.4330706653714867`*^9, 3.433070735043111*^9}, {3.4330707841985693`*^9, 
   3.433070864747609*^9}, {3.4330716911489143`*^9, 3.433071695674704*^9}, 
   3.433072502548324*^9, {3.4330725755030823`*^9, 3.4330725828923197`*^9}, {
   3.4330726144798098`*^9, 3.43307264051775*^9}, 3.433159438337624*^9, {
   3.433164667587666*^9, 3.433164687683753*^9}, {3.433165400279825*^9, 
   3.433165438385022*^9}, 3.4332042963006554`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["On Your Own (45 min)", "Section",
 CellChangeTimes->{{3.52486819297925*^9, 3.52486819697285*^9}}],

Cell[CellGroupData[{

Cell["\<\
(#13) Fresnel Coefficients (10 min)\
\>", "Subsection",
 CellChangeTimes->{{3.52486872618725*^9, 3.5248687348608503`*^9}, {
  3.52486918538885*^9, 3.52486918676165*^9}, {3.525575406106*^9, 
  3.525575412034*^9}}],

Cell[TextData[{
 "The equations for reflection and transmission of light from an interface \
are given in the Wikipedia article at ",
 ButtonBox["http://en.wikipedia.org/wiki/Fresnel_equations",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://en.wikipedia.org/wiki/Fresnel_equations"], None},
  ButtonNote->"http://en.wikipedia.org/wiki/Fresnel_equations"],
 ".  For light going from vacuum (n1=1) to a medium with a complex index of \
refraction ",
 Cell[BoxData[
  FormBox[
   RowBox[{"n2", "=", 
    RowBox[{"0.9", "-", 
     RowBox[{"0.05", " ", "\[ImaginaryI]"}]}]}], TraditionalForm]]],
 ", plot the reflection coefficients for s and p polarization on a semilog \
plot.  In the extreme ultraviolet and x-ray regions where such indices of \
refraction are most common, it is conventional to measure the angle as \
degrees from grazing incidence rather than normal incidence as in the \
Wikipedia article.  Please use that convention here as well."
}], "Text",
 CellChangeTimes->{{3.5248692727332497`*^9, 3.52486928866085*^9}, {
  3.5248725207000504`*^9, 3.52487262628085*^9}, {3.52487266517165*^9, 
  3.52487266593605*^9}, {3.5255737836549997`*^9, 3.5255738175538*^9}, {
  3.5255739871144*^9, 3.525574087516*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.5255738431378*^9, 3.5255739184376*^9}, 
   3.5256012027602*^9}],

Cell["\<\
The place where the reflection of p-polarized light is at a minimum is known \
as Brewster\[CloseCurlyQuote]s angle.\
\>", "Text",
 CellChangeTimes->{{3.52486874866685*^9, 3.52486878559205*^9}, {
  3.5255741203384*^9, 3.5255741415856*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
(#14) Quantum Time Evolution (20 min)\
\>", "Subsection",
 CellChangeTimes->{{3.52486880534165*^9, 3.52486882276685*^9}, {
  3.52486919034965*^9, 3.52486919222165*^9}, {3.5255753987896*^9, 
  3.5255754002716*^9}}],

Cell[TextData[{
 "A quantum mechanical particle in a rigid one-dimensional box of width a has \
a wave function ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["\[Psi]", "n"], "(", 
     RowBox[{"x", ",", "t"}], ")"}], "=", 
    FractionBox[
     RowBox[{
      RowBox[{"sin", "(", 
       FractionBox[
        RowBox[{"\[Pi]", " ", "n", " ", "x"}], "a"], ")"}], " ", 
      RowBox[{"exp", "(", 
       FractionBox[
        RowBox[{"\[ImaginaryI]", " ", 
         SubscriptBox["e", "n"], " ", "t"}], "\[HBar]"], ")"}]}], 
     SqrtBox["a"]]}], TraditionalForm]]],
 ", where x=0 on one side of the box and x=a on the other side.  The variable \
n is a positive integer.  The energy of these states is given by ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["e", "n"], "=", 
    FractionBox[
     RowBox[{
      SuperscriptBox["\[Pi]", "2"], " ", 
      SuperscriptBox["n", "2"], " ", 
      SuperscriptBox["\[HBar]", "2"]}], 
     RowBox[{"2", " ", 
      SuperscriptBox["a", "2"], " ", "m"}]]}], TraditionalForm]]],
 ".  The probability of finding a particle at the position x at time t is \
given by ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"P", "(", 
     RowBox[{"x", ",", "t"}], ")"}], "=", 
    SuperscriptBox[
     TemplateBox[{RowBox[{
         SubscriptBox["\[Psi]", "n"], "(", 
         RowBox[{"x", ",", "t"}], ")"}]},
      "Abs"], "2"]}], TraditionalForm]]],
 ".  States with a definite energy, have probabilities that don\
\[CloseCurlyQuote]t depend on time.  However, it\[CloseCurlyQuote]s possible \
to have states that are a combination of states with definite energies.  \
These states have probabilities that oscillate in time.\n\nCreate a state ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"\[Psi]", "(", 
     RowBox[{"x", ",", "t"}], ")"}], "=", 
    RowBox[{
     RowBox[{
      SubscriptBox["a", "3"], " ", 
      RowBox[{"\[Psi]", "(", 
       RowBox[{"x", ",", "t"}], ")"}]}], "+", 
     RowBox[{
      SubscriptBox["a", "1"], " ", 
      RowBox[{
       SubscriptBox["\[Psi]", "1"], "(", 
       RowBox[{"x", ",", "t"}], ")"}]}], "+", 
     RowBox[{
      SubscriptBox["a", "2"], " ", 
      RowBox[{
       SubscriptBox["\[Psi]", "2"], "(", 
       RowBox[{"x", ",", "t"}], ")"}]}]}]}], TraditionalForm]]],
 ", with ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["a", "1"], "=", 
    RowBox[{"0.3", "+", 
     FractionBox["\[ImaginaryI]", "3"]}]}], TraditionalForm]]],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["a", "2"], "=", 
    RowBox[{
     RowBox[{"-", "0.4"}], "-", 
     FractionBox["\[ImaginaryI]", "7"]}]}], TraditionalForm]]],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["a", "3"], "=", 
    RowBox[{"10.135575", "+", 
     RowBox[{"0.357482", " ", "\[ImaginaryI]"}]}]}], TraditionalForm]]],
 ".  Create an animated plot of ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"P", "(", 
     RowBox[{"x", ",", "t"}], ")"}], "=", 
    SuperscriptBox[
     TemplateBox[{RowBox[{"\[Psi]", "(", 
         RowBox[{"x", ",", "t"}], ")"}]},
      "Abs"], "2"]}], TraditionalForm]]],
 " for times from 0 to 10 femtoseconds.  Use a=1 nm, \[HBar]c=197 eV-nm, ",
 Cell[BoxData[
  FormBox[
   RowBox[{"m", "=", 
    FractionBox[
     RowBox[{"511000", " ", "eV"}], 
     SuperscriptBox["c", "2"]]}], TraditionalForm]]],
 ", hbar = 0.656667 ev-fs.  Your work will come out nicest if you keep \
energies in eV (electron Volts) and times in fs (femtoseconds)."
}], "Text",
 CellChangeTimes->{{3.5255742332511997`*^9, 3.525574249288*^9}, {
  3.5255742801916*^9, 3.5255742919852*^9}, {3.5255743450564003`*^9, 
  3.5255743633084*^9}, {3.5255744112472*^9, 3.5255744451303997`*^9}, {
  3.525574478218*^9, 3.5255746633900003`*^9}, {3.5255749387924*^9, 
  3.5255751402976*^9}, {3.5255751735411997`*^9, 3.525575376856*^9}, {
  3.5255754202084*^9, 3.5255754502539997`*^9}, {3.5255768666404*^9, 
  3.5255770060108*^9}, {3.5255770756492*^9, 3.5255772721*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.5255754688803997`*^9, 3.5255754898156*^9}, {
   3.5255756172988*^9, 3.5255757014296*^9}, {3.5255758811884003`*^9, 
   3.5255760458308*^9}, {3.5255761002124*^9, 3.5255768242396*^9}, {
   3.5255770368052*^9, 3.5255770600179996`*^9}, 3.525601208189*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
(#15) Complex Impedance (15 min)\
\>", "Subsection",
 CellChangeTimes->{{3.52486905054245*^9, 3.5248690561740503`*^9}, {
  3.52486919468645*^9, 3.5248691960436497`*^9}, {3.5255754156688004`*^9, 
  3.5255754170727997`*^9}}],

Cell["Find the equivalent impedance of a complicated network.", "Text",
 CellChangeTimes->{{3.52486914891605*^9, 3.5248691652648497`*^9}}],

Cell[TextData[{
 "A circuit with resistors, capacitors, and inductors driven at a single \
frequency \[Omega] can be represented as a complex voltage ",
 Cell[BoxData[
  FormBox[
   RowBox[{"V", "=", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"-", "I\[Omega]t"}]], " ", 
     SubscriptBox["V", "0"]}]}], TraditionalForm]]],
 " acting on individual elements with complex impedances ",
 Cell[BoxData[
  FormBox["Z", TraditionalForm]]],
 ".  Each element then obeys the complex form of Ohm\[CloseCurlyQuote]s Law \
with the current ",
 Cell[BoxData[
  FormBox[
   RowBox[{"I", " ", "=", 
    RowBox[{
     SubscriptBox["I", "0"], 
     SuperscriptBox["E", 
      RowBox[{"I", " ", "\[Omega]", " ", "t"}]], " "}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " proportional to the voltage V according to ",
 Cell[BoxData[
  FormBox[
   RowBox[{"V", "=", 
    RowBox[{"I", " ", "Z"}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ".\n\nFor a resistor with resistance R, the real form of Ohm\
\[CloseCurlyQuote]s Law holds and Z=R since ",
 Cell[BoxData[
  FormBox[
   RowBox[{"V", "=", 
    RowBox[{"I", " ", "R"}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ".\n\nFor a capacitor, the charge Q is equal to the capacitance ",
 Cell[BoxData[
  FormBox[
   RowBox[{"C", " ", "V"}], TraditionalForm]]],
 ".  Since ",
 Cell[BoxData[
  FormBox[
   RowBox[{"I", "=", 
    FractionBox["dQ", "dt"]}], TraditionalForm]]],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{"Q", "=", 
    RowBox[{
     RowBox[{"\[Integral]", 
      RowBox[{"I", 
       RowBox[{"\[DifferentialD]", "t"}]}]}], "=", 
     RowBox[{"-", 
      FractionBox["I", 
       RowBox[{"\[ImaginaryI]", " ", "\[Omega]"}]]}]}]}], TraditionalForm]]],
 ".  This means that ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"-", 
     FractionBox["I", 
      RowBox[{"\[ImaginaryI]", " ", "\[Omega]"}]]}], "=", 
    RowBox[{"C", " ", "V"}]}], TraditionalForm]]],
 " and that ",
 Cell[BoxData[
  FormBox[
   RowBox[{"V", "=", 
    RowBox[{"I", " ", 
     RowBox[{"{", 
      FractionBox["1", 
       RowBox[{"\[ImaginaryI]", " ", "C", " ", "\[Omega]"}]], "}"}]}]}], 
   TraditionalForm]]],
 ".  Thus, ",
 Cell[BoxData[
  FormBox[
   RowBox[{"Z", "=", 
    FractionBox["\[ImaginaryI]", 
     RowBox[{" ", 
      RowBox[{"C", " ", "\[Omega]"}]}]]}], TraditionalForm]]],
 ".\n\nFor an inductor, ",
 Cell[BoxData[
  FormBox[
   RowBox[{"V", "=", 
    RowBox[{"L", 
     FractionBox["dI", "dt"]}]}], TraditionalForm]]],
 ".  With the assumed time dependence of I, ",
 Cell[BoxData[
  FormBox[
   RowBox[{"V", "=", 
    RowBox[{
     RowBox[{"-", "\[ImaginaryI]"}], " ", "L", " ", "\[Omega]", " ", "I"}]}], 
   TraditionalForm]]],
 " and Z is thus ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"-", "\[ImaginaryI]"}], " ", "L", " ", "\[Omega]"}], 
   TraditionalForm]]],
 ".\n\nUsing these complex substitutions, an AC circuit can now be solved \
algebraically rather than requiring the use of differenatial equations.  \
Consider the 3rd order Butterworth filter below we found diagrammed on \
Wikipedia.  It can be used as a low-pass filter which allows low frequency \
voltages to pass from ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["V", "in"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " to ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["V", "out"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " but attenuates higher frequencies.\n \n",
 Cell[BoxData[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1:eJzt3QncI0WZx/FnOEa5GVAUlWWA5ZAbQVkUlmNRkUvkcIVVuXE9kQEWhkNY
FcUDFEQFEcZFBRU5FBBQBBTwYNnRFUUFhAEvUORGjhGw/lbVJ3kzSafSqaTT
ye/7+TyQyVtvUnnT3U/X0dWr7HfwrgctZGaHPtf9Z9d9j9h61qx9Z++2iPvH
NrMPO3C/hd2Dm108Os1MTwIAAAAAAAAAAAAAAAAAAAAAAMCebRNAWWxPAFAd
jr3Iie0JAKrB8Rc5sT0BQDU4/iInticAqAbHX+TE9gQA1eD4i5zYngCgGhx/
kRPbEwBUg+MvcmJ7AoBq9Hr8Xd7F6S6e7uF3MDlSt6fmctqW7nNxhYvNBlo7
ABhf3Y6/rc/f6+K0Lr+DyZW6Pen/F5g/P1zcxe7huT8NuoIAMKZ6zecbtPwe
0KyXfL5yeLyoi53Dc9cPtHYAMJ7arc+ZumYn+Rytym5P8fmrXSw1lJoCACLy
OXKZ7uJE89vTqRXXBQAmDfkcOS1nfnu6r+qKAMCEIZ+jH9p2XtL072XCc49V
Ux0AmFjkc/RD2865LpZ1McP8NZB67pwqKwUAE6SXOXNAJ9u6uMTFQy6ecnGb
iw+5eG6VlQIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAMACprlYqMffGXT5hXssj+r1+p0Nuvy0EAAwznSce5OLa1084eJJFz9w
sZ+LRTr8zutcXOziry7mu/ipi/e6WLxD+c1cfMnFgy6ecfFrF8e6WL5D+bVd
nOHiT+bvj/5bFx91sVLyp8KwvcjFh13caf47+4uLM12s36H8DBdHufiVi6dd
POziay4271Be9zZ/l/ltTductr3LXOzUobzOG9/q4nvmt+knwuO3WO/nlMCo
erZNfKVNuWVbymD86Jh6jfnv9+fmc+hnXcwNz91o/jgdPcf8tqKf3e3ibBef
cnF9eO4287k40rnCSeZzuHKzcvopLq40fwy/x8WWLXWaZf74+5CLr7r4pIuL
zB+Pdcz/934/NLLbxfy5mr63S8x/Z+eG55R7Z7eUf6WL35vfBr4Typ/j4g/m
txVtU81t8DVd/NL8NnZD+PlZLn4TnrvApp5LrmD+nFQ/u9nF6ea37ZvDc9e5
eH6/HxojY9Jz2vnW+EyfLyh3oPn9E+NnMRc3ufibi0NtwTbLAeaPz2pLK+8r
N2tb0DajHP2clvI7mj9+K2+vEp47NZTXsX2ZlvJqs+uc4DEXm4bnZoXy37Wp
5xGylov/D/XdNflTYtC2d/GUi1+4WLflZy9wcbn57/To8NzLzJ+XKXdv0VJ+
KRf/E8qfFZ5bKZTV77R+79NdfCiU/7b5cwC9hvK2ziPeYVP72fVYbXxtQz9z
sWQvHxQjbZJzms6P42d/3Dqfq2of3XpYlcJQnWb++9+voIzaXWpDqZ18WCj/
/oLym5jPzz90sXso/0Xr3L+5qos/mu+j3cp8XrjafN9qO+qf1zb5gNH3Pgpe
6OI+F7ebz93tKOd+y3wO3db8+aF+Z80O5ZVzP2d+29nLfB+5+mZeVVCPo0N5
9d/rfEBt/DcWlH9TKHNWQRnUy6TntB9b4/Mf1+bn27n4yVBrhGFRO0p5OuV4
9hHz24jy9FXWfezxP0N5HbPVR9ppTD16jfljq9rq95rPEUVUd+2v53Qph8FT
H7bOwTbuUk7nYb8LoW1j5y7l1fejcfL7Q/mDu5TXOYDG0pX3tS2d0qW8fDqU
7VZ31Mck5zSNQ8bPrnHM1v5TjXG+ddiVwlB83fz49PMSyiofP2p+O1m7S1nR
sfXuUH7HxPrcEMofnlhe/f1q762VWB75qW9FfdqfSSyvvm99x3MTy29tjWNT
ynz21cznZ53rLZ1QXuM/mrN3WWJ9MPomOadp7vJd1vj8zf2u65ifrzK9gnqJ
xnbVh6a/v+a8jtIcKM21+Zj5MV717bWOAY66Fc0fh09LLK9tQHOJU/O59JrP
rwvlZyWWV1+7+hdOTiw/ijTu/GXzfR4aw0jJQaPkBPP5858Ty8d+m5sSy/9b
KK8+m5RrzVYN5TXnY4nE99A1E/oMMxPLjxrNFTje/JzC81y8vtLaTPVi8/Mc
NX6mebOvGMJ7jnJOG4Y4Jqr4WdPzmk9wdJvyakddP+A6aez0J031inHSgN83
xT+ZP74010t5Zd8qK9WjQ8zX++WJ5XcJ5XXcOyGh/PqhvPo+z0sov5z5Plv1
F/w4sU6iPKix9zpee3SkLbh9a672jCor1aN55o8HqXQdxSPm95cVE8rPMb9d
6G+zaZeycqw1/pZ7JtZpvVC+df59HSiXay5C63bUrp952NawxlhJDLUhdh/C
e/ea08aJ+py0j8XP/2rz7U99F+2uDdY8p1724TLaHetiPtlkwO/dzXnWvm6a
e7tshfXqxaWW3uYRtePVt32LpbWt4v50rfkx9G759g2hvOac6lifmtMODr+3
QWL5UfESa+Sp1ji1wnr1YnVrzD9LoTEbtZsvC7/35oTf0ZoDcRzmmITymjd3
h/nzyDmJ9RLNxbymh/KjQtf6t9uGtK92mms4LPF7bg0dDxYb8Hv3mtNyGZVr
4DR3JNZF81B1fnd6hfXptC0o1O97f4XxdEHdHqm4bjHUztU+/WCHn+u86BfJ
34Yfj9TvfSP8brf5an8Mf4+Ph/+/pkv5eK177I89LLFeG1ljnl7K3+OBLuWG
FXEuQqdjcdX1i6Hv/Ykun2G7rt+SF8/x1A7WPnRjl/Kbh/Ka86hz5d92Kb9U
KK/X1RoIjyXWSzRupu26299Df4vHE8oNK+Zb5+2o2z4x6HimoG4pfS39qiKn
jUo+17hTzFNxu243z6j5O2n33BHWuP64n3GcL1vnbeH75ufUVhX3F9Tt4orr
FkNtk7nmx6za/VzrbOyR+F1orEk5Rrn88PA5O63fFen719zkHUP5ouvh5P/M
9xesFsp/NLFu6l9Qn7uupSv6e5wT3uPMLuWGFZda523o3hGoXwwdB7/b4Wfa
R9UeTh3riNeTqS9F45u/7FJ+t1Be16upT/DhLuU3COX/2xp9aEsn1k3b6Y+s
+99DY9RXJJQbVjSPE7dGp+9tWNHcPm6NddK+lr6k5jRtv7PNjx3ND/9XHot9
l605r10ObH1+FPL6hU31KJrvWfRZ9nSxYXh8ex91ieO1raHvpFvbcNDeZ+3r
pnGacVxnPI4vvtP8eLse719QXu0k7T+a67B8KP+hLu+hHHZReKy29Ll91LcO
tIaJ2pvttqO3VVivQdK5lNq32kd0LtAtP6sfX38PzVc5ITwu6ivdK5TZ0vz5
ox4PY/5Vlfa29tuQ+seqHvs7ydrXTedmw1pHPyWnxe1M62mp7RLnFh3RVKZT
G7bVKOTxSHO0Y322LShXlM91bcC08PjpPuvzQZvat63rSrbv8zVz0HeutSWb
t1Gdu7SuizUuXmv+M+5gfn0GPT6uoPyaocy7w7/VL/uFgvLTQ/mTw7+1/tu1
pWtbH1obRWueNW9H6g8c13uGXOni1vBY+7Y+b+t6gc30t3gqPN4/lN+ooHzs
z1f+3yY8noQ1BDXforlvW9dobVNpjTzNl4jrAsbQGN/qQ6xDSk6LfRzx/Ceu
BzuvqUwd83mqonxeVKYMtQ0150nn2ytkeL2ctPaUPqP69lKvjakjXasZ2zoL
h8dFa3XENZri9YWas/3NgvIrhvJx3qn6CW/po751omNHXD839VqDutI8yh+G
x7ENtFpBea3deU94HOdLFrUzPhbKaK5V7CM8oI/61onWz9Xn1XVhy1Vcl1aa
i6a2r+a1d1rzsUpxDkI8j14o/Ht+Uxnyef0+V6/UDtBnPLLqigyY5iHrc64f
/q3HReuHxHlMe4Z/32l+vLiT1r+jxid7matXd3GO8rjTeNR14fHbzX/mNQrK
a5u5KzzewRp9RJ3ENQx1XI5jRG/vo751022/RHut7fMZtmD7PPZ/KNcvZuTz
cTQp+Tz2Q2xlfjxFj4vWAdg0lNk7/FtjeRcWlH+BTe3DVxtubvnq1s6k5HOt
KxCvddT8I33m1vvtNNO9se4Lj+M2WLRu0wesMca+SXhcpzUh+kU+L0fXQepv
pz6jRc33Jejfs5vKxHv4ac5lbN+022fjXOmVzfe3/Xlgtc7j2ZZIeW5cTUo+
38wax8bY7nlPQfmYn7XemeZ9aQ7EJ7q8h66t+XJ4rPz/jT7qWzeTks+Vn3W9
oNo4mhv3pBXPH41/F+XnODd+ZkH5A0MZ5fI4N24c77nRCfm8HG2Pyulqp88P
/z/Kpl63oXkYys26dkvz5DrlN80Z1vEr3gf6oEFWHFlNSj5Xm1z5Vm3seC5b
NC9JdP2v2tjxuNptTSj1scf7oKt86pqv42BS8rnuUarPqbUIdE+W73cpv30o
v4/5Ppt5Xcq/NJTX9Wq6flHXiU/SvVDJ50B5k5LPJc410nXo1ySUj+vC6DxV
uX2RLuXjHHqV1znwqM3pGaRJyee6Flz959qG9Hm7rU+htruuUY/zlQ5JeI8r
ml6/Luvs5UI+B8qbpHyuNrquu9cxcsWE8pqTpD559asWzXlqpnGpOVb9er7D
Nin5XHRfUt2fd+9uBQPNf9faJMrlKWs76HpK3f9DbfRu9+gdN+RzoLxJyucY
nEnK5xgc8jlQHvkcOZDPkQP5HCiPfI4cyOfIgXwOlEc+Rw7kc+RAPgfKI58j
B/I5ciCfA+WRz5ED+Rw5kM+B8sjnyIF8jhzI50B55HPkQD5HDuRzoLyYzz9c
dUVQa1ovhXyOfmkbOq/qSgA1tab5fWhO1RVBrem+oORz9Ev39Pxe1ZUAaor+
duRAfztyoL8dKI98jhzI58iBfA6URz5HDuRz5EA+B8ojnyMH8jlyIJ8D5ZHP
kQP5HDmQz4HyyOfIgXyOHMjnQHnkc+RAPkcO5HOgPPI5ciCfIwfyOVAe+Rw5
kM+RA/kcKI98jhzI58iBfA6URz5HDuRz5EA+B8ojnyMH8jlyIJ8D5ZHPkQP5
HDmQz4HyyOfIgXyOHMjnQHnkc+RAPkcO5HOgPPI5ciCfo1/xWPTVqisC1BT5
HDmQz1HWli7Od/E389vQ2dVWB6ilxV38i/l96KMulq22Oqgx8jl6sZiL/V38
1Px281cXn3exQZWVAmpkLReHu7jMxd3m96PWeNDFj8zn99e4WLiSmqJuyOdI
of5AbSv3md9e7jLfN7h8lZUCamK6i/1c3GiNnH2ni4vM5+wjXHzKxbEujndx
joubXMwPZX9vfv970ZDrjXohn6OI2t3qU4/HoF+72M1oLwApppnvz/qt+f1H
Ofpd5s+PUyzlYmcXX3PxlIsnzOd9+uTRDvkcRRZ18SZr5HMdU84zP94HoLNV
XNxgfr9Ru3ybPl9vZRdnunjaxZ9c7NLn62H8kM+RahMXXzDfRtA2878u9nbx
nArrBIyi7V084OIxF+9wsVDG136Fi1+6eMbFJ4y+MjSQz9Gr57s4xsXvzG87
97j4gIsXV1kpYES82fy4920u1h3Qeyxpvp9M+5/64qcP6H1QL+RzlKW++Dda
o08x9sW/sspKARV6vfnrN+e6eMGA30tj8x83v+99Kfwbk418jhxe5mKONfri
Ne+HvnhMko1cPO7iFvN9WMOidRm1zx07xPfEaCKfIycdx46yRl+85u3QF49x
pzVhdO3HXyx97nouGj+/1Hy/wBZDfm+MFvI5BiH2xV9njbnxVxp98RhP8Ti6
U0Xvr3UgdA6teXKMpU8u8jkGZTUXJ1kjn+s6m1nm15gDxoXa45o78pWK66F1
IbSfHVxxPVAd8jly0pycV7v4pvn8rWtqvu1iR8t7zQ4wKk4zP2/kJYnl93Ix
z/z6cLtmrsvV5tvptNEnE/kcOej6mbeb7+/T9vSI+Xk6a1VZKWDAlja/rZ+R
WF7XpT/p4r/Mz1/TecA6GeujNWu0/+2V8TXH0SLmxwMvNL92te5Doe9F6+lf
bn4t65dWVrvyyOejp939GeL1YFo3UtebblZZ7aZSn/rJ5u8foTre7uIQF8tU
WSlgSLQmu7b7jRLKao1WrcP+vqbnTnHxrcx1utXFFZlfc5xofCSuo3+9i63N
t0d0LY7WzLrQGsfcuiGfj6bmPC4zXLzBfD9dHIt+YyU1a/SpX2JT+9R3MPrU
MVnUlrs9sez7XfzG/FzR6HkuHnLxqox1OsH8XPcZGV9zXCxh/nxHx1DdI7Ld
9bQ6vl1g9cyL5PPR1JrPo02bnr91yHXSOazWrmzuU/+00aeOyaQx6kddnJ5Q
Vtezaf3XA9r8TONS52esV+xzf0PG1xwXWtcyHj//o6DcOja8vKhrDA/KFJeH
eud6vX3M3xMI/emUz6c3Pf/kkOqiPnXd1/Epa/Spv9foU8dk29D8/rB/Qtm3
mh+TWrzNz7QWk/blXGvQLBnqdWKm1xsnapPH4+ew1wno5FfWeYx1FCL3nM1J
1Cmfb9b0/Nwh1OPl5vsI43v+3MWqQ3hfYNTtaX6fSOkrv8aK2/E/s7zXmWme
zUUZX29c6P448Vg2KtcAaFxk40yh8f+tMr7e2oP72BOlNZ9rLo3ujzgvPKd1
qIa1NovWn9K1rVeH99bYnMaXth7S+wOj6FDz+8PMLuV031TNMSm6x/BsFz/K
U61/+LH5OV+YqjmfL9qlLJBLUf/HxVbdXBfdL0rX5sT9Qu2KA619PyIwzo4z
vw88L6HcLV3KqM9LOX+VLuVmujg8oW51nZ89aDpexb8Na1BjWJrzt+ZbrmmN
eWiKT1RXtX/Q+cRh5tfEUH3ud/ER695WAcZFaj7/V2s/D67VD8zf+6CIfv6r
hNcin7d3vHUfF14r/Dz+nVuvGb7DxSeN+UNI1278fKum53Sd2AYFv39Gm98f
BPXFaxzgKmv0xWvcjr54jLvU/vZU77TidrzO6zUX9eiE11LfPf3tC1IOnmf+
e9Ochnb3mD0z/Py94d96rPUuNV9xOfNrBui5KwdcV4yPTvPhvtn0/FUdfldr
q95pwz9HV1+85vw8Gt73ZvPXPNAXj3HUy3y4FGrna577xh1+vqX58/iUdWW1
ztnFmeo1blZ38Qvz393XXaxnfm7cC61x/bbW01gklNe/V2v6/SXCc09kqo+u
R1g1Y6yb8bVS1zBGsU75XH1B85t+tmPLz3UO+QfzfXxV9bnFvvg7rNEXr/uy
zKygLsCg6Dozbd/7ZnzNb5jvy23nHEtbS47r1brTOjK6zlDXa99jvh9dc4Ju
Mt8uL5ort5L5v++vM9XlFqv+mrSi2CXT55xU7f6mzU5r+VnzeJr6uuN+XPUY
mtaK29um1vULxv3VMB7UplMOSFlPJtXuLu61RtswWsH8GuO7JbyGxrqKxodR
nr5zrQeruYt7ZnpNrbV5RKbQGMKzGV/vPcY8gapoLemfWOO6yirzufoRtO7V
I0310PW1S1ZUH2AQtE56rnaaaN/V/UFac4X6t9SOS1lP+YPm57Esl7Fe8OMq
Wo9G1/aP6tp7rPc6Ph624n6TQdOxZifzY086f9VYn8b7df7Zbt4JUHeat659
a8OMr6l+YK3lHPuxtPaoxtV3Svx9nV8wVysfjatrnF1zErTedXN7adSQz8fX
sPK4+mNmmZ97q/fTupZqT6xW9EvAGND9UtXn/tmMr6m+dvWzXWq+z1xzW+ck
/m7say9amxy90fyfqtpIvSKfj69Bb3O6P3Bzn7r6A3UPdPrUMUm0Dzxuedcn
0dxirfH2ZxdnW/rapN81f0/WUVnLdBxU2efZK/L5eBrUdqc+9Z1tap+65uTS
p45JNdP8/OhzK66HxnTjPBVMJvI5Umj9+OY+dd37kT51wNPaiNovdqjo/Zc3
P09La0i2u6c3JgP5HEXWMN+fGNv5mhNCnzowlfaH21zcZ8O/D6f6xS4xP6d9
qyG/N0YL+RxFNN9H1yDGfK459FrvcPUqKwWMIK0vozXDdM+PYV4rFtejeN8Q
3xOjiXyOFBo3f5359ZTiuLnWqtrOGDcHIq0Ho3ay1hl7/oDfS/td7Of/krEf
gnyO3qkP/lRrXO+u613f5WKpKisFjIh9zOd07RfrDug9dE+EL5rf/7ReGfPZ
IeRzlKW++HebX/tC29BD5vM8ffGYdFr7RfuDrk1/m6Wt65ZqE2us+a37Ji+c
8bVRb+Rz9Cv2xav/vbkvXs/RB4hJpWvIdU9zHV91/9It+3w93etK69Zo/9J1
6Xv0+XoYP+Rz5BT74tU2iX3xasPTF49JpHNd3TNYa7zEvK72+osSf1/35tQ9
FDU+/mQIzX9bPntNMQ7I5xiE2BevfB7nxmudqzWqrBRQEV0Trjw+1xr7g/aN
r5m/f4rWdtB6Doe6OMbFWS5+aD5/q6zuufZx437UKEY+x6CoDTHbpq5Td4Jx
v1RMtvVcHGn+ninK0+3WEX3U/Bx5jY+/1orvxw1E5HPktr6Lz5u/X7O2Ld1b
QveMIo8DC1Jf1ubm9xW1wVestjqoMfI5ctA9oXTt7bXmt6f5Ls63/ucAAZNA
a8ppvzmy6oqg1sjnyCHOf9O8W21TjPMB6cjnyIF8jhxiv/pzq64IUEPkc+RA
PkcO2oY+U3UlgJoinyMH8jlyIJ8D5ZHPkQP5HDmQz4HyyOfIgXyOHMjnQHnk
c+RAPkcO5HOgPPI5ciCfIwfyOVAe+Rw5kM+RA/kcKI98jhzI58iBfA6URz5H
DuRz5EA+B8ojnyMH8jlyIJ8D5ZHPkQP5HDmQz4HyyOfIgXyOHMjnQHnkc+RA
PkcO5HOgPPI5ciCfIwfyOVAe+Rw5kM+RA/kcKG918/vQnKorglq7xMjn6J+2
oWuqrgRQU7F9fmLVFUGtfc7I5+iftqGvVl0JoKbob0cO9LcjB/rbgfLI58iB
fI4cyOdAeeRz5EA+Rw7kc6A88jlyIJ8jB/I5UB75HDmQz5ED+Rwoj3yOHMjn
yIF8DpRHPkcO5HPkQD4HyiOfIwfyOXIgnwPlkc+RA/kcOZDPgfLI58iBfI4c
yOdAeeRz5EA+Rw7kc6A88jlyIJ8jB/I5UB75HDmQz5ED+Rwoj3yOHMjnyIF8
DpRHPke/lnZxvvntaO2K64J6I58D5ZHP0Y9NXdxtfhtSPOPiVBfTqqwUaot8
DpRHPkdZi7u4yxq5vDkOqLBeqC/yOVBezOeKMwiih7jU2udyxT0jUD+ifkE+
B8przucEQRBVB/kcAIZL54Lzrf0x+bQK6wUAAHpzlC2Yy+e5WK7COgEAgN7t
4uIO87n8ZBczqq0OAAAoifVkAACoP/I5AAD1Rz4HAKD+yOcAANQf+RwAgPoj
nwMAUH/kcwAA6o98DgBA/ZHPAQCoP/I5AAD1Rz4HAKD+yOcAANQf+RwAgPoj
nwMAUI0VXGycKeaYz+e5Xm89F9MG99EBABgbt5rPwaMauw/uowMAMDY2dXFQ
pjjExYkZX+8tLhYf3EcHAAAAAAAAAAAAAAAAAAAAAAAAAAyR1nS5zMV3BhDH
D+9jAAAw0bZwcYuL3wwgzh7i5wAAAAAAAAAAAAAAAAAAAAAAAAAAjL6VXWzb
Epu7WLjKSgEAgJ7c4eLZNrFXlZUCAAA92dDFHi2xi4vFqqwUAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAyvs7PX16cg==
     "], {{0, 211}, {500, 0}}, {0, 255},
     ColorFunction->RGBColor],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   BaseStyle->"ImageGraphics",
   ImageSizeRaw->{500, 211},
   PlotRange->{{0, 500}, {0, 211}}]], "Input"],
 "\n\nYou can solve for ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["V", "out"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " by applying Kirkhoff\[CloseCurlyQuote]s Laws at the junction J in the \
middle of the top of the circuit and around the left and right loops.  \
Kirkhoff\[CloseCurlyQuote]s First Law comes from conservation of charge.  If \
charge is to be conserved, the total current in and out of the junction J \
just be zero.  Letting ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["I", "1"], " "}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["I", "2"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", and  ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["I", "3"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " being the currents through ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["L", "1"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["C", "2"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["L", "3"], " ", 
     RowBox[{"(", 
      RowBox[{"and", " ", 
       SubscriptBox["R", "4"]}], ")"}], " ", "as", " ", "shown"}], ",", " ", 
    RowBox[{
     RowBox[{"this", " ", "requires", " ", "that", " ", 
      SubscriptBox["I", "1"]}], "=", 
     RowBox[{
      SubscriptBox["I", "2"], "+", 
      SubscriptBox["I", "3"]}]}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ".  \n\n",
 Cell[BoxData[
  GraphicsBox[{
    TagBox[RasterBox[CompressedData["
1:eJzt3QncI0WZx/FnOEa5GVAUlWWA5ZAbQVkUlmNRkUvkcIVVuXE9kQEWhkNY
FcUDFEQFEcZFBRU5FBBQBBTwYNnRFUUFhAEvUORGjhGw/lbVJ3kzSafSqaTT
ye/7+TyQyVtvUnnT3U/X0dWr7HfwrgctZGaHPtf9Z9d9j9h61qx9Z++2iPvH
NrMPO3C/hd2Dm108Os1MTwIAAAAAAAAAAAAAAAAAAAAAAMCebRNAWWxPAFAd
jr3Iie0JAKrB8Rc5sT0BQDU4/iInticAqAbHX+TE9gQA1eD4i5zYngCgGhx/
kRPbEwBUg+MvcmJ7AoBq9Hr8Xd7F6S6e7uF3MDlSt6fmctqW7nNxhYvNBlo7
ABhf3Y6/rc/f6+K0Lr+DyZW6Pen/F5g/P1zcxe7huT8NuoIAMKZ6zecbtPwe
0KyXfL5yeLyoi53Dc9cPtHYAMJ7arc+ZumYn+Rytym5P8fmrXSw1lJoCACLy
OXKZ7uJE89vTqRXXBQAmDfkcOS1nfnu6r+qKAMCEIZ+jH9p2XtL072XCc49V
Ux0AmFjkc/RD2865LpZ1McP8NZB67pwqKwUAE6SXOXNAJ9u6uMTFQy6ecnGb
iw+5eG6VlQIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAMACprlYqMffGXT5hXssj+r1+p0Nuvy0EAAwznSce5OLa1084eJJFz9w
sZ+LRTr8zutcXOziry7mu/ipi/e6WLxD+c1cfMnFgy6ecfFrF8e6WL5D+bVd
nOHiT+bvj/5bFx91sVLyp8KwvcjFh13caf47+4uLM12s36H8DBdHufiVi6dd
POziay4271Be9zZ/l/ltTductr3LXOzUobzOG9/q4nvmt+knwuO3WO/nlMCo
erZNfKVNuWVbymD86Jh6jfnv9+fmc+hnXcwNz91o/jgdPcf8tqKf3e3ibBef
cnF9eO4287k40rnCSeZzuHKzcvopLq40fwy/x8WWLXWaZf74+5CLr7r4pIuL
zB+Pdcz/934/NLLbxfy5mr63S8x/Z+eG55R7Z7eUf6WL35vfBr4Typ/j4g/m
txVtU81t8DVd/NL8NnZD+PlZLn4TnrvApp5LrmD+nFQ/u9nF6ea37ZvDc9e5
eH6/HxojY9Jz2vnW+EyfLyh3oPn9E+NnMRc3ufibi0NtwTbLAeaPz2pLK+8r
N2tb0DajHP2clvI7mj9+K2+vEp47NZTXsX2ZlvJqs+uc4DEXm4bnZoXy37Wp
5xGylov/D/XdNflTYtC2d/GUi1+4WLflZy9wcbn57/To8NzLzJ+XKXdv0VJ+
KRf/E8qfFZ5bKZTV77R+79NdfCiU/7b5cwC9hvK2ziPeYVP72fVYbXxtQz9z
sWQvHxQjbZJzms6P42d/3Dqfq2of3XpYlcJQnWb++9+voIzaXWpDqZ18WCj/
/oLym5jPzz90sXso/0Xr3L+5qos/mu+j3cp8XrjafN9qO+qf1zb5gNH3Pgpe
6OI+F7ebz93tKOd+y3wO3db8+aF+Z80O5ZVzP2d+29nLfB+5+mZeVVCPo0N5
9d/rfEBt/DcWlH9TKHNWQRnUy6TntB9b4/Mf1+bn27n4yVBrhGFRO0p5OuV4
9hHz24jy9FXWfezxP0N5HbPVR9ppTD16jfljq9rq95rPEUVUd+2v53Qph8FT
H7bOwTbuUk7nYb8LoW1j5y7l1fejcfL7Q/mDu5TXOYDG0pX3tS2d0qW8fDqU
7VZ31Mck5zSNQ8bPrnHM1v5TjXG+ddiVwlB83fz49PMSyiofP2p+O1m7S1nR
sfXuUH7HxPrcEMofnlhe/f1q762VWB75qW9FfdqfSSyvvm99x3MTy29tjWNT
ynz21cznZ53rLZ1QXuM/mrN3WWJ9MPomOadp7vJd1vj8zf2u65ifrzK9gnqJ
xnbVh6a/v+a8jtIcKM21+Zj5MV717bWOAY66Fc0fh09LLK9tQHOJU/O59JrP
rwvlZyWWV1+7+hdOTiw/ijTu/GXzfR4aw0jJQaPkBPP5858Ty8d+m5sSy/9b
KK8+m5RrzVYN5TXnY4nE99A1E/oMMxPLjxrNFTje/JzC81y8vtLaTPVi8/Mc
NX6mebOvGMJ7jnJOG4Y4Jqr4WdPzmk9wdJvyakddP+A6aez0J031inHSgN83
xT+ZP74010t5Zd8qK9WjQ8zX++WJ5XcJ5XXcOyGh/PqhvPo+z0sov5z5Plv1
F/w4sU6iPKix9zpee3SkLbh9a672jCor1aN55o8HqXQdxSPm95cVE8rPMb9d
6G+zaZeycqw1/pZ7JtZpvVC+df59HSiXay5C63bUrp952NawxlhJDLUhdh/C
e/ea08aJ+py0j8XP/2rz7U99F+2uDdY8p1724TLaHetiPtlkwO/dzXnWvm6a
e7tshfXqxaWW3uYRtePVt32LpbWt4v50rfkx9G759g2hvOac6lifmtMODr+3
QWL5UfESa+Sp1ji1wnr1YnVrzD9LoTEbtZsvC7/35oTf0ZoDcRzmmITymjd3
h/nzyDmJ9RLNxbymh/KjQtf6t9uGtK92mms4LPF7bg0dDxYb8Hv3mtNyGZVr
4DR3JNZF81B1fnd6hfXptC0o1O97f4XxdEHdHqm4bjHUztU+/WCHn+u86BfJ
34Yfj9TvfSP8brf5an8Mf4+Ph/+/pkv5eK177I89LLFeG1ljnl7K3+OBLuWG
FXEuQqdjcdX1i6Hv/Ykun2G7rt+SF8/x1A7WPnRjl/Kbh/Ka86hz5d92Kb9U
KK/X1RoIjyXWSzRupu26299Df4vHE8oNK+Zb5+2o2z4x6HimoG4pfS39qiKn
jUo+17hTzFNxu243z6j5O2n33BHWuP64n3GcL1vnbeH75ufUVhX3F9Tt4orr
FkNtk7nmx6za/VzrbOyR+F1orEk5Rrn88PA5O63fFen719zkHUP5ouvh5P/M
9xesFsp/NLFu6l9Qn7uupSv6e5wT3uPMLuWGFZda523o3hGoXwwdB7/b4Wfa
R9UeTh3riNeTqS9F45u/7FJ+t1Be16upT/DhLuU3COX/2xp9aEsn1k3b6Y+s
+99DY9RXJJQbVjSPE7dGp+9tWNHcPm6NddK+lr6k5jRtv7PNjx3ND/9XHot9
l605r10ObH1+FPL6hU31KJrvWfRZ9nSxYXh8ex91ieO1raHvpFvbcNDeZ+3r
pnGacVxnPI4vvtP8eLse719QXu0k7T+a67B8KP+hLu+hHHZReKy29Ll91LcO
tIaJ2pvttqO3VVivQdK5lNq32kd0LtAtP6sfX38PzVc5ITwu6ivdK5TZ0vz5
ox4PY/5Vlfa29tuQ+seqHvs7ydrXTedmw1pHPyWnxe1M62mp7RLnFh3RVKZT
G7bVKOTxSHO0Y322LShXlM91bcC08PjpPuvzQZvat63rSrbv8zVz0HeutSWb
t1Gdu7SuizUuXmv+M+5gfn0GPT6uoPyaocy7w7/VL/uFgvLTQ/mTw7+1/tu1
pWtbH1obRWueNW9H6g8c13uGXOni1vBY+7Y+b+t6gc30t3gqPN4/lN+ooHzs
z1f+3yY8noQ1BDXforlvW9dobVNpjTzNl4jrAsbQGN/qQ6xDSk6LfRzx/Ceu
BzuvqUwd83mqonxeVKYMtQ0150nn2ytkeL2ctPaUPqP69lKvjakjXasZ2zoL
h8dFa3XENZri9YWas/3NgvIrhvJx3qn6CW/po751omNHXD839VqDutI8yh+G
x7ENtFpBea3deU94HOdLFrUzPhbKaK5V7CM8oI/61onWz9Xn1XVhy1Vcl1aa
i6a2r+a1d1rzsUpxDkI8j14o/Ht+Uxnyef0+V6/UDtBnPLLqigyY5iHrc64f
/q3HReuHxHlMe4Z/32l+vLiT1r+jxid7matXd3GO8rjTeNR14fHbzX/mNQrK
a5u5KzzewRp9RJ3ENQx1XI5jRG/vo751022/RHut7fMZtmD7PPZ/KNcvZuTz
cTQp+Tz2Q2xlfjxFj4vWAdg0lNk7/FtjeRcWlH+BTe3DVxtubvnq1s6k5HOt
KxCvddT8I33m1vvtNNO9se4Lj+M2WLRu0wesMca+SXhcpzUh+kU+L0fXQepv
pz6jRc33Jejfs5vKxHv4ac5lbN+022fjXOmVzfe3/Xlgtc7j2ZZIeW5cTUo+
38wax8bY7nlPQfmYn7XemeZ9aQ7EJ7q8h66t+XJ4rPz/jT7qWzeTks+Vn3W9
oNo4mhv3pBXPH41/F+XnODd+ZkH5A0MZ5fI4N24c77nRCfm8HG2Pyulqp88P
/z/Kpl63oXkYys26dkvz5DrlN80Z1vEr3gf6oEFWHFlNSj5Xm1z5Vm3seC5b
NC9JdP2v2tjxuNptTSj1scf7oKt86pqv42BS8rnuUarPqbUIdE+W73cpv30o
v4/5Ppt5Xcq/NJTX9Wq6flHXiU/SvVDJ50B5k5LPJc410nXo1ySUj+vC6DxV
uX2RLuXjHHqV1znwqM3pGaRJyee6Flz959qG9Hm7rU+htruuUY/zlQ5JeI8r
ml6/Luvs5UI+B8qbpHyuNrquu9cxcsWE8pqTpD559asWzXlqpnGpOVb9er7D
Nin5XHRfUt2fd+9uBQPNf9faJMrlKWs76HpK3f9DbfRu9+gdN+RzoLxJyucY
nEnK5xgc8jlQHvkcOZDPkQP5HCiPfI4cyOfIgXwOlEc+Rw7kc+RAPgfKI58j
B/I5ciCfA+WRz5ED+Rw5kM+B8sjnyIF8jhzI50B55HPkQD5HDuRzoLyYzz9c
dUVQa1ovhXyOfmkbOq/qSgA1tab5fWhO1RVBrem+oORz9Ev39Pxe1ZUAaor+
duRAfztyoL8dKI98jhzI58iBfA6URz5HDuRz5EA+B8ojnyMH8jlyIJ8D5ZHP
kQP5HDmQz4HyyOfIgXyOHMjnQHnkc+RAPkcO5HOgPPI5ciCfIwfyOVAe+Rw5
kM+RA/kcKI98jhzI58iBfA6URz5HDuRz5EA+B8ojnyMH8jlyIJ8D5ZHPkQP5
HDmQz4HyyOfIgXyOHMjnQHnkc+RAPkcO5HOgPPI5ciCfo1/xWPTVqisC1BT5
HDmQz1HWli7Od/E389vQ2dVWB6ilxV38i/l96KMulq22Oqgx8jl6sZiL/V38
1Px281cXn3exQZWVAmpkLReHu7jMxd3m96PWeNDFj8zn99e4WLiSmqJuyOdI
of5AbSv3md9e7jLfN7h8lZUCamK6i/1c3GiNnH2ni4vM5+wjXHzKxbEujndx
joubXMwPZX9vfv970ZDrjXohn6OI2t3qU4/HoF+72M1oLwApppnvz/qt+f1H
Ofpd5s+PUyzlYmcXX3PxlIsnzOd9+uTRDvkcRRZ18SZr5HMdU84zP94HoLNV
XNxgfr9Ru3ybPl9vZRdnunjaxZ9c7NLn62H8kM+RahMXXzDfRtA2878u9nbx
nArrBIyi7V084OIxF+9wsVDG136Fi1+6eMbFJ4y+MjSQz9Gr57s4xsXvzG87
97j4gIsXV1kpYES82fy4920u1h3Qeyxpvp9M+5/64qcP6H1QL+RzlKW++Dda
o08x9sW/sspKARV6vfnrN+e6eMGA30tj8x83v+99Kfwbk418jhxe5mKONfri
Ne+HvnhMko1cPO7iFvN9WMOidRm1zx07xPfEaCKfIycdx46yRl+85u3QF49x
pzVhdO3HXyx97nouGj+/1Hy/wBZDfm+MFvI5BiH2xV9njbnxVxp98RhP8Ti6
U0Xvr3UgdA6teXKMpU8u8jkGZTUXJ1kjn+s6m1nm15gDxoXa45o78pWK66F1
IbSfHVxxPVAd8jly0pycV7v4pvn8rWtqvu1iR8t7zQ4wKk4zP2/kJYnl93Ix
z/z6cLtmrsvV5tvptNEnE/kcOej6mbeb7+/T9vSI+Xk6a1VZKWDAlja/rZ+R
WF7XpT/p4r/Mz1/TecA6GeujNWu0/+2V8TXH0SLmxwMvNL92te5Doe9F6+lf
bn4t65dWVrvyyOejp939GeL1YFo3UtebblZZ7aZSn/rJ5u8foTre7uIQF8tU
WSlgSLQmu7b7jRLKao1WrcP+vqbnTnHxrcx1utXFFZlfc5xofCSuo3+9i63N
t0d0LY7WzLrQGsfcuiGfj6bmPC4zXLzBfD9dHIt+YyU1a/SpX2JT+9R3MPrU
MVnUlrs9sez7XfzG/FzR6HkuHnLxqox1OsH8XPcZGV9zXCxh/nxHx1DdI7Ld
9bQ6vl1g9cyL5PPR1JrPo02bnr91yHXSOazWrmzuU/+00aeOyaQx6kddnJ5Q
Vtezaf3XA9r8TONS52esV+xzf0PG1xwXWtcyHj//o6DcOja8vKhrDA/KFJeH
eud6vX3M3xMI/emUz6c3Pf/kkOqiPnXd1/Epa/Spv9foU8dk29D8/rB/Qtm3
mh+TWrzNz7QWk/blXGvQLBnqdWKm1xsnapPH4+ew1wno5FfWeYx1FCL3nM1J
1Cmfb9b0/Nwh1OPl5vsI43v+3MWqQ3hfYNTtaX6fSOkrv8aK2/E/s7zXmWme
zUUZX29c6P448Vg2KtcAaFxk40yh8f+tMr7e2oP72BOlNZ9rLo3ujzgvPKd1
qIa1NovWn9K1rVeH99bYnMaXth7S+wOj6FDz+8PMLuV031TNMSm6x/BsFz/K
U61/+LH5OV+YqjmfL9qlLJBLUf/HxVbdXBfdL0rX5sT9Qu2KA619PyIwzo4z
vw88L6HcLV3KqM9LOX+VLuVmujg8oW51nZ89aDpexb8Na1BjWJrzt+ZbrmmN
eWiKT1RXtX/Q+cRh5tfEUH3ud/ER695WAcZFaj7/V2s/D67VD8zf+6CIfv6r
hNcin7d3vHUfF14r/Dz+nVuvGb7DxSeN+UNI1278fKum53Sd2AYFv39Gm98f
BPXFaxzgKmv0xWvcjr54jLvU/vZU77TidrzO6zUX9eiE11LfPf3tC1IOnmf+
e9Ochnb3mD0z/Py94d96rPUuNV9xOfNrBui5KwdcV4yPTvPhvtn0/FUdfldr
q95pwz9HV1+85vw8Gt73ZvPXPNAXj3HUy3y4FGrna577xh1+vqX58/iUdWW1
ztnFmeo1blZ38Qvz393XXaxnfm7cC61x/bbW01gklNe/V2v6/SXCc09kqo+u
R1g1Y6yb8bVS1zBGsU75XH1B85t+tmPLz3UO+QfzfXxV9bnFvvg7rNEXr/uy
zKygLsCg6Dozbd/7ZnzNb5jvy23nHEtbS47r1brTOjK6zlDXa99jvh9dc4Ju
Mt8uL5ort5L5v++vM9XlFqv+mrSi2CXT55xU7f6mzU5r+VnzeJr6uuN+XPUY
mtaK29um1vULxv3VMB7UplMOSFlPJtXuLu61RtswWsH8GuO7JbyGxrqKxodR
nr5zrQeruYt7ZnpNrbV5RKbQGMKzGV/vPcY8gapoLemfWOO6yirzufoRtO7V
I0310PW1S1ZUH2AQtE56rnaaaN/V/UFac4X6t9SOS1lP+YPm57Esl7Fe8OMq
Wo9G1/aP6tp7rPc6Ph624n6TQdOxZifzY086f9VYn8b7df7Zbt4JUHeat659
a8OMr6l+YK3lHPuxtPaoxtV3Svx9nV8wVysfjatrnF1zErTedXN7adSQz8fX
sPK4+mNmmZ97q/fTupZqT6xW9EvAGND9UtXn/tmMr6m+dvWzXWq+z1xzW+ck
/m7say9amxy90fyfqtpIvSKfj69Bb3O6P3Bzn7r6A3UPdPrUMUm0Dzxuedcn
0dxirfH2ZxdnW/rapN81f0/WUVnLdBxU2efZK/L5eBrUdqc+9Z1tap+65uTS
p45JNdP8/OhzK66HxnTjPBVMJvI5Umj9+OY+dd37kT51wNPaiNovdqjo/Zc3
P09La0i2u6c3JgP5HEXWMN+fGNv5mhNCnzowlfaH21zcZ8O/D6f6xS4xP6d9
qyG/N0YL+RxFNN9H1yDGfK459FrvcPUqKwWMIK0vozXDdM+PYV4rFtejeN8Q
3xOjiXyOFBo3f5359ZTiuLnWqtrOGDcHIq0Ho3ay1hl7/oDfS/td7Of/krEf
gnyO3qkP/lRrXO+u613f5WKpKisFjIh9zOd07RfrDug9dE+EL5rf/7ReGfPZ
IeRzlKW++HebX/tC29BD5vM8ffGYdFr7RfuDrk1/m6Wt65ZqE2us+a37Ji+c
8bVRb+Rz9Cv2xav/vbkvXs/RB4hJpWvIdU9zHV91/9It+3w93etK69Zo/9J1
6Xv0+XoYP+Rz5BT74tU2iX3xasPTF49JpHNd3TNYa7zEvK72+osSf1/35tQ9
FDU+/mQIzX9bPntNMQ7I5xiE2BevfB7nxmudqzWqrBRQEV0Trjw+1xr7g/aN
r5m/f4rWdtB6Doe6OMbFWS5+aD5/q6zuufZx437UKEY+x6CoDTHbpq5Td4Jx
v1RMtvVcHGn+ninK0+3WEX3U/Bx5jY+/1orvxw1E5HPktr6Lz5u/X7O2Ld1b
QveMIo8DC1Jf1ubm9xW1wVestjqoMfI5ctA9oXTt7bXmt6f5Ls63/ucAAZNA
a8ppvzmy6oqg1sjnyCHOf9O8W21TjPMB6cjnyIF8jhxiv/pzq64IUEPkc+RA
PkcO2oY+U3UlgJoinyMH8jlyIJ8D5ZHPkQP5HDmQz4HyyOfIgXyOHMjnQHnk
c+RAPkcO5HOgPPI5ciCfIwfyOVAe+Rw5kM+RA/kcKI98jhzI58iBfA6URz5H
DuRz5EA+B8ojnyMH8jlyIJ8D5ZHPkQP5HDmQz4HyyOfIgXyOHMjnQHnkc+RA
PkcO5HOgPPI5ciCfIwfyOVAe+Rw5kM+RA/kcKG918/vQnKorglq7xMjn6J+2
oWuqrgRQU7F9fmLVFUGtfc7I5+iftqGvVl0JoKbob0cO9LcjB/rbgfLI58iB
fI4cyOdAeeRz5EA+Rw7kc6A88jlyIJ8jB/I5UB75HDmQz5ED+Rwoj3yOHMjn
yIF8DpRHPkcO5HPkQD4HyiOfIwfyOXIgnwPlkc+RA/kcOZDPgfLI58iBfI4c
yOdAeeRz5EA+Rw7kc6A88jlyIJ8jB/I5UB75HDmQz5ED+Rwoj3yOHMjnyIF8
DpRHPke/lnZxvvntaO2K64J6I58D5ZHP0Y9NXdxtfhtSPOPiVBfTqqwUaot8
DpRHPkdZi7u4yxq5vDkOqLBeqC/yOVBezOeKMwiih7jU2udyxT0jUD+ifkE+
B8przucEQRBVB/kcAIZL54Lzrf0x+bQK6wUAAHpzlC2Yy+e5WK7COgEAgN7t
4uIO87n8ZBczqq0OAAAoifVkAACoP/I5AAD1Rz4HAKD+yOcAANQf+RwAgPoj
nwMAUH/kcwAA6o98DgBA/ZHPAQCoP/I5AAD1Rz4HAKD+yOcAANQf+RwAgPoj
nwMAUI0VXGycKeaYz+e5Xm89F9MG99EBABgbt5rPwaMauw/uowMAMDY2dXFQ
pjjExYkZX+8tLhYf3EcHAAAAAAAAAAAAAAAAAAAAAAAAAAyR1nS5zMV3BhDH
D+9jAAAw0bZwcYuL3wwgzh7i5wAAAAAAAAAAAAAAAAAAAAAAAAAAjL6VXWzb
Epu7WLjKSgEAgJ7c4eLZNrFXlZUCAAA92dDFHi2xi4vFqqwUAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAyvs7PX16cg==
      "], {{0, 211}, {500, 0}}, {0, 255},
      ColorFunction->RGBColor],
     BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
     Selectable->False], InsetBox["", {227., 192.}, {Left, Baseline},
     Alignment->{Left, Top}], InsetBox["", {233., 199.}, {Left, Baseline},
     Alignment->{Left, Top}], InsetBox[
     StyleBox[Cell["J",
       GeneratedCell->False,
       CellAutoOverwrite->False,
       CellBaseline->Baseline,
       TextAlignment->Left],
      FontSize->24,
      FontColor->RGBColor[1, 0, 0],
      Background->RGBColor[1., 1., 1., 0]], {229., 176.}, {Left, Baseline},
     Alignment->{Left, Top}], InsetBox[
     StyleBox[Cell[TextData[Cell[BoxData[
       FormBox[
        SubscriptBox["I", "1"], TraditionalForm]],
       FormatType->"TraditionalForm"]],
       GeneratedCell->False,
       CellAutoOverwrite->False,
       CellBaseline->Baseline,
       TextAlignment->Left],
      FontSize->24,
      FontColor->RGBColor[1, 0.501961, 0.25098],
      Background->RGBColor[1., 1., 1., 0]], {149., 138.}, {Left, Baseline},
     Alignment->{Left, Top}], InsetBox[
     StyleBox[Cell[TextData[Cell[BoxData[
       FormBox[
        SubscriptBox["I", "2"], TraditionalForm]],
       FormatType->"TraditionalForm"]],
       GeneratedCell->False,
       CellAutoOverwrite->False,
       CellBaseline->Baseline,
       TextAlignment->Left],
      FontSize->24,
      FontColor->RGBColor[1, 0.501961, 0.25098],
      Background->RGBColor[1., 1., 1., 0]], {273., 102.}, {Left, Baseline},
     Alignment->{Left, Top}], InsetBox[
     StyleBox[Cell[TextData[Cell[BoxData[
       FormBox[
        SubscriptBox["I", "3"], TraditionalForm]],
       FormatType->"TraditionalForm"]],
       GeneratedCell->False,
       CellAutoOverwrite->False,
       CellBaseline->Baseline,
       TextAlignment->Left],
      FontSize->24,
      FontColor->RGBColor[1, 0.501961, 0.25098],
      Background->RGBColor[1., 1., 1., 0]], {299., 139.}, {Left, Baseline},
     Alignment->{Left, Top}], 
    {RGBColor[0.501961, 0, 0.501961], AbsolutePointSize[8], AbsoluteThickness[
     3], Arrowheads[{{0.04, Automatic}}], StrokeForm[{RGBColor[
     1, 0.501961, 0], Opacity[1.]}], EdgeForm[{RGBColor[1, 0.501961, 0], 
     Opacity[1.], AbsoluteThickness[3]}], FaceForm[{RGBColor[
     0.0196078, 0.980392, 0.141176], Opacity[0.23]}], 
     ArrowBox[{{137., 127.}, {199., 127.}}]}, 
    {RGBColor[0.501961, 0, 0.501961], AbsolutePointSize[8], AbsoluteThickness[
     3], Arrowheads[{{0.04, Automatic}}], StrokeForm[{RGBColor[
     1, 0.501961, 0], Opacity[1.]}], EdgeForm[{RGBColor[1, 0.501961, 0], 
     Opacity[1.], AbsoluteThickness[3]}], FaceForm[{RGBColor[
     0.0196078, 0.980392, 0.141176], Opacity[0.23]}], 
     ArrowBox[{{299., 120.}, {299., 62.}}]}, 
    {RGBColor[0.501961, 0, 0.501961], AbsolutePointSize[8], AbsoluteThickness[
     3], Arrowheads[{{0.04, Automatic}}], StrokeForm[{RGBColor[
     1, 0.501961, 0], Opacity[1.]}], EdgeForm[{RGBColor[1, 0.501961, 0], 
     Opacity[1.], AbsoluteThickness[3]}], FaceForm[{RGBColor[
     0.0196078, 0.980392, 0.141176], Opacity[0.23]}], 
     ArrowBox[{{274., 135.}, {347., 135.}}]}},
   BaseStyle->"ImageGraphics",
   ImagePadding->{{0., 0.}, {0., 0.}},
   ImageSizeRaw->{500, 211},
   PlotRange->{{0., 500.}, {0., 211.}},
   PlotRangePadding->Automatic]], "Input"],
 "\n\nKirkhoff\[CloseCurlyQuote]s Second Law is related to conservation of \
energy.  It implies that the voltage change around any closed loop be zero.   \
Thus, for the left loop we have ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"V", "-", 
     RowBox[{
      SubscriptBox["I", "1"], 
      SubscriptBox["Z", "1"]}], "-", 
     RowBox[{
      SubscriptBox["I", "2"], 
      SubscriptBox["Z", "2"]}]}], "=", "0"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ".  For the right loop we have ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{
      SubscriptBox["Z", "2"], 
      SubscriptBox["I", "2"]}], "-", 
     RowBox[{
      SubscriptBox["Z", "3"], 
      SubscriptBox["I", "3"]}], "-", 
     RowBox[{
      SubscriptBox["Z", "4"], 
      SubscriptBox["I", "3"]}]}], "=", "0"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ".\n\nThese laws give us three complex equations for hte three unknown \
currents ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["I", "1"], " ", ",", " ", 
    SubscriptBox["I", "2"], ",", " ", 
    RowBox[{"and", " ", 
     RowBox[{
      SubscriptBox["I", "3"], ".", "  ", "The"}], " ", "current", " ", 
     SubscriptBox["I", "3"], "  ", "is", " ", "the", " ", "current", " ", 
     "through", " ", "the", " ", "resistor", " ", 
     SubscriptBox["R", "4"], " ", "as", " ", "well", " ", "as", " ", 
     "through", " ", 
     SubscriptBox["L", "3"]}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ".  Therefore the voltage ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["V", "out"], "  ", "must", " ", "equal", " ", 
    SubscriptBox["I", "3"], 
    SubscriptBox["R", "4"]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ".  \n\nLet L1=3/2 H, C2=1/7500 F, L3=1/2 F, and R4=100 \[CapitalOmega].  \
Solve the coupled complex equations resulting from applying Kirkhoff\
\[CloseCurlyQuote]s Laws.  Letting ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["V", "in"], "=", "1"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " Volt, plot the magnitude and phase of voltage ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["V", "out"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " as a function of the frequency \[Omega] for \[Omega] from 0 to 300 radians \
per second.  What is the frequency at which the filter cuts off?"
}], "Text",
 CellChangeTimes->{{3.5255778701376*^9, 3.5255779218828*^9}, 
   3.5255808845973997`*^9, 3.5255809742106*^9, {3.5255986265198*^9, 
   3.5255994133602*^9}, {3.5255994478518*^9, 3.5255997811614*^9}, {
   3.5255998238742*^9, 3.5256006166506*^9}, {3.525600648381*^9, 
   3.5256008017886*^9}, {3.5256008555462*^9, 3.5256008698202*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.525578494651*^9, 3.5255786937742*^9}, {
   3.5255787334294*^9, 3.5255788184337997`*^9}, {3.5255788861534*^9, 
   3.5255789769765997`*^9}, {3.5255790114526*^9, 3.525579022513*^9}, {
   3.525579078829*^9, 3.5255790914806004`*^9}, {3.5255792644382*^9, 
   3.5255793152386*^9}, {3.5255797921703997`*^9, 3.5255798391214*^9}, {
   3.5255798754244003`*^9, 3.5255799674198*^9}, {3.525580375599*^9, 
   3.525580434167*^9}, {3.5255804854378*^9, 3.5255804917202*^9}, {
   3.5255805475188*^9, 3.5255805998238*^9}, {3.5255806691507998`*^9, 
   3.5255807023202*^9}, {3.5255809926822*^9, 3.5255810491422*^9}, {
   3.525600622797*^9, 3.5256006407682*^9}, {3.5256008156102*^9, 
   3.5256008325206003`*^9}, {3.5256008821286*^9, 3.5256009749486*^9}, {
   3.5256010211246*^9, 3.5256011101382*^9}, 3.5256012141949997`*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
AutoGeneratedPackage->None,
WindowSize->{784, 1122},
WindowMargins->{{-33, Automatic}, {0, Automatic}},
ShowSelection->True,
FrontEndVersion->"8.0 for Microsoft Windows (32-bit) (February 23, 2011)",
StyleDefinitions->FrontEnd`FileName[{"Creative"}, "PastelColor.nb", 
  CharacterEncoding -> "WindowsANSI"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[579, 22, 784, 12, 65, "Title"],
Cell[1366, 36, 330, 6, 40, "Subtitle"],
Cell[1699, 44, 2285, 32, 101, "Text"],
Cell[CellGroupData[{
Cell[4009, 80, 1752, 23, 75, "Section"],
Cell[CellGroupData[{
Cell[5786, 107, 297, 4, 36, "Subsection"],
Cell[6086, 113, 2292, 71, 123, "Text"],
Cell[CellGroupData[{
Cell[8403, 188, 552, 10, 162, "Input"],
Cell[8958, 200, 158, 3, 40, "Output"],
Cell[9119, 205, 124, 2, 40, "Output"],
Cell[9246, 209, 124, 2, 40, "Output"],
Cell[9373, 213, 133, 3, 43, "Output"],
Cell[9509, 218, 146, 3, 55, "Output"],
Cell[9658, 223, 189, 5, 60, "Output"],
Cell[9850, 230, 156, 3, 40, "Output"]
}, Open  ]],
Cell[10021, 236, 1288, 46, 101, "Text"],
Cell[CellGroupData[{
Cell[11334, 286, 1159, 23, 142, "Input"],
Cell[12496, 311, 141, 3, 40, "Output"]
}, Open  ]],
Cell[12652, 317, 838, 27, 65, "Text"],
Cell[CellGroupData[{
Cell[13515, 348, 848, 24, 102, "Input"],
Cell[14366, 374, 2642, 51, 378, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[17057, 431, 219, 3, 36, "Subsection"],
Cell[17279, 436, 2542, 41, 47, "Text"],
Cell[CellGroupData[{
Cell[19846, 481, 630, 12, 102, "Input"],
Cell[20479, 495, 283, 8, 58, "Output"],
Cell[20765, 505, 302, 9, 58, "Output"],
Cell[21070, 516, 149, 3, 40, "Output"],
Cell[21222, 521, 149, 3, 40, "Output"]
}, Open  ]],
Cell[21386, 527, 480, 14, 47, "Text"],
Cell[CellGroupData[{
Cell[21891, 545, 431, 7, 41, "Input"],
Cell[22325, 554, 176, 4, 40, "Output"]
}, Open  ]],
Cell[22516, 561, 1067, 26, 85, "Text"],
Cell[CellGroupData[{
Cell[23608, 591, 408, 7, 41, "Input"],
Cell[24019, 600, 210, 5, 40, "Output"]
}, Open  ]],
Cell[24244, 608, 2413, 37, 47, "Text"],
Cell[CellGroupData[{
Cell[26682, 649, 474, 8, 62, "Input"],
Cell[27159, 659, 450, 12, 57, "Output"],
Cell[27612, 673, 358, 10, 61, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[28019, 689, 791, 10, 36, "Subsection"],
Cell[28813, 701, 1457, 34, 125, "Text"],
Cell[CellGroupData[{
Cell[30295, 739, 2421, 58, 142, "Input"],
Cell[32719, 799, 1644, 34, 480, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[34412, 839, 322, 4, 36, "Subsection"],
Cell[34737, 845, 1214, 36, 74, "Text"],
Cell[CellGroupData[{
Cell[35976, 885, 1010, 23, 142, "Input"],
Cell[36989, 910, 256, 7, 49, "Output"]
}, Open  ]],
Cell[37260, 920, 892, 20, 101, "Text"],
Cell[CellGroupData[{
Cell[38177, 944, 1446, 34, 162, "Input"],
Cell[39626, 980, 386, 11, 42, "Output"],
Cell[40015, 993, 557, 17, 40, "Output"],
Cell[40575, 1012, 404, 12, 63, "Output"],
Cell[40982, 1026, 591, 19, 59, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[41622, 1051, 295, 4, 36, "Subsection"],
Cell[41920, 1057, 2429, 40, 47, "Text"],
Cell[CellGroupData[{
Cell[44374, 1101, 1057, 27, 102, "Input"],
Cell[45434, 1130, 473, 15, 60, "Output"],
Cell[45910, 1147, 168, 3, 40, "Output"],
Cell[46081, 1152, 168, 3, 40, "Output"],
Cell[46252, 1157, 168, 3, 40, "Output"]
}, Open  ]],
Cell[46435, 1163, 2811, 45, 105, "Text"],
Cell[CellGroupData[{
Cell[49271, 1212, 7582, 155, 402, "Input"],
Cell[56856, 1369, 2840, 68, 403, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[59757, 1444, 465, 6, 75, "Section"],
Cell[CellGroupData[{
Cell[60247, 1454, 508, 6, 36, "Subsection"],
Cell[60758, 1462, 1097, 31, 67, "Text"],
Cell[CellGroupData[{
Cell[61880, 1497, 1126, 23, 142, "Input"],
Cell[63009, 1522, 1743, 35, 258, "Output"],
Cell[64755, 1559, 140, 3, 40, "Output"],
Cell[64898, 1564, 207, 5, 40, "Output"],
Cell[65108, 1571, 140, 3, 40, "Output"],
Cell[65251, 1576, 123, 2, 40, "Output"]
}, Open  ]],
Cell[65389, 1581, 734, 17, 49, "Text"],
Cell[CellGroupData[{
Cell[66148, 1602, 620, 13, 82, "Input"],
Cell[66771, 1617, 2802, 52, 248, "Output"],
Cell[69576, 1671, 120, 2, 40, "Output"],
Cell[69699, 1675, 158, 3, 40, "Output"]
}, Open  ]],
Cell[69872, 1681, 890, 25, 103, "Text"],
Cell[CellGroupData[{
Cell[70787, 1710, 640, 11, 41, "Input"],
Cell[71430, 1723, 323, 8, 40, "Output"]
}, Open  ]],
Cell[71768, 1734, 1231, 37, 85, "Text"],
Cell[CellGroupData[{
Cell[73024, 1775, 1031, 27, 64, "Input"],
Cell[74058, 1804, 432, 13, 57, "Output"],
Cell[74493, 1819, 218, 5, 40, "Output"]
}, Open  ]],
Cell[74726, 1827, 1283, 25, 65, "Text"],
Cell[CellGroupData[{
Cell[76034, 1856, 553, 15, 82, "Input"],
Cell[76590, 1873, 154, 3, 40, "Output"],
Cell[76747, 1878, 153, 3, 40, "Output"],
Cell[76903, 1883, 596, 18, 61, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[77548, 1907, 718, 11, 36, "Subsection"],
Cell[CellGroupData[{
Cell[78291, 1922, 425, 5, 27, "Subsubsection"],
Cell[78719, 1929, 784, 23, 54, "Text"],
Cell[CellGroupData[{
Cell[79528, 1956, 777, 14, 43, "Input"],
Cell[80308, 1972, 205, 6, 45, "Output"]
}, Open  ]],
Cell[80528, 1981, 1023, 31, 72, "Text"],
Cell[CellGroupData[{
Cell[81576, 2016, 810, 15, 43, "Input"],
Cell[82389, 2033, 737, 23, 60, "Output"]
}, Open  ]],
Cell[83141, 2059, 599, 18, 67, "Text"],
Cell[CellGroupData[{
Cell[83765, 2081, 294, 7, 41, "Input"],
Cell[84062, 2090, 2323, 78, 93, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[86434, 2174, 580, 7, 27, "Subsubsection"],
Cell[87017, 2183, 988, 27, 59, "Text"],
Cell[CellGroupData[{
Cell[88030, 2214, 773, 14, 62, "Input"],
Cell[88806, 2230, 107, 2, 40, "Output"],
Cell[88916, 2234, 747, 25, 60, "Output"]
}, Open  ]],
Cell[89678, 2262, 1920, 61, 138, "Text"],
Cell[91601, 2325, 1200, 26, 62, "Input"],
Cell[CellGroupData[{
Cell[92826, 2355, 291, 7, 82, "Input"],
Cell[93120, 2364, 70, 1, 40, "Output"],
Cell[93193, 2367, 70, 1, 40, "Output"]
}, Open  ]],
Cell[93278, 2371, 920, 30, 78, "Text"],
Cell[CellGroupData[{
Cell[94223, 2405, 1068, 23, 82, "Input"],
Cell[95294, 2430, 72, 1, 40, "Output"],
Cell[95369, 2433, 72, 1, 40, "Output"]
}, Open  ]],
Cell[95456, 2437, 901, 26, 78, "Text"],
Cell[CellGroupData[{
Cell[96382, 2467, 1833, 45, 142, "Input"],
Cell[98218, 2514, 210, 3, 40, "Output"],
Cell[98431, 2519, 208, 4, 40, "Output"],
Cell[98642, 2525, 112, 1, 40, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[98803, 2532, 478, 6, 27, "Subsubsection"],
Cell[99284, 2540, 3010, 70, 333, "Text"],
Cell[CellGroupData[{
Cell[102319, 2614, 3150, 56, 122, "Input"],
Cell[105472, 2672, 631, 18, 57, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[106140, 2695, 4398, 94, 222, "Input"],
Cell[110541, 2791, 172232, 2822, 385, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[282810, 5618, 921, 26, 82, "Input"],
Cell[283734, 5646, 748, 22, 78, "Output"],
Cell[284485, 5670, 110, 3, 57, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[284632, 5678, 914, 26, 82, "Input"],
Cell[285549, 5706, 701, 20, 78, "Output"],
Cell[286253, 5728, 108, 3, 57, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[286398, 5736, 2824, 52, 82, "Input"],
Cell[289225, 5790, 575, 16, 76, "Output"],
Cell[289803, 5808, 93, 1, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[289933, 5814, 1158, 32, 102, "Input"],
Cell[291094, 5848, 579, 17, 76, "Output"],
Cell[291676, 5867, 68, 1, 40, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[291817, 5876, 1489, 21, 75, "Section"],
Cell[CellGroupData[{
Cell[293331, 5901, 1082, 15, 36, "Subsection"],
Cell[294416, 5918, 4276, 124, 259, "Text"],
Cell[298695, 6044, 1244, 17, 41, "Input"],
Cell[299942, 6063, 1469, 49, 87, "Text"],
Cell[301414, 6114, 1237, 17, 41, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[302688, 6136, 903, 12, 36, "Subsection"],
Cell[303594, 6150, 2889, 82, 213, "Text"],
Cell[306486, 6234, 1861, 47, 102, "Input"],
Cell[308350, 6283, 1190, 32, 123, "Text"],
Cell[309543, 6317, 195, 3, 41, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[309775, 6325, 1016, 15, 36, "Subsection"],
Cell[310794, 6342, 3607, 104, 230, "Text"],
Cell[314404, 6448, 1887, 43, 82, "Input"],
Cell[316294, 6493, 1348, 32, 101, "Text"],
Cell[317645, 6527, 1412, 20, 41, "Input"],
Cell[319060, 6549, 2345, 75, 112, "Text"],
Cell[321408, 6626, 1609, 22, 41, "Input"],
Cell[323020, 6650, 1027, 25, 101, "Text"],
Cell[324050, 6677, 1256, 17, 41, "Input"],
Cell[325309, 6696, 903, 14, 65, "Text"],
Cell[326215, 6712, 1125, 15, 41, "Input"],
Cell[327343, 6729, 1003, 18, 83, "Text"],
Cell[328349, 6749, 1105, 15, 41, "Input"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[329503, 6770, 103, 1, 75, "Section"],
Cell[CellGroupData[{
Cell[329631, 6775, 222, 5, 36, "Subsection"],
Cell[329856, 6782, 1228, 24, 119, "Text"],
Cell[331087, 6808, 112, 2, 41, "Input"],
Cell[331202, 6812, 249, 5, 29, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[331488, 6822, 223, 5, 36, "Subsection"],
Cell[331714, 6829, 3979, 116, 307, "Text"],
Cell[335696, 6947, 299, 4, 41, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[336032, 6956, 232, 5, 36, "Subsection"],
Cell[336267, 6963, 138, 1, 29, "Text"],
Cell[336408, 6966, 30958, 646, 1065, "Text"],
Cell[367369, 7614, 850, 12, 41, "Input"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
