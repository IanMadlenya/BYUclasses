(* Content-type: application/mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 6.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       145,          7]
NotebookDataLength[    443423,      10707]
NotebookOptionsPosition[    421788,      10042]
NotebookOutlinePosition[    422653,      10072]
CellTagsIndexPosition[    422521,      10066]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["\<\
Physics 230 -- Lab 8 (Programming II)\
\>", "Title",
 CellChangeTimes->{{3.399308987464324*^9, 3.399308997477577*^9}, {
   3.3996509147507887`*^9, 3.3996509168582067`*^9}, 3.4274817158062444`*^9, {
   3.427505828304313*^9, 3.427505832757467*^9}, {3.4275745555520296`*^9, 
   3.42757455564578*^9}, {3.427574731865658*^9, 3.4275747372563176`*^9}, {
   3.4294834587838097`*^9, 3.4294834590806885`*^9}, 3.430327560654002*^9, {
   3.430601265670842*^9, 3.430601266858365*^9}, 3.4311905217116194`*^9, 
   3.4318058743262105`*^9, 3.4322908055044465`*^9, 3.432910136263564*^9, {
   3.433205089320956*^9, 3.4332051069307823`*^9}, {3.433259990263834*^9, 
   3.4332599997484517`*^9}, {3.4336892224375553`*^9, 3.433689223515708*^9}, {
   3.4342150326553063`*^9, 3.4342150328584366`*^9}, {3.434215084125374*^9, 
   3.434215090203655*^9}, {3.4342354968901157`*^9, 3.4342354970463676`*^9}, 
   3.43440013019414*^9, {3.5239599619160786`*^9, 3.523959962764827*^9}}],

Cell["\<\
Branton J. Campbell, BYU Physics & Astronomy, Winter 2010
R. Steven Turley, BYU Physics and Astronomy, Fall 2011\
\>", "Subtitle",
 CellChangeTimes->{{3.433259527908248*^9, 3.433259551315097*^9}, {
  3.446333718558673*^9, 3.446333720105548*^9}, {3.4717904578565145`*^9, 
  3.4717904585440187`*^9}, {3.523812930831272*^9, 3.523812944460635*^9}}],

Cell[TextData[{
 "In this lab, we will look at strategies to deal with challenges which arise \
when ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " programs start getting more complex than the very simple ones we\
\[CloseCurlyQuote]ve mostly encountered so far.  The ideas we will introduce \
are scoping of names, encapsulating code in units, creating reusable code, \
and documenting code.  There are two major topics important in complex \
problems we won\[CloseCurlyQuote]t be able to consider until a later lab: \
debugging and testing.\n\nThe first challenge with complex problems is that \
symbols we\[CloseCurlyQuote]ve used with a particular meaning in one place \
have a different meaning in another.  These conflicting names can sometimes \
interfer with each other causing incorrect answers.  Limiting the scope of \
name definitions to the parts of the code where we need them is called \
scoping.\n\nThe second challenge we face is the needs to organize code we \
need to use into self-contained units.  We will learn how to do this using \
modules and contexts.\n\nAs you use ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " more and more in your physics work, you\[CloseCurlyQuote]ll find yourself \
accumlating functions and modules which you want to use again and again.  \
Perhaps you\[CloseCurlyQuote]ll write some very helpful to a group of people \
and would like to share it with them.  We\[CloseCurlyQuote]ll learn a good \
way to do this using packages with appropriate documentation."
}], "Text",
 CellChangeTimes->{{3.4303328171611757`*^9, 3.4303328617557817`*^9}, {
   3.430337158416401*^9, 3.430337162963363*^9}, {3.4303440447361155`*^9, 
   3.4303440608145494`*^9}, {3.430352154594947*^9, 3.430352177017253*^9}, 
   3.430497670206213*^9, {3.4306011277463193`*^9, 3.4306011281682024`*^9}, 
   3.430601271436578*^9, {3.4306013425004425`*^9, 3.430601366329025*^9}, {
   3.4307097552544365`*^9, 3.430709783676858*^9}, {3.4307694207016554`*^9, 
   3.43076964619036*^9}, {3.430769681566039*^9, 3.4307700168381014`*^9}, {
   3.4311197804732823`*^9, 3.431119796661093*^9}, {3.431190525414815*^9, 
   3.4311905257429466`*^9}, 3.4311905979787083`*^9, {3.4311907394970503`*^9, 
   3.431190742981492*^9}, {3.431492886761525*^9, 3.431492887223022*^9}, {
   3.431494062343462*^9, 3.431494337141776*^9}, {3.4317255415822144`*^9, 
   3.4317255520667906`*^9}, {3.4318058441225057`*^9, 3.431805844450637*^9}, {
   3.4318073279009933`*^9, 3.4318073289478884`*^9}, {3.4318785406526766`*^9, 
   3.431878608466479*^9}, {3.4322908285673895`*^9, 3.4322909571167326`*^9}, {
   3.4322922730482473`*^9, 3.432293150330716*^9}, {3.4329099693228593`*^9, 
   3.432909970526007*^9}, {3.4329102356092215`*^9, 3.4329102393905444`*^9}, {
   3.432910984811106*^9, 3.432911019280518*^9}, {3.4329110574843764`*^9, 
   3.4329111183292947`*^9}, {3.432911200955881*^9, 3.4329112138936296`*^9}, {
   3.4329118104050827`*^9, 3.43291181107697*^9}, {3.4329135996738105`*^9, 
   3.4329136611593657`*^9}, {3.4329142475925007`*^9, 3.432914473831219*^9}, 
   3.432916189082901*^9, 3.43291645930684*^9, {3.4329167501092978`*^9, 
   3.4329167720315933`*^9}, {3.4330158750885677`*^9, 3.433015875463575*^9}, {
   3.433072742352726*^9, 3.433073376817874*^9}, {3.4332050929772997`*^9, 
   3.4332050933054333`*^9}, {3.4332602218635125`*^9, 3.433260229207451*^9}, {
   3.433525730550697*^9, 3.433525816393897*^9}, {3.4335259150495157`*^9, 
   3.43352593479939*^9}, {3.433525970408537*^9, 3.4335262261569*^9}, {
   3.4335263061251383`*^9, 3.433526322687532*^9}, {3.4335265292955847`*^9, 
   3.4335265657484765`*^9}, {3.433526646247961*^9, 3.433526694263279*^9}, {
   3.4335267242787123`*^9, 3.4335267541222706`*^9}, {3.4335267939032664`*^9, 
   3.4335268524341416`*^9}, {3.4335275777419996`*^9, 3.433527748990904*^9}, {
   3.4335278487246404`*^9, 3.4335278598808193`*^9}, {3.433528262971989*^9, 
   3.4335282724563036`*^9}, {3.4336981782449427`*^9, 
   3.4336983987037115`*^9}, {3.4336984290482388`*^9, 
   3.4336988991071463`*^9}, {3.4336989538741736`*^9, 3.4336993600564466`*^9}, 
   3.433727829997929*^9, {3.4338777570969467`*^9, 3.4338777570977383`*^9}, {
   3.434215080297151*^9, 3.434215080625284*^9}, {3.434913498879365*^9, 
   3.434913591521956*^9}, {3.434913624971479*^9, 3.434913697189571*^9}, {
   3.434913797048811*^9, 3.434913855122602*^9}, {3.434919797455858*^9, 
   3.4349198191977997`*^9}, {3.4979519280786*^9, 3.4979519286401997`*^9}, {
   3.523781937774*^9, 3.5237822771988*^9}, {3.523782396804*^9, 
   3.523782664968*^9}}],

Cell[CellGroupData[{

Cell["Scoping Constructs (45 min)", "Section",
 CellChangeTimes->{{3.434228468002071*^9, 3.4342284709708967`*^9}, {
   3.4344007822256145`*^9, 3.4344007981478977`*^9}, {3.4348236872025657`*^9, 
   3.4348236916089*^9}, {3.434898685820504*^9, 3.434898692178235*^9}, 
   3.434902167881402*^9, 3.434910324769452*^9, {3.434913486257861*^9, 
   3.434913486415784*^9}, {3.523823549372858*^9, 3.523823549836858*^9}}],

Cell["\<\
We often find it useful to define a \"local\" variable inside a specific \
function, so that we can safely use the same \"global\" variable name on the \
outside without conflicts.  Structures that allow us to thus restrict the \
\"scope\" of a variable are called \"scoping constructs\".  Another way to \
manage the scope of names is using Contexts.  We\[CloseCurlyQuote]ll start \
with scoping constructs.\
\>", "Text",
 CellChangeTimes->{{3.434716956617702*^9, 3.434716967025188*^9}, {
   3.434717054835972*^9, 3.434717172573257*^9}, {3.434717237347011*^9, 
   3.4347174473675413`*^9}, {3.434717496602862*^9, 3.4347177247601213`*^9}, 
   3.434719965596383*^9, {3.4347200180202427`*^9, 3.4347200839333153`*^9}, {
   3.52381264128132*^9, 3.5238126686890607`*^9}}],

Cell[CellGroupData[{

Cell["(#1) Local variables that you have already seen (5 min)", "Subsection",
 CellChangeTimes->{{3.434377285927888*^9, 3.43437729123625*^9}, {
  3.4344007672564816`*^9, 3.4344007695377903`*^9}, {3.4344008208203526`*^9, 
  3.434400823757928*^9}, {3.434715217081361*^9, 3.434715217205583*^9}, {
  3.434823693733941*^9, 3.434823693890194*^9}}],

Cell[TextData[{
 "(a) You have already seen local variables as iterators in loop structures \
like ",
 StyleBox["Table",
  FontWeight->"Bold"],
 ", ",
 StyleBox["Sum",
  FontWeight->"Bold"],
 ", ",
 StyleBox["Plot",
  FontWeight->"Bold"],
 " and ",
 StyleBox["Do",
  FontWeight->"Bold"],
 ".  Evaluate the examples below, and observe that local variable ",
 StyleBox["n",
  FontSlant->"Italic"],
 " inside the loops does not interact with global variable ",
 StyleBox["n",
  FontSlant->"Italic"],
 " on the outside.  In this sense, these loop structures are also scoping \
constructs."
}], "Text",
 CellChangeTimes->{{3.4342356229542294`*^9, 3.434235685048774*^9}, {
   3.434235758252883*^9, 3.434235760768556*^9}, {3.434235801284959*^9, 
   3.4342358176758986`*^9}, {3.434400346745717*^9, 3.434400690317012*^9}, {
   3.4344007283023596`*^9, 3.434400728427363*^9}, 3.4344007614594584`*^9, {
   3.434714206790516*^9, 3.4347142073927097`*^9}, {3.434717893416914*^9, 
   3.4347179167339067`*^9}, {3.434718057546577*^9, 3.434718058250517*^9}, {
   3.434720104889852*^9, 3.434720203872437*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"n", " ", "=", " ", "3"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"n", "^", "2"}], ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", "1", ",", "10"}], "}"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Sum", "[", 
  RowBox[{
   RowBox[{"n", "^", "2"}], ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", "1", ",", "10"}], "}"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"n", "^", "2"}], ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", "1", ",", "10"}], "}"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{"Print", "[", "n", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "1", ",", "10"}], "}"}]}], "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", "n"}], "Input",
 CellChangeTimes->{{3.434235692751998*^9, 3.434235792534791*^9}, {
  3.43440053400051*^9, 3.43440054314137*^9}, {3.4344007012704177`*^9, 
  3.4344007208802943`*^9}, {3.4347151115827723`*^9, 3.434715114580695*^9}, {
  3.434715165897215*^9, 3.434715188959242*^9}, {3.4347153137240267`*^9, 
  3.434715318938739*^9}, {3.434717180834565*^9, 3.434717216835258*^9}, {
  3.434718305753605*^9, 3.4347183288360643`*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{
   "1", ",", "4", ",", "9", ",", "16", ",", "25", ",", "36", ",", "49", ",", 
    "64", ",", "81", ",", "100"}], "}"}], TraditionalForm]], "Output",
 CellChangeTimes->{3.52789476859558*^9}],

Cell[BoxData[
 FormBox["385", TraditionalForm]], "Output",
 CellChangeTimes->{3.527894768597559*^9}],

Cell[BoxData[
 FormBox[
  GraphicsBox[{{}, {}, 
    {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJwV0vk71AkAx/FpUNkxGjWNMaYcX0eSXLnS9v0QRYcrx5e0WuVR2VYKT1u7
iTGIpCGSxJRx1MoWNl1bUuTIptrHVsr1IEQ7xjUhVj+8n9c/8NYJDvcKodNo
tB3zffPNyA5zGk1KuvRcCv5mneofqW4MKZme3c0t5EjJCmPWYO68x3uLGvxN
pOTZkFdX7eY1di3hjQZIyU1vfdlH51WxPXu897aULKsOmuytlJIvK/rMGyJG
SGFaxF9NB0bIXUTjyTOjMtLCJNP1wmsZGdYdIKIbTpA6P4bcYvSMk11HZbMe
o1/J+2mKS+Or5aQSQXPbrq8ACXOhZd7ZafKTnkmmwf1F0I0/V5B5cZbUf+5b
+daRiaKpyASXOzRQ1lvS246pQWja173OkY7dhfGji1vZUDmTpCV7qgC9N7bO
Noe4GAhJp26ZKCF9Q7VS5GI+WA/22HVULsT4ddLpFl8bqWlZnCW6ixE3Ju9a
b6mL8uSvr5ckKYPR3+zQ9oMedOhGdjEqDER1vhVpfjBA38T9HGm0Csi17nod
nkYYD10maZljYuqXQctirTUopeWmxsYuAXlCqj2paIpARp1dTiQLXqFiq4Qh
MyR5i2m/26jBNZ/PYiZaICiwrPbBsBrqaAaZXznrsOtqXrtSxVJMmW9wEb+z
gvGvxaFVkcugr/FkQWKJDQrZPZ8PGLHxsatj4VioHZw/0Rt3DrNxonT2gVqQ
Pc6d8inYKFkOMb0x4p7z9yi7Vj0k8uOgONgy46YFCRlLNZnPU4eewmfvvBtA
l3WafskLdTj7/ovaKgeM58jYYee5uEHznvPocsSH9J8js3w0wLs9NZev6oRw
15WvapR5iIi9ltZh6gzDjTcFBs08zCyQNMUe2YzkkSjLFIEminoGJOolW1Bt
672TsubjzsHO99EdLuA/ZD8LlPNRw4iZNlq/FQRd2S74xgooCLKih4Xb4B7f
MZsXsRLHtLpSLk9sh0HtQM37VVrgWsZ8DPJzQ8tFlcm491qg+QpdTe66w6M1
ibzpro2CZN7eYbEHVMnCuPzr2vD7zD0dEOiJ9rry8NVMHYgmHtOV1nghO/v5
+YFDOlAzZu0XzHihxJVmZ1Svg4I3mmKtJzvRqKGfqLhaF61O7xLled5wbNjr
vUeoC/PofNHhwz6Q1JT5S9t1MROWq//IwRfctsH5qwgc2lgUtcnID92vYFOf
Q6B+anVbpBKFvFXbOLtzCVDNjmt9lCn4n/QZH7lMwKlq30srJoUWo4MVmlcI
rH9Zt0jOpvDwVIZpeDGBtBWKVqf0KFxa22fIqSTQq75XlL+JgndyCndfMwHr
jHJPXhwFVmfmpPxvAqmezCLFBApNVuLW1BYCpOGRrf+dpuDYVXm+6jWBGm6A
oFZEwcy2ncV4R8CMXfBn1BUKKn1myuV9BO78pMHvraZQb2/fv7mfgEy8POKf
pxQEIudnbQMEEoc0OU/rKUxtCBAqDRNoadjsIWmh0J8hWOA/SuB57nLh/k4K
koHUzuExApMpwQEBPRSCyOxHcRMEYtLvxmzvp9A6WPpb6RcC13uF98ylFNJR
FegwTcDdYvqF3hgFt6zH9q0zBDyzjltx5RS+G2rihc0SKFdT/MSYoVDr0Ppl
bo5AuOSCdG6Owv9MgyVC
      "]]}},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->True,
   AxesOrigin->{1., 0},
   PlotRange->{{1, 10}, {0., 99.99999632653065}},
   PlotRangeClipping->True,
   PlotRangePadding->{
     Scaled[0.02], 
     Scaled[0.02]}], TraditionalForm]], "Output",
 CellChangeTimes->{3.527894768604494*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 FormBox["1", TraditionalForm]], "Print",
 CellChangeTimes->{3.527894768607938*^9}],

Cell[BoxData[
 FormBox["2", TraditionalForm]], "Print",
 CellChangeTimes->{3.527894768609902*^9}],

Cell[BoxData[
 FormBox["3", TraditionalForm]], "Print",
 CellChangeTimes->{3.527894768612658*^9}],

Cell[BoxData[
 FormBox["4", TraditionalForm]], "Print",
 CellChangeTimes->{3.527894768615411*^9}],

Cell[BoxData[
 FormBox["5", TraditionalForm]], "Print",
 CellChangeTimes->{3.527894768618146*^9}],

Cell[BoxData[
 FormBox["6", TraditionalForm]], "Print",
 CellChangeTimes->{3.5278947686209097`*^9}],

Cell[BoxData[
 FormBox["7", TraditionalForm]], "Print",
 CellChangeTimes->{3.527894768623274*^9}],

Cell[BoxData[
 FormBox["8", TraditionalForm]], "Print",
 CellChangeTimes->{3.527894768625654*^9}],

Cell[BoxData[
 FormBox["9", TraditionalForm]], "Print",
 CellChangeTimes->{3.527894768628015*^9}],

Cell[BoxData[
 FormBox["10", TraditionalForm]], "Print",
 CellChangeTimes->{3.5278947686303988`*^9}]
}, Open  ]],

Cell[BoxData[
 FormBox["3", TraditionalForm]], "Output",
 CellChangeTimes->{3.5278947686327868`*^9}]
}, Open  ]],

Cell[TextData[{
 "\n(b) Because the ",
 StyleBox["For",
  FontWeight->"Bold"],
 " loop structure uses a global variable as its iterator, it is more \
susceptible to variable-name conflicts.  Can you see problem in the \
subsequent integral?"
}], "Text",
 CellChangeTimes->{{3.434718070619112*^9, 3.4347180793385572`*^9}, {
  3.434720624895104*^9, 3.4347207135432177`*^9}, {3.4347208779985228`*^9, 
  3.434721034050729*^9}, {3.4347210696284*^9, 3.434721161779735*^9}, {
  3.43472189402796*^9, 3.43472195883629*^9}, {3.446319320718963*^9, 
  3.446319327187713*^9}, {3.446319376156463*^9, 3.446319384734588*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"For", "[", 
  RowBox[{
   RowBox[{"n", "=", "0"}], ",", " ", 
   RowBox[{"n", "<", "10"}], ",", " ", 
   RowBox[{"n", "++"}], ",", " ", "\"\<do nothing\>\""}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{"n", "^", "2"}], ",", "n"}], "]"}]}], "Input",
 CellChangeTimes->{
  3.434721666587326*^9, {3.434721961140823*^9, 3.434722049032033*^9}, {
   3.43492059468712*^9, 3.434920604150804*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{
   StyleBox[
    RowBox[{"Integrate", "::", "ilim"}], "MessageName"], 
   RowBox[{
   ":", " "}], "\<\"Invalid integration variable or limit(s) in \[NoBreak]\\!\
\\(TraditionalForm\\`10\\)\[NoBreak]. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\
\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/Integrate/ilim\\\", ButtonNote -> \
\\\"Integrate::ilim\\\"]\\)\"\>"}], TraditionalForm]], "Message", "MSG",
 CellChangeTimes->{3.52789478826077*^9}],

Cell[BoxData[
 FormBox[
  RowBox[{"\[Integral]", 
   RowBox[{"100", 
    RowBox[{"\[DifferentialD]", "10"}]}]}], TraditionalForm]], "Output",
 CellChangeTimes->{3.527894788320528*^9}]
}, Open  ]],

Cell[TextData[{
 "\n(c) We use local variables to train a function to take an argument.  When \
we use a pattern (i.e. \"",
 StyleBox["n",
  FontSlant->"Italic"],
 "_\")  to define a function, ",
 StyleBox["n",
  FontSlant->"Italic"],
 " behaves as a strictly local variable inside that function.  In the example \
below, observe that the local variable ",
 StyleBox["n",
  FontSlant->"Italic"],
 " inside of ",
 StyleBox["f",
  FontSlant->"Italic"],
 " does not conflict with the global ",
 StyleBox["n",
  FontSlant->"Italic"],
 " on the outside."
}], "Text",
 CellChangeTimes->{{3.434721673065157*^9, 3.434721855352751*^9}, {
  3.446319407172088*^9, 3.446319415765838*^9}, {3.446319477515838*^9, 
  3.446319707640838*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"n", " ", "=", " ", "3"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"f", "[", "n_", "]"}], " ", ":=", " ", 
  RowBox[{"5", "*", "n"}]}], "\[IndentingNewLine]", 
 RowBox[{"f", "[", "n", "]"}], "\[IndentingNewLine]", 
 RowBox[{"f", "[", "2", "]"}]}], "Input",
 CellChangeTimes->{{3.434718074739808*^9, 3.434718145149056*^9}, {
   3.434718193241353*^9, 3.4347182188560333`*^9}, {3.4347183752392893`*^9, 
   3.4347184394490356`*^9}, {3.434720720672862*^9, 3.434720863388431*^9}, 
   3.434721037505728*^9, {3.434721463151847*^9, 3.434721463997635*^9}, {
   3.4347215612115793`*^9, 3.434721650654409*^9}, {3.434721866342485*^9, 
   3.434721870156548*^9}}],

Cell[BoxData[
 FormBox["3", TraditionalForm]], "Output",
 CellChangeTimes->{3.527894816956794*^9}],

Cell[BoxData[
 FormBox["15", TraditionalForm]], "Output",
 CellChangeTimes->{3.527894816959095*^9}],

Cell[BoxData[
 FormBox["10", TraditionalForm]], "Output",
 CellChangeTimes->{3.527894816961507*^9}]
}, Open  ]],

Cell["\<\

(d) Clear a few variables before proceeding to the next exercise.\
\>", "Text",
 CellChangeTimes->{{3.434721208868739*^9, 3.434721230669816*^9}, 
   3.4347220839623947`*^9}],

Cell[BoxData[
 RowBox[{"Clear", "[", 
  RowBox[{"n", ",", " ", "x", ",", " ", "f"}], "]"}]], "Input",
 CellChangeTimes->{{3.434721183208967*^9, 3.43472120158178*^9}, {
  3.434722153066646*^9, 3.434722154843219*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["(#2) Introduction to Module (10 min)", "Subsection",
 CellChangeTimes->{{3.434377450523617*^9, 3.434377452369175*^9}, {
   3.4344007718972254`*^9, 3.434400794054043*^9}, {3.434400825632976*^9, 
   3.434400840508357*^9}, 3.434716920072213*^9, {3.4347221207299967`*^9, 
   3.434722121177412*^9}, 3.434724992277545*^9, {3.43472745675241*^9, 
   3.434727465788583*^9}, {3.4348113164257793`*^9, 3.434811316566407*^9}, {
   3.4348230158146753`*^9, 3.434823016236558*^9}, {3.43482369446833*^9, 
   3.4348236946402082`*^9}, {3.434898954738262*^9, 3.4348989638981953`*^9}}],

Cell[TextData[{
 "The ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " ",
 StyleBox[ButtonBox["Module",
  BaseStyle->"Link",
  ButtonData->"paclet://ref/Module"],
  FontWeight->"Bold"],
 " function is a much more general scoping construct that allows us to \
arbitrarily define and use multiple local variables.  If we construct a ",
 StyleBox["Module",
  FontWeight->"Bold"],
 " that takes inputs and returns an output, it behaves like a function.  If \
it doesn't take inputs or return an output, but modifies global variables \
instead, it behaves more like a procedure.\n\n(a)  Here's a skeleton module \
that takes no input, does nothing, and produces no output.  Actually, ",
 StyleBox["FullForm",
  FontWeight->"Bold"],
 " reveals that ",
 StyleBox["Module",
  FontWeight->"Bold"],
 " produces a ",
 StyleBox["Null",
  FontWeight->"Bold"],
 " output which ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " will ordinarily doesn't display."
}], "Text",
 CellChangeTimes->{{3.434715789121478*^9, 3.434716351401338*^9}, {
  3.434716440437484*^9, 3.4347168563903513`*^9}, {3.434716945554736*^9, 
  3.434717004914752*^9}, {3.434717756807961*^9, 3.434717756808591*^9}, {
  3.434717942684472*^9, 3.434717955417885*^9}, {3.434717985743544*^9, 
  3.434717991272604*^9}, {3.434720230122026*^9, 3.434720467562992*^9}, {
  3.4347204995225573`*^9, 3.434720555178884*^9}, {3.434722217697277*^9, 
  3.4347222818386374`*^9}, {3.434723723481696*^9, 3.434723735993679*^9}, {
  3.446319772000213*^9, 3.446319838453338*^9}, {3.4979166843283997`*^9, 
  3.4979166977911997`*^9}, {3.4979167394119997`*^9, 3.4979167403636*^9}}],

Cell[BoxData[
 RowBox[{"Module", "[", 
  RowBox[{
   RowBox[{"{", "}"}], ","}], "]"}]], "Input",
 CellChangeTimes->{{3.434722127395392*^9, 3.434722184774584*^9}, {
  3.434722940354396*^9, 3.434722948952908*^9}, {3.434723538240068*^9, 
  3.434723546454192*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "}"}], ","}], "]"}], "//", "FullForm"}]], "Input",
 CellChangeTimes->{{3.434722127395392*^9, 3.434722184774584*^9}, {
  3.434722940354396*^9, 3.434722948952908*^9}, {3.434723538240068*^9, 
  3.434723546454192*^9}}],

Cell[BoxData[
 FormBox[
  TagBox[
   StyleBox["Null",
    ShowSpecialCharacters->False,
    ShowStringCharacters->True,
    NumberMarks->True],
   FullForm], TraditionalForm]], "Output",
 CellChangeTimes->{3.5278948888695374`*^9}]
}, Open  ]],

Cell["\<\

(b) Evaluate this example, which returns an output.\
\>", "Text",
 CellChangeTimes->{{3.4347223030508623`*^9, 3.434722306446958*^9}, {
  3.434723301532844*^9, 3.434723311005*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Module", "[", 
  RowBox[{
   RowBox[{"{", "}"}], ",", "3"}], "]"}]], "Input",
 CellChangeTimes->{{3.43472230764489*^9, 3.434722313178492*^9}, {
   3.434722908163526*^9, 3.434722924978262*^9}, 3.434722966462583*^9}],

Cell[BoxData[
 FormBox["3", TraditionalForm]], "Output",
 CellChangeTimes->{3.5278948916438017`*^9}]
}, Open  ]],

Cell[TextData[{
 "\n(c) Evaluate this example, which uses several local variables and returns \
an output.  Notice that the last step in the compound expression is returned \
as output, and that the local variables defined inside the ",
 StyleBox["Module",
  FontWeight->"Bold"],
 " retain no global definitions."
}], "Text",
 CellChangeTimes->{{3.4347223030508623`*^9, 3.434722306446958*^9}, {
  3.43472322226836*^9, 3.43472329282852*^9}, {3.4347235989919643`*^9, 
  3.434723639214982*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Module", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"a", ",", "b", ",", "c"}], "}"}], ",", " ", 
   RowBox[{
    RowBox[{"a", " ", "=", " ", "1"}], ";", " ", 
    RowBox[{"b", " ", "=", " ", "10"}], ";", " ", 
    RowBox[{"c", " ", "=", " ", "100"}], ";", " ", 
    RowBox[{"a", "+", "b", "+", "c"}]}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"{", 
  RowBox[{"a", ",", "b", ",", "c"}], "}"}]}], "Input",
 CellChangeTimes->{{3.43472230764489*^9, 3.434722313178492*^9}, {
  3.434722908163526*^9, 3.434722924978262*^9}, {3.434722966462583*^9, 
  3.434723207557782*^9}, {3.43472358185085*^9, 3.434723591591196*^9}, {
  3.43472378260537*^9, 3.434723895399621*^9}, {3.434724813626383*^9, 
  3.434724863091021*^9}}],

Cell[BoxData[
 FormBox["111", TraditionalForm]], "Output",
 CellChangeTimes->{3.527894897526135*^9}],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{"a", ",", "b", ",", "c"}], "}"}], TraditionalForm]], "Output",
 CellChangeTimes->{3.527894897529559*^9}]
}, Open  ]],

Cell[TextData[{
 "\n(d) Evaluate this example, which is identical to the previous output \
except for a semicolon at the end of the compound expression.  The semicolon \
effectively suppresses the return of an output.  It may help to imagine that \
there is a ",
 StyleBox["Null",
  FontWeight->"Bold"],
 " sitting just after the semicolon by default."
}], "Text",
 CellChangeTimes->{{3.4347223030508623`*^9, 3.434722306446958*^9}, {
   3.43472322226836*^9, 3.43472329282852*^9}, {3.4347233337587748`*^9, 
   3.4347234843302937`*^9}, 3.434723572584157*^9, {3.434724627662878*^9, 
   3.4347246597405024`*^9}}],

Cell[BoxData[
 RowBox[{"Module", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"a", ",", "b", ",", "c"}], "}"}], ",", " ", 
   RowBox[{
    RowBox[{"a", " ", "=", " ", "1"}], ";", " ", 
    RowBox[{"b", " ", "=", " ", "10"}], ";", " ", 
    RowBox[{"c", " ", "=", " ", "100"}], ";", " ", 
    RowBox[{"a", "+", "b", "+", "c"}], ";"}]}], "]"}]], "Input",
 CellChangeTimes->{
  3.434723916730228*^9, {3.434724868830764*^9, 3.434724871485169*^9}}],

Cell["\<\

(e)  Evaluate this example, which takes no input and returns no input, but \
which modifies a global variable.\
\>", "Text",
 CellChangeTimes->{{3.4347236526460238`*^9, 3.434723679111923*^9}, {
  3.434723950992058*^9, 3.434724018129633*^9}, {3.4347241529901533`*^9, 
  3.434724169565987*^9}, {3.434724249745063*^9, 3.4347243182261047`*^9}}],

Cell[BoxData[
 RowBox[{"Module", "[", 
  RowBox[{
   RowBox[{"{", "}"}], ",", 
   RowBox[{
    RowBox[{"lifetheuniverseandeverything", " ", "=", "42"}], ";"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.434723656179443*^9, 3.434723657008082*^9}, {
  3.434724031690572*^9, 3.434724055467863*^9}, {3.434724322564561*^9, 
  3.4347243988052273`*^9}}],

Cell[CellGroupData[{

Cell[BoxData["lifetheuniverseandeverything"], "Input",
 CellChangeTimes->{{3.434723656179443*^9, 3.434723657008082*^9}, {
  3.434724031690572*^9, 3.434724055467863*^9}, {3.434724322564561*^9, 
  3.4347243988052273`*^9}}],

Cell[BoxData[
 FormBox["42", TraditionalForm]], "Output",
 CellChangeTimes->{3.52789491688811*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
(#3) Constructing argumentative functions with Module (10 min)\
\>", "Subsection",
 CellChangeTimes->{{3.434724243609735*^9, 3.434724245272007*^9}, {
  3.43472451175991*^9, 3.434724557000984*^9}, {3.4347249642067327`*^9, 
  3.434724981045143*^9}, {3.4348162291451015`*^9, 3.4348162292701044`*^9}, {
  3.4348236950620914`*^9, 3.434823695202719*^9}}],

Cell[TextData[{
 "(a)  Evaluate this example, which uses ",
 StyleBox["Module",
  FontWeight->"Bold"],
 " to create an argumentative function that takes a number ",
 StyleBox["x",
  FontSlant->"Italic"],
 " as input and returns ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["x", "2"], TraditionalForm]]],
 "."
}], "Text",
 CellChangeTimes->{{3.4347236526460238`*^9, 3.434723679111923*^9}, {
   3.434723950992058*^9, 3.434724018129633*^9}, {3.4347241529901533`*^9, 
   3.434724169565987*^9}, 3.434724495809861*^9, 3.43472453692866*^9, {
   3.434812183114294*^9, 3.4348122206775155`*^9}, {3.4348122640533485`*^9, 
   3.4348122659908857`*^9}, {3.4348126270290675`*^9, 3.4348126307478886`*^9}, 
   3.4348126770300274`*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"f", "[", "x_", "]"}], ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "}"}], ",", 
    RowBox[{"x", "^", "2"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"f", "[", "3", "]"}]}], "Input",
 CellChangeTimes->{{3.434723656179443*^9, 3.434723657008082*^9}, {
  3.434724031690572*^9, 3.434724055467863*^9}, {3.434812157395051*^9, 
  3.434812160551361*^9}, {3.4348122254744825`*^9, 3.4348122513343544`*^9}}],

Cell[BoxData[
 FormBox["9", TraditionalForm]], "Output",
 CellChangeTimes->{3.5278949333970833`*^9}]
}, Open  ]],

Cell[TextData[{
 "\n(b) Evaluate this example, which uses ",
 StyleBox["Module",
  FontWeight->"Bold"],
 " to create a more complicated argumentative function that also employs \
local variables."
}], "Text",
 CellChangeTimes->{{3.434724502260578*^9, 3.434724503159342*^9}, {
   3.4347245668253613`*^9, 3.434724587706596*^9}, {3.434724728744259*^9, 
   3.43472474273422*^9}, {3.434740272604656*^9, 3.434740274495269*^9}, 
   3.4348126881708665`*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"f", "[", 
   RowBox[{"x_", ",", "y_", ",", "z_"}], "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a", ",", "b", ",", "c"}], "}"}], ",", " ", 
    RowBox[{
     RowBox[{"a", " ", "=", " ", "1"}], ";", " ", 
     RowBox[{"b", " ", "=", " ", "10"}], ";", " ", 
     RowBox[{"c", " ", "=", " ", "100"}], ";", " ", 
     RowBox[{
      RowBox[{"c", "*", "x"}], "+", 
      RowBox[{"b", "*", "y"}], "+", 
      RowBox[{"a", "*", "z"}]}]}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"f", "[", 
  RowBox[{"3", ",", "4", ",", "7"}], "]"}]}], "Input",
 CellChangeTimes->{{3.434724777304682*^9, 3.434724780704832*^9}, {
  3.434724878765123*^9, 3.434724934046077*^9}}],

Cell[BoxData[
 FormBox["347", TraditionalForm]], "Output",
 CellChangeTimes->{3.52789495376764*^9}]
}, Open  ]],

Cell["\<\

(c) Evaluate this example, where we demonstrate the ability to simultaneously \
declare and define local variables.\
\>", "Text",
 CellChangeTimes->{{3.434724502260578*^9, 3.434724503159342*^9}, {
   3.4347245668253613`*^9, 3.434724587706596*^9}, {3.434724728744259*^9, 
   3.43472474273422*^9}, {3.434740272604656*^9, 3.434740274495269*^9}, 
   3.4348126881708665`*^9, 3.4348201910961695`*^9, {3.4348202277999997`*^9, 
   3.4348202481597652`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"f", "[", 
   RowBox[{"x_", ",", "y_", ",", "z_"}], "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", " ", "=", " ", "1"}], ",", 
      RowBox[{"b", " ", "=", " ", "10"}], ",", 
      RowBox[{"c", " ", "=", " ", "100"}]}], "}"}], ",", " ", 
    RowBox[{
     RowBox[{"c", "*", "x"}], "+", 
     RowBox[{"b", "*", "y"}], "+", 
     RowBox[{"a", "*", "z"}]}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"f", "[", 
  RowBox[{"3", ",", "4", ",", "7"}], "]"}]}], "Input",
 CellChangeTimes->{{3.434724777304682*^9, 3.434724780704832*^9}, {
  3.434724878765123*^9, 3.434724934046077*^9}, {3.4348202061433334`*^9, 
  3.434820219065457*^9}}],

Cell[BoxData[
 FormBox["347", TraditionalForm]], "Output",
 CellChangeTimes->{3.5278949601743402`*^9}]
}, Open  ]],

Cell[TextData[{
 "\n(d) The components of a ",
 StyleBox["Module",
  FontWeight->"Bold"],
 " can be divided across multiple lines in order to make the code more \
readable.  This approach is highly recommended, especially with long \
complicated programs.  Evaluate the cell below, which is essentially \
identical to those above."
}], "Text",
 CellChangeTimes->{{3.434724502260578*^9, 3.434724503159342*^9}, {
   3.4347245668253613`*^9, 3.434724587706596*^9}, {3.434724728744259*^9, 
   3.43472474273422*^9}, {3.434740272604656*^9, 3.434740274495269*^9}, 
   3.4348126881708665`*^9, {3.4348148661970587`*^9, 3.4348150628102083`*^9}, 
   3.4348201950337453`*^9, {3.434820282769805*^9, 3.434820302473308*^9}, 
   3.4348203466929073`*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{"x_", ",", "y_", ",", "z_"}], "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"a", ",", "b", ",", "c"}], "}"}], ",", "\[IndentingNewLine]", 
     " ", 
     RowBox[{
      RowBox[{"a", " ", "=", " ", "1"}], ";", "\[IndentingNewLine]", 
      RowBox[{"b", " ", "=", " ", "10"}], ";", "\[IndentingNewLine]", 
      RowBox[{"c", " ", "=", " ", "100"}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"c", "*", "x"}], "+", 
       RowBox[{"b", "*", "y"}], "+", 
       RowBox[{"a", "*", "z"}]}]}]}], "\[IndentingNewLine]", "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"f", "[", 
  RowBox[{"3", ",", "4", ",", "7"}], "]"}]}], "Input",
 CellChangeTimes->{{3.434724777304682*^9, 3.434724780704832*^9}, {
  3.434724878765123*^9, 3.434724934046077*^9}, {3.4348149435891695`*^9, 
  3.43481496004261*^9}}],

Cell[BoxData["347"], "Output",
 CellChangeTimes->{3.527894989138134*^9, 3.5279361151802053`*^9}]
}, Open  ]],

Cell[TextData[{
 "\n(e) Use ",
 StyleBox["Module",
  FontWeight->"Bold"],
 " to create an argumentative function ",
 StyleBox["f[xlist_]",
  FontWeight->"Bold"],
 " that takes a list of real numbers as input, computes the ",
 StyleBox["Mean",
  FontWeight->"Bold"],
 " and the ",
 StyleBox["StandardDeviation",
  FontWeight->"Bold"],
 " of the list, subtracts the mean from each element of the list, and then \
divides each element of the resulting list by the standard deviation.  Try \
your new function out on a list of 100 ",
 StyleBox["RandomReal",
  FontWeight->"Bold"],
 " numbers that lie between 0 and 10.  The results should lie primarily \
between -1 and +1."
}], "Text",
 CellChangeTimes->{{3.4347250039170113`*^9, 3.43472533988741*^9}, {
   3.434725482948435*^9, 3.434725523500515*^9}, {3.434725585505643*^9, 
   3.434725592326467*^9}, {3.434725661394669*^9, 3.4347258098448467`*^9}, {
   3.434725976758478*^9, 3.4347260063944273`*^9}, {3.434726043213214*^9, 
   3.434726147239094*^9}, {3.434726251178918*^9, 3.434726252354165*^9}, 
   3.434726315740226*^9, {3.4347263640855494`*^9, 3.4347263979577513`*^9}, {
   3.434726431263777*^9, 3.434726520753467*^9}, {3.434726605716877*^9, 
   3.4347266176046953`*^9}, {3.43472676485858*^9, 3.434726793665365*^9}, {
   3.434726855100337*^9, 3.434726873491747*^9}, {3.434726928661565*^9, 
   3.434726932069655*^9}, {3.4347269647672777`*^9, 3.434727114530469*^9}, {
   3.434727268193057*^9, 3.434727327464931*^9}, {3.434727367250168*^9, 
   3.434727383514163*^9}, {3.434727433061529*^9, 3.434727440715939*^9}, {
   3.4347403078706627`*^9, 3.4347403150426755`*^9}, 3.4348126905615373`*^9, {
   3.434820197127536*^9, 3.4348201987369413`*^9}, 3.434898908193614*^9, {
   3.446323632494774*^9, 3.446323641058096*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"f", "[", "xlist_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"n", ",", "mean", ",", "\[Sigma]", ",", " ", 
      RowBox[{"nlist", "=", 
       RowBox[{"{", "}"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"mean", " ", "=", " ", 
      RowBox[{"Mean", "[", "xlist", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[Sigma]", " ", "=", " ", 
      RowBox[{"StandardDeviation", "[", "xlist", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"n", " ", "=", " ", 
      RowBox[{"Length", "[", "xlist", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"i", "=", "1"}], ";", "\[IndentingNewLine]", " ", 
     RowBox[{"While", "[", 
      RowBox[{
       RowBox[{"i", "<", "n"}], ",", 
       RowBox[{
        RowBox[{"AppendTo", "[", 
         RowBox[{"nlist", ",", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"xlist", "[", 
               RowBox[{"[", "i", "]"}], "]"}], "-", "mean"}], ")"}], "/", 
            "\[Sigma]"}], ")"}]}], "]"}], ";", 
        RowBox[{"i", "++"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
     "nlist"}]}], "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"f", "[", 
  RowBox[{"RandomReal", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"0", ",", "10"}], "}"}], ",", "100"}], "]"}], "]"}]}], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQBWIQXVD34qL59JeOWwq/gukJir9/g+h3il7sFkC6ZcKv
RBB94bBpJoi+EnmtEERvU3wApjdJlTWA6DeBLI0g+kxWbz+IfjgjYzKI/jNP
fxGIZnCtXQOiwysab4Ho86y8T0H06Wa+8mQgvZL3WR2I/npy/q4eIM3vuhJM
z1KWS5oOpPepGaeA6FlLtH698XjluENJ8g+Iro9VZXoLpNd5OHKB6GtlfkIg
OolxgzCI7n3bLQ6ie5q0dUH0wcI/BiD6jRy7EYj+ZLDODESfkDpsD6LnXbLz
BNE5f0t9QfQLkZ0RIHqCeEQMiC6xOvqI2fOVY93x5Y9BdNSe589BdEqm7AcQ
DQB+aq73
  "]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.05449214632560027`", ",", "0.2674932291507813`", ",", 
   RowBox[{"-", "0.13504956647183983`"}], ",", 
   RowBox[{"-", "0.5735549251398935`"}], ",", "1.0373609469513876`", ",", 
   RowBox[{"-", "0.9222120259715173`"}], ",", 
   RowBox[{"-", "0.6158114151060416`"}], ",", "0.7167937370931979`", ",", 
   "0.25399994312365715`", ",", "0.9327477805196406`", ",", 
   "0.8772988678516744`", ",", 
   RowBox[{"-", "0.9182542703785526`"}], ",", "1.0694068153785767`", ",", 
   RowBox[{"-", "1.0413132050808516`"}], ",", 
   RowBox[{"-", "0.06161255113444092`"}], ",", "0.2356105654785681`", ",", 
   RowBox[{"-", "1.127005731663125`"}], ",", 
   RowBox[{"-", "0.7502504462443296`"}], ",", "1.3510530518938806`", ",", 
   "1.037415732709199`", ",", 
   RowBox[{"-", "0.7466608916619734`"}], ",", 
   RowBox[{"-", "0.8015439081466541`"}], ",", 
   RowBox[{"-", "1.2843586093347392`"}], ",", 
   RowBox[{"-", "0.6573477681767764`"}], ",", "0.7735148689465763`", ",", 
   "0.9977400428834335`", ",", "0.3564011380707406`", ",", 
   "1.6146965016890609`", ",", "1.4560363821863256`", ",", 
   RowBox[{"-", "1.0967237234241203`"}], ",", "1.181753423473326`", ",", 
   RowBox[{"-", "1.4873275119700464`"}], ",", 
   RowBox[{"-", "0.727331671629138`"}], ",", 
   RowBox[{"-", "1.1008308424120934`"}], ",", 
   RowBox[{"-", "0.03537656413742511`"}], ",", "0.26710640633871174`", ",", 
   RowBox[{"-", "0.5334178275440496`"}], ",", 
   RowBox[{"-", "0.09031912328819171`"}], ",", "1.485901903621764`", ",", 
   RowBox[{"-", "1.0229585151882474`"}], ",", "0.2522438781342126`", ",", 
   RowBox[{"-", "0.6920009064308043`"}], ",", 
   RowBox[{"-", "1.4985647107876485`"}], ",", 
   RowBox[{"-", "0.5688066719094653`"}], ",", 
   RowBox[{"-", "0.8979929257675944`"}], ",", "1.418694778495605`", ",", 
   "0.6548790515692058`", ",", 
   RowBox[{"-", "1.4013122496537411`"}], ",", 
   RowBox[{"-", "1.6088478421411712`"}], ",", "0.19499170912088956`", ",", 
   "1.236132605670635`", ",", "1.3747620447403215`", ",", 
   RowBox[{"-", "0.06690449364032032`"}], ",", 
   RowBox[{"-", "0.4536664105262007`"}], ",", "0.6450423211997557`", ",", 
   RowBox[{"-", "0.33988841237507783`"}], ",", 
   RowBox[{"-", "1.0387852606288501`"}], ",", "1.5480092767667504`", ",", 
   RowBox[{"-", "1.4624055794769961`"}], ",", "0.13869937168905735`", ",", 
   "1.6155971028063372`", ",", 
   RowBox[{"-", "1.140622563112431`"}], ",", 
   RowBox[{"-", "0.16218952411151882`"}], ",", "0.2551690979538241`", ",", 
   RowBox[{"-", "1.367293652670102`"}], ",", 
   RowBox[{"-", "0.16813241137836504`"}], ",", "0.5888579375742392`", ",", 
   RowBox[{"-", "0.9568027710986959`"}], ",", 
   RowBox[{"-", "0.8067579057553816`"}], ",", 
   RowBox[{"-", "0.20087607878099073`"}], ",", "0.18366897176989772`", ",", 
   RowBox[{"-", "1.3156930983749382`"}], ",", "0.7257127413198318`", ",", 
   "1.7034832093842178`", ",", "0.6895025263881095`", ",", 
   RowBox[{"-", "1.2988122655245093`"}], ",", "1.1789441656119686`", ",", 
   "0.6940482484775593`", ",", "0.982121445681047`", ",", 
   "1.2774760575541653`", ",", "1.022864116260202`", ",", 
   RowBox[{"-", "1.462471008914515`"}], ",", 
   RowBox[{"-", "1.4383951833469208`"}], ",", "1.685274032281525`", ",", 
   "1.5519235798216076`", ",", 
   RowBox[{"-", "0.29093064266001684`"}], ",", "1.295947538115972`", ",", 
   "0.8345268130674584`", ",", 
   RowBox[{"-", "1.3508870201723124`"}], ",", 
   RowBox[{"-", "0.8496962483789213`"}], ",", "0.14222411011189492`", ",", 
   RowBox[{"-", "0.6067472490037059`"}], ",", "0.05397599830370807`", ",", 
   RowBox[{"-", "1.3243613564217087`"}], ",", "1.3398515154382997`", ",", 
   "1.6945959345107358`", ",", 
   RowBox[{"-", "0.23639340300317563`"}], ",", "0.28018373561535476`", ",", 
   RowBox[{"-", "1.6382941788988505`"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.52794199505999*^9, 3.527942018249062*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["(#4) Contexts (5 min)", "Subsection",
 CellChangeTimes->{{3.5237818782132*^9, 3.52378188606*^9}, {
  3.5238130623704247`*^9, 3.523813063154503*^9}, {3.5238187035193834`*^9, 
  3.523818707314455*^9}}],

Cell[TextData[{
 "Another way to isolate the scope your your variable names is using ",
 StyleBox[ButtonBox["Contexts",
  BaseStyle->"Link",
  ButtonData->"paclet://tutorial/Contexts"],
  FontWeight->"Bold"],
 ".  Read the tutorial at the preceding link and then explain to your TA the \
output of the following code.  Why is the a red?"
}], "Text",
 CellChangeTimes->{{3.5238130687060585`*^9, 3.5238130890110884`*^9}, {
  3.523814208677044*^9, 3.523814214451621*^9}, {3.523814302983474*^9, 
  3.5238143283280077`*^9}, {3.5238145222724004`*^9, 3.523814527521925*^9}, {
  3.5238188391452894`*^9, 3.5238188696307993`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"a", "=", "11"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Ph230`a", "=", "21"}], 
  ";"}], "\[IndentingNewLine]", "a", "\[IndentingNewLine]", "Ph230`a", "\
\[IndentingNewLine]", 
 RowBox[{"$ContextPath", "=", 
  RowBox[{"Prepend", "[", 
   RowBox[{"$ContextPath", ",", "\"\<Ph230`\>\""}], 
   "]"}]}], "\[IndentingNewLine]", "a", "\[IndentingNewLine]", "Global`a", "\
\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Context", "[", "a", "]"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "this", " ", "is", " ", "read", " ", "because", " ", "it", " ", "is", " ", 
    "found", " ", "in", " ", "more", " ", "than", " ", "one", " ", "context", 
    " ", "and", " ", "is", " ", "therefore", " ", "a", " ", 
    "\"\<shadowed\>\"", " ", "symbol"}], " ", "*)"}]}]}], "Input",
 CellChangeTimes->{{3.523814345770752*^9, 3.523814487729946*^9}, {
  3.527896220766511*^9, 3.527896239294833*^9}, {3.527896381416395*^9, 
  3.527896434804118*^9}}],

Cell[BoxData[
 FormBox["21", TraditionalForm]], "Output",
 CellChangeTimes->{
  3.527896006231861*^9, {3.5278962250699043`*^9, 3.5278962396428137`*^9}}],

Cell[BoxData[
 FormBox["21", TraditionalForm]], "Output",
 CellChangeTimes->{
  3.527896006231861*^9, {3.5278962250699043`*^9, 3.527896239649097*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{"\<\"Ph230`\"\>", ",", "\<\"Ph230`\"\>", ",", "\<\"Ph230`\"\>", 
    ",", "\<\"Ph230`\"\>", ",", "\<\"PacletManager`\"\>", 
    ",", "\<\"WebServices`\"\>", ",", "\<\"System`\"\>", 
    ",", "\<\"Global`\"\>"}], "}"}], TraditionalForm]], "Output",
 CellChangeTimes->{
  3.527896006231861*^9, {3.5278962250699043`*^9, 3.52789623965339*^9}}],

Cell[BoxData[
 FormBox["21", TraditionalForm]], "Output",
 CellChangeTimes->{
  3.527896006231861*^9, {3.5278962250699043`*^9, 3.52789623965728*^9}}],

Cell[BoxData[
 FormBox["11", TraditionalForm]], "Output",
 CellChangeTimes->{
  3.527896006231861*^9, {3.5278962250699043`*^9, 3.527896239661189*^9}}],

Cell[BoxData[
 FormBox["\<\"Ph230`\"\>", TraditionalForm]], "Output",
 CellChangeTimes->{
  3.527896006231861*^9, {3.5278962250699043`*^9, 3.527896239666017*^9}}]
}, Open  ]],

Cell["\<\
Contexts are especially important in conjunction with Packages which will be \
covered in the next section.\
\>", "Text",
 CellChangeTimes->{{3.523814549442117*^9, 3.523814576226795*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["(#5) Packages (15 min)", "Subsection",
 CellChangeTimes->{{3.5237818914732*^9, 3.5237819025179996`*^9}, {
  3.523813065074695*^9, 3.5238130655387416`*^9}, {3.523823536814858*^9, 
  3.523823540861858*^9}}],

Cell[TextData[{
 StyleBox[ButtonBox["Packages",
  BaseStyle->"Link",
  ButtonData->"paclet://tutorial/ContextsAndPackages"],
  FontWeight->"Bold"],
 " work together with Contexts to manage visibility of new symbols and/or \
functions you want to introduce into ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 ".  Read through the tutorial in the preceding link and then read about the \
following commands which are used in packages: ",
 StyleBox[ButtonBox["BeginPackage",
  BaseStyle->"Link",
  ButtonData->"paclet://ref/BeginPackage"],
  FontWeight->"Bold"],
 ", ",
 StyleBox[ButtonBox["EndPackage",
  BaseStyle->"Link",
  ButtonData->"paclet://ref/EndPackage"],
  FontWeight->"Bold"],
 ", ",
 StyleBox[ButtonBox["Begin",
  BaseStyle->"Link",
  ButtonData->"paclet://ref/Begin"],
  FontWeight->"Bold"],
 ", and ",
 StyleBox[ButtonBox["End",
  BaseStyle->"Link",
  ButtonData->"paclet://ref/End"],
  FontWeight->"Bold"],
 ".  The tutorial on ",
 StyleBox[ButtonBox["Setting Up Mathematica Packages",
  BaseStyle->"Link",
  ButtonData->"paclet://tutorial/SettingUpMathematicaPackages"],
  FontWeight->"Bold"],
 " describes how these commands are usually used togther in packages.  Note \
how the contexts and context paths are managed and how the usage statements \
control both the visibility of various functions and an explanation of their \
usage.  Explain the following output to your TA."
}], "Text",
 CellChangeTimes->{{3.523818741743647*^9, 3.5238187461636534`*^9}, {
  3.523818908815572*^9, 3.5238189152355804`*^9}, {3.523818993523615*^9, 
  3.523819026428971*^9}, {3.5238190924177775`*^9, 3.523819158082697*^9}, {
  3.5238195555093966`*^9, 3.5238196641713276`*^9}, {3.5238208584800653`*^9, 
  3.52382086099133*^9}, {3.523820982345865*^9, 3.5238210622618647`*^9}, {
  3.5238211669928646`*^9, 3.523821166995865*^9}, {3.5238222956627316`*^9, 
  3.5238223071618814`*^9}, {3.523822498476862*^9, 3.5238225363788614`*^9}}],

Cell["\<\
First some clean-up in case you\[CloseCurlyQuote]ve executed the following \
cell twice.\
\>", "Text",
 CellChangeTimes->{{3.523821246472865*^9, 3.523821258647865*^9}, {
  3.5238225599618616`*^9, 3.5238225627458615`*^9}}],

Cell[BoxData[{
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Length", "[", 
     RowBox[{"Names", "[", "\"\<Global`test*\>\"", "]"}], "]"}], ">", "0"}], 
   ",", 
   RowBox[{"Remove", "[", "\"\<Global`test*\>\"", "]"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Length", "[", 
     RowBox[{"Names", "[", "\"\<MyPackage`*\>\"", "]"}], "]"}], ">", "0"}], 
   ",", 
   RowBox[{"Remove", "[", "\"\<MyPackage`*\>\"", "]"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Length", "[", 
     RowBox[{"Names", "[", "\"\<MyPackage`Private`*\>\"", "]"}], "]"}], ">", 
    "0"}], ",", 
   RowBox[{"Remove", "[", "\"\<MyPackage`Private`*\>\"", "]"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"First", "[", "$ContextPath", "]"}], "\[Equal]", 
    "\"\<MyPackage`\>\""}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"$ContextPath", " ", "=", 
     RowBox[{"Rest", "[", "$ContextPath", "]"}]}], ";"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.523821464430865*^9, 3.5238215007018647`*^9}, {
  3.523821555946865*^9, 3.523821570840865*^9}, {3.523822034974665*^9, 
  3.52382203982215*^9}, {3.523822082816449*^9, 3.523822194087575*^9}}],

Cell["Here is the cell to explain:", "Text",
 CellChangeTimes->{{3.5238225674008617`*^9, 3.523822575976862*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{"$ContextPath", "\[IndentingNewLine]", "$Context", "\
\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"testName", " ", "=", " ", "3"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Names", "[", "\"\<test*\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{"BeginPackage", "[", "\"\<MyPackage`\>\"", 
  "]"}], "\[IndentingNewLine]", "$ContextPath", "\[IndentingNewLine]", \
"$Context", "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"testName2", " ", "=", " ", "4"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Names", "[", "\"\<MyPackage`*\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`Private`\>\"", 
  "]"}], "\[IndentingNewLine]", "$ContextPath", "\[IndentingNewLine]", \
"$Context", "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"testName3", " ", "=", " ", "5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Names", "[", "\"\<MyPackage`Private`*\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Names", "[", "\"\<*\>\"", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"End", "[", "]"}], "\[IndentingNewLine]", 
 RowBox[{"EndPackage", "[", 
  "]"}], "\[IndentingNewLine]", "$ContextPath", "\[IndentingNewLine]", \
"$Context", "\[IndentingNewLine]", 
 RowBox[{"Names", "[", "\"\<test*\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Names", "[", "\"\<MyPackage`*\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Names", "[", "\"\<MyPackage`Private`*\>\"", "]"}]}], "Input",
 CellChangeTimes->{{3.5238191601027*^9, 3.5238191651827073`*^9}, {
   3.5238196663813305`*^9, 3.523819828296229*^9}, {3.5238198802741365`*^9, 
   3.523819882963168*^9}, {3.523821270538865*^9, 3.523821433364865*^9}, 
   3.523821526975865*^9, {3.523821660599865*^9, 3.523821661158865*^9}, 
   3.5238218083760076`*^9}],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{"\<\"Ph230`\"\>", ",", "\<\"Ph230`\"\>", ",", "\<\"Ph230`\"\>", 
    ",", "\<\"Ph230`\"\>", ",", "\<\"PacletManager`\"\>", 
    ",", "\<\"WebServices`\"\>", ",", "\<\"System`\"\>", 
    ",", "\<\"Global`\"\>"}], "}"}], TraditionalForm]], "Output",
 CellChangeTimes->{3.527897117696916*^9}],

Cell[BoxData[
 FormBox["\<\"Global`\"\>", TraditionalForm]], "Output",
 CellChangeTimes->{3.5278971176991262`*^9}],

Cell[BoxData[
 FormBox[
  RowBox[{"{", "\<\"testName\"\>", "}"}], TraditionalForm]], "Output",
 CellChangeTimes->{3.527897117701378*^9}],

Cell[BoxData[
 FormBox["\<\"MyPackage`\"\>", TraditionalForm]], "Output",
 CellChangeTimes->{3.5278971177036333`*^9}],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{"\<\"MyPackage`\"\>", ",", "\<\"System`\"\>"}], "}"}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{3.5278971177061367`*^9}],

Cell[BoxData[
 FormBox["\<\"MyPackage`\"\>", TraditionalForm]], "Output",
 CellChangeTimes->{3.5278971177080708`*^9}],

Cell[BoxData[
 FormBox[
  RowBox[{"{", "\<\"testName2\"\>", "}"}], TraditionalForm]], "Output",
 CellChangeTimes->{3.527897117710164*^9}],

Cell[BoxData[
 FormBox["\<\"MyPackage`Private`\"\>", TraditionalForm]], "Output",
 CellChangeTimes->{3.5278971177122507`*^9}],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{"\<\"MyPackage`\"\>", ",", "\<\"System`\"\>"}], "}"}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{3.527897117714367*^9}],

Cell[BoxData[
 FormBox["\<\"MyPackage`Private`\"\>", TraditionalForm]], "Output",
 CellChangeTimes->{3.527897117716477*^9}],

Cell[BoxData[
 FormBox[
  RowBox[{"{", "\<\"testName3\"\>", "}"}], TraditionalForm]], "Output",
 CellChangeTimes->{3.527897117718575*^9}],

Cell[BoxData[
 FormBox["\<\"MyPackage`Private`\"\>", TraditionalForm]], "Output",
 CellChangeTimes->{3.5278971177206717`*^9}],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{"\<\"MyPackage`\"\>", ",", "\<\"Ph230`\"\>", ",", "\<\"Ph230`\"\>",
     ",", "\<\"Ph230`\"\>", ",", "\<\"Ph230`\"\>", 
    ",", "\<\"PacletManager`\"\>", ",", "\<\"WebServices`\"\>", 
    ",", "\<\"System`\"\>", ",", "\<\"Global`\"\>"}], "}"}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{3.5278971177224197`*^9}],

Cell[BoxData[
 FormBox["\<\"Global`\"\>", TraditionalForm]], "Output",
 CellChangeTimes->{3.527897117724286*^9}],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{"\<\"testName\"\>", ",", "\<\"testName2\"\>"}], "}"}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{3.527897117726007*^9}],

Cell[BoxData[
 FormBox[
  RowBox[{"{", "\<\"testName2\"\>", "}"}], TraditionalForm]], "Output",
 CellChangeTimes->{3.5278971177277803`*^9}],

Cell[BoxData[
 FormBox[
  RowBox[{"{", "\<\"MyPackage`Private`testName3\"\>", "}"}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{3.527897117729501*^9}]
}, Open  ]],

Cell[TextData[{
 "Usually a package is included in a separate file with an extension \
\[OpenCurlyDoubleQuote].m\[CloseCurlyDoubleQuote].  Create a package using \
the menu ",
 StyleBox["File/New/Package (*.m)",
  FontWeight->"Bold"],
 ".  Name the package and content Dice.  It should have a single public \
function Roll which gives a random number between 2 and 12 with the same \
probability as rolling two dice.  Use the following cell to import the \
package , test the usage statement, and test using the Roll routine.  Explain \
the output and your package to your TA."
}], "Text",
 CellChangeTimes->{{3.523818741743647*^9, 3.5238187461636534`*^9}, {
  3.523818908815572*^9, 3.5238189152355804`*^9}, {3.523818993523615*^9, 
  3.523819026428971*^9}, {3.5238190924177775`*^9, 3.523819158082697*^9}, {
  3.5238223337348614`*^9, 3.5238224279368615`*^9}, {3.5238226537328615`*^9, 
  3.5238227366078615`*^9}, {3.5238230334176617`*^9, 3.5238230705703764`*^9}, {
  3.523823403157858*^9, 3.523823427571858*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"SetDirectory", "[", 
   RowBox[{"NotebookDirectory", "[", "]"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"<<", "Dice`"}], "\[IndentingNewLine]", 
 RowBox[{"?", "Roll"}], "\[IndentingNewLine]", 
 RowBox[{"Table", "[", 
  RowBox[{"Roll", ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "1", ",", "20"}], "}"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Histogram", "[", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{"Roll", ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"10", "^", "4"}]}], "}"}]}], "]"}], ",", "Automatic", ",", 
   "\"\<Probability\>\""}], "]"}]}], "Input",
 CellChangeTimes->{{3.5238229425825787`*^9, 3.523823019530273*^9}, {
  3.523823182578576*^9, 3.5238232004913673`*^9}, {3.5238232389342113`*^9, 
  3.523823316217939*^9}, {3.523823349403257*^9, 3.523823372490858*^9}, {
  3.527897411043716*^9, 3.527897411713223*^9}, {3.527936876259761*^9, 
  3.5279368765497494`*^9}, {3.5279369352174025`*^9, 3.5279369448170185`*^9}, {
  3.527937090921174*^9, 3.5279370924911118`*^9}, {3.527937275743781*^9, 
  3.527937314592227*^9}, {3.5279373853393974`*^9, 3.5279374313275576`*^9}}],

Cell[BoxData[
 StyleBox["\<\"This will simulate two dice being rolled and then computes \
their sum\"\>", "MSG"]], "Print", "PrintUsage",
 CellChangeTimes->{3.527937431877536*^9},
 CellTags->"Info3527915831-7596412"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "4", ",", "6", ",", "7", ",", "7", ",", "3", ",", "7", ",", "5", ",", "4", 
   ",", "7", ",", "10", ",", "6", ",", "12", ",", "5", ",", "7", ",", "10", 
   ",", "9", ",", "10", ",", "7", ",", "5", ",", "7"}], "}"}]], "Output",
 CellChangeTimes->{
  3.527897412318736*^9, 3.527936391509152*^9, {3.5279368613003597`*^9, 
   3.5279368793696365`*^9}, {3.5279369199980116`*^9, 3.527936945306999*^9}, {
   3.5279370637222624`*^9, 3.527937092971092*^9}, 3.5279372351254063`*^9, {
   3.5279372778436975`*^9, 3.527937314972212*^9}, {3.5279373829094944`*^9, 
   3.5279374319075346`*^9}}],

Cell[BoxData[
 GraphicsBox[
  {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
   EdgeForm[Opacity[0.7]], {}, 
   {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
    EdgeForm[Opacity[0.7]], 
    TagBox[
     TooltipBox[
      TagBox[
       DynamicBox[{
         FEPrivate`If[
          CurrentValue["MouseOver"], 
          EdgeForm[{
            GrayLevel[0.5], 
            AbsoluteThickness[1.5], 
            Opacity[0.66]}], {}, {}], 
         RectangleBox[{2., 0.}, {3., 0.027}, "RoundingRadius" -> 0]},
        ImageSizeCache->{{20.500000000000007`, 51.59128014842302}, {
         61.92683116833352, 94.43368479858944}}],
       StatusArea[#, 0.027]& ,
       TagBoxNote->"0.027"],
      StyleBox["0.027`", {
        GrayLevel[0]}, StripOnInput -> False]],
     Annotation[#, 
      Style[0.027, {
        GrayLevel[0]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      TagBox[
       DynamicBox[{
         FEPrivate`If[
          CurrentValue["MouseOver"], 
          EdgeForm[{
            GrayLevel[0.5], 
            AbsoluteThickness[1.5], 
            Opacity[0.66]}], {}, {}], 
         RectangleBox[{3., 0.}, {4., 0.0533}, "RoundingRadius" -> 0]},
        ImageSizeCache->{{50.59128014842302, 81.68256029684602}, {
         31.236821891454603`, 94.43368479858944}}],
       StatusArea[#, 0.0533]& ,
       TagBoxNote->"0.0533"],
      StyleBox["0.0533`", {
        GrayLevel[0]}, StripOnInput -> False]],
     Annotation[#, 
      Style[0.0533, {
        GrayLevel[0]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      TagBox[
       DynamicBox[{
         FEPrivate`If[
          CurrentValue["MouseOver"], 
          EdgeForm[{
            GrayLevel[0.5], 
            AbsoluteThickness[1.5], 
            Opacity[0.66]}], {}, {}], 
         RectangleBox[{4., 0.}, {5., 0.0875}, "RoundingRadius" -> 0]},
        ImageSizeCache->{{80.68256029684602, 
         111.77384044526903`}, {-8.671859373536222, 94.43368479858944}}],
       StatusArea[#, 0.0875]& ,
       TagBoxNote->"0.0875"],
      StyleBox["0.0875`", {
        GrayLevel[0]}, StripOnInput -> False]],
     Annotation[#, 
      Style[0.0875, {
        GrayLevel[0]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      TagBox[
       DynamicBox[{
         FEPrivate`If[
          CurrentValue["MouseOver"], 
          EdgeForm[{
            GrayLevel[0.5], 
            AbsoluteThickness[1.5], 
            Opacity[0.66]}], {}, {}], 
         RectangleBox[{5., 0.}, {6., 0.1102}, "RoundingRadius" -> 0]},
        ImageSizeCache->{{110.77384044526903`, 
         141.86512059369204`}, {-35.1609548330477, 94.43368479858944}}],
       StatusArea[#, 0.1102]& ,
       TagBoxNote->"0.1102"],
      StyleBox["0.1102`", {
        GrayLevel[0]}, StripOnInput -> False]],
     Annotation[#, 
      Style[0.1102, {
        GrayLevel[0]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      TagBox[
       DynamicBox[{
         FEPrivate`If[
          CurrentValue["MouseOver"], 
          EdgeForm[{
            GrayLevel[0.5], 
            AbsoluteThickness[1.5], 
            Opacity[0.66]}], {}, {}], 
         RectangleBox[{6., 0.}, {7., 0.1419}, "RoundingRadius" -> 0]},
        ImageSizeCache->{{140.86512059369204`, 
         171.95640074211505`}, {-72.1523348359778, 94.43368479858944}}],
       StatusArea[#, 0.1419]& ,
       TagBoxNote->"0.1419"],
      StyleBox["0.1419`", {
        GrayLevel[0]}, StripOnInput -> False]],
     Annotation[#, 
      Style[0.1419, {
        GrayLevel[0]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      TagBox[
       DynamicBox[{
         FEPrivate`If[
          CurrentValue["MouseOver"], 
          EdgeForm[{
            GrayLevel[0.5], 
            AbsoluteThickness[1.5], 
            Opacity[0.66]}], {}, {}], 
         RectangleBox[{7., 0.}, {8., 0.1607}, "RoundingRadius" -> 0]},
        ImageSizeCache->{{170.95640074211505`, 
         202.04768089053806`}, {-94.09044032667452, 94.43368479858944}}],
       StatusArea[#, 0.1607]& ,
       TagBoxNote->"0.1607"],
      StyleBox["0.1607`", {
        GrayLevel[0]}, StripOnInput -> False]],
     Annotation[#, 
      Style[0.1607, {
        GrayLevel[0]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      TagBox[
       DynamicBox[{
         FEPrivate`If[
          CurrentValue["MouseOver"], 
          EdgeForm[{
            GrayLevel[0.5], 
            AbsoluteThickness[1.5], 
            Opacity[0.66]}], {}, {}], 
         RectangleBox[{8., 0.}, {9., 0.1387}, "RoundingRadius" -> 0]},
        ImageSizeCache->{{201.04768089053806`, 
         232.1389610389611}, {-68.41818922054006, 94.43368479858944}}],
       StatusArea[#, 0.1387]& ,
       TagBoxNote->"0.1387"],
      StyleBox["0.1387`", {
        GrayLevel[0]}, StripOnInput -> False]],
     Annotation[#, 
      Style[0.1387, {
        GrayLevel[0]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      TagBox[
       DynamicBox[{
         FEPrivate`If[
          CurrentValue["MouseOver"], 
          EdgeForm[{
            GrayLevel[0.5], 
            AbsoluteThickness[1.5], 
            Opacity[0.66]}], {}, {}], 
         RectangleBox[{9., 0.}, {10., 0.1138}, "RoundingRadius" -> 0]},
        ImageSizeCache->{{231.1389610389611, 
         262.2302411873841}, {-39.36186865041515, 94.43368479858944}}],
       StatusArea[#, 0.1138]& ,
       TagBoxNote->"0.1138"],
      StyleBox["0.1138`", {
        GrayLevel[0]}, StripOnInput -> False]],
     Annotation[#, 
      Style[0.1138, {
        GrayLevel[0]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      TagBox[
       DynamicBox[{
         FEPrivate`If[
          CurrentValue["MouseOver"], 
          EdgeForm[{
            GrayLevel[0.5], 
            AbsoluteThickness[1.5], 
            Opacity[0.66]}], {}, {}], 
         RectangleBox[{10., 0.}, {11., 0.0882}, "RoundingRadius" -> 0]},
        ImageSizeCache->{{261.2302411873841, 
         292.32152133580706`}, {-9.488703726913243, 94.43368479858944}}],
       StatusArea[#, 0.0882]& ,
       TagBoxNote->"0.0882"],
      StyleBox["0.0882`", {
        GrayLevel[0]}, StripOnInput -> False]],
     Annotation[#, 
      Style[0.0882, {
        GrayLevel[0]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      TagBox[
       DynamicBox[{
         FEPrivate`If[
          CurrentValue["MouseOver"], 
          EdgeForm[{
            GrayLevel[0.5], 
            AbsoluteThickness[1.5], 
            Opacity[0.66]}], {}, {}], 
         RectangleBox[{11., 0.}, {12., 0.0532}, "RoundingRadius" -> 0]},
        ImageSizeCache->{{291.32152133580706`, 322.4128014842301}, {
         31.35351394193703, 94.43368479858944}}],
       StatusArea[#, 0.0532]& ,
       TagBoxNote->"0.0532"],
      StyleBox["0.0532`", {
        GrayLevel[0]}, StripOnInput -> False]],
     Annotation[#, 
      Style[0.0532, {
        GrayLevel[0]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      TagBox[
       DynamicBox[{
         FEPrivate`If[
          CurrentValue["MouseOver"], 
          EdgeForm[{
            GrayLevel[0.5], 
            AbsoluteThickness[1.5], 
            Opacity[0.66]}], {}, {}], 
         RectangleBox[{12., 0.}, {13., 0.0255}, "RoundingRadius" -> 0]},
        ImageSizeCache->{{321.4128014842301, 352.50408163265314`}, {
         63.677211925569964`, 94.43368479858944}}],
       StatusArea[#, 0.0255]& ,
       TagBoxNote->"0.0255"],
      StyleBox["0.0255`", {
        GrayLevel[0]}, StripOnInput -> False]],
     Annotation[#, 
      Style[0.0255, {
        GrayLevel[0]}], "Tooltip"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesOrigin->{2., 0.},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  PlotRange->{{2., 13.}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.1]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.527897412318736*^9, 3.527936391509152*^9, {3.5279368613003597`*^9, 
   3.5279368793696365`*^9}, {3.5279369199980116`*^9, 3.527936945306999*^9}, {
   3.5279370637222624`*^9, 3.527937092971092*^9}, 3.5279372351254063`*^9, {
   3.5279372778436975`*^9, 3.527937314972212*^9}, {3.5279373829094944`*^9, 
   3.527937432187523*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Programming applications (40 min)", "Section",
 CellChangeTimes->{{3.4342339611426916`*^9, 3.4342339750336723`*^9}, {
   3.4342381250459733`*^9, 3.4342381269053955`*^9}, {3.4344008511492543`*^9, 
   3.4344008706185026`*^9}, 3.4348237225157433`*^9, {3.4348251085892305`*^9, 
   3.4348251117924175`*^9}, 3.43489870634809*^9, 3.4348988701701517`*^9, 
   3.434902171202559*^9, {3.434910326843019*^9, 3.434910327168988*^9}, {
   3.434913467334558*^9, 3.434913487767644*^9}, {3.4349216871695747`*^9, 
   3.434921687494945*^9}, {3.435351396073633*^9, 3.4353514014174857`*^9}, {
   3.4472388842562723`*^9, 3.447238884908947*^9}, {3.5238321602268*^9, 
   3.5238321602892*^9}}],

Cell[CellGroupData[{

Cell["(#5) Matrix diagonalization (10 min)", "Subsection",
 CellChangeTimes->{{3.4347275557282877`*^9, 3.4347275599829903`*^9}, {
   3.4348156726500425`*^9, 3.4348156772282553`*^9}, {3.4348161615031776`*^9, 
   3.4348162313795195`*^9}, {3.4348236964839935`*^9, 3.4348236966714973`*^9}, 
   3.4349021600330353`*^9, {3.4349027513862553`*^9, 3.4349027568500633`*^9}, {
   3.4349103006985188`*^9, 3.434910340321322*^9}, {3.4349105977557364`*^9, 
   3.434910601193058*^9}, {3.434913469590666*^9, 3.4349134697584763`*^9}}],

Cell["\<\
In Lab 10 (linear algebra) you will learn how to diagonalize a matrix.  (If \
you haven\[CloseCurlyQuote]t had linear algebra yet, don\[CloseCurlyQuote]t \
worry too much about what this means.  You\[CloseCurlyQuote]ll learn more in \
lab 10.  To diagonalize a square matrix, you first use the Eigenvectors \
function to obtain the eigenvectors of the matrix.  Then you use the \
Transpose function to switch the rows and columns.    Next you take the \
transpose of the matrix of eigenvectors.   You then multiply the original \
matrix on the left by the inverse of this matrix and on the right by the \
original matrix of transposed eigenvectors.  The result is a matrix with the \
eigenvalues of the original matrix along the diagonal and \
0\[CloseCurlyQuote]s everywhere else.  We will illustrate how this is done \
with the an example matrix a.  Here is an example of how you could do this \
set of steps on the matrix {{1/2,-1,2},{2,1,3},{1,1,1}}.\
\>", "Text",
 CellChangeTimes->{{3.434816240832826*^9, 3.434816243786008*^9}, 
   3.4348166595596156`*^9, {3.434816739123643*^9, 3.4348167642803764`*^9}, {
   3.4348169051893315`*^9, 3.4348172179765873`*^9}, {3.4348173486353455`*^9, 
   3.4348174623250284`*^9}, {3.434902429217875*^9, 3.434902447905527*^9}, {
   3.434902489667594*^9, 3.434902683320509*^9}, {3.434902715541585*^9, 
   3.434902743034381*^9}, {3.4353507429673433`*^9, 3.435350774280445*^9}, {
   3.523823652726858*^9, 3.523823655174858*^9}, {3.527879359264186*^9, 
   3.5278794782730856`*^9}, {3.5278795119544535`*^9, 
   3.5278796449677534`*^9}, {3.5278799893831916`*^9, 3.5278800177680297`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"hisa", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"1", "/", "2"}], ",", 
      RowBox[{"-", "1"}], ",", "2"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"2", ",", "1", ",", "3"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1", ",", "1"}], "}"}]}], 
   "}"}]}], "\[IndentingNewLine]", 
 RowBox[{"b", "=", 
  RowBox[{"Eigenvectors", "[", "hisa", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"c", "=", 
  RowBox[{"Transpose", "[", "b", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"d", "=", 
  RowBox[{
   RowBox[{"Inverse", "[", "c", "]"}], ".", "a", ".", 
   "c"}]}], "\[IndentingNewLine]", 
 RowBox[{"e", "=", 
  RowBox[{"Simplify", "[", "d", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"e", "//", "MatrixForm"}]}], "Input",
 CellChangeTimes->{{3.527879649471204*^9, 3.527879893945649*^9}, {
  3.5278981144986973`*^9, 3.527898116887958*^9}, {3.5278983415774403`*^9, 
  3.5278983493851967`*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      FractionBox["1", "2"], 
      RowBox[{"-", "1"}], "2"},
     {"2", "1", "3"},
     {"1", "1", "1"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{
  3.527898093152545*^9, {3.527898342407888*^9, 3.527898350054295*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       RowBox[{"-", 
        FractionBox["8", "5"]}], "+", 
       RowBox[{
        FractionBox["3", "20"], " ", 
        RowBox[{"(", 
         RowBox[{"5", "+", 
          SqrtBox["41"]}], ")"}]}]}], 
      RowBox[{
       FractionBox["3", "5"], "+", 
       RowBox[{
        FractionBox["1", "10"], " ", 
        RowBox[{"(", 
         RowBox[{"5", "+", 
          SqrtBox["41"]}], ")"}]}]}], "1"},
     {
      RowBox[{
       RowBox[{"-", 
        FractionBox["8", "5"]}], "+", 
       RowBox[{
        FractionBox["3", "20"], " ", 
        RowBox[{"(", 
         RowBox[{"5", "-", 
          SqrtBox["41"]}], ")"}]}]}], 
      RowBox[{
       FractionBox["3", "5"], "+", 
       RowBox[{
        FractionBox["1", "10"], " ", 
        RowBox[{"(", 
         RowBox[{"5", "-", 
          SqrtBox["41"]}], ")"}]}]}], "1"},
     {
      RowBox[{"-", "2"}], "1", "1"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{
  3.527898093152545*^9, {3.527898342407888*^9, 3.527898350058236*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       RowBox[{"-", 
        FractionBox["8", "5"]}], "+", 
       RowBox[{
        FractionBox["3", "20"], " ", 
        RowBox[{"(", 
         RowBox[{"5", "+", 
          SqrtBox["41"]}], ")"}]}]}], 
      RowBox[{
       RowBox[{"-", 
        FractionBox["8", "5"]}], "+", 
       RowBox[{
        FractionBox["3", "20"], " ", 
        RowBox[{"(", 
         RowBox[{"5", "-", 
          SqrtBox["41"]}], ")"}]}]}], 
      RowBox[{"-", "2"}]},
     {
      RowBox[{
       FractionBox["3", "5"], "+", 
       RowBox[{
        FractionBox["1", "10"], " ", 
        RowBox[{"(", 
         RowBox[{"5", "+", 
          SqrtBox["41"]}], ")"}]}]}], 
      RowBox[{
       FractionBox["3", "5"], "+", 
       RowBox[{
        FractionBox["1", "10"], " ", 
        RowBox[{"(", 
         RowBox[{"5", "-", 
          SqrtBox["41"]}], ")"}]}]}], "1"},
     {"1", "1", "1"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{
  3.527898093152545*^9, {3.527898342407888*^9, 3.5278983500611973`*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       RowBox[{"-", 
        FractionBox[
         RowBox[{"5", " ", 
          RowBox[{"(", 
           RowBox[{
            FractionBox["27", "20"], "-", 
            FractionBox[
             RowBox[{"7", " ", 
              SqrtBox["41"]}], "20"]}], ")"}]}], 
         SqrtBox["41"]]}], "-", 
       FractionBox[
        RowBox[{"15", " ", 
         RowBox[{"(", 
          RowBox[{
           FractionBox["1", "10"], "-", 
           FractionBox[
            SqrtBox["41"], "10"]}], ")"}]}], 
        SqrtBox["41"]], "-", 
       FractionBox[
        RowBox[{"10", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            FractionBox["23", "20"]}], "+", 
           FractionBox[
            RowBox[{"3", " ", 
             SqrtBox["41"]}], "20"]}], ")"}]}], 
        SqrtBox["41"]], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           FractionBox[
            RowBox[{"10", " ", 
             RowBox[{"(", 
              RowBox[{
               FractionBox["27", "20"], "-", 
               FractionBox[
                RowBox[{"7", " ", 
                 SqrtBox["41"]}], "20"]}], ")"}]}], 
            SqrtBox["41"]]}], "-", 
          FractionBox[
           RowBox[{"10", " ", 
            RowBox[{"(", 
             RowBox[{
              FractionBox["1", "10"], "-", 
              FractionBox[
               SqrtBox["41"], "10"]}], ")"}]}], 
           SqrtBox["41"]], "-", 
          FractionBox[
           RowBox[{"5", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               FractionBox["23", "20"]}], "+", 
              FractionBox[
               RowBox[{"3", " ", 
                SqrtBox["41"]}], "20"]}], ")"}]}], 
           SqrtBox["41"]]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          FractionBox["3", "5"], "+", 
          RowBox[{
           FractionBox["1", "10"], " ", 
           RowBox[{"(", 
            RowBox[{"5", "+", 
             SqrtBox["41"]}], ")"}]}]}], ")"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           FractionBox[
            RowBox[{"15", " ", 
             RowBox[{"(", 
              RowBox[{
               FractionBox["27", "20"], "-", 
               FractionBox[
                RowBox[{"7", " ", 
                 SqrtBox["41"]}], "20"]}], ")"}]}], 
            SqrtBox["41"]]}], "-", 
          FractionBox[
           RowBox[{"5", " ", 
            RowBox[{"(", 
             RowBox[{
              FractionBox["1", "10"], "-", 
              FractionBox[
               SqrtBox["41"], "10"]}], ")"}]}], 
           SqrtBox["41"]], "-", 
          FractionBox[
           RowBox[{"10", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               FractionBox["23", "20"]}], "+", 
              FractionBox[
               RowBox[{"3", " ", 
                SqrtBox["41"]}], "20"]}], ")"}]}], 
           SqrtBox["41"]]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           FractionBox["8", "5"]}], "+", 
          RowBox[{
           FractionBox["3", "20"], " ", 
           RowBox[{"(", 
            RowBox[{"5", "+", 
             SqrtBox["41"]}], ")"}]}]}], ")"}]}]}], 
      RowBox[{
       RowBox[{"-", 
        FractionBox[
         RowBox[{"5", " ", 
          RowBox[{"(", 
           RowBox[{
            FractionBox["27", "20"], "-", 
            FractionBox[
             RowBox[{"7", " ", 
              SqrtBox["41"]}], "20"]}], ")"}]}], 
         SqrtBox["41"]]}], "-", 
       FractionBox[
        RowBox[{"15", " ", 
         RowBox[{"(", 
          RowBox[{
           FractionBox["1", "10"], "-", 
           FractionBox[
            SqrtBox["41"], "10"]}], ")"}]}], 
        SqrtBox["41"]], "-", 
       FractionBox[
        RowBox[{"10", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            FractionBox["23", "20"]}], "+", 
           FractionBox[
            RowBox[{"3", " ", 
             SqrtBox["41"]}], "20"]}], ")"}]}], 
        SqrtBox["41"]], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           FractionBox["8", "5"]}], "+", 
          RowBox[{
           FractionBox["3", "20"], " ", 
           RowBox[{"(", 
            RowBox[{"5", "-", 
             SqrtBox["41"]}], ")"}]}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           FractionBox[
            RowBox[{"15", " ", 
             RowBox[{"(", 
              RowBox[{
               FractionBox["27", "20"], "-", 
               FractionBox[
                RowBox[{"7", " ", 
                 SqrtBox["41"]}], "20"]}], ")"}]}], 
            SqrtBox["41"]]}], "-", 
          FractionBox[
           RowBox[{"5", " ", 
            RowBox[{"(", 
             RowBox[{
              FractionBox["1", "10"], "-", 
              FractionBox[
               SqrtBox["41"], "10"]}], ")"}]}], 
           SqrtBox["41"]], "-", 
          FractionBox[
           RowBox[{"10", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               FractionBox["23", "20"]}], "+", 
              FractionBox[
               RowBox[{"3", " ", 
                SqrtBox["41"]}], "20"]}], ")"}]}], 
           SqrtBox["41"]]}], ")"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          FractionBox["3", "5"], "+", 
          RowBox[{
           FractionBox["1", "10"], " ", 
           RowBox[{"(", 
            RowBox[{"5", "-", 
             SqrtBox["41"]}], ")"}]}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           FractionBox[
            RowBox[{"10", " ", 
             RowBox[{"(", 
              RowBox[{
               FractionBox["27", "20"], "-", 
               FractionBox[
                RowBox[{"7", " ", 
                 SqrtBox["41"]}], "20"]}], ")"}]}], 
            SqrtBox["41"]]}], "-", 
          FractionBox[
           RowBox[{"10", " ", 
            RowBox[{"(", 
             RowBox[{
              FractionBox["1", "10"], "-", 
              FractionBox[
               SqrtBox["41"], "10"]}], ")"}]}], 
           SqrtBox["41"]], "-", 
          FractionBox[
           RowBox[{"5", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               FractionBox["23", "20"]}], "+", 
              FractionBox[
               RowBox[{"3", " ", 
                SqrtBox["41"]}], "20"]}], ")"}]}], 
           SqrtBox["41"]]}], ")"}]}]}], 
      RowBox[{
       RowBox[{"-", 
        FractionBox[
         RowBox[{"15", " ", 
          RowBox[{"(", 
           RowBox[{
            FractionBox["27", "20"], "-", 
            FractionBox[
             RowBox[{"7", " ", 
              SqrtBox["41"]}], "20"]}], ")"}]}], 
         SqrtBox["41"]]}], "-", 
       FractionBox[
        RowBox[{"25", " ", 
         RowBox[{"(", 
          RowBox[{
           FractionBox["1", "10"], "-", 
           FractionBox[
            SqrtBox["41"], "10"]}], ")"}]}], 
        SqrtBox["41"]], "-", 
       FractionBox[
        RowBox[{"15", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            FractionBox["23", "20"]}], "+", 
           FractionBox[
            RowBox[{"3", " ", 
             SqrtBox["41"]}], "20"]}], ")"}]}], 
        SqrtBox["41"]], "-", 
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           FractionBox[
            RowBox[{"15", " ", 
             RowBox[{"(", 
              RowBox[{
               FractionBox["27", "20"], "-", 
               FractionBox[
                RowBox[{"7", " ", 
                 SqrtBox["41"]}], "20"]}], ")"}]}], 
            SqrtBox["41"]]}], "-", 
          FractionBox[
           RowBox[{"5", " ", 
            RowBox[{"(", 
             RowBox[{
              FractionBox["1", "10"], "-", 
              FractionBox[
               SqrtBox["41"], "10"]}], ")"}]}], 
           SqrtBox["41"]], "-", 
          FractionBox[
           RowBox[{"10", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               FractionBox["23", "20"]}], "+", 
              FractionBox[
               RowBox[{"3", " ", 
                SqrtBox["41"]}], "20"]}], ")"}]}], 
           SqrtBox["41"]]}], ")"}]}]}]},
     {
      RowBox[{
       RowBox[{"-", 
        FractionBox[
         RowBox[{"5", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             FractionBox["27", "20"]}], "-", 
            FractionBox[
             RowBox[{"7", " ", 
              SqrtBox["41"]}], "20"]}], ")"}]}], 
         SqrtBox["41"]]}], "-", 
       FractionBox[
        RowBox[{"15", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            FractionBox["1", "10"]}], "-", 
           FractionBox[
            SqrtBox["41"], "10"]}], ")"}]}], 
        SqrtBox["41"]], "-", 
       FractionBox[
        RowBox[{"10", " ", 
         RowBox[{"(", 
          RowBox[{
           FractionBox["23", "20"], "+", 
           FractionBox[
            RowBox[{"3", " ", 
             SqrtBox["41"]}], "20"]}], ")"}]}], 
        SqrtBox["41"]], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           FractionBox[
            RowBox[{"10", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                FractionBox["27", "20"]}], "-", 
               FractionBox[
                RowBox[{"7", " ", 
                 SqrtBox["41"]}], "20"]}], ")"}]}], 
            SqrtBox["41"]]}], "-", 
          FractionBox[
           RowBox[{"10", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               FractionBox["1", "10"]}], "-", 
              FractionBox[
               SqrtBox["41"], "10"]}], ")"}]}], 
           SqrtBox["41"]], "-", 
          FractionBox[
           RowBox[{"5", " ", 
            RowBox[{"(", 
             RowBox[{
              FractionBox["23", "20"], "+", 
              FractionBox[
               RowBox[{"3", " ", 
                SqrtBox["41"]}], "20"]}], ")"}]}], 
           SqrtBox["41"]]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          FractionBox["3", "5"], "+", 
          RowBox[{
           FractionBox["1", "10"], " ", 
           RowBox[{"(", 
            RowBox[{"5", "+", 
             SqrtBox["41"]}], ")"}]}]}], ")"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           FractionBox[
            RowBox[{"15", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                FractionBox["27", "20"]}], "-", 
               FractionBox[
                RowBox[{"7", " ", 
                 SqrtBox["41"]}], "20"]}], ")"}]}], 
            SqrtBox["41"]]}], "-", 
          FractionBox[
           RowBox[{"5", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               FractionBox["1", "10"]}], "-", 
              FractionBox[
               SqrtBox["41"], "10"]}], ")"}]}], 
           SqrtBox["41"]], "-", 
          FractionBox[
           RowBox[{"10", " ", 
            RowBox[{"(", 
             RowBox[{
              FractionBox["23", "20"], "+", 
              FractionBox[
               RowBox[{"3", " ", 
                SqrtBox["41"]}], "20"]}], ")"}]}], 
           SqrtBox["41"]]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           FractionBox["8", "5"]}], "+", 
          RowBox[{
           FractionBox["3", "20"], " ", 
           RowBox[{"(", 
            RowBox[{"5", "+", 
             SqrtBox["41"]}], ")"}]}]}], ")"}]}]}], 
      RowBox[{
       RowBox[{"-", 
        FractionBox[
         RowBox[{"5", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             FractionBox["27", "20"]}], "-", 
            FractionBox[
             RowBox[{"7", " ", 
              SqrtBox["41"]}], "20"]}], ")"}]}], 
         SqrtBox["41"]]}], "-", 
       FractionBox[
        RowBox[{"15", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            FractionBox["1", "10"]}], "-", 
           FractionBox[
            SqrtBox["41"], "10"]}], ")"}]}], 
        SqrtBox["41"]], "-", 
       FractionBox[
        RowBox[{"10", " ", 
         RowBox[{"(", 
          RowBox[{
           FractionBox["23", "20"], "+", 
           FractionBox[
            RowBox[{"3", " ", 
             SqrtBox["41"]}], "20"]}], ")"}]}], 
        SqrtBox["41"]], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           FractionBox["8", "5"]}], "+", 
          RowBox[{
           FractionBox["3", "20"], " ", 
           RowBox[{"(", 
            RowBox[{"5", "-", 
             SqrtBox["41"]}], ")"}]}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           FractionBox[
            RowBox[{"15", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                FractionBox["27", "20"]}], "-", 
               FractionBox[
                RowBox[{"7", " ", 
                 SqrtBox["41"]}], "20"]}], ")"}]}], 
            SqrtBox["41"]]}], "-", 
          FractionBox[
           RowBox[{"5", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               FractionBox["1", "10"]}], "-", 
              FractionBox[
               SqrtBox["41"], "10"]}], ")"}]}], 
           SqrtBox["41"]], "-", 
          FractionBox[
           RowBox[{"10", " ", 
            RowBox[{"(", 
             RowBox[{
              FractionBox["23", "20"], "+", 
              FractionBox[
               RowBox[{"3", " ", 
                SqrtBox["41"]}], "20"]}], ")"}]}], 
           SqrtBox["41"]]}], ")"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          FractionBox["3", "5"], "+", 
          RowBox[{
           FractionBox["1", "10"], " ", 
           RowBox[{"(", 
            RowBox[{"5", "-", 
             SqrtBox["41"]}], ")"}]}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           FractionBox[
            RowBox[{"10", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                FractionBox["27", "20"]}], "-", 
               FractionBox[
                RowBox[{"7", " ", 
                 SqrtBox["41"]}], "20"]}], ")"}]}], 
            SqrtBox["41"]]}], "-", 
          FractionBox[
           RowBox[{"10", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               FractionBox["1", "10"]}], "-", 
              FractionBox[
               SqrtBox["41"], "10"]}], ")"}]}], 
           SqrtBox["41"]], "-", 
          FractionBox[
           RowBox[{"5", " ", 
            RowBox[{"(", 
             RowBox[{
              FractionBox["23", "20"], "+", 
              FractionBox[
               RowBox[{"3", " ", 
                SqrtBox["41"]}], "20"]}], ")"}]}], 
           SqrtBox["41"]]}], ")"}]}]}], 
      RowBox[{
       RowBox[{"-", 
        FractionBox[
         RowBox[{"15", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             FractionBox["27", "20"]}], "-", 
            FractionBox[
             RowBox[{"7", " ", 
              SqrtBox["41"]}], "20"]}], ")"}]}], 
         SqrtBox["41"]]}], "-", 
       FractionBox[
        RowBox[{"25", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            FractionBox["1", "10"]}], "-", 
           FractionBox[
            SqrtBox["41"], "10"]}], ")"}]}], 
        SqrtBox["41"]], "-", 
       FractionBox[
        RowBox[{"15", " ", 
         RowBox[{"(", 
          RowBox[{
           FractionBox["23", "20"], "+", 
           FractionBox[
            RowBox[{"3", " ", 
             SqrtBox["41"]}], "20"]}], ")"}]}], 
        SqrtBox["41"]], "-", 
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           FractionBox[
            RowBox[{"15", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                FractionBox["27", "20"]}], "-", 
               FractionBox[
                RowBox[{"7", " ", 
                 SqrtBox["41"]}], "20"]}], ")"}]}], 
            SqrtBox["41"]]}], "-", 
          FractionBox[
           RowBox[{"5", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               FractionBox["1", "10"]}], "-", 
              FractionBox[
               SqrtBox["41"], "10"]}], ")"}]}], 
           SqrtBox["41"]], "-", 
          FractionBox[
           RowBox[{"10", " ", 
            RowBox[{"(", 
             RowBox[{
              FractionBox["23", "20"], "+", 
              FractionBox[
               RowBox[{"3", " ", 
                SqrtBox["41"]}], "20"]}], ")"}]}], 
           SqrtBox["41"]]}], ")"}]}]}]},
     {
      RowBox[{
       RowBox[{"-", 
        FractionBox["5", "2"]}], "-", 
       RowBox[{
        FractionBox["11", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          FractionBox["3", "5"], "+", 
          RowBox[{
           FractionBox["1", "10"], " ", 
           RowBox[{"(", 
            RowBox[{"5", "+", 
             SqrtBox["41"]}], ")"}]}]}], ")"}]}], "-", 
       RowBox[{
        FractionBox["11", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           FractionBox["8", "5"]}], "+", 
          RowBox[{
           FractionBox["3", "20"], " ", 
           RowBox[{"(", 
            RowBox[{"5", "+", 
             SqrtBox["41"]}], ")"}]}]}], ")"}]}]}], 
      RowBox[{
       RowBox[{"-", 
        FractionBox["5", "2"]}], "-", 
       RowBox[{
        FractionBox["11", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          FractionBox["3", "5"], "+", 
          RowBox[{
           FractionBox["1", "10"], " ", 
           RowBox[{"(", 
            RowBox[{"5", "-", 
             SqrtBox["41"]}], ")"}]}]}], ")"}]}], "-", 
       RowBox[{
        FractionBox["11", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           FractionBox["8", "5"]}], "+", 
          RowBox[{
           FractionBox["3", "20"], " ", 
           RowBox[{"(", 
            RowBox[{"5", "-", 
             SqrtBox["41"]}], ")"}]}]}], ")"}]}]}], "3"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{
  3.527898093152545*^9, {3.527898342407888*^9, 3.527898350111824*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      FractionBox["43", 
       SqrtBox["41"]], 
      RowBox[{
       FractionBox["181", "40"], "-", 
       FractionBox["1601", 
        RowBox[{"40", " ", 
         SqrtBox["41"]}]]}], 
      RowBox[{
       RowBox[{"-", "3"}], "+", 
       FractionBox["13", 
        SqrtBox["41"]]}]},
     {
      RowBox[{
       FractionBox["181", "40"], "+", 
       FractionBox["1601", 
        RowBox[{"40", " ", 
         SqrtBox["41"]}]]}], 
      RowBox[{"-", 
       FractionBox["43", 
        SqrtBox["41"]]}], 
      RowBox[{
       RowBox[{"-", "3"}], "-", 
       FractionBox["13", 
        SqrtBox["41"]]}]},
     {
      RowBox[{
       FractionBox["1", "8"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "31"}], "-", 
         RowBox[{"11", " ", 
          SqrtBox["41"]}]}], ")"}]}], 
      RowBox[{
       FractionBox["1", "8"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "31"}], "+", 
         RowBox[{"11", " ", 
          SqrtBox["41"]}]}], ")"}]}], "3"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{
  3.527898093152545*^9, {3.527898342407888*^9, 3.527898350165215*^9}}],

Cell[BoxData[
 FormBox[
  TagBox[
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {
       FractionBox["43", 
        SqrtBox["41"]], 
       RowBox[{
        FractionBox["181", "40"], "-", 
        FractionBox["1601", 
         RowBox[{"40", " ", 
          SqrtBox["41"]}]]}], 
       RowBox[{
        FractionBox["13", 
         SqrtBox["41"]], "-", "3"}]},
      {
       RowBox[{
        FractionBox["181", "40"], "+", 
        FractionBox["1601", 
         RowBox[{"40", " ", 
          SqrtBox["41"]}]]}], 
       RowBox[{"-", 
        FractionBox["43", 
         SqrtBox["41"]]}], 
       RowBox[{
        RowBox[{"-", "3"}], "-", 
        FractionBox["13", 
         SqrtBox["41"]]}]},
      {
       RowBox[{
        FractionBox["1", "8"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "31"}], "-", 
          RowBox[{"11", " ", 
           SqrtBox["41"]}]}], ")"}]}], 
       RowBox[{
        FractionBox["1", "8"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"11", " ", 
           SqrtBox["41"]}], "-", "31"}], ")"}]}], "3"}
     },
     GridBoxAlignment->{
      "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
        "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.7]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]], TraditionalForm]], "Output",
 CellChangeTimes->{
  3.527898093152545*^9, {3.527898342407888*^9, 3.52789835020199*^9}}]
}, Open  ]],

Cell[TextData[{
 "\nYou already know that a function can input and output general \
expressions, not just numbers.  Use ",
 StyleBox["Module",
  FontWeight->"Bold"],
 " to define a function ",
 StyleBox["diagonalize[matrix_]",
  FontWeight->"Bold"],
 ", which takes a square numerical ",
 StyleBox["matrix",
  FontSlant->"Italic"],
 " as input and returns its diagonal form as output.  After you ",
 StyleBox["Simplify",
  FontWeight->"Bold"],
 " the diagonalized matrix, the module should return its ",
 StyleBox["MatrixForm",
  FontWeight->"Bold"],
 ".  Test your function on the matrix ",
 StyleBox["{{1, 2, 3}, {2, 1, 2}, {3, 2, 1}}",
  FontWeight->"Bold"],
 StyleBox[".",
  FontSlant->"Italic"]
}], "Text",
 CellChangeTimes->{{3.434816240832826*^9, 3.434816243786008*^9}, 
   3.4348166595596156`*^9, {3.434816739123643*^9, 3.4348167642803764`*^9}, {
   3.4348169051893315`*^9, 3.4348172179765873`*^9}, {3.4348173486353455`*^9, 
   3.4348174623250284`*^9}, {3.434902429217875*^9, 3.434902447905527*^9}, {
   3.434902489667594*^9, 3.434902683320509*^9}, {3.434902715541585*^9, 
   3.434902743034381*^9}, {3.4353507429673433`*^9, 3.435350774280445*^9}, {
   3.523823652726858*^9, 3.523823655174858*^9}, {3.527879359264186*^9, 
   3.5278794782730856`*^9}, {3.5278795119544535`*^9, 3.5278796474690037`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"a", " ", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "1", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "2", ",", "1"}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"diagonalize", "[", "Matrix_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"b", ",", "c", ",", "d", ",", "e"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"b", " ", "=", " ", 
      RowBox[{"Eigenvectors", "[", "Matrix", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"c", " ", "=", " ", 
      RowBox[{"Transpose", "[", "b", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"d", " ", "=", " ", 
      RowBox[{
       RowBox[{"Inverse", "[", "c", "]"}], ".", "a", ".", "c"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"e", " ", "=", " ", 
      RowBox[{"Simplify", "[", "d", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"e", "//", "MatrixForm"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.434816244973531*^9, 3.434816245254786*^9}, 
   3.4348170667549334`*^9, {3.43481721164834*^9, 3.4348173338381863`*^9}, {
   3.434817472512724*^9, 3.434817483981694*^9}, {3.4349024768129263`*^9, 
   3.43490247923673*^9}, 3.434921014661096*^9, {3.446320378390838*^9, 
   3.446320380109588*^9}, {3.527879186074869*^9, 3.5278792657538357`*^9}, {
   3.52787996986624*^9, 3.5278799705213056`*^9}, {3.5278982177162113`*^9, 
   3.527898363071678*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"diagonalize", "[", "a", "]"}]], "Input",
 CellChangeTimes->{{3.5278983246239843`*^9, 3.52789838621389*^9}}],

Cell[BoxData[
 FormBox[
  TagBox[
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {
       RowBox[{
        FractionBox["1", "2"], " ", 
        RowBox[{"(", 
         RowBox[{"5", "+", 
          SqrtBox["41"]}], ")"}]}], "0", "0"},
      {"0", 
       RowBox[{"-", "2"}], "0"},
      {"0", "0", 
       RowBox[{
        FractionBox["1", "2"], " ", 
        RowBox[{"(", 
         RowBox[{"5", "-", 
          SqrtBox["41"]}], ")"}]}]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
        "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.7]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]], TraditionalForm]], "Output",
 CellChangeTimes->{{3.527898330499324*^9, 3.5278983867641077`*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["(#6) Polynomial roots (10 min)", "Subsection",
 CellChangeTimes->{{3.4348144889241905`*^9, 3.43481450584639*^9}, {
   3.4348155203658686`*^9, 3.4348155210377564`*^9}, {3.434815594351664*^9, 
   3.4348156321805153`*^9}, {3.4348161809410515`*^9, 
   3.4348162270825624`*^9}, {3.4348236958589816`*^9, 3.434823696062111*^9}, {
   3.43490215252242*^9, 3.43490217477708*^9}, {3.434902220202476*^9, 
   3.4349022203385477`*^9}, {3.4349134706944323`*^9, 3.434913470878428*^9}, 
   3.434921057932007*^9, {3.5238321227712*^9, 3.5238321238164*^9}}],

Cell[TextData[{
 "(a) ",
 StyleBox["Plot",
  FontWeight->"Bold"],
 " ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["x", "3"], "-", 
    RowBox[{"3", "x"}], " ", "+", " ", "r"}], TraditionalForm]]],
 " over the range {",
 StyleBox["x",
  FontSlant->"Italic"],
 ", -3, 3} with ",
 StyleBox["PlotRange\[Rule]{-10,10}",
  FontWeight->"Bold"],
 " as an option, and ",
 StyleBox["Manipulate",
  FontWeight->"Bold"],
 " the plot as ",
 StyleBox["r",
  FontSlant->"Italic"],
 " varies over the range {",
 StyleBox["r",
  FontSlant->"Italic"],
 ", -5, 5}.  Observe that the number of roots (i.e. points where ",
 StyleBox["y",
  FontSlant->"Italic"],
 "(",
 StyleBox["x",
  FontSlant->"Italic"],
 ") = 0) depends on ",
 StyleBox["r.",
  FontSlant->"Italic"]
}], "Text",
 CellChangeTimes->{{3.434727576018553*^9, 3.434727707140547*^9}, 
   3.434727744527809*^9, {3.4347406923943634`*^9, 3.4347407150199423`*^9}, {
   3.4348132492441387`*^9, 3.4348134135910444`*^9}, {3.4348134538105664`*^9, 
   3.4348134554355974`*^9}, {3.4348135092178802`*^9, 
   3.4348136483143005`*^9}, {3.4348137234407434`*^9, 
   3.4348137243938866`*^9}, {3.43481393342915*^9, 3.43481393342915*^9}, {
   3.434814049962637*^9, 3.4348140749787426`*^9}, {3.4348141384955873`*^9, 
   3.434814326577323*^9}, {3.4348145078464284`*^9, 3.434814509815216*^9}, {
   3.5278984103636312`*^9, 3.527898413570183*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{
      SuperscriptBox["x", "3"], "-", 
      RowBox[{"3", "x"}], "+", "r"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "3"}], ",", "3"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "10"}], ",", "10"}], "}"}]}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"r", ",", 
     RowBox[{"-", "5"}], ",", "5"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.4348140762756424`*^9, 3.4348141460738573`*^9}, 
   3.434921043099597*^9, {3.527898414596902*^9, 3.527898457756763*^9}}],

Cell[BoxData[
 FormBox[
  TagBox[
   FormBox[
    StyleBox[
     DynamicModuleBox[{$CellContext`r$$ = -0.08000000000000007, 
      Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
      Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ =
       1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{
        Hold[$CellContext`r$$], -5, 5}}, Typeset`size$$ = {
      360., {115., 120.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
      Typeset`skipInitDone$$ = True, $CellContext`r$9354$$ = 0}, 
      DynamicBox[Manipulate`ManipulateBoxes[
       1, TraditionalForm, "Variables" :> {$CellContext`r$$ = -5}, 
        "ControllerVariables" :> {
          Hold[$CellContext`r$$, $CellContext`r$9354$$, 0]}, 
        "OtherVariables" :> {
         Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
          Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
          Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
          Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
        Plot[$CellContext`x^3 - 
          3 $CellContext`x + $CellContext`r$$, {$CellContext`x, -3, 3}, 
          PlotRange -> {-10, 10}], 
        "Specifications" :> {{$CellContext`r$$, -5, 5}}, "Options" :> {}, 
        "DefaultOptions" :> {}],
       ImageSizeCache->{409., {173., 180.}},
       SingleEvaluation->True],
      Deinitialization:>None,
      DynamicModuleValues:>{},
      SynchronousInitialization->True,
      UnsavedVariables:>{Typeset`initDone$$},
      UntrackedVariables:>{Typeset`size$$}], "Manipulate",
     Deployed->True,
     StripOnInput->False],
    TraditionalForm],
   Manipulate`InterpretManipulate[1]], TraditionalForm]], "Output",
 CellChangeTimes->{3.5278984584741373`*^9}]
}, Open  ]],

Cell[TextData[{
 "\n(b) Use ",
 StyleBox["Module",
  FontWeight->"Bold"],
 " to create an argumentative function ",
 StyleBox["f[r_]",
  FontWeight->"Bold"],
 " that takes a real number ",
 StyleBox["r",
  FontSlant->"Italic"],
 " as input, solves the equation ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SuperscriptBox["x", "3"], "-", 
     RowBox[{"3", "x"}], " ", "+", "r"}], "\[Equal]", "0"}], 
   TraditionalForm]]],
 " (using ",
 StyleBox["Solve",
  FontWeight->"Bold"],
 ") and returns the solution as a list of three decimal numbers.  Evaluate \
this function at each integer ",
 StyleBox["r",
  FontSlant->"Italic"],
 "  value from -3 to 3.  If you see small imaginary round-off errors in \
results that would otherwise be real, add a step within the module to ",
 StyleBox[ButtonBox["Chop",
  BaseStyle->"Link",
  ButtonData->"paclet://ref/Chop"],
  FontWeight->"Bold"],
 " anything less than ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["10", 
    RowBox[{"-", "10"}]], TraditionalForm]]],
 " down to zero.  Note that we expect you to use a couple of local variables \
inside the module."
}], "Text",
 CellChangeTimes->{{3.434727576018553*^9, 3.434727707140547*^9}, 
   3.434727744527809*^9, {3.4347406923943634`*^9, 3.4347407150199423`*^9}, {
   3.4348132492441387`*^9, 3.4348134135910444`*^9}, {3.4348134538105664`*^9, 
   3.4348134554355974`*^9}, {3.4348135092178802`*^9, 
   3.4348136483143005`*^9}, {3.4348137234407434`*^9, 
   3.4348137243938866`*^9}, {3.43481393342915*^9, 3.43481393342915*^9}, {
   3.434814049962637*^9, 3.4348140804944735`*^9}, {3.4348145128152742`*^9, 
   3.434814512924651*^9}, {3.4353507912182703`*^9, 3.435350821250097*^9}, {
   3.446320490718963*^9, 3.446320492140838*^9}, {3.5238320123232*^9, 
   3.5238320260044003`*^9}, {3.5238320922576*^9, 3.5238320952528*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"func", "[", "r_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"list", ",", " ", "chopped"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"list", " ", "=", 
      RowBox[{"Solve", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          SuperscriptBox["x", "3"], "-", 
          RowBox[{"3", "x"}], "+", "r"}], "\[Equal]", "0"}], ",", "x"}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"chopped", " ", "=", " ", 
      RowBox[{"Chop", "[", "list", "]"}]}]}]}], "\[IndentingNewLine]", 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"func", "[", 
  RowBox[{"-", "5"}], "]"}]}], "Input",
 CellChangeTimes->{{3.434727716868331*^9, 3.4347277487105827`*^9}, {
   3.434727801082065*^9, 3.434727819680655*^9}, {3.434727851787746*^9, 
   3.43472791673413*^9}, {3.434728000064616*^9, 3.4347280043587093`*^9}, {
   3.434728053450232*^9, 3.434728060216279*^9}, {3.434728205735017*^9, 
   3.434728220549376*^9}, {3.434728264928286*^9, 3.434728276246998*^9}, 
   3.434728366243984*^9, {3.4347284631197147`*^9, 3.434728469791197*^9}, {
   3.434728571194146*^9, 3.434728599435039*^9}, {3.434728635996016*^9, 
   3.434728656316633*^9}, {3.434740425951055*^9, 3.4347404281542225`*^9}, {
   3.4347405096870375`*^9, 3.434740629330249*^9}, {3.434740661315443*^9, 
   3.434740661987335*^9}, {3.434740771912024*^9, 3.434740772380786*^9}, {
   3.4347408702426662`*^9, 3.434740900196661*^9}, {3.434740989871405*^9, 
   3.4347410241693773`*^9}, {3.4347410575454454`*^9, 
   3.4347411107346478`*^9}, {3.4347411649238815`*^9, 
   3.4347411718459783`*^9}, {3.4348130548966575`*^9, 
   3.4348130550997863`*^9}, {3.434813192133667*^9, 3.4348131925555506`*^9}, {
   3.434813418184882*^9, 3.4348134274194345`*^9}, {3.434813476170371*^9, 
   3.43481349645201*^9}, {3.434813680361791*^9, 3.434813708987341*^9}, {
   3.434814819633665*^9, 3.43481483032137*^9}, {3.434815547538265*^9, 
   3.4348155764606953`*^9}, 3.4349210786641893`*^9, {3.5238320322444*^9, 
   3.5238321024444*^9}, {3.5278984687723627`*^9, 3.527898482546124*^9}, {
   3.5278985909249163`*^9, 3.527898634026362*^9}, {3.5278987781728373`*^9, 
   3.5278988015500383`*^9}, 3.527936139619228*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{
      RowBox[{
       FractionBox["1", "3"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          FractionBox["135", "2"], "-", 
          FractionBox[
           RowBox[{"27", " ", 
            SqrtBox["21"]}], "2"]}], ")"}], 
        RowBox[{"1", "/", "3"}]]}], "+", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         FractionBox["1", "2"], " ", 
         RowBox[{"(", 
          RowBox[{"5", "+", 
           SqrtBox["21"]}], ")"}]}], ")"}], 
       RowBox[{"1", "/", "3"}]]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "6"]}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"\[ImaginaryI]", " ", 
          SqrtBox["3"]}]}], ")"}], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          FractionBox["135", "2"], "-", 
          FractionBox[
           RowBox[{"27", " ", 
            SqrtBox["21"]}], "2"]}], ")"}], 
        RowBox[{"1", "/", "3"}]]}], "-", 
      RowBox[{
       FractionBox["1", "2"], " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{"\[ImaginaryI]", " ", 
          SqrtBox["3"]}]}], ")"}], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          FractionBox["1", "2"], " ", 
          RowBox[{"(", 
           RowBox[{"5", "+", 
            SqrtBox["21"]}], ")"}]}], ")"}], 
        RowBox[{"1", "/", "3"}]]}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "6"]}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{"\[ImaginaryI]", " ", 
          SqrtBox["3"]}]}], ")"}], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          FractionBox["135", "2"], "-", 
          FractionBox[
           RowBox[{"27", " ", 
            SqrtBox["21"]}], "2"]}], ")"}], 
        RowBox[{"1", "/", "3"}]]}], "-", 
      RowBox[{
       FractionBox["1", "2"], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"\[ImaginaryI]", " ", 
          SqrtBox["3"]}]}], ")"}], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          FractionBox["1", "2"], " ", 
          RowBox[{"(", 
           RowBox[{"5", "+", 
            SqrtBox["21"]}], ")"}]}], ")"}], 
        RowBox[{"1", "/", "3"}]]}]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.527898802082324*^9, {3.5279361344994326`*^9, 3.5279361398992167`*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["(#7) Root finder (20 min)", "Subsection",
 CellChangeTimes->{{3.434898796645215*^9, 3.434898843734312*^9}, {
   3.4349070751292*^9, 3.4349070762171507`*^9}, {3.434913464168223*^9, 
   3.434913475118553*^9}, 3.434921321454341*^9, {3.435350651262458*^9, 
   3.4353506527156105`*^9}, {3.4353506878256598`*^9, 
   3.4353507052166185`*^9}, {3.435416379761474*^9, 3.435416384995983*^9}, {
   3.447238926910448*^9, 3.44723892870218*^9}}],

Cell["\<\
(a) Evaluate the cell below to define and plot a function that has \
irregularly spaced roots.\
\>", "Text",
 CellChangeTimes->{{3.446321205390838*^9, 3.446321237984588*^9}, 
   3.5238318961812*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"funky", "[", "x_", "]"}], " ", ":=", 
  RowBox[{"Cos", "[", 
   RowBox[{"x", "+", 
    RowBox[{"2", "*", 
     RowBox[{"Cos", "[", "x", "]"}]}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"funky", "[", "x", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "20"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.434907076971122*^9, 3.4349070775578337`*^9}, {
   3.434909303221595*^9, 3.43490939679288*^9}, {3.4349094301556168`*^9, 
   3.4349094308781443`*^9}, {3.434909526159479*^9, 3.434909728707807*^9}, {
   3.4349099691699467`*^9, 3.4349099896988077`*^9}, {3.434910028188586*^9, 
   3.434910129599135*^9}, {3.4349101966994658`*^9, 3.434910241066601*^9}, {
   3.4349111446784353`*^9, 3.434911160982485*^9}, 3.434911202270482*^9, {
   3.434911329386698*^9, 3.434911331538588*^9}, {3.434912581504262*^9, 
   3.434912581878706*^9}, {3.434912777817829*^9, 3.434912785542079*^9}, 
   3.43492130014091*^9, {3.435416691566331*^9, 3.4354168056473765`*^9}, 
   3.435417118983523*^9, {3.446321122781463*^9, 3.446321161031463*^9}, {
   3.446321410531463*^9, 3.446321410765838*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
Oy74pToxM0PBfZ6jxWRaI/4PELo4Zw==
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  PlotRange->{{0, 20}, {-0.9999994989845812, 0.9999955933298078}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{3.527898811697691*^9, 3.527943683632444*^9}]
}, Open  ]],

Cell[TextData[{
 "(b) In the cell below, create a ",
 StyleBox["Module",
  FontWeight->"Bold"],
 ", ",
 StyleBox["rootfinder[func_, {min_, max_, step_}]",
  FontWeight->"Bold"],
 ", that numerically finds all the roots of a smooth function, ",
 StyleBox["f",
  FontSlant->"Italic"],
 "(",
 StyleBox["x",
  FontSlant->"Italic"],
 "), within a specified range.  The first argument, ",
 StyleBox["func",
  FontSlant->"Italic"],
 ", can either be a function name (e.g. ",
 StyleBox["Cos",
  FontWeight->"Bold"],
 ") or a pure function (",
 StyleBox["Cos[#]&",
  FontWeight->"Bold"],
 "), but not an expression (e.g.",
 StyleBox[" Cos[x]",
  FontWeight->"Bold"],
 ").  The second argument should be a list of three numbers.  Then use your ",
 StyleBox["rootfinder",
  FontSlant->"Italic"],
 " to find all of the roots of ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "(", "x", ")"}], "=", 
    RowBox[{"cos", "(", 
     RowBox[{"x", "+", 
      RowBox[{"2", 
       RowBox[{"cos", "(", "x", ")"}]}]}], ")"}]}], TraditionalForm]]],
 " between x = 0 and 20.  No root should appear more than once in the output.\
\n\nHints:  As ",
 StyleBox["Table",
  FontWeight->"Bold"],
 " iterator ",
 StyleBox["n",
  FontSlant->"Italic"],
 " goes from from ",
 StyleBox["min",
  FontSlant->"Italic"],
 " to ",
 StyleBox["max",
  FontSlant->"Italic"],
 " in increments of ",
 StyleBox["step",
  FontSlant->"Italic"],
 " (you will need to choose ",
 StyleBox["step",
  FontSlant->"Italic"],
 " wisely) use ",
 StyleBox["FindRoot",
  FontWeight->"Bold"],
 " to locate a root near each value of ",
 StyleBox["n",
  FontSlant->"Italic"],
 ".  After you have done this, ",
 StyleBox["Round",
  FontWeight->"Bold"],
 " the results to the nearest millionth, use ",
 StyleBox["Union",
  FontWeight->"Bold"],
 " to eliminate duplicates, convert (",
 StyleBox["N",
  FontWeight->"Bold"],
 ") results back into decimal form, and ",
 StyleBox["Select",
  FontWeight->"Bold"],
 " the ones that lie between ",
 StyleBox["min",
  FontSlant->"Italic"],
 " and ",
 StyleBox["max",
  FontSlant->"Italic"],
 "."
}], "Text",
 CellChangeTimes->{{3.434911133944219*^9, 3.434911138232759*^9}, {
   3.434911169498044*^9, 3.434911369839965*^9}, {3.434911451461154*^9, 
   3.434911475795601*^9}, {3.434911587216342*^9, 3.43491164291403*^9}, {
   3.4349117746004057`*^9, 3.434911774724688*^9}, {3.434911859831087*^9, 
   3.4349122289857883`*^9}, {3.434912328694829*^9, 3.434912368885826*^9}, {
   3.4349124230918903`*^9, 3.434912750761508*^9}, {3.434912799624514*^9, 
   3.4349128279789953`*^9}, {3.4349132497538557`*^9, 3.434913377841501*^9}, {
   3.435416424403242*^9, 3.435416472732604*^9}, {3.4354165802822323`*^9, 
   3.435416686675581*^9}, {3.4354168229915705`*^9, 3.435416940900839*^9}, {
   3.435416977776783*^9, 3.435417088607745*^9}, {3.435417149953066*^9, 
   3.4354171629065223`*^9}, {3.4354172774094534`*^9, 
   3.4354172909410496`*^9}, {3.4354173766307435`*^9, 3.435417763531273*^9}, {
   3.435941498167245*^9, 3.435941532385776*^9}, 3.446321184406463*^9, {
   3.446321242703338*^9, 3.446321274531463*^9}, {3.446321315875213*^9, 
   3.446321386703338*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"rootFinder", "[", 
   RowBox[{"func_", ",", 
    RowBox[{"{", 
     RowBox[{"min_", ",", "max_", ",", "step_"}], "}"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"values", ",", "roots", ",", "unique", ",", "rounded"}], "}"}], 
    ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"values", "=", 
      RowBox[{"Table", "[", 
       RowBox[{"n", ",", 
        RowBox[{"{", 
         RowBox[{"n", ",", "min", ",", "max", ",", "step"}], "}"}]}], "]"}]}],
      ";", "\[IndentingNewLine]", 
     RowBox[{"roots", "=", 
      RowBox[{"x", "/.", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"FindRoot", "[", 
           RowBox[{
            RowBox[{"func", "[", "x", "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"x", ",", "#"}], "}"}]}], "]"}], "&"}], "/@", "values"}],
         ")"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"rounded", " ", "=", " ", 
      RowBox[{"Round", "[", 
       RowBox[{"roots", ",", ".000001"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"unique", "=", " ", 
      RowBox[{
       RowBox[{"Union", "[", "rounded", "]"}], "//", "N"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Select", "[", 
      RowBox[{"unique", ",", 
       RowBox[{
        RowBox[{"min", "<", "#", "<", "max"}], "&"}]}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.446321404828338*^9, 3.446321405422088*^9}, {
  3.5278988308230867`*^9, 3.5278988361821413`*^9}, {3.5278989084608107`*^9, 
  3.527898909629559*^9}, {3.52793786350027*^9, 3.527937885769379*^9}, {
  3.527938612390313*^9, 3.5279386434290714`*^9}, {3.527943231200542*^9, 
  3.527943349515809*^9}, {3.527943428892634*^9, 3.527943475720761*^9}, {
  3.527943512439292*^9, 3.5279436655231686`*^9}, {3.527943721690922*^9, 
  3.5279437242708187`*^9}, {3.527943775548767*^9, 3.527943982190501*^9}, {
  3.527944044817996*^9, 3.527944058377454*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"rootFinder", "[", 
  RowBox[{"funky", ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "20", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.52794366673312*^9, 3.5279437005517673`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1.5707959999999999`", ",", "3.466291`", ",", "4.712389`", ",", "5.958487`",
    ",", "7.853981999999999`", ",", "9.749476`", ",", "10.995574`", ",", 
   "12.241672999999999`", ",", "14.137167`", ",", "16.032661`", ",", 
   "17.27876`", ",", "18.524858`"}], "}"}]], "Output",
 CellChangeTimes->{{3.527943701191742*^9, 3.5279437268207164`*^9}, {
   3.5279437908381557`*^9, 3.5279438006577625`*^9}, 3.5279438337864375`*^9, 
   3.5279438674150925`*^9, {3.5279439137132406`*^9, 3.5279439290326276`*^9}, 
   3.5279439605713663`*^9, {3.527944060587365*^9, 3.5279440704769697`*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Quadratic approximations (optional)", "Subsection",
 CellChangeTimes->{{3.434377306452134*^9, 3.4343773093569*^9}, {
   3.434400774959804*^9, 3.4344007775536203`*^9}, {3.4344008433053036`*^9, 
   3.434400846867895*^9}, {3.4344009850745573`*^9, 3.434401033325793*^9}, 
   3.434823742219247*^9, {3.43482405255333*^9, 3.4348240783975763`*^9}, {
   3.434825177403052*^9, 3.4348251775436797`*^9}, 3.434889348171184*^9, {
   3.434893225923444*^9, 3.434893226065858*^9}, 3.4348986627114773`*^9, {
   3.434898847247035*^9, 3.434898847542655*^9}, {3.434902832101644*^9, 
   3.4349028336924543`*^9}, {3.434907061645474*^9, 3.434907080137137*^9}, {
   3.4349134756786423`*^9, 3.434913475838628*^9}, {3.43535072037316*^9, 
   3.435350720701291*^9}, {3.4353514287617607`*^9, 3.4353514289180136`*^9}, {
   3.4354163948868613`*^9, 3.4354163950431156`*^9}, {3.44723882307017*^9, 
   3.447238828099318*^9}}],

Cell[TextData[{
 "Given a smooth function f(x), we can take three evenly-spaced sample points \
on the curve and then approximate ",
 StyleBox["y",
  FontSlant->"Italic"],
 "(",
 StyleBox["x",
  FontSlant->"Italic"],
 ") with the parabola, ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"g", "(", "x", ")"}], "=", 
    RowBox[{
     RowBox[{"a", " ", 
      SuperscriptBox["x", "2"]}], "+", 
     RowBox[{"b", " ", "x"}], "+", "c"}]}], TraditionalForm]]],
 ", that runs through the points.  When the sample points are reasonably \
close together, g(x) provides a very simple means of computing approximate \
derivatives and integrals.\n\n(a) Evaluate the cells below, where we start \
with an arbitrary function, ",
 StyleBox["y",
  FontSlant->"Italic"],
 "(",
 StyleBox["x",
  FontSlant->"Italic"],
 "), and create three equations by setting ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"y", "(", "x", ")"}], "=", 
    RowBox[{
     RowBox[{"a", " ", 
      SuperscriptBox["x", "2"]}], "+", 
     RowBox[{"b", " ", "x"}], "+", "c"}]}], TraditionalForm]]],
 " at each sample point, ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["x", "0"], "-", "h"}], TraditionalForm]]],
 ",  ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["x", "0"], TraditionalForm]]],
 "  and  ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["x", "0"], "+", "h"}], TraditionalForm]]],
 ".  These three equations are then solved to obtain the unknown coefficients \
{a, b, c} in terms of the center point (",
 Cell[BoxData[
  FormBox[
   SubscriptBox["x", "0"], TraditionalForm]]],
 "), the spacing (",
 StyleBox["h",
  FontSlant->"Italic"],
 ") and the sample values of ",
 StyleBox["y",
  FontSlant->"Italic"],
 "(",
 StyleBox["x",
  FontSlant->"Italic"],
 ").  Explain the meaning of the output to your TA."
}], "Text",
 CellChangeTimes->{{3.434824061350374*^9, 3.434824085163331*^9}, {
   3.434887745500181*^9, 3.434888162157651*^9}, {3.434888218295452*^9, 
   3.434888262744945*^9}, {3.4348883459801826`*^9, 3.4348883462838717`*^9}, {
   3.434888554482874*^9, 3.434888554594441*^9}, {3.434889008641156*^9, 
   3.43488902288793*^9}, {3.434889086355489*^9, 3.434889198837392*^9}, 
   3.434899271595902*^9, {3.434902788262743*^9, 3.434902821779964*^9}, {
   3.434902854061028*^9, 3.43490300574597*^9}, {3.434903850360517*^9, 
   3.434904259943622*^9}, {3.434904347883868*^9, 3.434904442587976*^9}, {
   3.434904477999071*^9, 3.434904667118908*^9}, 3.4354099456280146`*^9, 
   3.4354121356215773`*^9, {3.435412324220155*^9, 3.43541234862703*^9}, {
   3.435412391096867*^9, 3.4354124703020196`*^9}, {3.435412529350406*^9, 
   3.435412546772727*^9}}],

Cell[BoxData[{
 RowBox[{"Clear", "[", 
  RowBox[{"a", ",", "b", ",", "c"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"g", "[", "x_", "]"}], " ", ":=", " ", 
  RowBox[{
   RowBox[{"a", "*", 
    RowBox[{"x", "^", "2"}]}], "+", 
   RowBox[{"b", "*", "x"}], "+", "c"}]}], "\[IndentingNewLine]", 
 RowBox[{"equations", " ", "=", " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{"y", "[", 
      RowBox[{"x0", "-", "h"}], "]"}], "\[Equal]", 
     RowBox[{"g", "[", 
      RowBox[{"x0", "-", "h"}], "]"}]}], ",", 
    RowBox[{
     RowBox[{"y", "[", "x0", "]"}], "\[Equal]", 
     RowBox[{"g", "[", "x0", "]"}]}], ",", 
    RowBox[{
     RowBox[{"y", "[", 
      RowBox[{"x0", "+", "h"}], "]"}], "\[Equal]", 
     RowBox[{"g", "[", 
      RowBox[{"x0", "+", "h"}], "]"}]}]}], "}"}]}], "\[IndentingNewLine]", 
 RowBox[{"abcrule", " ", "=", 
  RowBox[{
   RowBox[{"Solve", "[", 
    RowBox[{"equations", ",", 
     RowBox[{"{", 
      RowBox[{"a", ",", "b", ",", "c"}], "}"}]}], "]"}], "[", 
   RowBox[{"[", "1", "]"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.434889988464672*^9, 3.4348900598185663`*^9}, {
   3.434890116986506*^9, 3.434890140444894*^9}, {3.434890379529853*^9, 
   3.434890401874014*^9}, {3.434890893705003*^9, 3.4348909455463037`*^9}, {
   3.4348914020234833`*^9, 3.434891407830936*^9}, {3.434891519340795*^9, 
   3.4348915406217337`*^9}, {3.434895398849815*^9, 3.4348953993426847`*^9}, {
   3.4348954869530277`*^9, 3.434895487098402*^9}, {3.434896043880641*^9, 
   3.4348961126585493`*^9}, {3.434896148965814*^9, 3.434896217134288*^9}, {
   3.434896251313374*^9, 3.434896256006886*^9}, {3.4348963492320337`*^9, 
   3.4348964028277073`*^9}, {3.4348964334382963`*^9, 3.434896495108068*^9}, 
   3.434896544616104*^9, {3.43489822521002*^9, 3.4348982257418833`*^9}, {
   3.4348998960565443`*^9, 3.4348999004663963`*^9}, {3.434904274966774*^9, 
   3.4349043385660143`*^9}, 3.434904471593834*^9, 3.434904661827437*^9, {
   3.434907036004038*^9, 3.434907036451231*^9}, {3.4349074384364977`*^9, 
   3.434907485930546*^9}, {3.434907959068119*^9, 3.434907966731696*^9}, {
   3.43492160239612*^9, 3.4349216036643953`*^9}, {3.4349216589327593`*^9, 
   3.43492166417813*^9}, {3.4354098766731243`*^9, 3.435409898111173*^9}, {
   3.4354124028315425`*^9, 3.4354124042378283`*^9}, {3.4979474034667997`*^9, 
   3.4979474062748003`*^9}}],

Cell[TextData[{
 "\n(b) In the cell below, we define ",
 StyleBox["seepoly[func_, center_, spacing_, hpr_]",
  FontWeight->"Bold"],
 ", a module that must ",
 StyleBox["Plot",
  FontWeight->"Bold"],
 " a function, ",
 StyleBox["y",
  FontSlant->"Italic"],
 "(",
 StyleBox["x",
  FontSlant->"Italic"],
 "), and its quadratic approximation, ",
 StyleBox["g",
  FontSlant->"Italic"],
 "(",
 StyleBox["x",
  FontSlant->"Italic"],
 "), on the same graph.  Evaluate the cell, explore the resulting animation, \
study the code within the module, and explain to your TA how what each step \
does."
}], "Text",
 CellChangeTimes->{{3.434824061350374*^9, 3.434824085163331*^9}, {
   3.434887745500181*^9, 3.434888162157651*^9}, {3.434888218295452*^9, 
   3.434888262744945*^9}, {3.4348883459801826`*^9, 3.4348883462838717`*^9}, {
   3.434888554482874*^9, 3.434888554594441*^9}, {3.434889008641156*^9, 
   3.43488902288793*^9}, {3.434889086355489*^9, 3.434889198837392*^9}, 
   3.434899271595902*^9, {3.434902788262743*^9, 3.434902821779964*^9}, {
   3.434902854061028*^9, 3.43490300574597*^9}, {3.434903850360517*^9, 
   3.434904259943622*^9}, {3.434904347883868*^9, 3.434904442587976*^9}, {
   3.434904477999071*^9, 3.434904667118908*^9}, 3.4354099456280146`*^9, 
   3.4354121356215773`*^9, {3.435412324220155*^9, 3.43541234862703*^9}, {
   3.435412391096867*^9, 3.4354124347854853`*^9}, 3.435412479067869*^9, 
   3.4354127859038486`*^9, {3.435417859268099*^9, 3.4354178821905603`*^9}, {
   3.435418003115531*^9, 3.43541804428846*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"seepoly", "[", 
    RowBox[{"func_", ",", "center_", ",", "spacing_", ",", "hpr_"}], "]"}], 
   " ", ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"myrule", ",", "mypoly", ",", "plots", ",", "spots"}], "}"}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"myrule", " ", "=", "  ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"y", "\[Rule]", "func"}], ",", 
         RowBox[{"x0", "\[Rule]", "center"}], ",", 
         RowBox[{"h", "\[Rule]", "spacing"}]}], "}"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"mypoly", " ", "=", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"g", "[", "x", "]"}], "/.", "abcrule"}], "/.", "myrule"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"plots", " ", "=", " ", 
       RowBox[{"Plot", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"func", "[", "x", "]"}], ",", "mypoly"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", 
           RowBox[{"center", "-", "hpr"}], ",", 
           RowBox[{"center", "+", "hpr"}]}], "}"}], ",", 
         RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
         RowBox[{"PlotStyle", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"Thick", ",", "Red"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"Thick", ",", "Blue"}], "}"}]}], "}"}]}]}], "]"}]}], ";",
       "\[IndentingNewLine]", 
      RowBox[{"spots", " ", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"Point", "[", 
          RowBox[{"{", 
           RowBox[{"#", ",", 
            RowBox[{"func", "[", "#", "]"}]}], "}"}], "]"}], "&"}], "/@", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"center", "-", "spacing"}], ",", "center", ",", 
          RowBox[{"center", "+", "spacing"}]}], "}"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Show", "[", 
       RowBox[{"{", 
        RowBox[{"plots", ",", " ", 
         RowBox[{"Graphics", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"PointSize", "[", "0.02", "]"}], ",", "spots"}], "}"}], 
          "]"}]}], "}"}], "]"}]}]}], "\[IndentingNewLine]", "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"seepoly", "[", 
    RowBox[{"Cos", ",", "c", ",", "s", ",", "Pi"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"c", ",", "0", ",", "Pi"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"s", ",", "0.01", ",", "Pi"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.434889988464672*^9, 3.4348900598185663`*^9}, {
   3.434890116986506*^9, 3.434890140444894*^9}, {3.434890379529853*^9, 
   3.434890401874014*^9}, {3.434890893705003*^9, 3.4348909455463037`*^9}, {
   3.4348914020234833`*^9, 3.434891407830936*^9}, {3.434891519340795*^9, 
   3.4348915406217337`*^9}, {3.434895398849815*^9, 3.4348953993426847`*^9}, {
   3.4348954869530277`*^9, 3.434895487098402*^9}, {3.434896043880641*^9, 
   3.4348961126585493`*^9}, {3.434896148965814*^9, 3.434896217134288*^9}, {
   3.434896251313374*^9, 3.434896256006886*^9}, {3.4348963492320337`*^9, 
   3.4348964028277073`*^9}, {3.4348964334382963`*^9, 3.434896495108068*^9}, 
   3.434896544616104*^9, {3.43489822521002*^9, 3.4348982257418833`*^9}, {
   3.4348998960565443`*^9, 3.4348999004663963`*^9}, {3.434904274966774*^9, 
   3.4349043385660143`*^9}, 3.434904471593834*^9, 3.434904661827437*^9, {
   3.434907036004038*^9, 3.434907036451231*^9}, {3.4349074384364977`*^9, 
   3.434907485930546*^9}, {3.434907959068119*^9, 3.434907966731696*^9}, {
   3.43492160239612*^9, 3.4349216036643953`*^9}, {3.4349216589327593`*^9, 
   3.43492166417813*^9}, {3.4354098766731243`*^9, 3.435409898111173*^9}, 
   3.4354123735807934`*^9, {3.435412563054394*^9, 3.4354125633044004`*^9}, {
   3.4354178847062497`*^9, 3.43541799292777*^9}, 3.4463232610282583`*^9}],

Cell[TextData[{
 "\n(c) In the cell below, use ",
 StyleBox["g[x]/.abcrule",
  FontWeight->"Bold"],
 " to obtain approximate values for ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"y", "'"}], 
    RowBox[{"(", 
     SubscriptBox["x", "0"], ")"}]}], TraditionalForm]]],
 ",  ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"y", "''"}], 
    RowBox[{"(", 
     SubscriptBox["x", "0"], ")"}]}], TraditionalForm]]],
 " and  ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubsuperscriptBox["\[Integral]", 
     RowBox[{
      SubscriptBox["x", "0"], "-", "h"}], 
     RowBox[{
      SubscriptBox["x", "0"], "+", "h"}]], 
    RowBox[{
     RowBox[{"y", "(", "x", ")"}], 
     RowBox[{"\[DifferentialD]", "x"}]}]}], TraditionalForm]]],
 ".  Hints: Use the \"primed\" notation (shorthand for ",
 StyleBox["Derivative",
  FontWeight->"Bold"],
 ") for your derivatives, and ",
 StyleBox["Simplify",
  FontWeight->"Bold"],
 " each result.  The integral approximation that you will obtain is known as \
Simpson's rule."
}], "Text",
 CellChangeTimes->{{3.434824061350374*^9, 3.434824085163331*^9}, {
   3.434887745500181*^9, 3.434888162157651*^9}, {3.434888218295452*^9, 
   3.434888262744945*^9}, {3.4348883459801826`*^9, 3.4348883462838717`*^9}, {
   3.434888554482874*^9, 3.434888554594441*^9}, {3.434889008641156*^9, 
   3.43488902288793*^9}, {3.434889086355489*^9, 3.434889198837392*^9}, 
   3.434899271595902*^9, {3.434902788262743*^9, 3.434902821779964*^9}, {
   3.434902854061028*^9, 3.43490300574597*^9}, {3.434903850360517*^9, 
   3.434904259943622*^9}, {3.434904347883868*^9, 3.434904442587976*^9}, {
   3.434904477999071*^9, 3.434904667118908*^9}, 3.4354099456280146`*^9, 
   3.43541248809935*^9, {3.435412558132393*^9, 3.435412623102806*^9}, {
   3.4354126929639697`*^9, 3.4354127690596676`*^9}, 3.4979478623408003`*^9}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.434889988464672*^9, 3.4348900598185663`*^9}, {
   3.434890116986506*^9, 3.434890140444894*^9}, {3.434890379529853*^9, 
   3.434890401874014*^9}, {3.434890893705003*^9, 3.4348909455463037`*^9}, {
   3.4348914020234833`*^9, 3.434891407830936*^9}, {3.434891519340795*^9, 
   3.4348915406217337`*^9}, {3.434895398849815*^9, 3.4348953993426847`*^9}, {
   3.4348954869530277`*^9, 3.434895487098402*^9}, {3.434896043880641*^9, 
   3.4348961126585493`*^9}, {3.434896148965814*^9, 3.434896217134288*^9}, {
   3.434896251313374*^9, 3.434896256006886*^9}, {3.4348963492320337`*^9, 
   3.4348964028277073`*^9}, {3.4348964334382963`*^9, 3.434896495108068*^9}, 
   3.434896544616104*^9, {3.43489822521002*^9, 3.4348982257418833`*^9}, {
   3.4348998960565443`*^9, 3.4348999004663963`*^9}, {3.434904274966774*^9, 
   3.4349043385660143`*^9}, 3.434904471593834*^9, {3.434904661827437*^9, 
   3.434904711240683*^9}, 3.4354127920290055`*^9}],

Cell[TextData[{
 "\n(d) In this cell, we have started to define ",
 StyleBox["calcpoly[func_, center_, step_]",
  FontWeight->"Bold"],
 ", a module that takes three inputs: (1) a function name or a pure function \
of one variable, (2) a numerical value for ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["x", "0"], TraditionalForm]]],
 ", and (3) a numerical value for ",
 StyleBox["h",
  FontSlant->"Italic"],
 ".  Your job is to complete this module to compute quadratic approximations \
to the following four quantities: ",
 Cell[BoxData[
  FormBox[
   RowBox[{"y", "(", 
    SubscriptBox["x", "0"], ")"}], TraditionalForm]]],
 ",  ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"y", "'"}], 
    RowBox[{"(", 
     SubscriptBox["x", "0"], ")"}]}], TraditionalForm]]],
 ",  ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"y", "''"}], 
    RowBox[{"(", 
     SubscriptBox["x", "0"], ")"}]}], TraditionalForm]]],
 " and  ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubsuperscriptBox["\[Integral]", 
     RowBox[{
      SubscriptBox["x", "0"], "-", "h"}], 
     RowBox[{
      SubscriptBox["x", "0"], "+", "h"}]], 
    RowBox[{
     RowBox[{"y", "(", "x", ")"}], 
     RowBox[{"\[DifferentialD]", "x"}]}]}], TraditionalForm]]],
 ".  Your module won't return any output; but it will ",
 StyleBox["Print",
  FontWeight->"Bold"],
 " both the actual and approximate values of each of these quantities.\n\nTry \
",
 StyleBox["calcpoly",
  FontSlant->"Italic"],
 " on both ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     SuperscriptBox["x", "2"]}]], TraditionalForm]]],
 " and cos(",
 StyleBox["x",
  FontSlant->"Italic"],
 ") when ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["x", "0"], "=", "0.0"}], TraditionalForm]]],
 " and ",
 StyleBox["h",
  FontSlant->"Italic"],
 " = 0.5.  \n\nHints: First, define a local replacement rule, ",
 StyleBox["myrule = {y \[Rule] func, x0 \[Rule] center, h \[Rule] spacing}",
  FontWeight->"Bold"],
 ".  Compute each of the derivatives and integrals  ",
 Cell[BoxData[
  FormBox[
   RowBox[{"y", "(", 
    SubscriptBox["x", "0"], ")"}], TraditionalForm]]],
 ",  ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"y", "'"}], 
    RowBox[{"(", 
     SubscriptBox["x", "0"], ")"}]}], TraditionalForm]]],
 ",  ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"y", "''"}], 
    RowBox[{"(", 
     SubscriptBox["x", "0"], ")"}]}], TraditionalForm]]],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubsuperscriptBox["\[Integral]", 
     RowBox[{
      SubscriptBox["x", "0"], "-", "h"}], 
     RowBox[{
      SubscriptBox["x", "0"], "+", "h"}]], 
    RowBox[{
     RowBox[{"y", "(", "x", ")"}], 
     RowBox[{"\[DifferentialD]", "x"}]}]}], TraditionalForm]]],
 ",  ",
 Cell[BoxData[
  FormBox[
   RowBox[{"g", "(", 
    SubscriptBox["x", "0"], ")"}], TraditionalForm]]],
 ",  ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"g", "'"}], 
    RowBox[{"(", 
     SubscriptBox["x", "0"], ")"}]}], TraditionalForm]]],
 ",  ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"g", "''"}], 
    RowBox[{"(", 
     SubscriptBox["x", "0"], ")"}]}], TraditionalForm]]],
 " and  ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubsuperscriptBox["\[Integral]", 
     RowBox[{
      SubscriptBox["x", "0"], "-", "h"}], 
     RowBox[{
      SubscriptBox["x", "0"], "+", "h"}]], 
    RowBox[{
     RowBox[{"g", "(", "x", ")"}], 
     RowBox[{"\[DifferentialD]", "x"}]}]}], TraditionalForm]]],
 ") symbolically, and apply ",
 StyleBox["abcrule",
  FontSlant->"Italic"],
 " and/or ",
 StyleBox["myrule",
  FontSlant->"Italic"],
 " to each quantity, assigning a local name to each result.  Take care not to \
assign definitions to global variables {",
 StyleBox["g",
  FontSlant->"Italic"],
 ", ",
 StyleBox["y",
  FontSlant->"Italic"],
 ", ",
 StyleBox["x",
  FontSlant->"Italic"],
 "0, ",
 StyleBox["h",
  FontSlant->"Italic"],
 "}, which we are already using.  Be sure to feed ",
 StyleBox["calcpoly",
  FontSlant->"Italic"],
 " a function name (e.g. ",
 StyleBox["Cos",
  FontWeight->"Bold"],
 ") or a pure function (",
 StyleBox["Cos[#]&",
  FontWeight->"Bold"],
 "), but not an expression (e.g.",
 StyleBox[" Cos[x]",
  FontWeight->"Bold"],
 ")."
}], "Text",
 CellChangeTimes->{{3.4348991774857597`*^9, 3.434899890528071*^9}, {
   3.434899920932105*^9, 3.434899961242605*^9}, {3.434899994965548*^9, 
   3.434900206910511*^9}, {3.434904882827977*^9, 3.4349051348422527`*^9}, {
   3.4349053109577303`*^9, 3.434905350983366*^9}, {3.434905389524035*^9, 
   3.434905390209646*^9}, {3.434905421028821*^9, 3.4349054226813593`*^9}, {
   3.434905468085865*^9, 3.43490546990716*^9}, {3.434905501943647*^9, 
   3.4349055906514597`*^9}, {3.434905674033893*^9, 3.434905762989627*^9}, {
   3.4349058028770533`*^9, 3.4349059675725327`*^9}, {3.434906012641305*^9, 
   3.4349060187709513`*^9}, {3.434906063223151*^9, 3.434906175055292*^9}, {
   3.434906475506328*^9, 3.434906579860989*^9}, {3.434908366958362*^9, 
   3.434908373489094*^9}, {3.434908417595932*^9, 3.4349084182566757`*^9}, {
   3.4349113949875593`*^9, 3.434911409430088*^9}, {3.4353509543307767`*^9, 
   3.4353509905502224`*^9}, {3.43535120738251*^9, 3.435351357588519*^9}, 
   3.4354098428910093`*^9, {3.4354126317905283`*^9, 3.435412633712453*^9}, 
   3.435416310837835*^9, {3.436298354056926*^9, 3.4362983556662903`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"calcpoly", "[", 
    RowBox[{"func_", ",", "center_", ",", "spacing_"}], "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "myrule", ",", "yexact", ",", "yapprox", ",", "d1exact", ",", 
       "d1approx", ",", "d2exact", ",", "d2approx", ",", "intexact", ",", 
       "intapprox"}], "}"}], ",", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Print", "[", 
       RowBox[{
       "\"\<y(x0) = \>\"", ",", "yexact", ",", "\"\< \[TildeTilde] \>\"", ",",
         "yapprox"}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Print", "[", 
       RowBox[{
       "\"\<y'(x0) = \>\"", ",", "d1exact", ",", "\"\< \[TildeTilde] \>\"", 
        ",", "d1approx"}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Print", "[", 
       RowBox[{
       "\"\<y''(x0) = \>\"", ",", "d2exact", ",", "\"\< \[TildeTilde] \>\"", 
        ",", "d2approx"}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Print", "[", 
       RowBox[{
       "\"\<\!\(\*SubsuperscriptBox[\(\[Integral]\), \(x0 - h\), \(x0 + \
h\)]\)y(x)\[DifferentialD]x = \>\"", ",", "intexact", ",", 
        "\"\< \[TildeTilde] \>\"", ",", "intapprox"}], "]"}], ";"}]}], 
    "\[IndentingNewLine]", "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"calcpoly", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Cos", "[", "#", "]"}], "&"}], ",", "0.0", ",", "0.5"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.434897058580611*^9, 3.434897076812501*^9}, {
   3.434897137441461*^9, 3.4348971519564333`*^9}, {3.434897190706373*^9, 
   3.4348974511388597`*^9}, {3.434897482350124*^9, 3.4348975664379883`*^9}, {
   3.4348976075695953`*^9, 3.4348976660884447`*^9}, {3.434897725370305*^9, 
   3.4348978898257313`*^9}, {3.4348979461431217`*^9, 3.434898161283346*^9}, {
   3.434900226328659*^9, 3.434900413065*^9}, {3.434904749086265*^9, 
   3.4349048115277843`*^9}, {3.434905363088641*^9, 3.434905383536694*^9}, {
   3.434905627641891*^9, 3.434905644115131*^9}, 3.434921353632533*^9, {
   3.434921415704402*^9, 3.434921422778739*^9}, {3.434921516606965*^9, 
   3.434921546262855*^9}, 3.4349216369726887`*^9, {3.435412780153702*^9, 
   3.43541278029433*^9}, {3.436298335978916*^9, 3.4362983364945383`*^9}, {
   3.436298396744152*^9, 3.4362984397126274`*^9}, 3.4463233497384624`*^9, {
   3.446323447013358*^9, 3.446323447341567*^9}}]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Procedural flow control (10 min)", "Section",
 CellChangeTimes->{{3.43422172795453*^9, 3.4342217320483847`*^9}, {
  3.434221800940773*^9, 3.4342218027376947`*^9}, {3.4343099961445384`*^9, 
  3.434309997722704*^9}, {3.4343226417807584`*^9, 3.4343226420932665`*^9}, {
  3.434323443066896*^9, 3.4343234431918993`*^9}, {3.434376418237368*^9, 
  3.434376418370612*^9}, {3.4343980935222316`*^9, 3.4343980948816414`*^9}, {
  3.4343985778503494`*^9, 3.4343985780065365`*^9}, {3.434400003207327*^9, 
  3.43440003617671*^9}, {3.434823706187305*^9, 3.4348237087654796`*^9}, {
  3.4349134893432837`*^9, 3.434913489519261*^9}, {3.5238331998024*^9, 
  3.5238332002236*^9}}],

Cell[TextData[{
 "There are times when you will want to interrupt the sequence of evaluations \
being performed within a program.  You might wish to terminate (",
 StyleBox["Break",
  FontWeight->"Bold"],
 ") out of a loop when its objective has been reached early, or skip (",
 StyleBox["Continue",
  FontWeight->"Bold"],
 ") past a few unnecessary steps, or ",
 StyleBox["Pause",
  FontWeight->"Bold"],
 " to review some intermediate output, or ",
 StyleBox["Interrupt",
  FontWeight->"Bold"],
 " a job to briefly work on something else, or ",
 StyleBox["Abort",
  FontWeight->"Bold"],
 " an excessively-long or problematic computation before completion.  Refer \
to the DC reference pages of the appropriate ",
 StyleBox[ButtonBox["Flow Control",
  BaseStyle->"Link",
  ButtonData->"paclet://guide/FlowControl"],
  FontWeight->"Bold"],
 " functions as needed.\n\nNote that some flow control operations (e.g. ",
 StyleBox["Throw",
  FontWeight->"Bold"],
 " and ",
 StyleBox["Catch",
  FontWeight->"Bold"],
 ") not only terminate a loop, but can also return the values of \
user-specified loop variables.  We will defer the discussion of this kind of \
operation in the next section."
}], "Text",
 CellChangeTimes->{{3.434221812378566*^9, 3.434221852363965*^9}, 
   3.4343206639332523`*^9, {3.434320768045292*^9, 3.4343207722954006`*^9}, {
   3.434322161705969*^9, 3.434322476120268*^9}, {3.4343225166525555`*^9, 
   3.434322526684062*^9}, {3.434376144522993*^9, 3.4343763817938623`*^9}, {
   3.434377652827647*^9, 3.434377657511424*^9}, {3.434913821394567*^9, 
   3.4349138241372232`*^9}}],

Cell[CellGroupData[{

Cell["\<\
(#8) How to change lanes (5 min)\
\>", "Subsection",
 CellChangeTimes->{{3.434320236703565*^9, 3.434320252047708*^9}, {
   3.4343202920956078`*^9, 3.434320294439418*^9}, {3.4343203816916513`*^9, 
   3.4343203831760645`*^9}, {3.434320484631787*^9, 3.4343204866943398`*^9}, {
   3.4343218020405116`*^9, 3.4343218021811404`*^9}, {3.4343218377445507`*^9, 
   3.434321837838303*^9}, {3.4343234414418545`*^9, 3.4343234416137333`*^9}, {
   3.4343744179440727`*^9, 3.434374418271819*^9}, {3.434376400500566*^9, 
   3.4343764006340427`*^9}, 3.4343988048175387`*^9, {3.4343999980509777`*^9, 
   3.4343999982072306`*^9}, {3.4344009151040163`*^9, 3.4344009197135096`*^9}, 
   3.4344010579982996`*^9, {3.434823857533961*^9, 3.434823859143367*^9}, {
   3.4348251333240805`*^9, 3.4348251352459927`*^9}, {3.4349139635682783`*^9, 
   3.4349139637893763`*^9}, {3.4353513789639297`*^9, 
   3.4353513790108056`*^9}, {3.43541264571276*^9, 3.435412645822138*^9}, 
   3.4354128007011023`*^9, {3.4472388372276897`*^9, 3.447238837339574*^9}, {
   3.5238322364952*^9, 3.5238322376808*^9}}],

Cell[TextData[{
 "Evaluate the cells below in sequence, and compare and constract the \
behaviors of ",
 StyleBox["Break",
  FontWeight->"Bold"],
 ", ",
 StyleBox["Continue",
  FontWeight->"Bold"],
 ", ",
 StyleBox["Abort",
  FontWeight->"Bold"],
 " and ",
 StyleBox["Interrupt",
  FontWeight->"Bold"],
 " for your TA.\n\nWhen you evaluate the ",
 StyleBox["Interrupt",
  FontWeight->"Bold"],
 " example, try each of the buttons provided in the popup-dialog window.   \
After pressing the \"Enter Subsession\" button, check the value of the ",
 StyleBox["n",
  FontSlant->"Italic"],
 " iterator in a new cell and then type ",
 StyleBox["Return[]",
  FontWeight->"Bold"],
 " to exit the subsession.  While inside the subsession, the \"Running...\" \
indicator in the status bar at the top of this window reminds you that the \
original calculation is still waiting."
}], "Text",
 CellChangeTimes->{{3.4343206262291613`*^9, 3.4343209054863105`*^9}, {
   3.4343210242393503`*^9, 3.4343211046632843`*^9}, {3.434321464594373*^9, 
   3.4343216150357246`*^9}, {3.4343216542086024`*^9, 3.434321773977293*^9}, {
   3.4343225085429726`*^9, 3.434322624889701*^9}, {3.43432301254025*^9, 
   3.4343230133058944`*^9}, 3.4343988017554307`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"n", "\[Equal]", "5"}], ",", 
       RowBox[{"Break", "[", "]"}]}], "]"}], ";", 
     RowBox[{"Print", "[", "n", "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "1", ",", "10"}], "}"}]}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.4342245507767925`*^9, 3.4342245617614484`*^9}, {
  3.434224593137252*^9, 3.4342246295288086`*^9}, {3.43432032694025*^9, 
  3.434320328002777*^9}, {3.4343211984781857`*^9, 3.4343212271664205`*^9}, {
  3.434321312387352*^9, 3.434321323684516*^9}, {3.4343216183951855`*^9, 
  3.43432164259893*^9}}],

Cell[CellGroupData[{

Cell[BoxData["1"], "Print",
 CellChangeTimes->{3.5279392106670957`*^9}],

Cell[BoxData["2"], "Print",
 CellChangeTimes->{3.5279392106970873`*^9}],

Cell[BoxData["3"], "Print",
 CellChangeTimes->{3.5279392106970873`*^9}],

Cell[BoxData["4"], "Print",
 CellChangeTimes->{3.5279392106970873`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"n", "\[Equal]", "5"}], ",", 
       RowBox[{"Continue", "[", "]"}]}], "]"}], ";", 
     RowBox[{"Print", "[", "n", "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "1", ",", "10"}], "}"}]}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.4342244268829956`*^9, 3.434224497900439*^9}, {
  3.4342245678866053`*^9, 3.4342246246380577`*^9}, {3.4343212355416346`*^9, 
  3.4343212446356173`*^9}, {3.4343212892617598`*^9, 3.4343213256845675`*^9}, {
  3.434321621332761*^9, 3.434321640301996*^9}}],

Cell[CellGroupData[{

Cell[BoxData["1"], "Print",
 CellChangeTimes->{3.527939213256422*^9}],

Cell[BoxData["2"], "Print",
 CellChangeTimes->{3.527939213276417*^9}],

Cell[BoxData["3"], "Print",
 CellChangeTimes->{3.527939213276417*^9}],

Cell[BoxData["4"], "Print",
 CellChangeTimes->{3.527939213286414*^9}],

Cell[BoxData["6"], "Print",
 CellChangeTimes->{3.527939213286414*^9}],

Cell[BoxData["7"], "Print",
 CellChangeTimes->{3.5279392132964115`*^9}],

Cell[BoxData["8"], "Print",
 CellChangeTimes->{3.5279392132964115`*^9}],

Cell[BoxData["9"], "Print",
 CellChangeTimes->{3.5279392132964115`*^9}],

Cell[BoxData["10"], "Print",
 CellChangeTimes->{3.527939213306409*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"n", "\[Equal]", "5"}], ",", 
       RowBox[{"Pause", "[", "2", "]"}]}], "]"}], ";", 
     RowBox[{"Print", "[", "n", "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "1", ",", "10"}], "}"}]}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.434322087610322*^9, 3.4343221075014563`*^9}}],

Cell[CellGroupData[{

Cell[BoxData["1"], "Print",
 CellChangeTimes->{3.5279392156458006`*^9}],

Cell[BoxData["2"], "Print",
 CellChangeTimes->{3.5279392156458006`*^9}],

Cell[BoxData["3"], "Print",
 CellChangeTimes->{3.5279392156458006`*^9}],

Cell[BoxData["4"], "Print",
 CellChangeTimes->{3.5279392156458006`*^9}],

Cell[BoxData["5"], "Print",
 CellChangeTimes->{3.527939217655278*^9}],

Cell[BoxData["6"], "Print",
 CellChangeTimes->{3.527939217655278*^9}],

Cell[BoxData["7"], "Print",
 CellChangeTimes->{3.527939217655278*^9}],

Cell[BoxData["8"], "Print",
 CellChangeTimes->{3.5279392176652756`*^9}],

Cell[BoxData["9"], "Print",
 CellChangeTimes->{3.5279392176652756`*^9}],

Cell[BoxData["10"], "Print",
 CellChangeTimes->{3.5279392176652756`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"n", "\[Equal]", "5"}], ",", 
       RowBox[{"Abort", "[", "]"}]}], "]"}], ";", 
     RowBox[{"Print", "[", "n", "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "1", ",", "10"}], "}"}]}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.4342221783566847`*^9, 3.434222265030779*^9}, {
  3.434225532973811*^9, 3.43422553919272*^9}, {3.4343212478857007`*^9, 
  3.4343212557609024`*^9}, {3.4343213306221933`*^9, 3.4343213429975104`*^9}, {
  3.434321624582844*^9, 3.43432163770818*^9}}],

Cell[CellGroupData[{

Cell[BoxData["1"], "Print",
 CellChangeTimes->{3.527939225973115*^9}],

Cell[BoxData["2"], "Print",
 CellChangeTimes->{3.527939225973115*^9}],

Cell[BoxData["3"], "Print",
 CellChangeTimes->{3.5279392259831123`*^9}],

Cell[BoxData["4"], "Print",
 CellChangeTimes->{3.527939226003107*^9}]
}, Open  ]],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.527939226003107*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"n", "\[Equal]", "5"}], ",", 
       RowBox[{"Interrupt", "[", "]"}]}], "]"}], ";", 
     RowBox[{"Print", "[", "n", "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "1", ",", "10"}], "}"}]}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.434225583834488*^9, 3.434225651648724*^9}, {
  3.4343204023015547`*^9, 3.434320403770342*^9}, {3.4343211192105317`*^9, 
  3.434321120241808*^9}, {3.434321366935623*^9, 3.434321374123307*^9}, {
  3.4343214168119*^9, 3.434321424921483*^9}, {3.4343216267704*^9, 
  3.4343216453021245`*^9}}],

Cell[CellGroupData[{

Cell[BoxData["1"], "Print",
 CellChangeTimes->{3.52793922799259*^9}],

Cell[BoxData["2"], "Print",
 CellChangeTimes->{3.52793922799259*^9}],

Cell[BoxData["3"], "Print",
 CellChangeTimes->{3.52793922799259*^9}],

Cell[BoxData["4"], "Print",
 CellChangeTimes->{3.527939228022582*^9}],

Cell[BoxData["5"], "Print",
 CellChangeTimes->{3.5279392302120123`*^9}],

Cell[BoxData["6"], "Print",
 CellChangeTimes->{3.527939230242005*^9}],

Cell[BoxData["7"], "Print",
 CellChangeTimes->{3.5279392302619996`*^9}],

Cell[BoxData["8"], "Print",
 CellChangeTimes->{3.5279392302619996`*^9}],

Cell[BoxData["9"], "Print",
 CellChangeTimes->{3.5279392302719965`*^9}],

Cell[BoxData["10"], "Print",
 CellChangeTimes->{3.5279392302819943`*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["(#9) User input (5 min)", "Subsection",
 CellChangeTimes->{{3.4343239245010953`*^9, 3.4343239760336647`*^9}, {
   3.434376110204845*^9, 3.434376126754155*^9}, {3.434377639416802*^9, 
   3.434377639695044*^9}, {3.4343999884257927`*^9, 3.4343999954884286`*^9}, {
   3.434400909650752*^9, 3.4344009100726376`*^9}, 3.4344010620296526`*^9, {
   3.434823776391778*^9, 3.4348237777980547`*^9}, 3.4348238613152833`*^9, {
   3.434913968501513*^9, 3.4349139688134727`*^9}, {3.435351382448372*^9, 
   3.4353513825889993`*^9}, {3.435412649853491*^9, 3.4354126499628687`*^9}, 
   3.4354128045293255`*^9, {3.447238842307664*^9, 3.4472388424437323`*^9}, {
   3.5238322402392*^9, 3.5238322413156*^9}}],

Cell["\<\
There are many ways to make a program stop and ask for user input.  Evaluate \
the cells below to see several possibilities, which are listed in order of \
increasing complexity.\
\>", "Text",
 CellChangeTimes->{{3.434322663078179*^9, 3.4343226880163174`*^9}, {
  3.434323636524973*^9, 3.434323658900546*^9}, {3.4343237985916224`*^9, 
  3.434323867468385*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"res", " ", "=", " ", 
   RowBox[{"InputString", "[", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"\"\<My name is \>\"", "<>", " ", "res", " ", "<>", " ", 
  "\"\<!\>\""}]}], "Input",
 CellChangeTimes->{{3.4342248286432805`*^9, 3.4342248404873333`*^9}, {
   3.4342250246482983`*^9, 3.4342250411018443`*^9}, {3.434225078102792*^9, 
   3.4342250848998404`*^9}, {3.434322702672942*^9, 3.4343227322361994`*^9}, 
   3.4343227659714375`*^9, 3.4349208459448566`*^9}],

Cell[BoxData["\<\"My name is hi!\"\>"], "Output",
 CellChangeTimes->{{3.527939243968435*^9, 3.5279392492070723`*^9}, 
   3.527939395818686*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"res", " ", "=", 
  RowBox[{
  "Input", "[", "\"\<Enter an expression containing x.\>\"", 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{"res", ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "1"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{
  3.434225042898765*^9, {3.4342250915875115`*^9, 3.434225094134452*^9}, {
   3.4343228003473177`*^9, 3.434322810081942*^9}, {3.434322857192523*^9, 
   3.434322908553213*^9}, 3.4343235874299664`*^9, {3.5279392724534917`*^9, 
   3.527939273073417*^9}}],

Cell[BoxData[
 RowBox[{"Cos", "[", "x", "]"}]], "Output",
 CellChangeTimes->{{3.527939261374821*^9, 3.5279392762530355`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
0bVKx9j4PyMOLo4=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0.54},
  PlotRange->{{0, 1}, {0.5403023230410169, 0.9999999999999998}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{{3.527939261374821*^9, 3.5279392762630343`*^9}}]
}, Open  ]],

Cell[BoxData["G"], "Input",
 CellChangeTimes->{3.527939556939455*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"res", " ", "=", " ", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Do", "[", 
  RowBox[{
   RowBox[{"res", " ", "+=", " ", 
    RowBox[{"ChoiceDialog", "[", 
     RowBox[{
     "\"\<Make 3 selections, which will then be added together.\>\"", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\"\< 1 \>\"", "\[Rule]", "1"}], ",", 
        RowBox[{"\"\< 2 \>\"", "\[Rule]", "2"}], ",", 
        RowBox[{"\"\< 3 \>\"", "\[Rule]", "3"}], ",", 
        RowBox[{"\"\< 4 \>\"", "\[Rule]", "4"}], ",", 
        RowBox[{"\"\< 5 \>\"", "\[Rule]", "5"}]}], "}"}]}], "]"}]}], ",", 
   RowBox[{"{", "3", "}"}]}], "]"}], "\[IndentingNewLine]", "res"}], "Input",
 CellChangeTimes->{{3.434222750699462*^9, 3.434222759621565*^9}, {
  3.434222830920265*^9, 3.43422284870197*^9}, {3.4342228844372597`*^9, 
  3.4342229066722045`*^9}, {3.434235889771033*^9, 3.4342358941929927`*^9}, {
  3.434322944819766*^9, 3.4343229863520794`*^9}, {3.434323468505047*^9, 
  3.434323474864585*^9}}],

Cell[BoxData["10"], "Output",
 CellChangeTimes->{3.527939285861882*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{"waitforuser", " ", ":=", " ", 
  RowBox[{"DialogInput", "[", 
   RowBox[{"DialogNotebook", "[", 
    RowBox[{"{", 
     RowBox[{"Button", "[", 
      RowBox[{"\"\<Click 3 times to return to Kansas\>\"", ",", 
       RowBox[{"DialogReturn", "[", "]"}]}], "]"}], "}"}], "]"}], 
   "]"}]}], "\n", 
 RowBox[{
  RowBox[{"Do", "[", 
   RowBox[{"waitforuser", ",", 
    RowBox[{"{", "3", "}"}]}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.4342242665976424`*^9, 3.4342242726759233`*^9}, 
   3.4342247486881084`*^9, {3.4343235129436846`*^9, 3.4343235635387297`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"pickcolor", "=", 
   RowBox[{"DialogInput", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"col", "=", "Pink"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"DialogNotebook", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
        "TextCell", "[", "\"\<Click colored box below to pick a color\>\"", 
         "]"}], ",", 
        RowBox[{"ColorSetter", "[", 
         RowBox[{"Dynamic", "[", "col", "]"}], "]"}], ",", 
        RowBox[{"Button", "[", 
         RowBox[{"\"\<Proceed\>\"", ",", 
          RowBox[{"DialogReturn", "[", "col", "]"}]}], "]"}]}], "}"}], 
      "]"}]}], "\[IndentingNewLine]", "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Graphics", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"pickcolor", ",", 
     RowBox[{"Disk", "[", "]"}]}], "}"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "100"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.4342362973116846`*^9, 3.4342364263149867`*^9}, {
  3.4342364825039253`*^9, 3.4342364973168044`*^9}, {3.43423653581779*^9, 
  3.434236536364679*^9}, {3.4342365949599285`*^9, 3.4342365963974657`*^9}, {
  3.4342380945920687`*^9, 3.4342380990140567`*^9}, {3.434323762731329*^9, 
  3.4343237710284166`*^9}, {3.4343238778124*^9, 3.434323891484625*^9}}],

Cell[BoxData[
 RowBox[{"RGBColor", "[", 
  RowBox[{"0.`", ",", "0.`", ",", "1.`"}], "]"}]], "Output",
 CellChangeTimes->{3.527939307099334*^9}],

Cell[BoxData[
 GraphicsBox[
  {RGBColor[0., 0., 1.], DiskBox[{0, 0}]},
  ImageSize->100]], "Output",
 CellChangeTimes->{3.527939307099334*^9}]
}, Open  ]],

Cell[TextData[{
 "If you really want to get fancy with your user interface beyond these \
simple input forms, you can build a whole Grahical User Interface (GUI).  One \
approach is to use the ",
 StyleBox[ButtonBox["GUIKit",
  BaseStyle->"Link",
  ButtonData->"paclet://GUIKit/tutorial/Overview"],
  FontWeight->"Bold"],
 " package in ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 ".  It is somewhat cumbersome compared to options I prefer using ",
 StyleBox[ButtonBox["J/Link",
  BaseStyle->"Link",
  ButtonData->"paclet://JLink/tutorial/Overview"],
  FontWeight->"Bold"],
 " or ",
 StyleBox[ButtonBox["NETLink",
  BaseStyle->"Link",
  ButtonData->"paclet://NETLink/ref/NETLink"],
  FontWeight->"Bold"],
 " to link to a GUI written in Java or in a .NET language such as C# or \
Visual Basic.  A GUI of that sophistication is beyond the scope of this \
course."
}], "Text",
 CellChangeTimes->{{3.5238326798672*^9, 3.5238327342799997`*^9}, {
   3.5238328613108*^9, 3.5238328765987997`*^9}, {3.5238329266624002`*^9, 
   3.523832926678*^9}, {3.5238329581896*^9, 3.5238330267047997`*^9}, 
   3.5238330587004004`*^9, {3.5238330951576*^9, 3.5238331651392*^9}}],

Cell[CellGroupData[{

Cell[BoxData["Testing"], "Input",
 CellChangeTimes->{{3.5238333827592*^9, 3.5238333827592*^9}}],

Cell[BoxData["Testing"], "Output",
 CellChangeTimes->{3.5279393253071485`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["(#10) Conditional Definitions (5 min)", "Subsection",
 CellChangeTimes->{{3.5238614169834003`*^9, 3.5238614266242*^9}, {
  3.5238622034804*^9, 3.5238622053368*^9}}],

Cell["\<\
For some functions, it may only make sense to define them for certain \
conditions.\
\>", "Text",
 CellChangeTimes->{{3.5238625100048*^9, 3.5238625513136*^9}}],

Cell[TextData[{
 "The ",
 StyleBox[ButtonBox["/;",
  BaseStyle->"Link",
  ButtonData->"paclet://ref/Condition"],
  FontWeight->"Bold"],
 " operator when applied to a definition, means that the definition only \
applies then the test following the rule yields true.  Here is an example.  \
(The first line removes all definitions of f which might already exist.)"
}], "Text",
 CellChangeTimes->{{3.5238614302434*^9, 3.5238614447514*^9}, {
  3.5238615803684*^9, 3.5238616437056*^9}, {3.5238622390796003`*^9, 
  3.5238622840076*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"NameQ", "[", "\"\<f\>\"", "]"}], ",", 
   RowBox[{"Remove", "[", "\"\<f\>\"", "]"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"f", "[", "x_", "]"}], ":=", 
  RowBox[{
   RowBox[{"Sqrt", "[", "x", "]"}], "/;", 
   RowBox[{"x", "\[GreaterEqual]", "0"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"f", "[", "2", "]"}], "\[IndentingNewLine]", 
 RowBox[{"f", "[", 
  RowBox[{"-", "5"}], "]"}]}], "Input",
 CellChangeTimes->{{3.5238616510064*^9, 3.5238616971668*^9}, {
  3.5238619613216*^9, 3.5238620222084*^9}, {3.5238620978216*^9, 
  3.52386211091*^9}, {3.5238625718900003`*^9, 3.5238625841204*^9}}],

Cell[BoxData[
 SqrtBox["2"]], "Output",
 CellChangeTimes->{3.527939651892808*^9}],

Cell[BoxData[
 RowBox[{"f", "[", 
  RowBox[{"-", "5"}], "]"}]], "Output",
 CellChangeTimes->{3.5279396519128065`*^9}]
}, Open  ]],

Cell["\<\
The function f[2] returns unevaluated because the function definition only \
applies when x>3.  If there are several overlapping possible definitions, the \
definitions are used in the order they were made until one matching the \
condition can be found.  Here is an example of an alternate way to implement \
the UnitBox function.\
\>", "Text",
 CellChangeTimes->{{3.52386170492*^9, 3.5238618163664*^9}, {
  3.5238618505304003`*^9, 3.5238618773468*^9}, {3.5238623032424*^9, 
  3.5238623035544*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"NameQ", "[", "\"\<fs\>\"", "]"}], ",", 
   RowBox[{"Remove", "[", "\"\<fs\>\"", "]"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fs", "[", "x_", "]"}], ":=", 
  RowBox[{"1", "/;", 
   RowBox[{
    RowBox[{"Abs", "[", "x", "]"}], "\[LessEqual]", 
    "1"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fs", "[", "x_", "]"}], ":=", "0"}], "\[IndentingNewLine]", 
 RowBox[{"fs", "[", "0.5", "]"}], "\[IndentingNewLine]", 
 RowBox[{"fs", "[", "1.5", "]"}]}], "Input",
 CellChangeTimes->{{3.5238618243691998`*^9, 3.5238618450704*^9}, {
  3.5238619061288*^9, 3.52386193892*^9}, {3.5238620265608*^9, 
  3.5238620485411997`*^9}, {3.5238621171812*^9, 3.5238621235304003`*^9}, {
  3.5238621710168*^9, 3.5238621811879997`*^9}}],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{3.5279397186781325`*^9}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.5279397186781325`*^9}]
}, Open  ]],

Cell["\<\
You can find out which definitions exist for a symbol using ??.\
\>", "Text",
 CellChangeTimes->{{3.523862348108*^9, 3.5238623826776*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"??", "fs"}]], "Input",
 CellChangeTimes->{{3.523862327516*^9, 3.5238623303708*^9}, {
  3.5238624154688*^9, 3.5238624554203997`*^9}}],

Cell[CellGroupData[{

Cell["Global`fs", "Print", "PrintUsage",
 CellChangeTimes->{3.5279397342870398`*^9},
 CellTags->"Info3527918134-5844438"],

Cell[BoxData[
 InterpretationBox[GridBox[{
    {GridBox[{
       {
        RowBox[{
         RowBox[{"fs", "[", "x_", "]"}], ":=", 
         RowBox[{"1", "/;", 
          RowBox[{
           RowBox[{"Abs", "[", "x", "]"}], "\[LessEqual]", "1"}]}]}]},
       {" "},
       {
        RowBox[{
         RowBox[{"fs", "[", "x_", "]"}], ":=", "0"}]}
      },
      BaselinePosition->{Baseline, {1, 1}},
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxItemSize->{"Columns" -> {{
           Scaled[0.999]}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}}]}
   },
   BaselinePosition->{Baseline, {1, 1}},
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}}],
  Definition[$CellContext`fs],
  Editable->False]], "Print",
 CellChangeTimes->{3.5279397343070383`*^9},
 CellTags->"Info3527918134-5844438"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Testing (25 min)", "Section",
 CellChangeTimes->{
  3.523833388266*^9, {3.5238366907704*^9, 3.52383670155*^9}, {
   3.5238367568208*^9, 3.5238367595196*^9}, {3.5238628845608*^9, 
   3.5238628847948*^9}, {3.523864455468*^9, 3.5238644566535997`*^9}, {
   3.523864850586*^9, 3.5238648518496*^9}, {3.52389835384529*^9, 
   3.5238983539262905`*^9}}],

Cell[TextData[{
 "One of the challenges of computaional physics is making sure you believe \
your results.  Sometimes its pretty obvious when a program is giving a wrong \
answer (when ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " gives you an error message, for instance).  In other cases, it requires \
some care to make sure your computations are producing the results you \
expect.  In this section we will discuss strategies for testing your code and \
verifying that it is working as expected."
}], "Text",
 CellChangeTimes->{{3.5238338653296003`*^9, 3.523833947994*^9}, {
  3.5238339917988*^9, 3.5238340166652*^9}}],

Cell[CellGroupData[{

Cell["Use Modular Code", "Subsection",
 CellChangeTimes->{{3.5238340379124002`*^9, 3.5238340434972*^9}, {
  3.52389814813029*^9, 3.5238981513442903`*^9}}],

Cell["\<\
An important concept in effective testing of code is \
\[OpenCurlyDoubleQuote]divide and conquer.\[CloseCurlyDoubleQuote]  This \
consists of breaking your code into isolated units with well-defined \
interfaces.  This let\[CloseCurlyQuote]s you test each piece independently \
and isolate where any problems are.  Breaking a large monolithic computation \
into functions, modules, and packages will pay off in the long run.  It will \
be easier to isolate problems, the code will be easier to understand, it will \
be simpler to make changes in the code, and it will be easier to reuse parts \
of the current project in other projects.\
\>", "Text",
 CellChangeTimes->{{3.5238340581456003`*^9, 3.5238341341800003`*^9}, {
  3.523834330584*^9, 3.5238344310011997`*^9}}],

Cell["\<\
For example, consider the following program to find the allowed radial \
electron energy levels below 3 eV in nanowires of radius 1.5 nm.  (Don\
\[CloseCurlyQuote]t worry about the physics for now.  Jsut look at the \
organization.)\
\>", "Text",
 CellChangeTimes->{{3.5238732839768577`*^9, 3.523873348460305*^9}, {
  3.5238788383147297`*^9, 3.52387884658673*^9}, {3.52387902227273*^9, 
  3.52387906212673*^9}, {3.52388022996373*^9, 3.52388023431573*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"c", "=", 
    RowBox[{"3", "*", 
     RowBox[{"10", "^", "17"}]}]}], ";"}], "\n", 
  RowBox[{"(*", " ", 
   RowBox[{"nm", "/", "s"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"me", "=", "0.511*^6"}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"eV", "/", 
    SuperscriptBox["c", "2"]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"hbar", " ", "=", "6.58212*^-16"}], ";"}], "  ", 
  RowBox[{"(*", " ", 
   RowBox[{"eV", "-", "s"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"Radial", " ", "equation"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"radEqn", " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"r", "^", "2"}], " ", 
      RowBox[{
       RowBox[{"R", "''"}], "[", "r", "]"}]}], "+", 
     RowBox[{"r", " ", 
      RowBox[{
       RowBox[{"R", "'"}], "[", "r", "]"}]}], "-", 
     RowBox[{
      RowBox[{"m", "^", "2"}], " ", 
      RowBox[{"R", "[", "r", "]"}]}]}], "==", 
    RowBox[{
     RowBox[{"-", "2"}], " ", 
     RowBox[{"me", "/", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"hbar", "*", "c"}], ")"}], "^", "2"}]}], " ", "e", " ", 
     RowBox[{"r", "^", "2"}], " ", 
     RowBox[{"R", "[", "r", "]"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"soln", " ", "=", " ", 
    RowBox[{"DSolve", "[", 
     RowBox[{"radEqn", " ", ",", 
      RowBox[{"{", 
       RowBox[{"R", "[", "r", "]"}], "}"}], ",", "r"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "pick", " ", "out", " ", "the", " ", "two", " ", "independent", " ", 
    "solutions"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"rsol", " ", "=", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"R", "[", "r", "]"}], "/.", "soln"}], "//", "First"}]}], ";"}], 
  " ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "pick", " ", "out", " ", "solution", " ", "from", " ", "the", " ", 
    "list"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"r1", " ", "=", 
   RowBox[{"rsol", "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"C", "[", "1", "]"}], "\[Rule]", "1"}], ",", " ", 
      RowBox[{
       RowBox[{"C", "[", "2", "]"}], "\[Rule]", "0"}]}], "}"}]}]}], " ", 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"r2", " ", "=", " ", 
    RowBox[{"rsol", "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"C", "[", "1", "]"}], "\[Rule]", "0"}], ",", 
       RowBox[{
        RowBox[{"C", "[", "2", "]"}], "\[Rule]", "1"}]}], "}"}]}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Find", " ", "roots", " ", "with", " ", "zero", " ", "on", " ", "the", " ",
     "boundary", " ", "of", " ", "a", " ", "circle", " ", "of", " ", "radius",
     " ", "a"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"a", "=", "1.5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rf", "=", 
   RowBox[{
    RowBox[{"r1", "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"r", "\[Rule]", "a"}], ",", 
       RowBox[{"m", "\[Rule]", "0"}]}], "}"}]}], "//", "Chop"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rone", "[", "e_", "]"}], ":=", 
  RowBox[{"Evaluate", "[", "rf", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rg", " ", "=", " ", 
   RowBox[{
    RowBox[{"r2", "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"r", "\[Rule]", "a"}], ",", 
       RowBox[{"m", "\[Rule]", "0"}]}], "}"}]}], "//", "Chop"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"rtwo", "[", "e_", "]"}], ":=", 
   RowBox[{"Evaluate", "[", "rg", "]"}]}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "Convert", " ", "these", " ", "into", " ", "functions", " ", "so", " ", 
     "I", " ", "can", " ", "find", " ", "roots", " ", "for", " ", "r"}], "=", 
    RowBox[{
     RowBox[{"0", " ", "and", " ", "m"}], "=", "0"}]}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"FindRoot", "[", 
     RowBox[{
      RowBox[{"rone", "[", "e", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"e", ",", "i"}], "}"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "0.1", ",", "3", ",", "0.1"}], "}"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"e", "/.", "%"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"l1", "=", 
   RowBox[{"Select", "[", 
    RowBox[{
     RowBox[{"Union", "[", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Round", "[", 
          RowBox[{"#", ",", "0.00001"}], "]"}], "&"}], ",", "%"}], "]"}], 
      "]"}], ",", 
     RowBox[{
      RowBox[{"#", "<", "3"}], "&"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"FindRoot", "[", 
     RowBox[{
      RowBox[{"rtwo", "[", "e", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"e", ",", "i"}], "}"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "0.1", ",", "3", ",", "0.1"}], "}"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"e", "/.", "%"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"l2", "=", 
   RowBox[{"Select", "[", 
    RowBox[{
     RowBox[{"Union", "[", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Round", "[", 
          RowBox[{"#", ",", "0.00001"}], "]"}], "&"}], ",", "%"}], "]"}], 
      "]"}], ",", 
     RowBox[{
      RowBox[{"#", "<", "3"}], "&"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Union", "[", 
   RowBox[{"Join", "[", 
    RowBox[{"l1", ",", "l2"}], "]"}], "]"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "then", " ", "a", " ", "lot", " ", "more", " ", "stuff", " ", "repeating", 
    " ", "this", " ", "for", " ", "other", " ", "m", " ", "values"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "At", " ", "this", " ", "point", " ", "I", " ", "gave", " ", "up", " ", 
    "finding", " ", "the", " ", "roots", " ", "for", " ", "other", " ", "m", 
    " ", "values", " ", "and", " ", "debugging", " ", "this", " ", 
    "further"}], " ", "*)"}]}]}], "Input",
 CellChangeTimes->{{3.5238733664561048`*^9, 3.5238734106245213`*^9}, {
   3.5238756562973375`*^9, 3.523875699252042*^9}, {3.5238759602417297`*^9, 
   3.52387614835973*^9}, {3.52387619184673*^9, 3.52387619240873*^9}, {
   3.5238762227887297`*^9, 3.52387631659373*^9}, {3.52387662294173*^9, 
   3.5238766238997297`*^9}, {3.52387666033473*^9, 3.52387675089073*^9}, 
   3.52387678997373*^9, {3.52387686981173*^9, 3.5238768747227297`*^9}, {
   3.52387755957773*^9, 3.52387759637773*^9}, {3.52387763619973*^9, 
   3.5238776501677303`*^9}, {3.52387788714673*^9, 3.52387788810573*^9}, {
   3.52387803153773*^9, 3.52387803574473*^9}, {3.5238780749907303`*^9, 
   3.52387808545373*^9}, {3.52387812553273*^9, 3.52387812703573*^9}, {
   3.52387818969073*^9, 3.52387819055273*^9}, {3.52387823442273*^9, 
   3.5238782456167297`*^9}, {3.5238788719057302`*^9, 3.52387897351373*^9}, {
   3.52387908348073*^9, 3.52387909445573*^9}, {3.5238791319587297`*^9, 
   3.52387931781273*^9}, {3.5238793706967297`*^9, 3.5238794339657297`*^9}, {
   3.5238794872887297`*^9, 3.5238795360577297`*^9}, {3.5238795885247297`*^9, 
   3.52387981940473*^9}, {3.52387984951373*^9, 3.5238798869647303`*^9}, {
   3.52387992589673*^9, 3.5238800719837303`*^9}, {3.52388011853273*^9, 
   3.52388013381273*^9}, {3.52388050811073*^9, 3.52388051663673*^9}, {
   3.5238866102972183`*^9, 3.523886626888877*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.09806000000000001`", ",", "0.2656`", ",", "0.5166900000000001`", ",", 
   "0.85143`", ",", "1.26983`", ",", "1.77191`", ",", "2.35766`"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.5279397939028664`*^9}]
}, Open  ]],

Cell["\<\
We ran into all kinds of problems getting this to work when written this way. \
 Variables interfered with each other, things got redefined in unexpected \
places, it duplicated functionality was done correctly in one place and \
incorrectly in others.   As a matter of fact, there are some problems with \
illegal roots, disallowed zero energies, zero wave functions and others which \
were never fixed in this version it had become so complicated.  Consider the \
following version which was much easier to get running and alter.\
\>", "Text",
 CellChangeTimes->{{3.52388015347173*^9, 3.52388025024973*^9}, {
  3.523886661048292*^9, 3.5238867119933863`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"Setup", " ", "constant"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"a", "=", "1"}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"radius", " ", "of", " ", "wire", " ", "in", " ", "nm"}], " ", 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Create", " ", 
     RowBox[{"equation", ":", " ", "c"}]}], ",", " ", "me", ",", " ", 
    RowBox[{"and", " ", "hbar", " ", "are", " ", "now", " ", "local"}]}], " ",
    "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"radEqn", " ", "=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"c", "=", "3*^17"}], ",", 
       RowBox[{"(*", " ", 
        RowBox[{"speed", " ", "of", " ", "light", " ", "in", " ", 
         RowBox[{"nm", "/", "s"}]}], " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"me", "=", "0.511*^6"}], ",", 
       RowBox[{"(*", " ", 
        RowBox[{"electron", " ", "mass", " ", "in", " ", 
         RowBox[{"eV", "/", 
          RowBox[{"c", "^", "2"}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"hbar", "=", "6.58212*^-16"}]}], "}"}], ",", " ", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{"hhbar", " ", "in", " ", "eV"}], "-", "s"}], " ", "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"r", "^", "2"}], " ", 
        RowBox[{
         RowBox[{"R", "''"}], "[", "r", "]"}]}], "+", 
       RowBox[{"r", " ", 
        RowBox[{
         RowBox[{"R", "'"}], "[", "r", "]"}]}], "-", 
       RowBox[{
        RowBox[{"m", "^", "2"}], " ", 
        RowBox[{"R", "[", "r", "]"}]}]}], "==", 
      RowBox[{
       RowBox[{"-", "2"}], " ", 
       RowBox[{"me", "/", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"hbar", "*", "c"}], ")"}], "^", "2"}]}], " ", "e", " ", 
       RowBox[{"r", "^", "2"}], " ", 
       RowBox[{"R", "[", "r", "]"}]}]}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"soln", " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"R", "[", "r", "]"}], "/.", 
     RowBox[{"DSolve", "[", 
      RowBox[{"radEqn", ",", " ", 
       RowBox[{"R", "[", "r", "]"}], ",", "r"}], "]"}]}], "//", "First"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"makeFunc", "[", "n_", "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "subf", "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"subf", "=", 
        RowBox[{"soln", "/.", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"C", "[", "1", "]"}], "\[Rule]", "n"}], ",", " ", 
           RowBox[{
            RowBox[{"C", "[", "2", "]"}], "\[Rule]", 
            RowBox[{"(", 
             RowBox[{"1", "-", "n"}], ")"}]}]}], "}"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"subf", "/.", 
         RowBox[{"{", 
          RowBox[{"r", "\[Rule]", "a"}], "}"}]}], "//", "Chop"}]}]}], 
     "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Select", " ", "the", " ", "function", " ", "which", " ", "is", " ", 
    "finite", " ", "at", " ", "the", " ", "origina"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"oval0", " ", "=", " ", 
   RowBox[{
    RowBox[{"makeFunc", "[", "0", "]"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"m", "\[Rule]", "0"}], ",", 
      RowBox[{"e", "\[Rule]", "0"}]}], "}"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"r", "[", "e_", "]"}], ":=", " ", 
   RowBox[{"Evaluate", "[", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Abs", "[", "oval0", "]"}], "<", "Infinity"}], ",", 
      RowBox[{"makeFunc", "[", "0", "]"}], ",", " ", 
      RowBox[{"makeFunc", "[", "1", "]"}]}], "]"}], "]"}]}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "Only", " ", "one", " ", "of", " ", "these", " ", "will", " ", "be", " ", 
     "regular", " ", "at", " ", "0"}], ",", " ", 
    RowBox[{"find", " ", "it"}]}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"uniqueRoots", "[", 
   RowBox[{"f_", ",", "order_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "allRoots", "}"}], ",", "\[IndentingNewLine]", " ", 
    RowBox[{
     RowBox[{"Off", "[", 
      RowBox[{"FindRoot", "::", "lstol"}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"allRoots", " ", "=", " ", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"FindRoot", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"f", "[", "e", "]"}], "/.", 
           RowBox[{"m", "\[Rule]", "order"}]}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"e", ",", "i"}], "}"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "0.1", ",", "3", ",", "0.1"}], "}"}]}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"On", "[", 
      RowBox[{"FindRoot", "::", "lstol"}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"allRoots", " ", "=", " ", 
      RowBox[{"e", "/.", "allRoots"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Select", "[", 
      RowBox[{
       RowBox[{"Union", "[", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Round", "[", 
            RowBox[{"#", ",", " ", "0.000001"}], "]"}], "&"}], ",", " ", 
          "allRoots"}], "]"}], "]"}], ",", " ", 
       RowBox[{
        RowBox[{"0", "<", "#", "<", "3"}], "&"}]}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"append", "[", "f_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"nlst", ",", " ", 
      RowBox[{"lst", "=", 
       RowBox[{"{", "}"}]}], ",", " ", 
      RowBox[{"order", "=", "0"}]}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"While", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"Length", "[", 
          RowBox[{"(", 
           RowBox[{"nlst", "=", 
            RowBox[{"uniqueRoots", "[", 
             RowBox[{"f", ",", " ", "order"}], "]"}]}], ")"}], "]"}], ">", 
         "0"}], " ", "&&", " ", 
        RowBox[{"order", " ", "<", " ", "10"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"lst", "=", 
         RowBox[{"Join", "[", 
          RowBox[{"nlst", ",", " ", "lst"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"order", "++"}]}]}], "\[IndentingNewLine]", "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Union", "[", "lst", "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"append", "[", "r", "]"}]}], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQBmIQfW+1/ioXx1eOTs+jdoJom7S5e0F02qGOoyB6pW/l
WRCd4JjM7Qqk24runwLRXr1HdN2AtFB4swWI5tnJHQmio+8JxoHoe8rcCSC6
IfF0Coj+pPw8B0TraEl3gOhjJpFdIHpJ+OlJINpUw38FiD7y7fI6EL1Ikm0b
iF4lMfEGiD5UMAlMV3XueAWilSIjPoHt2Rlj4g6k3cqVrUB0TcKsFBCdEDYf
TF/5wJANoqX+n6sB0cLOcs0g+gX78zYQ7fRsSS+IPmUfNwFEs/kaTwXRWqL3
toHo+OA9u0B0yeKS/SAaAEMqi5k=
  "]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.22064299999999998`", ",", "0.5601539999999999`", ",", 
   "1.0062579999999999`", ",", "1.162555`", ",", "1.553054`", ",", 
   "1.877808`", ",", "2.1969339999999997`", ",", "2.703106`", ",", 
   "2.857128`", ",", "2.9354139999999997`"}], "}"}]], "Output",
 CellChangeTimes->{3.527939833090123*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Plan Ahead", "Subsection",
 CellChangeTimes->{{3.5238341543976*^9, 3.5238341576424*^9}}],

Cell["\<\
It is a good idea to think about what you expect your code to compute before \
you begin actually writing it.  What would a right answer look like?  How \
will the modules and packages interact with each other?  Are there sections \
of the computations which might consume a lot of resources (CPU time, memory, \
disk space, network access, etc.)?  If so, how might these be optimized.  Are \
there functions or libraries already available which might save you some time?

Code that is not well-planned in advance often ends of full of complicated \
logic and convoluted flow of execution to handle special cases which a tacked \
on as the project evolves.  This makes the code complex and difficult to \
maintain.\
\>", "Text",
 CellChangeTimes->{{3.5238341638668003`*^9, 3.5238343111464*^9}, {
  3.5238344489412003`*^9, 3.5238344508132*^9}, {3.5238346456884003`*^9, 
  3.5238346471548*^9}, {3.5238352500011997`*^9, 3.523835302776*^9}, {
  3.5238868077119575`*^9, 3.523886824831669*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Test the Extremes", "Subsection",
 CellChangeTimes->{{3.5238344981124*^9, 3.5238345014664*^9}}],

Cell["\<\
The cases where problems are most often occur are at the limits of your \
calculations.  Make sure the extreme values are part of your tests.

As an example, consider the following program we wrote to test and see if \
three points in 3D are colinear.  My algorithm notes that if thay are \
colinear, the ratio of the change in distance in each dimension will be the \
same.  The module colinear computes these ratios and then checks to see if \
they are equal.  It is very efficient compared to an alternative approach I \
used earlier.\
\>", "Text",
 CellChangeTimes->{{3.5238345045396*^9, 3.5238345134316*^9}, {
  3.523834549842*^9, 3.5238345911976*^9}, {3.5238347048747997`*^9, 
  3.52383481356*^9}, {3.5238348785495996`*^9, 3.523834918782*^9}, {
  3.523835088198*^9, 3.5238350883696003`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"colinear", "[", 
   RowBox[{"p1_", ",", " ", "p2_", ",", " ", "p3_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "alpha", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"alpha", "=", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"p3", "-", "p1"}], ")"}], "/", 
       RowBox[{"(", 
        RowBox[{"p2", "-", "p1"}], ")"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"alpha", "[", 
       RowBox[{"[", "1", "]"}], "]"}], "\[Equal]", 
      RowBox[{"alpha", "[", 
       RowBox[{"[", "2", "]"}], "]"}], " ", "\[Equal]", 
      RowBox[{"alpha", "[", 
       RowBox[{"[", "3", "]"}], "]"}]}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.5238348699695997`*^9, 3.5238348704532003`*^9}, {
  3.5238349241015997`*^9, 3.5238349251*^9}}],

Cell["\<\
We first tested it with three points we knew were colinear to make sure it \
returned true.  It passed that test great.\
\>", "Text",
 CellChangeTimes->{{3.5238349363476*^9, 3.5238349977492*^9}, {
  3.5238350932992*^9, 3.5238350984784*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"colinear", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "2", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "3", ",", "3"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.5238348699695997`*^9, 3.5238348704532003`*^9}, {
  3.5238349241015997`*^9, 3.5238349251*^9}, {3.523834972134*^9, 
  3.5238349899648*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.527939973042691*^9}]
}, Open  ]],

Cell["\<\
Next we tested to make sure it worked with three points we was sure were not \
along the same line.\
\>", "Text",
 CellChangeTimes->{{3.5238350062824*^9, 3.5238350344091997`*^9}, {
  3.5238351031272*^9, 3.5238351139692*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"colinear", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1"}], ",", "4", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "9", ",", 
     RowBox[{"-", "6"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.5238348699695997`*^9, 3.5238348704532003`*^9}, {
  3.5238349241015997`*^9, 3.5238349251*^9}, {3.523834972134*^9, 
  3.5238349770011997`*^9}, {3.5238350375604*^9, 3.5238350606328*^9}}],

Cell[BoxData["False"], "Output",
 CellChangeTimes->{3.527939974882599*^9}]
}, Open  ]],

Cell["\<\
We were starting to feel like this might be a great solution for our problem. \
 However, there was a problem.  (Have you spotted it already?)  We tried an \
extreme case of the three points lying along a coordinate axis (the x axis in \
this case).\
\>", "Text",
 CellChangeTimes->{{3.523835064252*^9, 3.5238350763264*^9}, {
  3.5238351196476*^9, 3.523835172516*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"colinear", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "0", ",", "0"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.5238348699695997`*^9, 3.5238348704532003`*^9}, {
  3.5238349241015997`*^9, 3.5238349251*^9}, {3.523834972134*^9, 
  3.5238349770011997`*^9}, {3.5238350375604*^9, 3.523835039448*^9}, {
  3.5238351755892*^9, 3.5238351760572*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Power", "::", "infy"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Infinite expression \[NoBreak]\\!\\(1\\/0\\)\[NoBreak] \
encountered. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/infy\\\", ButtonNote -> \
\\\"Power::infy\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.527939976482519*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Power", "::", "infy"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Infinite expression \[NoBreak]\\!\\(1\\/0\\)\[NoBreak] \
encountered. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/infy\\\", ButtonNote -> \
\\\"Power::infy\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.527939976482519*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Infinity", "::", "indet"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Indeterminate expression \[NoBreak]\\!\\(0\\\\ \
ComplexInfinity\\)\[NoBreak] encountered. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/indet\\\", ButtonNote -> \
\\\"Infinity::indet\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5279399765025177`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Infinity", "::", "indet"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Indeterminate expression \[NoBreak]\\!\\(0\\\\ \
ComplexInfinity\\)\[NoBreak] encountered. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/indet\\\", ButtonNote -> \
\\\"Infinity::indet\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5279399765025177`*^9}],

Cell[BoxData[
 RowBox[{"2", "\[Equal]", "Indeterminate", "\[Equal]", 
  "Indeterminate"}]], "Output",
 CellChangeTimes->{3.5279399765025177`*^9}]
}, Open  ]],

Cell["\<\
The routine failed the test because we forgot to consider the possibility \
that the denominator in the computation of alpha could be zero.\
\>", "Text",
 CellChangeTimes->{{3.5238351846684*^9, 3.5238352172724*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Build a Test Suite", "Subsection",
 CellChangeTimes->{{3.5238345281892*^9, 3.5238345325884*^9}}],

Cell["\<\
Build a set of expected inputs and their associated outputs that you are \
pretty sure are correct.  Each time you make a change in the code rerun these \
test cases to make sure they still work.  If you ever find the code \
generating a wrong answer in a particular situation, add a test case that \
will be guarenteed to fail if that particular problem ever creeps into the \
code again.

We had an interesting conversation with an engineer responsible for \
maintaining a complicated control program for missle defense at Hill Air \
Force Base.  He studied the process of maintining code and tracked how the \
number problems in the code changed as code was refined.  He discovered that \
mature code often gets to the point where changes meant to fix the code \
introduce as many errors as they fix.  A good test suite can spot these \
situations and great improve code reliability.\
\>", "Text",
 CellChangeTimes->{{3.5238353131032*^9, 3.5238355282896*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"fc", "[", "x_", "]"}], ":=", 
  RowBox[{"1", "\[VeryThinSpace]", "+", 
   RowBox[{
    SuperscriptBox["x", "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "1"}], "/", "2"}], "+", 
      RowBox[{
       SuperscriptBox["x", "2"], " ", 
       RowBox[{"(", 
        RowBox[{"0.041666666666666664`", "\[VeryThinSpace]", "+", 
         RowBox[{
          SuperscriptBox["x", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "0.001388888888888889`"}], "+", 
            RowBox[{
             SuperscriptBox["x", "2"], " ", 
             RowBox[{"(", 
              RowBox[{"0.0000248015873015873`", "\[VeryThinSpace]", "-", 
               RowBox[{"2.755731922398589`*^-7", " ", 
                SuperscriptBox["x", "2"]}]}], ")"}]}]}], ")"}]}]}], ")"}]}]}],
      ")"}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"f", "[", "0.1", "]"}], "-", 
  RowBox[{"Cos", "[", "0.1", "]"}]}]}], "Input",
 CellChangeTimes->{{3.52389602192229*^9, 3.52389605324329*^9}, {
  3.52389619393929*^9, 3.52389646117429*^9}, {3.527940025780054*^9, 
  3.527940029939846*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "0.9950041652780258`"}], "+", 
  RowBox[{"f", "[", "0.1`", "]"}]}]], "Output",
 CellChangeTimes->{3.5279400155105677`*^9}]
}, Open  ]],

Cell["\<\
Let\[CloseCurlyQuote]s develop an automatic test suite for this function.  I\
\[CloseCurlyQuote]d like to make it so that its easy to add cases, and gives \
me some information about how well it has done.  Let\[CloseCurlyQuote]s start \
by making a list of correct answers.\
\>", "Text",
 CellChangeTimes->{{3.52389647158529*^9, 3.5238965599162903`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"correct", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"Cos", "[", "x", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "0.1"}], ",", "0.1", ",", "0.001"}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.52389656104329*^9, 3.52389660250929*^9}}],

Cell["\<\
Now we\[CloseCurlyQuote]ll make a test unit which will check the function.\
\>", "Text",
 CellChangeTimes->{{3.52389661484029*^9, 3.52389662594429*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"testFc", "[", "correct_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"result", ",", " ", 
      RowBox[{"tolerance", "=", 
       RowBox[{"10", "^", 
        RowBox[{"-", "7"}]}]}]}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"result", " ", "=", " ", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"Abs", "[", 
           RowBox[{
            RowBox[{"fc", "[", 
             RowBox[{"#", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "]"}], "-", 
            RowBox[{"Cos", "[", 
             RowBox[{"#", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "]"}], "<", 
          "tolerance"}], "&"}], ",", "correct"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"Print", " ", "the", " ", "results"}], " ", "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"Print", "[", 
      RowBox[{"StringForm", "[", 
       RowBox[{"\"\<ran `` tests on fc\>\"", ",", 
        RowBox[{"Length", "[", "correct", "]"}]}], "]"}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Print", "[", 
      RowBox[{"StringForm", "[", 
       RowBox[{"\"\<  `` passed\>\"", ",", " ", 
        RowBox[{"Count", "[", 
         RowBox[{"result", ",", " ", "True"}], "]"}]}], "]"}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Print", "[", 
      RowBox[{"StringForm", "[", 
       RowBox[{"\"\<  `` failed\>\"", ",", " ", 
        RowBox[{"Count", "[", 
         RowBox[{"result", ",", " ", "False"}], "]"}]}], "]"}], "]"}], 
     ";"}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.5238966298412905`*^9, 3.52389704071329*^9}, {
   3.52389709603829*^9, 3.5238971380672903`*^9}, {3.52389722292429*^9, 
   3.52389724215429*^9}, {3.5238973215442905`*^9, 3.52389735742429*^9}, 
   3.52389742122729*^9, {3.52389751183829*^9, 3.5238975461862903`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"testFc", "[", "correct", "]"}]], "Input",
 CellChangeTimes->{{3.5238966298412905`*^9, 3.52389704071329*^9}, {
   3.52389709603829*^9, 3.5238971380672903`*^9}, {3.52389722292429*^9, 
   3.52389724215429*^9}, {3.5238973215442905`*^9, 3.52389735742429*^9}, 
   3.52389742122729*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox["\<\"ran \\!\\(201\\) tests on fc\"\>",
  StringForm["ran `` tests on fc", 201],
  Editable->False]], "Print",
 CellChangeTimes->{3.527940062718207*^9}],

Cell[BoxData[
 InterpretationBox["\<\"  \\!\\(201\\) passed\"\>",
  StringForm["  `` passed", 201],
  Editable->False]], "Print",
 CellChangeTimes->{3.5279400627282066`*^9}],

Cell[BoxData[
 InterpretationBox["\<\"  \\!\\(0\\) failed\"\>",
  StringForm["  `` failed", 0],
  Editable->False]], "Print",
 CellChangeTimes->{3.5279400627282066`*^9}]
}, Open  ]]
}, Open  ]],

Cell["\<\
If at some point you notice that the test is missing an important case, you \
can add it in.\
\>", "Text",
 CellChangeTimes->{{3.52389716730529*^9, 3.52389717983229*^9}, {
  3.527940081277279*^9, 3.52794008185725*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"correct", "=", 
   RowBox[{"Append", "[", 
    RowBox[{"correct", ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", 
       RowBox[{"Cos", "[", "10", "]"}]}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.5238971815542903`*^9, 3.5238972783862906`*^9}}],

Cell["\<\
You if you rerun the test, you\[CloseCurlyQuote]ll find it has an additional \
test which fails.\
\>", "Text",
 CellChangeTimes->{{3.52389728917029*^9, 3.52389730395329*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"testFc", "[", "correct", "]"}]], "Input",
 CellChangeTimes->{{3.5238971815542903`*^9, 3.52389732961829*^9}, {
  3.52389738116729*^9, 3.52389738358329*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox["\<\"ran \\!\\(202\\) tests on fc\"\>",
  StringForm["ran `` tests on fc", 202],
  Editable->False]], "Print",
 CellChangeTimes->{3.527940098316427*^9}],

Cell[BoxData[
 InterpretationBox["\<\"  \\!\\(201\\) passed\"\>",
  StringForm["  `` passed", 201],
  Editable->False]], "Print",
 CellChangeTimes->{3.527940098336426*^9}],

Cell[BoxData[
 InterpretationBox["\<\"  \\!\\(1\\) failed\"\>",
  StringForm["  `` failed", 1],
  Editable->False]], "Print",
 CellChangeTimes->{3.527940098336426*^9}]
}, Open  ]]
}, Open  ]],

Cell["\<\
You could get a little fancier and make sure you know about any failed tests \
if the tests were buried in a notebook where you were evaluating the entire \
thing.\
\>", "Text",
 CellChangeTimes->{{3.5238975808012905`*^9, 3.5238976129752903`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"visualTestFc", "[", "correct_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"result", ",", " ", 
      RowBox[{"tolerance", "=", 
       RowBox[{"10", "^", 
        RowBox[{"-", "7"}]}]}], ",", " ", "failures"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"result", " ", "=", " ", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"Abs", "[", 
           RowBox[{
            RowBox[{"fc", "[", 
             RowBox[{"#", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "]"}], "-", 
            RowBox[{"Cos", "[", 
             RowBox[{"#", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "]"}], "<", 
          "tolerance"}], "&"}], ",", "correct"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"Print", " ", "the", " ", "results"}], " ", "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"Print", "[", 
      RowBox[{"StringForm", "[", 
       RowBox[{"\"\<ran `` tests on fc\>\"", ",", 
        RowBox[{"Length", "[", "correct", "]"}]}], "]"}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Print", "[", 
      RowBox[{"StringForm", "[", 
       RowBox[{"\"\<  `` passed\>\"", ",", " ", 
        RowBox[{"Count", "[", 
         RowBox[{"result", ",", " ", "True"}], "]"}]}], "]"}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"failures", " ", "=", " ", 
      RowBox[{"Count", "[", 
       RowBox[{"result", ",", " ", "False"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Print", "[", 
      RowBox[{"StringForm", "[", 
       RowBox[{"\"\<  `` failed\>\"", ",", " ", "failures"}], "]"}], "]"}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"Big", " ", "alert"}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"failures", ">", "0"}], ",", 
       RowBox[{"MessageDialog", "[", 
        RowBox[{"StringForm", "[", 
         RowBox[{
         "\"\<The test suite failed `` tests\>\"", ",", " ", "failures"}], 
         "]"}], "]"}]}], "]"}], ";"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.52389762125929*^9, 3.52389764601629*^9}, {
  3.5238976781332903`*^9, 3.5238976904212904`*^9}, {3.52389792138229*^9, 
  3.52389803585829*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"visualTestFc", "[", "correct", "]"}]], "Input",
 CellChangeTimes->{{3.5238980409292903`*^9, 3.52389804903329*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox["\<\"ran \\!\\(202\\) tests on fc\"\>",
  StringForm["ran `` tests on fc", 202],
  Editable->False]], "Print",
 CellChangeTimes->{3.527940104216132*^9}],

Cell[BoxData[
 InterpretationBox["\<\"  \\!\\(201\\) passed\"\>",
  StringForm["  `` passed", 201],
  Editable->False]], "Print",
 CellChangeTimes->{3.5279401042361307`*^9}],

Cell[BoxData[
 InterpretationBox["\<\"  \\!\\(1\\) failed\"\>",
  StringForm["  `` failed", 1],
  Editable->False]], "Print",
 CellChangeTimes->{3.5279401042361307`*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Find Analytical Test Cases (5 min)\
\>", "Subsection",
 CellChangeTimes->{{3.5238345375492*^9, 3.5238345438048*^9}, {
  3.52389830512829*^9, 3.52389830643929*^9}}],

Cell["\<\
In many cases, you may be able to find simple cases which have known \
solutions.  Perhaps another well-tested program has run a problem similar to \
yours you can compare your answer against.

An example of this case is a program we once worked on to compute the effects \
of scattering electromagnetic waves from aribtrarily shaped objects.  There \
were no exact answers for the problems we were most interested in.  However, \
we could use the code to compute what would happen when we scattered from \
simple shapes like spheres, plates, and cylinders which could be computed \
analytically or with simple series.  Once our program computed results which \
agreed with these canonical cases, we had more confidence in the answers we \
found for more complicated objects.\
\>", "Text",
 CellChangeTimes->{{3.5238355341552*^9, 3.5238357479688*^9}, 
   3.5279401353245764`*^9}],

Cell["\<\
Here is an example of a program we wrong to compute the amplitude of a \
pendulum as a function of time without using the small angle approximation.  \
The pendulum is assumed to have an amplitude amp_ and speed 0 at time t=0.\
\>", "Text",
 CellChangeTimes->{{3.5238942455842905`*^9, 3.52389427428629*^9}, {
  3.5238943052122903`*^9, 3.52389432389929*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"g", "=", "9.8"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"l", "=", "3"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"highPendulum", "[", 
   RowBox[{"l_", ",", " ", "amp_"}], "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "eqn", ",", " ", "soln", ",", " ", "th", ",", " ", "theta", ",", " ", 
      "expr"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"eqn", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"theta", "''"}], "[", "t", "]"}], "\[Equal]", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "g"}], "/", "l"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"theta", "[", "t", "]"}], "]"}]}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Off", "[", 
      RowBox[{"Solve", "::", "ifun"}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"soln", "=", 
      RowBox[{"DSolve", "[", 
       RowBox[{"eqn", ",", 
        RowBox[{"theta", "[", "t", "]"}], ",", "t"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"On", "[", 
      RowBox[{"Solve", "::", "ifun"}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"expr", "=", 
      RowBox[{
       RowBox[{"theta", "[", "t", "]"}], "/.", 
       RowBox[{"soln", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"expr", " ", "=", " ", 
      RowBox[{"expr", "/.", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"C", "[", "1", "]"}], "\[Rule]", "c1"}], ",", " ", 
         RowBox[{
          RowBox[{"C", "[", "2", "]"}], "\[Rule]", "c2"}]}], "}"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"th", "[", "t_", "]"}], ":=", 
      RowBox[{"Evaluate", "[", "expr", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"initCond", " ", "=", " ", 
      RowBox[{"FindRoot", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"th", "[", "0", "]"}], "-", "amp"}], ",", 
          RowBox[{
           RowBox[{"th", "'"}], "[", "0", "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"c1", ",", 
          RowBox[{"-", "1.5"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"c2", ",", "0.5"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"th", "[", "t", "]"}], "/.", "initCond"}], "//", "Chop"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]}], "Input",
 CellChangeTimes->CompressedData["
1:eJwl0GkowwEYBvA1tBHlyFXI5ijXyk2R9sEa/4WWYkIMWStGSM6GRW7G5liu
sBpirg98kHPUEJFikbKSKUlaSOH5+/D2662n3qeXIZTwi6gUCsXnb2DCc4c1
l21iT3pv20NZK88FHvwcu0Pm5zUDcllR/pAy1RYEO307BVDY5ZMLa2nBBVBw
9lYG61MNu3B2Ue6V9GdYtxsL3stdwuDEtGUEFFU9RsPmOAEb0sMPOVBJU3Kh
inOZDYf3x4TQ+iOjDlLpRw1QvDrRAj3S3MdgCtNWDW+a8jTQnNi9BB0M4zew
b//nDhbeaoyw9DTfTOY0/RbJ6EetoMF2erknJMYjmdA0ovaDTnbTgfCsUhcC
WTnzEVAdskG6rmfEws0TZwJ2xBTzYZbUmA5fRswDUL8lUkC5jb0KKvPUC9DV
vKOFnIut5f+9RgevFIN6WJjZeA6lbQ9GmDYnfoLaXsk7/FLFWxG418Qn5aXH
OMJWeokzrDaM+sHmFRPpt+41APashcZD2a1DAUH2WismyP8NSeGe4wzpL4dt
/uM=
  "]],

Cell["\<\
It is instructive to compare the results of this calculation to that using \
the small angle approximation.\
\>", "Text",
 CellChangeTimes->{{3.52389428529329*^9, 3.5238943028442903`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"amp", "=", "1.0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"th1", "[", "t_", "]"}], ":=", 
   RowBox[{"Evaluate", "[", 
    RowBox[{"highPendulum", "[", 
     RowBox[{"l", ",", " ", "amp"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"th1", "[", "t", "]"}], ",", 
     RowBox[{"amp", "*", 
      RowBox[{"Cos", "[", 
       RowBox[{
        RowBox[{"Sqrt", "[", 
         RowBox[{"g", "/", "l"}], "]"}], "t"}], "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "5"}], "}"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Green", ",", "  ", "Red"}], "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->CompressedData["
1:eJwlzmkowwEYBvA1tBHlyFWuzZVr5aYc7YM1tkZLMSFmspQrJGeuzH0MC2uO
ZBpy+8AHIUYNuVIsUlYyhaSFFJ6/D2+/nnrqeWnCIn4umUQiefwdjH1qN2Uz
9cxxty1L2NzCtYN7P4eOkP55RYNsRpgXJE1I/GCHR4cACjvdM2EVxT8HCk7e
imFNonYHTs1LXeL/DOpyYMA7qV0QHJs0DoHi8odw2BglYEJq8D4LyigyNpSz
LtLh0K5CCE0/UqohmXpQC/NXxpqgU5KjAvLo5kp43ZClgoa4rgVopR29hr27
P7dQdKPSwcLjbAPRU/UZJeA/cikFtlFLnCFnNJQO9cNKT2hjMekLT8rUAZCR
MRsClQHrhGsaWiTcOLLlwPaIPD5Mq9clw+dhQz/UbIoHodTMUg5lWco5aG/Y
XoSs882l/1yphpeDAxooSq07hfWSex1Mmsl/hIs9Re/wSx5twsFeA5+Qmxxh
DVuoBbawQjviCRuX9YTf6lcf2L0aGA2bb6xy4NvLagX8KD6T/Pe4rTDGmzwN
vXmuhL/0pQcL
  "]],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0, 1, 0], LineBox[CompressedData["
1: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

     "]]}, 
   {RGBColor[1, 0, 0], LineBox[CompressedData["
1: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

     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  PlotRange->{{0, 5}, {-0.9999999999649071, 0.999999999999986}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{3.527940175442777*^9, 3.5279422889382343`*^9}]
}, Open  ]],

Cell[TextData[{
 "The period of the pendulum in the exact case is a little longer than with \
the small angle approximation.  This makes sense if you think about it a bit. \
 Since ",
 Cell[BoxData[
  FormBox[
   RowBox[{"sin", "(", "\[Theta]", ")"}], TraditionalForm]]],
 " is gets smaller than \[Theta] as \[Theta] increases, the torque at the top \
of the swing will be less than that computed in the small angle \
approximation.  Since the torque is smaller, it takes longer for the pendulum \
to complete the period of its swing.  This \
\[OpenCurlyDoubleQuote]reasonableness\[CloseCurlyDoubleQuote] kind of \
thinking is a good check on numerical answers.  If I had seen a smaller \
period, I would worry that I had a sign wrong somewhere or another numerical \
problem."
}], "Text",
 CellChangeTimes->{{3.5238943436902905`*^9, 3.5238945033932905`*^9}}],

Cell["\<\
A good test case for this code is to see if we get the same answer as the \
small angle approximation when the amplitude is small.  Try an amplitude of \
0.1, which shoudl be a region that the small angle approximation works.  \
Discuss your result with your TA.\
\>", "Text",
 CellChangeTimes->{{3.5238944457782903`*^9, 3.5238944612352905`*^9}, {
  3.52389450875329*^9, 3.5238945575342903`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"amp", "=", "0.1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"th1", "[", "t_", "]"}], ":=", 
   RowBox[{"Evaluate", "[", 
    RowBox[{"highPendulum", "[", 
     RowBox[{"l", ",", " ", "amp"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"th1", "[", "t", "]"}], ",", 
     RowBox[{"amp", "*", 
      RowBox[{"Cos", "[", 
       RowBox[{
        RowBox[{"Sqrt", "[", 
         RowBox[{"g", "/", "l"}], "]"}], "t"}], "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "100"}], "}"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Green", ",", "  ", 
      RowBox[{"{", 
       RowBox[{"Red", ",", "Dashed"}], "}"}]}], "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.52389465695029*^9, 3.52389467916129*^9}, {
  3.5279402163011427`*^9, 3.5279402375102944`*^9}, {3.5279422798185987`*^9, 
  3.5279422806285667`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0, 1, 0], LineBox[CompressedData["
1:eJwBAQT++yFib1JlAgAAAD8AAAACAAAAIo/9o54ewT5u2piZmZm5P7cIKR9t
aJ8/Wanem4yPuT/BeK6kKGivP7FwUC9ucbk/kzbkXA2Otz+xOYzlVT+5P8Yw
cWcGaL8/l0+J8mr5uD98Ff+4/6DDP/cz0A7kn7g/lpJFPvyNxz/Azd9NBzO4
P68PjMP4ess/FdbW6Cmztz/IjNJI9WfPP3Bvf/2vILc/8IQM53iq0T8z+eFB
DHy2P33Dryn3oNM/epyLrL/FtT8KAlNsdZfVP9jCvBFZ/rQ/lkD2rvON1z9V
qLu1dCa0PyN/mfFxhNk/fIWP1Ls+sz+wvTw08HrbPyRgcR/kR7I/yTqDuexn
3z+OlJDz6S+wP6s8E341r+A/ChcoEtggrj/x22SfdKrhP35qzzcuyqs/fhoI
4vKg4z/QRtnpOd2mP5eXTmfvjec/k/jH00Z4mD/Kkdtx6GfvPzgMnkGpipS/
iJiWyZMx8D92uyct0xCavyxoP1ozr/A/rTi0CX6Cn79yB5F7cqrxP7VAB/ql
C6W/Fdc5DBIo8j+U2MURD5mnv7im4pyxpfI/urg+DOsTqr/+RTS+8KDzP3Of
YStByq6/oRXdTpAe9D/piLgLBIGwv0Tlhd8vnPQ/7daCLe+Psb/otC5wzxn1
Pz4AcWUNkbK/i4TXAG+X9T+R+VgAlYOzvy5UgJEOFfY/A4QtysdmtL/SIyki
rpL2P86TWaHzObW/dfPRsk0Q9z9no2kAc/y1vxjDekPtjfc/9rOmfa2ttr+7
kiPUjAv4P+KwT0AYTbe/XmLMZCyJ+D+eqyZrNtq3vwEydfXLBvk/b+IPfJlU
uL+kAR6Ga4T5P7K7iKDhu7i/R9HGFgsC+j++yMT+vQ+5v+qgb6eqf/o/ZIJG
8+xPub+OcBg4Sv36P5fG0EI8fLm/MUDByOl6+z/4MZVAiZS5v9QPalmJ+Ps/
s0qK6MCYub943xLqKHb8Pzgd2+3fiLm/G6+7esjz/D+9d2i98mS5v75+ZAto
cf0/TGladBUtub9hTg2cB+/9P8Afx8pz4bi/BB62LKds/j9FwXrySIK4v6ft
Xr1G6v4/onryad8PuL9KvQdO5mf/PwrBo8OQire/Mf9i9Rbw/z/+qyedLOW2
v4wgX84jPABAWcZsi6Yqtr+AwQwiPIAAQEpifkiqW7W/dGK6dVTEAECSZ7dx
9ni0v2gDaMlsCAFAWf2J21uDs79cpBUdhUwBQG/6V9S8e7K/ROZwxLXUAUCB
XzotTTqwvziHHhjOGAJAElcZCCIFrr8sKMxr5lwCQNFK7+Dueau/E2onExfl
AkBV9YhW0xmmv+Lt3WF49QNAMFeG/53zlL8K1Wg+8isEQP/GPn/PHJC/J7kO
Vw==
     "]], LineBox[CompressedData["
1:eJwBsQJO/SFib1JlAgAAACoAAAACAAAAmrPvVwqOBUCuXlv0o3yPP4H1Sv86
FgZAEjKfoa3Bmz90lvhSU1oGQFO9wrHRz6A/aDempmueBkCFS7+IQ6+jP1B5
AU6cJgdA4d1R3P80qT9EGq+htGoHQJvbVfow1qs/OLtc9cyuB0Aj90UJq12u
PyD9t5z9NghAyto9GB+LsT8UnmXwFXsIQGqivUZ+obI/CD8TRC6/CEC8OD4x
qaazP/zfwJdGAwlA98NwIq+ZtD/vgG7rXkcJQJsNBC+webU/4iEcP3eLCUC5
YOwA3kW2P9bCyZKPzwlA/q83knz9tj/KY3fmpxMKQMSw39bin7c/vgQlOsBX
CkDpIhxVeyy4P7Kl0o3YmwpAKHrHq8SiuD+mRoDh8N8KQECDdwZSArk/muct
NQkkC0DWZfp+y0q5P46I24ghaAtAn5P2a+57uT+CKYncOawLQMbUeZyNlbk/
dso2MFLwC0B8yFCAkZe5P2pr5INqNAxAePQMPfiBuT9dDJLXgngMQOf7q6/V
VLk/UK0/K5u8DEBP8d5aUxC5P0RO7X6zAA1AAA39QbC0uD8475rSy0QNQJOH
ubBAQrg/LJBIJuSIDUB9DsHvbbm3PyAx9nn8zA1AlFtw5rUatz8U0qPNFBEO
QNsC46mqZrY/CHNRIS1VDkBvn6f58Z21P/wT/3RFmQ5AojR1qkTBtD/wtKzI
Xd0OQHDjTP9t0bM/5FVaHHYhD0BX94LxSs+yP8uXtcOmqQ9A1a3xX+eXsD++
OGMXv+0PQHRYjgVkya4/2WyItesYEEDwjoFkiUasP80NNgkEXRBAFPCSW+H0
pj/SSxKYznwQQN3RIsbmWqQ/2InuJpmcEEAAkw4uhrChP+QFp0Qu3BBASKKB
GWlmmD8WDL0fXN8QQJ3QdGKE15c/OCc9PQ==
     "]], LineBox[CompressedData["
1:eJwB4QIe/SFib1JlAgAAAC0AAAACAAAAvJ2kLstPH0AuuSEf4ccrv1b7W6Ng
Xx9AzCYFJpdBaL/ScTl2tp0fQIRaHrndfoy/ZS/6DTENIEBcy0U6swOiv0zb
h6UYHiBAt8Dyb97WpL80hxU9AC8gQCc4SAcNl6e/BN8wbM9QIEALftJyg9Ss
v+yKvgO3YSBA/aH7VAZNr7/TNkybnnIgQEvhsIWD1LC/oo5nym2UIEBKsaZI
hAGzv4o69WFVpSBA9tGRTYr+s79x5oL5PLYgQD4T3j5c6bS/WJIQkSTHIEDT
Vr/JJMG1v0A+nigM2CBAEUm+9B+Ftr8o6ivA8+ggQORbis6bNLe/EJa5V9v5
IEAPpFIM+c63v/hBR+/CCiFAnwMzl6tTuL/f7dSGqhshQJr7UQg7wri/xpli
HpIsIUD73FkTQxq5v65F8LV5PSFAxtkF33Nbub+W8X1NYU4hQDC1iEuShbm/
fp0L5UhfIUALjp8meJi5v2ZJmXwwcCFAO44vTRSUub9N9SYUGIEhQMZFWbpq
eLm/NKG0q/+RIUCQOviDlEW5vxxNQkPnoiFAud6QxL/7uL8E+c/azrMhQH/O
unIvm7i/66RdcrbEIUCDCyEmOyS4v9JQ6wme1SFAcAI+yk6Xt7+6/HihheYh
QG2fBT/q9La/oqgGOW33IUAQoLznoD22v4pUlNBUCCJA2cJJKBlytb9yACJo
PBkiQKZ0W9ELk7S/Wayv/yMqIkC0M8t7Q6Gzv0BYPZcLOyJAFgC305udsr8o
BMsu80siQEnd2NMAibG/+FvmXcJtIkAO8IZ22mGuv+AHdPWpfiJA8OayzSzf
q7/HswGNkY8iQCa/EqwbQ6m/lgsdvGCxIkC7sBQ2ZMijv363qlNIwiJAY9e2
A7vuoL9lYzjrL9MiQM4XZR5IC5y/NLtTGv/0IkACr1sWpx+Qvxxn4bHmBSNA
f2vn1yAihL/cTfL4+AojQIPFSGGxe4C/g8VcLw==
     "]], LineBox[CompressedData["
1:eJwBUQKu/SFib1JlAgAAACQAAAACAAAATE7K0wG/I0Cd1s0RIfeqPxDK9zTa
vyNAOuNAWFMYqz/4dYXMwdAjQJBGVjbnoq0/3yETZKnhI0C5IBNJPgmwP8bN
oPuQ8iNAlKR8Em4ysT+ueS6TeAMkQISJa7H0S7I/liW8KmAUJEAfOGAx0lSz
P37RScJHJSRA+Frn1RVMtD9mfddZLzYkQPJA3vLeMLU/TSll8RZHJEBwdr61
XQK2P/qLdbvdViRAWCzLVNKztj+o7oWFpGYkQKH/WYdHU7c/VlGWT2t2JEAl
pOQ7P+C3PwS0phkyhiRAVCMuBUpauD+yFrfj+JUkQM6qOHAHwbg/X3nHrb+l
JEDqiYxOJhS5Pwzc13eGtSRAHAil9GRTuT+6PuhBTcUkQCxVX2yRfrk/aKH4
CxTVJEA1K0+biZW5PxUECdba5CRA7dLjXDuYuT/CZhmgofQkQMklT5Ckhrk/
cMkpamgEJUAC8yYa02C5Px4sOjQvFCVALeO/2eQmuT/Ljkr+9SMlQKGsR5IH
2bg/ePFayLwzJUASLKvHeHe4PyZUa5KDQyVAPNdbj4UCuD/UtntcSlMlQO8J
D1WKerc/gRmMJhFjJUD28ZiT8t+2Py58nPDXciVAf2YMgjgztj/c3qy6noIl
QFHGULXkdLU/ikG9hGWSJUCWGGe2jaW0PzikzU4soiVAuRmgjdfFsz+Tae7i
ucElQCyVglQe2LE/QMz+rIDRJUAqpH4hosuwP+4uD3dH4SVAKLzVmqZjrz80
pxqeUuwlQCThS0kyyq0/cagH5A==
     "]], LineBox[CompressedData["
1:eJwBQQK+/SFib1JlAgAAACMAAAACAAAA7GJ0EjU5J0BFJj9o7+qqv9mpd9Rc
PCdAS02Y2qBmq7+GDIieI0wnQARuEGu+w62/NG+YaOpbJ0DsuO1knwSwv+LR
qDKxaydA4y8zmqoasb+QNLn8d3snQPSd4JQkI7K/PpfJxj6LJ0CQH5viOx2z
v+v52ZAFmydAl7KGgyoItL+YXOpazKonQCvCR4U247S/Rr/6JJO6J0BRozeU
sq21v/QhC+9ZyidA/a1ogv5mtr+hhBu5INonQJkBIMSHDre/Tucrg+fpJ0AD
LnThyaO3v/xJPE2u+SdAm+rI3E4muL+qrEwXdQkoQPGo6I2vlbi/Vw9d4TsZ
KECsKYXxk/G4vwRybasCKShAyEHwbLM5ub+y1H11yTgoQHq45QXVbbm/qIVk
YuJJKEDDMV7+kY+5v542S0/7WihAelBS24SZub+U5zE8FGwoQJfRRGKki7m/
ipgYKS19KEC6JoVy/WW5v4BJ/xVGjihA8T+a+bIoub92+uUCX58oQF3I0dP9
07i/bKvM73ewKEA4HAiZLGi4v2Ncs9yQwShA507KVaPlt79aDZrJqdIoQN/9
ADHbTLe/UL6AtsLjKED1iGD+YZ62v0ZvZ6Pb9ChA2azpvdnatb88IE6Q9AUp
QIV+1Aj4ArW/MtE0fQ0XKUChZk9shRe0vyiCG2omKClA4QCMslwZs78U5OhD
WEopQMmp9n+q6LC/CpXPMHFbKUDkLD/jVHCvv9tUMjGOZilAUfS2oqHUrb9M
khua
     "]], LineBox[CompressedData["
1:eJwBEQLu/SFib1JlAgAAACAAAAACAAAAnc/EPPSzKkCoWss/PPSqPzoZvJ98
wipAbOkqy00mrT8ne4l5ruQqQEHLnJZwALE/HixwZsf1KkBrd5+o4B+yPxTd
VlPgBitAHbZC1G4usz8Kjj1A+RcrQBihHYsfK7Q/AD8kLRIpK0DdpQbtBxW1
P/bvChorOitA0mtrn07rtT/soPEGREsrQDtXEJQsrbY/4lHY81xcK0AN7Jy+
7Vm3P9gCv+B1bStA4K5ruPHwtz/Os6XNjn4rQBT0JFKscbg/xGSMuqePK0BU
RLwSptu4P7oVc6fAoCtAEJN3o3wuuT+xxlmU2bErQFN3tijjabk/qHdAgfLC
K0Bs7z2Hoo25P54oJ24L1CtAdgrblZmZuT+U2Q1bJOUrQAkwPDu9jbk/ior0
Rz32K0BDye13GGq5P4A72zRWByxAFOJzXMwuuT927MEhbxgsQKIdh+sP3Lg/
bJ2oDogpLEAALIjoL3K4P2JOj/ugOixANvpJko7xtz9Y/3XouUssQHkyYEqj
Wrc/TrBc1dJcLEC0cy0p+q22P0RhQ8LrbSxAUAD7fjPstT87EiqvBH8sQOiW
ckIDFrU/zgFayc2PLEA23+vTnzC0P2DxieOWoCxAfVgu3hw5sz+E0OkXKcIs
QC3cIOI+F7E/FsAZMvLSLEDzWM8+mt2vP7hLj7s24SxAP31tbRDPrT9pCOoa

     "]], LineBox[CompressedData["
1:eJwBsQFO/iFib1JlAgAAABoAAAACAAAAnDqatJ86NkA4yBs90MGzv+KaXlGR
QDZAdxq2UhVstL+WcGQifkg2QAUKJajBQLW/SUZq82pQNkBbVvmyawS2v/wb
cMRXWDZAo6aUPHe2tr+w8XWVRGA2QLQtVShWVre/Y8d7ZjFoNkB6SK/iiOO3
v2Q8Jk72bzZAav+zwWdbuL9msdA1u3c2QNZGXXSMwLi/ZyZ7HYB/NkDWySp0
qRK5v2ibJQVFhzZANMTl0n9Rub9qENDsCY82QBbHgmnffLm/a4V61M6WNkDj
4/f7ppS5v2z6JLyTnjZANenzUcSYub9ub8+jWKY2QLh9aUQ0ibm/cOR5ix2u
NkC86Oa/Ama5v3FZJHPitTZAHUu5u0ovub9yzs5ap702QNj63yU25bi/dEN5
QmzFNkBFrtrD/Ye4v3a4IyoxzTZAqDdjCOkXuL93Lc4R9tQ2QMbHKd5Nlbe/
eKJ4+brcNkDoF7FnkAC3v3oXI+F/5DZA63hutCJatr98jM3IROw2QIuoWGuE
orW/fQF4sAn0NkBZbBdrQtq0v8hXXlxe9jZA5crNngabtL8FO9Lk
     "]], LineBox[CompressedData["
1:eJwBoQFe/iFib1JlAgAAABkAAAACAAAAI5hKj+r3N0AUg+G66MKzP7CLG3Uw
/DdA87rIdDE+tD+yAMZc9QM4QEUWjm4zErU/s3VwRLoLOEDP8+luANa1P7Tq
Gix/EzhAcniuNwKJtj+2X8UTRBs4QEMvJXavKrc/uNRv+wgjOEBQjkoqjLq3
P7lJGuPNKjhAjFrTAyo4uD+6vsTKkjI4QHGJxLQoo7g/vDNvslc6OEBGk205
Nvu4P72oGZocQjhAKT2cFQ9AuT++HcSB4Uk4QOKr54Z+cbk/wJJuaaZROEDl
I/erXo+5P8EHGVFrWThABzKvoJiZuT/moy5K2WE4QO/LHKFujrk/DEBEQ0dq
OECF/3UDJGy5PzLcWTy1cjhAmF7dtdcyuT9YeG81I3s4QHyPwWe94rg/fhSF
LpGDOEC0v5lcHXy4P6Swmif/izhAZA2NLFT/tz/KTLAgbZQ4QNJwLXPSbLc/
7+jFGducOEBh/HpsHMW2PxSF2xJJpThAZBJxgMkItj86IfELt604QAGBbL2D
OLU/WFbBhgm0OEANghiPqI+0P4n6s20=
     "]], LineBox[CompressedData["
1:eJwVjXs01GkAhiddtEkUShOqTSqqXdKNpu/9yqVULt1cKkVSWFp0GU0hJTUp
FIviFBHVMGLMzM+hr6KIkuiqdLGtbptLKDGHtX885/3jOe95pnrvXrtDjcfj
eQzy/6b0WVRVjAccNNtspmyZw55sDrhtrQ+0rR9eOO6ON6vj1x88NwVYrdV7
SVIdy+7+daHD1Rxw6dF6O6Epk1V01zvGzAeqz2pn9lzKZrfWj5DIFwNvLn6s
PuKay0rHBfrqLQMmBC4VqIvyWEnwxXIbO+DkO+MDfi1SpqhrmLLHAQh8mKeZ
w7/OCk9bvaxfC/hON+IxqyLmdX7M8JKNQGNCiiBwqoxp5zbPzfAA9Ho/Xwvr
kTEmk7sd9wQEEbFXBayYBd0SR+32Bro/qDB5r5wZ1npKNvoCoVUfzyZMVLD7
jRZPBf7A1pN6znoSBRN9GMGbHgQ8cWgYtXi2kpl2Nc4aHQL86VaSnJqqZC94
0nWdewFl/+F1zZ1KdlzzyKHGMCDT4872B1YcW8h3zbl1CFjqdObLtCCOtZiY
Pco9DLR7Z1veOMWxpHkDvXHRgHqP9YMjqRyzQYPx/hNAZNkf5wISONa5OsfR
8xQwL1z1WrSXY5nuIqFtAjAs59qCaluOufg6Zc5OAvzUB6JFahzjhU67r5MK
rAmPfV1+TcmkET+6e9OAOHGjawtVMs/YmsnNFwEn/sdXlncUTDP1wsp7WYCd
WNiqtUDBSrNDQwtyB/+xdh4tiXIWUGifniwBTJj9B8vmYsZnkyrDC4D5GhY/
oo2K2b2atvYdMkC4T2QY7CBjwufl/DVKYA5PT3LOt4g97QgImnQTeKT87Zf9
IddZdD9JUasATvflp+VtL2CWGrq3P1UC5UKjby7x+eyMcame8iEwcYV4W+2r
K4yax5MLDYBu3EmL3u05rF3g43fsGaBQnezreZ7FHF1Hl61/A3wPnfS2YuYF
Nkq82aejFfj9m4/0pVkUK3NbYhPTBmwSmqrmHoxkuy4NU7LvQK5wWrhrmBe5
WyrRON0/6IvtGroaxSSqTVVoOoZi1k+bpcuzM4i5qu7V2HEUGmFxOs+XZ5G3
I7NH/NSjuPggyj6v/jJZ+usaj0pDirTOTG9L7hr5Onfq0fypFBG2Ugd9zXyS
Zt2dlzSdImkTK39kXEB616cP8ZlD8fRvP5dPVoXkilew2SpzCp192sMNzYuI
W5DtBov5FCFlcaZ++jKiLpoYMXExhdPl6EP8dhmRx3zN5QkoYnnmTScUxWRH
4q36D6DYe/hjjUGQnOhmJKlqbSheauS8t9VRkIo8PxP5CoqrBd520ZcVJLRE
4Jy+mkJryL9du2YoicyjUu2FM0Wfv7RgIF1Jvvc6F+tuoDAM8K816FeShecb
dzq7U1RI2eNd9hwRWvvwY7dQbPGP0s4I4wj38uv9Si+KuS6Sh8mJHOkV7Y8Y
6kvhvoc7YZnCEWuDIRbEn0Idzt2hRzlysFT8/kAQBX/oTI1d7hwp26ybLA+h
yDKZ/X3hBI70q9JXfttH8Y9uS/vkG0qC9BmqOSKKuyXLtYMdleSw4Hq+XwRF
l+xVX3yVgtxusvLKPkLhwL0/+3O2ggwLr9B5F0PRyo2IXnRQTmyNHO8axFIs
yw+ubpUXk2M3ngnd4iludwQa1TXJSKWnl1liIsUUxVv3zI4iMnLgc9PDFIrz
yyzKl3QWEjHpX2afQTG+4eudsPICUvMmpjsqm6Ipvr9t/kwpGR05NvfGFYr2
vrr9AxIJibtprLmgkOIAs9rp5J9D6rbls2D5oNevOX8pJ4uMG7IoJK+E4kvi
VrPx9Rkkka56ZlxOwUusiojqSCZP3j0+sa2S4p447nJWVwIZH+W5JK1msDec
1CpqY4i61GGPSS1FDU8n3D8ykvwHTYG6PA==
     "]], 
    LineBox[{{36.310017533541476`, -0.0925688914882852}, {
     36.31828548865394, -0.09312340136626976}, {
     36.35135730910395, -0.09513263129952614}, {
     36.384429129553965`, -0.09680257486603591}, {
     36.417500950003976`, -0.0981272946895755}, {
     36.45057277045399, -0.09910208149671862}, {
     36.483644590904, -0.09972347038871658}, {
     36.51671641135401, -0.09998925280119711}, {
     36.54978823180403, -0.09989848412182022}, {
     36.58286005225404, -0.09945148694704366}, {
     36.61593187270405, -0.09864984996998906}, {
     36.64900369315407, -0.0974964225021385}, {
     36.68207551360408, -0.09599530464237646}, {
     36.715147334054095`, -0.09415183311778508}, {
     36.72286444174499, -0.09367308419155908}}], LineBox[CompressedData["
1:eJwVkHssFAAcx6/bUaJkek0UxWxCaZ7t2O/U/LJUctJQSYlMCInJ49KqOyu1
K05m5BF51DjuVfLTVe6Iktl5tZbt8giLNF2Suv747rvv9t33u31sziQGnWMy
GAwnvf57k7NfwRNjBK4zu3y42IyYbs5CmSmCMtSC01OSRkk10sWf5voctUfL
NOFT4C3V23RLBFkHWrdZFlH78hFXhTVCRauN+IZRKe1KGiz5ZYuQMN0/eWim
nNaGTMZnOCE4lc0rd+bVULY6SfPMBSHTzFcT5FVHM3sXfX67Iby+8P5OQG8D
dW8zXpfpg7CP88V0h6aR2MJ76a2+CAuFXuHRC01Uz7IcXfJDMDPL7thi2EwW
aVX+3gcRmMEOJ/xZLZQ36SjOOoJgzLUKNZhtocVwiUUbF2Eis52RppZQ7Dvv
a8vHER7VuEQO3JLSIHRM+ZxAiP0xYpjMltGB5sPBOacRvO7oSh9pZCS3G2il
KITv0Ty+NkxO9kURdoxYhIxKe65ELafC1RO3IR4hsHK1Y/M2BRlmXVzgJSEw
SOmRH6Gg1G+6Uy9TEVaOVw8Z8xWkjbyqWpGBUJ1nNGH4QEHB/Ua7fbP1vDYF
9SQKFfTKT1iUm4vQMPWxIOCSvh/9vCfjBkLy9lPSv74KYt3UMlPy9H8Ch6C4
P3Kyq1njGZePMOYwu1FVKSc/lXv8WSECOzNAGeYup5jxiIrwQj2PcN1klkRG
/JWCAW4xQr3upkxkI6Nae7FJQCnC0vUx0dYrUurCEc7+CoTenBefREoJTcWw
0tjVCLvn/54U6VrIhO/U4FqHMNM+PNdm1UKH1Tkb7cQIDz1m5gM9xZQ48fig
lRQBuqpKYFcT3V3Vx9vwDCH/a1tx5OZG6jtgO2WgRJjNTbfNFdTT/PlD1stv
EO6fNT/63LyW1gsuH1voRBANHSvrFlRTSKeaxj4g6HjRsU855TTsH39fNYow
NNdbYJrCp9DPmul8rX4v4QWLk8qjf1yhZwE=
     "]], 
    LineBox[{{57.17909719289236, -0.09241409575039906}, {
     57.198747403028655`, -0.09371145000633432}, {
     57.23149775325585, -0.09561070607360493}, {
     57.26424810348304, -0.09717557079806374}, {
     57.29699845371024, -0.0984005882355736}, {
     57.329748803937434`, -0.0992814879075075}, {
     57.362499154164624`, -0.09981519926681072}, {
     57.39524950439182, -0.09999986208935395}, {
     57.42799985461902, -0.09983483276521136}, {
     57.460750204846214`, -0.09932068647462422}, {
     57.49350055507341, -0.09845921524340748}, {
     57.52625090530061, -0.09725342188248268}, {
     57.559001255527804`, -0.09570750982621344}, {
     57.591751605755, -0.09382686889433696}, {
     57.59338912326631, -0.09372416292577786}}], 
    LineBox[{{58.9148657549337, 0.09217010570996738}, {58.93451596506999, 
     0.09348836946068749}, {58.96726631529719, 0.0954230840445644}, {
     59.000016665524385`, 0.09702406149011795}, {59.03276701575158, 
     0.098285719854034}, {59.06551736597878, 0.09920366086812919}, {
     59.098267716205974`, 0.09977468484008246}, {59.13101806643317, 
     0.09999680148280306}, {59.16376841666037, 0.09986923664594886}, {
     59.196518766887564`, 0.09939243493328416}, {59.229269117114754`, 
     0.09856805819956593}, {59.26201946734195, 0.09739897993058004}, {
     59.292566427882846`, 0.09600143339229626}, {59.323113388423735`, 
     0.09431178026980412}, {59.33380482461302, 0.0936523137138717}}], 
    LineBox[CompressedData["
1:eJwBIQPe/CFib1JlAgAAADEAAAACAAAAx1vnKk1OUEC71Ak1YJgZP2Sdz9BH
UFBA1hxlXkhFdz+eIKAcPVRQQBQ1tBVDLpE/DooxyC1WUEDLIxS2Ra6WP3/z
wnMeWFBAfhO4vNscnD9gxuXK/1tQQNufhT6RWqM/0C93dvBdUECsIBk+WOul
P0GZCCLhX1BASj53WklrqD8ibCt5wmNQQLk6McELMa0/ktW8JLNlUEDLyCOn
M3OvPwM/TtCjZ1BAwyvG15rOsD90qN97lGlQQPBUaIi01rE/5BFxJ4VrUEAo
Z4dzHNGyP1R7AtN1bVBANQ/zsxK9sz/F5JN+Zm9QQO2FvoLimbQ/Nk4lKldx
UEC/Vf6/4ma1P6a3ttVHc1BAsZ1lcnYjtj8WIUiBOHVQQI7cbz0Nz7Y/h4rZ
LCl3UECxXMzNI2m3P/jzatgZeVBA2zvIO0Txtz9oXfyDCntQQBnWe2MGZ7g/
2MaNL/t8UEBVqIcyEMq4P0kwH9vrflBA+Pkz6xUauT+6mbCG3IBQQIV/zVza
Vrk/KgNCMs2CUED8yB8RL4C5P5ps0929hFBAUbf0bvSVuT8L1mSJroZQQPlw
htEZmLk/fD/2NJ+IUEDJVteUnYa5P+yoh+CPilBANnLpFo1huT9cEhmMgIxQ
QAK31K0EKbk/zXuqN3GOUEAiV8GSL924Pz7lO+NhkFBAaFfRwUd+uD+uTs2O
UpJQQLeXCs+VDLg/HrheOkOUUEC3s1iwcIi3P48h8OUzllBAf3vEfD3ytj8A
i4GRJJhQQNdcBSFvSrY/cPQSPRWaUEAg6ZcJhpG1P+BdpOgFnFBAOruLwg/I
tD9RxzWU9p1QQGlsQo2m7rM/MppY69ehUEA6zjsmoQ6yP6ID6pbIo1BADX8R
vnQJsT8TbXtCuaVQQM8L0shn7q8/9D+emZqpUECQzwvRjl2rP7bl40ddsVBA
WGuNjOJOoT8mT3XzTbNQQIVGBbQMSp0/l7gGnz61UEDF+WBV1N+XP3iLKfYf
uVBAiGb/LSmxiT9seTdMrbpQQB3UAzujxIA/dR4SGcu6UEBpoRBL6RiAP+oU
aog=
     "]], LineBox[CompressedData["
1:eJwB4QIe/SFib1JlAgAAAC0AAAACAAAAquEtS+4sUUASF2O8t/MaP6JKkz0J
LVFAYZt2vBM2Oj+IF0T9dDVRQNpHw9G7gpg/wkow7Y83UUBdU42tTF+eP/t9
HN2qOVFAalAqjTIQoj9u5PS84D1RQAZZDoi9nac/qBfhrPs/UUCn1w50t0Wq
P+FKzZwWQlFAolKxBPDVrD9UsaV8TEZRQLCOheL40rA/juSRbGdIUUALxpdI
sfCxP8cXflyCSlFAxucgkTL+sj8AS2pMnUxRQAtBYZOJ+rM/On5WPLhOUUCb
yHu00uS0P3SxQizTUFFAJFsNsjq8tT+u5C4c7lJRQHR1uF3/f7Y/6BcbDAlV
UUDp5hZJcC+3PyFLB/wjV1FAx3WSYe/Jtz801UPSGllRQDIZsRO3Rrg/Rl+A
qBFbUUDy/h4LaLC4P1jpvH4IXVFAk4jVba8GuT9qc/lU/15RQDvT6ptJSbk/
fP01K/ZgUUDe8BljAni5P4+HcgHtYlFA0J5+JrWSuT+iEa/X42RRQIKDbvpM
mbk/tJvrrdpmUUAiuGC0xIu5P8YlKITRaFFA9vna7iZquT/Yr2RayGpRQKZj
YgGONLk/6jmhML9sUUCQDHTsI+u4P/3D3Qa2blFATHOQOSKOuD8QThrdrHBR
QFpAa8/RHbg/IthWs6NyUUDhrFe6ipq3PzRik4madFFA4OIQ6bMEtz9G7M9f
kXZRQFbcBN7CXLY/WHYMNoh4UUBY1E9VO6O1P2oASQx/elFAlhue367YtD+P
FMK4bH5RQCMRVuwPE7M/op7+jmOAUUAR5oSSYRmyP7QoO2VaglFAeQyof3UR
sT/YPLQRSIZRQMuGFV9YtK0/6sbw5z6IUUAUClSgGVmrP/xQLb41ilFAJ9kC
LlToqD8hZaZqI45RQCf97CzyzaM/ao2Yw/6VUUBZL42HFN6RP3wX1Zn1l1FA
VX9tmCqBiD8Kf4K6bplRQCTo/3TFB4A/mphNWQ==
     "]], 
    LineBox[{{71.1968767571692, -0.09790616430377252}, {
     71.20301490244826, -0.09812579469660399}, {
     71.23370562884335, -0.09904259646058927}, {
     71.26439635523843, -0.09965522563623526}, {
     71.29508708163351, -0.09996180695928686}, {
     71.32577780802859, -0.09996140202411899}, {
     71.35904830800268, -0.09961421008688938}, {
     71.39231880797676, -0.09890752050303595}, {
     71.4122811079612, -0.09831195180834798}}], LineBox[CompressedData["
1:eJwVkH1MzAEYx0/mZE0zbE7ut9QqtGJnlDXyWJZzyssTxSm664UpWr/TVFqS
oxbVdVk0V50kN1dxqe6uOU+S7ke0nLespLZWSBLn3eL88dl3n7++28dDnoIJ
Tjweb4WD/1syhV2vMhGC/P8WJa3kk5u1JPiLw7ft9MxS+66m7tSM9Z+yEPL7
xmXSsHTKFcpgPBvBK7/DZ015HgVYxRve5yDYL0wP1GSVUKVQEDKsRMjd9Gvi
dr2G0Po3ZOgMwuIhw4KxuZeJz45uHMhH6E/MkonuXqEUa0to7zmEroeeIbYx
HXmxlZueFyGEROornOL11Cs8I7apEB7Wik4v6qwnYHdJHp1HWBU4uCRgsYHs
wnVbHpQhpMyQ5Cp9G0ln9QrrvOj4T9Mm+vvcojmMPbxNg7BXUOOT+rGJOqx9
Wy2VCO5rZ3zXmJspnb23rVWLsGS0OSZU0UJ+jH67sRoh2rVY0OtmpEGrekdT
DUKSZH5G1w0jnWcz0VCL8FMp7daJTCRm5BENOoTkp/b2mVoT/bFu3qm/jlDg
3dBQ/MtEBla0S1eHsHV8oO87mCmRWRh5tQGhxyegbabCTG4cL6r6JkKw6/Ol
F1Rm6mbfRlU1IlScqNlTVG6mXKZnt6YJQXnA5j5SaKYAzrinvAVh0e/kl9cO
m+k9WyUtMyG0XxTEj68xUyWTt7e0FYHdPywcmjARckeiVbcRYk1ivUVtIr4i
MqbwDsIsmfz1Yw8TtTLB+wraHL1+nEpKrjDSEc57f167o+e99YbpfCN5KmbH
KjsQdDvmSWdHt9AL5mvsyU4El68j0+Zqm6mA65dlcwhlhZce6GxN9Jmpi0t/
hJBhG5pazr9FtVxpfFo3gvq1dEDl3EhSxfEEtgeBP2W5dPDPTWrnJAeSnyGk
BXqruWP1VKp4dyi2H8F5e/GbtINXyC00MzViAOEQb8R3+L6WqgUu6aGDCC+e
5iRc9tNQo8XvtN8wQrhcHOckKqEgleWs+wjC8g9yuzAojyaPzv8mGUWYZJY9
iTmRQ/8A4I96NA==
     "]], LineBox[CompressedData["
1:eJwB8QIO/SFib1JlAgAAAC4AAAACAAAA0bt6liw4VECG30X+QtAuv/PnjnFC
OVRABQtbvCsFa78c28qiOztUQHTSH8klJIK/b8FCBS4/VEAHkk3Jy1qUv5i0
fjYnQVRA0ggQTB/pmb/Cp7pnIENUQN4hBcvaYp+/FI4yyhJHVEAy7XpOmwOl
vz6BbvsLSVRA6mfiY7GUp79ndKosBUtUQOTH6K4KE6q/uloij/dOVEBksI8w
rM+uv+RNXsDwUFRA+ctK/hiFsL8NQZrx6VJUQGaFhJE8lbG/NjTWIuNUVED1
+Ln6aJeyv2AnElTcVlRA0ifJhNGKs7+KGk6F1VhUQFJAWz21brS/sw2Kts5a
VEB4hPmLX0K1v9wAxufHXFRAwPwbvygFtr8G9AEZwV5UQB180o52tra/+LCY
juRgVEAyiGugOmK3v+ttLwQIY1RA7t9TzDL4t7/eKsZ5K2VUQOJsa6/Td7i/
0Odc705nVEDlsE2wpuC4v8Kk82RyaVRA98muakoyub+1YYralWtUQEFhYgdz
bLm/qB4hULltVECKh9GA6o65v5rbt8Xcb1RAzWOy05CZub+MmE47AHJUQAz/
4RtcjLm/f1XlsCN0VEB3j02dWGe5v3ISfCZHdlRAdYvluKgqub9kzxKcanhU
QJCcoc2E1ri/VoypEY56VECdc6kFO2u4v0lJQIexfFRAN57DDy/pt788Btf8
1H5UQG7yOMXZULe/LsNtcviAVEBJDWm8yKK2vyCABOgbg1RAx9ZayJ3ftb8T
PZtdP4VUQNwOo2UOCLW/Bvox02KHVECzmQoV4xy0v/i2yEiGiVRA+4hupPYe
s7/qc1++qYtUQDXtZGY1D7K/3TD2M82NVEA10kJZnO6wv8KqIx8UklRAwboq
Qkn+rL+0Z7qUN5RUQBElJ6QVZaq/pyRRCluWVEDus0mjQbOnv4yefvWhmlRA
/UG8w9kPor9WktnLL6NUQOmV7IrWU4i/viYVpZOkVEBwyUIH5VSAvzyAcNc=

     "]], LineBox[CompressedData["
1:eJwBAQP+/CFib1JlAgAAAC8AAAACAAAA4kQ7qGBDV0Bk2Fyhv68wP0ZfzyvE
Q1dAY5AsjUgmVj9uZ5hPp0dXQH5/c8GXLYk/vncql21PV0Ce/BnykjShP9L7
DilfUVdA3k/zouTSoz/mf/O6UFNXQDK8VR/uYaY/Doi83jNXV0CiCTs7U0qr
PyIMoXAlWVdAcITPNOefrT82kIUCF1tXQDIqu5em3q8/XphOJvpeV0DFsuyK
aAiyP3IcM7jrYFdABvJe3oAAsz+GoBdK3WJXQCbwsK316bM/miT8285kV0BD
ntZ5E8S0P66o4G3AZldA/5SYmjKOtT/CLMX/sWhXQM+ue723R7Y/1rCpkaNq
V0Bw+wpbFPC2P+o0jiOVbFdA+s85IseGtz//uHK1hm5XQGa+m1lcC7g/3Aay
i6JwV0D58EuDQYa4P7pU8WG+cldABrw+JO3quD+XojA42nRXQFdLfkoEObk/
dPBvDvZ2V0C7bYhsQHC5P1E+r+QReVdAaVU2p2+QuT8ujO66LXtXQNaAeul0
mbk/C9otkUl9V0CnH9kNSIu5P+gnbWdlf1dAmv6K4fVluT/Fdaw9gYFXQOGE
RhmgKbk/osPrE52DV0C9xLUzfda4P4ARK+q4hVdACSusSdhsuD9dX2rA1IdX
QGcWOswQ7bc/Oq2plvCJV0A3osgwmle3Pxj76GwMjFdAfml0i/ustj/1SChD
KI5XQMDr6hfP7bU/0pZnGUSQV0DooxuxwRq1P6/kpu9fkldARQQcOJI0tD+M
MubFe5RXQGbrq+oQPLM/R85kcrOYV0CbiEIxrBexPyQcpEjPmldAKWV0f3Lb
rz8CauMe65xXQAbJcWOnaq0/vAViyyKhV0AoKZMSUjuoP5lToaE+o1dAIoye
6nqBpT92oeB3WqVXQFwfPGIgtKI/MD1fJJKpV0CrqO4MNtKZPw2Lnvqtq1dA
I/0jH2Phkz/q2N3Qya1XQC3JKJUKvYs/ZAVKq6+vV0DnSsd2PtWAP75XMVzN
r1dAQMIXvSYqgD87q2Ny
     "]], LineBox[CompressedData["
1:eJwBoQJe/SFib1JlAgAAACkAAAACAAAAalx0WvcOEkBdk075YFOevx5yQdkX
GhJACnfaDq8eoL8q7vn2rFkSQK5H3VxQdaW/MCzWhXd5EkBghMz4wgeovzZq
shRCmRJANWtnG9qGqr9C5moy19gSQE0Bacj9Qq+/SCRHwaH4EkAhoWqMHb6w
v05iI1BsGBNAQfg0xUDNsb9Z3tttAVgTQGccQ4K4v7O/Xhy4/Mt3E0DoFBhs
fKG0v2RalIuWlxNAwAXh76Rytb9qmHAaYbcTQGSTBBOKMra/cNZMqSvXE0D7
TEzCkeC2v3YUKTj29hNAAOs9SzB8t798UgXHwBYUQJcb48noBLi/gpDhVYs2
FEC4pbqKTXq4v4jOveRVVhRABKCWYADcuL+ODJpzIHYUQHcYNO6yKbm/lEp2
AuuVFEBM02DjJmO5v5qIUpG1tRRAvMWLLS6Iub+fxi4ggNUUQOWkpBurmLm/
pAQLr0r1FEAuXDZ1kJS5v6pC5z0VFRVA3YivhOF7ub+wgMPM3zQVQDpH0xSy
Trm/tr6fW6pUFUCpu1NhJg25v7z8e+p0dBVAPeae+nK3uL/COlh5P5QVQHuF
7ZzcTbi/yHg0CAq0FUBbKqv6t9C3v862EJfU0xVA5y5WemlAt7/U9Owln/MV
QIQR/udknba/2jLJtGkTFkBm0Y4aLei1v+BwpUM0MxZAllUgjVMhtb/lroHS
/lIWQKKoiex3SbS/6uxdYclyFkBp54CZR2Gzv/AqOvCTkhZAGCqaH31psr/8
pvINKdIWQH6q1DpCTrC/AuXOnPPxFkB6FCCwBlmuvwgjqyu+ERdAI8UFChj9
q78Un2NJU1EXQAfKUeWRA6e/Gt0/2B1xF0Asp+Rf+2mkvzb/OA2aghdAyf3x
LsP0or+IHT1A
     "]], LineBox[CompressedData["
1:eJwBsQJO/SFib1JlAgAAACoAAAACAAAAGJqUcG0EGUD7C7Cc2GaeP7by3Tip
ChlAd6kpH6l5nz8zabsL/0gZQNGdaCZf/aQ/ciQq9SloGUDUT+PIRIanP7Df
mN5UhxlA4DOfl/P8qT8sVnaxqsUZQFTLGL0crK4/ahHlmtXkGUDn5VTae3Cw
P6jMU4QABBpARYXX8i9+sT8kQzFXVkIaQAhPjL40cLM/Yv6fQIFhGkDS5Ge2
BFO0P6C5DiqsgBpATnZP+homtT/edH0T158aQG6QnpTU6LU/HDDs/AG/GkAp
kC07m5q2P1rrWuYs3hpAhaMwweU6tz+YpsnPV/0aQD6y6344ybc/1mE4uYIc
G0D/sfuuJUW4PxUdp6KtOxtA26v9wE2uuD9U2BWM2FobQLwzY6FfBLk/kpOE
dQN6G0DHRkv2GEe5P9BO814umRtA13U9UUZ2uT8OCmJIWbgbQNLwq1XDkbk/
TMXQMYTXG0DVgifUepm5P4qAPxuv9htAfts22maNuT/IO64E2hUcQNatyLaQ
bbk/Bvcc7gQ1HECARz7zEDq5P0Syi9cvVBxAilQSQQ/zuD+CbfrAWnMcQGOh
JVzCmLg/wChpqoWSHEBK38Hhbyu4P/7j15OwsRxA7cNoHGyrtz88n0Z929Ac
QDRkjMQZGbc/elq1ZgbwHEBgZlS26XS2P7gVJFAxDx1Ab6eanFq/tT/30JI5
XC4dQLEyUZH4+LQ/NowBI4dNHUAG9YqzXCK0P3RHcAyybB1Au2dosyw8sz/w
vU3fB6sdQDh17uTiQ7E/Lnm8yDLKHUBsi9mvTjOwP2w0K7Jd6R1AGssYwmAs
rj/oqgiFsyceQDMDRHygc6k/JmZ3bt5GHkA0Ox+rw/imP2Qh5lcJZh5A+7EJ
gx1spD9SK8KwvHgeQD8IOpXO3KI/A1YzAw==
     "]], LineBox[CompressedData["
1:eJwBEQLu/SFib1JlAgAAACAAAAACAAAAKmt8ET8vLkDBLhoN9RKrvxZnCFhx
My5ADzRNdua2q787RmiMA1UuQOKOyoK9TbC/zjWYpsxlLkBkrQFIdnGxv2Al
yMCVdi5ACMRbp4WFsr+EBCj1J5guQBywNWTZerS/FvRXD/GoLkA7PFaWXFq1
v6jjhym6uS5AFU75mLUmtr8607dDg8ouQFHxzXYt37a/zcLnXUzbLkCmxs0R
H4O3v2CyF3gV7C5AWK3ws/cRuL/yoUeS3vwuQIk/d483i7i/hJF3rKcNL0Bs
HnQucu64vxaBp8ZwHi9ALF9J0U47ub+ocNfgOS8vQE4r3LuIcbm/O2AH+wJA
L0C88Exx75C5v85PNxXMUC9AolIO3maZub9gP2cvlWEvQCKHQHDnirm/8i6X
SV5yL0BuBEIefmW5v4Qex2Mngy9AaG5xW0wpub8WDvd98JMvQJa4J/uH1ri/
qf0mmLmkL0B/h/wBe224vzztVrKCtS9AwSFyZYPut7/O3IbMS8YvQF3RMboS
Wre/YMy25hTXL0Dihw3RrbC2v/K75gDe5y9AKwAIQ+zytb+FqxYbp/gvQAt/
sex3IbW/jE2jGrgEMEBhyzRZDD20vx490zSBFTBASMzyI5I+sr/nNOvB5R0w
QCmoROlMJrG/sCwDT0omMEBTq+FVQ/2vv3y+pm5DLjBA/Dw/C9qwrb88mfVX

     "]], LineBox[CompressedData["
1:eJwBkQFu/iFib1JlAgAAABgAAAACAAAAaRSMNmLtPkDUXQ37BNCzP2SGltln
8j5AtWnTRdtftD9fRP2Txvo+QAsc4gfyQLU/WgJkTiUDP0Ap+gfKDw+2P1bA
ygiECz9A33nC/3zJtj9RfjHD4hM/QPk1LbCTb7c/TDyYfUEcP0DQNrYGwAC4
P0j6/jegJD9AA4O404B8uD9DuGXy/iw/QOX1pPxn4rg/PnbMrF01P0DJcG7b
GjK5Pzk0M2e8PT9Afwj7jFJruT808pkhG0Y/QGjoZy7cjbk/L7AA3HlOP0CZ
Q/kImZm5PypuZ5bYVj9A1PWarH6OuT8lLM5QN18/QB504fiWbLk/IOo0C5Zn
P0C5g4UUADS5Pxuom8X0bz9APfRfU+zkuD8WZgKAU3g/QKFu9Qqif7g/ESRp
OrKAP0Ckaa1VewS4Pwziz/QQiT9AKpjaxOVztz8HoDavb5E/QCnGxgFizrY/
Al6dac6ZP0DdJwBegxS2P/0bBCQtoj9ADa4yU+9GtT/4s7xS36g/QOUR46XC
lLQ/UjivRQ==
     "]], 
    LineBox[{{64.24009758309285, -0.09791836043536677}, {
     64.26483625863973, -0.09872717069615151}, {
     64.29575960307332, -0.09946096885858098}, {
     64.32668294750691, -0.09988466711510549}, {
     64.3576062919405, -0.0999969488337065}, {
     64.38852963637407, -0.0997974651110152}, {
     64.41945298080766, -0.0992868358239545}, {
     64.45037632524125, -0.09846664776127294}, {
     64.45501482690635, -0.0983170650808973}}], 
    LineBox[{{76.4119527105272, 0.09780357556530953}, {76.41804433219852, 
     0.09802695385732497}, {76.4485024405551, 0.0989654027214912}, {
     76.47896054891167, 0.09960450400627513}, {76.50941865726824, 
     0.09994233093937469}, {76.53987676562483, 0.09997786508455085}, {
     76.57033487398141, 0.09971099932013155}, {76.60079298233799, 
     0.0991425381522433}, {76.62820527985892, 0.09837445675643214}, {
     76.63155567177823, 0.09826400563635045}}], LineBox[CompressedData["
1:eJwBoQFe/iFib1JlAgAAABkAAAACAAAAg87FqKF9NEC3YUPph8mzP6TbF5jD
hDRAzZJWVEeUtD9YsR1psIw0QDO3ZHXiZbU/C4cjOp2UNECz4a2mXSa2P75c
KQuKnDRA8svwPR/Vtj9yMi/cdqQ0QCGNHMCbcbc/JQg1rWOsNED6kFBOVvu3
P9jdOn5QtDRAyvY9B+FxuD+Ms0BPPbw0QBuxrlzd1Lg/P4lGICrENEC5J/9c
/CO5P/JeTPEWzDRAwUhf8P5euT+mNFLCA9Q0QDfBtwm2hbk/WQpYk/DbNEAI
qBfLApi5PwzgXWTd4zRAUjeWndaVuT/AtWM1yus0QHZUmzwzf7k/dItpBrfz
NEBorYi0KlS5Pydhb9ej+zRARijEVN8UuT/aNnWokAM1QEBaK5WDwbg/jgx7
eX0LNUC7xf7uWVq4P0HigEpqEzVADc5aqbTftz/0t4YbVxs1QJGqW5n1Ubc/
qI2M7EMjNUDuQRHWjbG2P1tjkr0wKzVAMLhvYP3+tT8OOZiOHTM1QBWrcb/S
OrU/w9CoSUQ4NUB6saTSKbK0P/NRvBE=
     "]], 
    LineBox[{{67.71851022047794, -0.09791311284443287}, {
     67.74975963075525, -0.09890352851974954}, {
     67.78265374683664, -0.09960582606289607}, {
     67.81554786291804, -0.09995674093869314}, {
     67.84844197899942, -0.09995503932094504}, {
     67.8813360950808, -0.09960072719248185}, {
     67.91423021116219, -0.0988950503247536}, {
     67.93561138661511, -0.09824906540253375}}], 
    LineBox[{{79.89255939660211, 0.09788010759661266}, {79.90797664272674, 
     0.09841234398117309}, {79.938811134976, 0.09924760965848178}, {
     79.96964562722528, 0.09977521366009597}, {80.00048011947456, 
     0.09999352584897366}, {80.03131461172384, 0.09990187173147454}, {
     80.06214910397311, 0.09950053447881428}, {80.09298359622238, 
     0.09879075407845124}, {80.10840084234701, 0.09832084596741793}}], 
    LineBox[{{92.06881058453845, -0.09792814896448902}, {
     92.08703213824177, -0.0985413827816395}, {
     92.11740139441403, -0.09932606002885261}, {
     92.1477706505863, -0.09981205222572215}, {
     92.17813990675856, -0.0999979027706071}, {
     92.20850916293082, -0.0998830546563506}, {
     92.23887841910309, -0.0994678520896079}, {
     92.26924767527535, -0.09875353949020492}, {
     92.28139537774419, -0.098384513229417}, {
     92.28382491823808, -0.0983050201522604}}], LineBox[CompressedData["
1:eJwBkQFu/iFib1JlAgAAABgAAAACAAAAPFLimY+1OUDq8ghDV86zv/KlpC52
uzlAuGGwZsN2tL8YQron5MM5QFHlp4aLV7W/Pt7PIFLMOUDuVBfmACW2v2R6
5RnA1DlAIOgj82netr+KFvsSLt05QEfBfkIfg7e/sLIQDJzlOUCdrGcjjBK4
v9VOJgUK7jlAY2TXIi+MuL/66jv+d/Y5QLOTdn2a77i/IIdR9+X+OUD7nBSA
dDy5v0YjZ/BTBzpAm15e1ndyub9sv3zpwQ86QMnqocdzkbm/kluS4i8YOkD4
Y3hhTJm5v7j3p9udIDpADRQ7kPqJub/ek73UCyk6QN9uNCWMY7m/AzDTzXkx
OkCWI4nKIya5vyjM6MbnOTpAh8jg5PjRuL9OaP6/VUI6QGYp4WJXZ7i/dAQU
ucNKOkAL8Jp6n+a3v5qgKbIxUzpAt1sSVUVQt7/APD+rn1s6QJQiG6jQpLa/
5thUpA1kOkAcdMs+3OS1vwx1ap17bDpAun3XcBURtb+5YeezRnA6QL2rlZWD
q7S//dnDZQ==
     "]], 
    LineBox[{{38.04557669996993, 0.09231275171681225}, {38.073358287657264`, 
     0.09412490141361343}, {38.104226718420975`, 0.09586036124396059}, {
     38.13509514918468, 0.09729797257457894}, {38.16596357994839, 
     0.09843328255902076}, {38.1968320107121, 0.09926277513677881}, {
     38.227700441475804`, 0.09978388161370555}, {38.258568872239515`, 
     0.0999949883847168}, {38.289437303003226`, 0.0998954417820292}, {
     38.32030573376693, 0.09948555003850482}, {38.35117416453064, 
     0.09876658236189581}, {38.38204259529435, 0.09774076512197419}, {
     38.412911026058055`, 0.09641127515872673}, {38.443779456821765`, 
     0.09478223022608304}, {38.463843936818165`, 0.09356506697823262}}], 
    LineBox[{{48.483386153448436`, 0.092460822951671}, {48.508195910742764`, 
     0.09407420475976162}, {48.539208107360665`, 0.09582502525159431}, {
     48.57022030397856, 0.09727532760301036}, {48.60123250059646, 
     0.09842057771568147}, {48.63224469721436, 0.09925719563175373}, {
     48.66325689383226, 0.09978256640729029}, {48.69426909045016, 
     0.09999504804748068}, {48.725281287068064`, 0.09989397648625108}, {
     48.756293483685965`, 0.09947966759946233}, {48.78730568030387, 
     0.09875341624734238}, {48.81831787692177, 0.09771749234822566}, {
     48.84933007353967, 0.0963751339920983}, {48.88034227015757, 
     0.09473053760898945}, {48.89739897829743, 0.09369900554620093}}], 
    LineBox[{{60.65801556406069, -0.09243909920372446}, {
     60.66717965222293, -0.09305771436311998}, {
     60.697726612763816`, -0.09493476128331466}, {
     60.728273573304705`, -0.09652293742714056}, {
     60.758820533845594`, -0.0978174250963781}, {
     60.78936749438648, -0.09881429803664625}, {
     60.81991445492737, -0.09951053301467583}, {
     60.85046141546827, -0.09990401872359704}, {
     60.88100837600916, -0.09999356199721764}, {
     60.91155533655005, -0.09977889132013973}, {
     60.94210229709094, -0.09926065762633794}, {
     60.97264925763183, -0.09844043238452656}, {
     61.00319621817272, -0.09732070297433278}, {
     61.033743178713614`, -0.09590486536300928}, {
     61.06429013925451, -0.0941972140982472}, {
     61.0719268793897, -0.09372529322556601}}], 
    LineBox[{{72.93607000677432, 0.09790305296471088}, {72.95603230675877, 
     0.09857367347383501}, {72.98930280673285, 0.09940636207976195}, {
     73.02257330670693, 0.09988030067329869}, {73.05584380668103, 
     0.09999378450864199}, {73.0891143066551, 0.0997464053991134}, {
     73.12238480662919, 0.09913905314132793}, {73.15066473160716, 
     0.09834137052630701}}], 
    LineBox[{{45.00342438441826, 0.09236379641633458}, {45.02667529483121, 
     0.09389127193436492}, {45.059890881135416`, 0.09578561157091778}, {
     45.09310646743962, 0.09733536753794995}, {45.12632205374382, 
     0.09853498210023576}, {45.15953764004803, 0.0993801537749142}, {
     45.19275322635224, 0.09986785231743632}, {45.22596881265644, 
     0.09999632926878685}, {45.25918439896064, 0.09976512403752111}, {
     45.29239998526485, 0.09917506550148063}, {45.32561557156906, 
     0.09822826912521754}, {45.35883115787326, 0.09692812960027578}, {
     45.39204674417746, 0.09527930902668429}, {45.41695843390563, 
     0.093817382369938}}], 
    LineBox[{{83.37178319332034, 0.09790474739108983}, {83.3851488996516, 
     0.09836769419629987}, {83.41856316547988, 0.09927383011240148}, {
     83.45197743130817, 0.09981859070941373}, {83.48539169713644, 
     0.09999999951135224}, {83.51880596296472, 0.09981739836277097}, {
     83.552220228793, 0.09927144974501743}, {83.58563449462127, 
     0.09836413444475202}, {83.58730520791262, 0.09830933629646932}}], 
    LineBox[{{95.54740586530161, -0.09792959596649471}, {
     95.5721176376151, -0.09873520072075634}, {
     95.60506666736636, -0.09950328149716843}, {
     95.63801569711762, -0.099919167532997}, {
     95.67096472686889, -0.09998139166651772}, {
     95.70391375662015, -0.09968973438882636}, {
     95.73686278637142, -0.09904522459497542}, {
     95.7615745586849, -0.09833160399521847}}]}, 
   {RGBColor[1, 0, 0], Dashing[{Small, Small}], LineBox[CompressedData["
1:eJwUm3c4Fd4bwCUrVLJnkT2y9zovbiUhRZK0ySokpJBdSLI3IXuPO4ljFCok
FEWFrL6lJBKpfvf3133O8577nvOec57P/bx/XIkL3sdcGBkYGAq2MTD8/3Pv
/T8P83d3GIu/zczKyqIhCpv8nituD5C44oOjMfdpqCOwtljOrQ5tKnPxnr5K
QynaM07bEyioXaUgWwXRULfqVVcWN4yORxuekl2nomC+f9R/BV1IynCre9AD
KkpP3m+8ea8H6RB+mPuqU1HdzviuXzefI0/d683nGymoN37IfNX1Bep2/Hmt
dg8FLUVxzgdWvkQj/QXDz2+SUUhXnfxawTCysSNFGTwmIXZG28v+Ga9Q89Id
oXubRJQOP2t/3BtFd9Ozsk9LEZFkaNb3q1Fv0DJFiOOEYROqbzXUXLo5ji4M
qH9U2d+InupH0r64fkCig+73UpXqUZUhzy2tukk0WbTaGi9Ui76POz/wq5xC
TPMn0wmdVeiWMNv0csFHlGjhpbNnpBRlZFi7frs3jwZco1Ynz2eiZ0njVxdc
vyHqnGcST2kqjslMf5qitoScDXrjw5SysZIbctSoW0JxvJ/EHfIfYF/WpCDf
yu+ofukrS55QCeYb1ePklltGYh862NdLyzC1dDq3oWQZIW3fIy0Slfjvfs22
pYIfiOEEmZk8WosL+d5ZJ+5eQfvjnrDm3anHhNnoDyq5Kygn57D+2fQGvEBU
9nkhtIoGJTyqLTMa8d2oUQbvjFU0U1NokxPbhJXtwpJ28P1EjXcnMuMvE/GQ
pPze2uSfyOvLIU4vRML+P142WnGtoU/+1OGsLWQs2HXTbPHeGjrzeovh9UYy
bkmWHInn+IWePxdXDjpKwWcu9Dkrxf6iv4+UXLn3FLxF3X/1Ocs6erXZMMvl
QMXFW3bf9oxaR5ssjQojbVR88GU3PwfjBpKYZMuR4Kbh/wq8yypDN5ArbaOJ
cpSGE3wEdS3+bKAprT1+ziE0rAYdvZ9u/kaEemIEcxoNj+z0OBn76zeqZ35o
EZNJw4EfuP+TC9hEeWWC2/67Q8MidS03e39soq8B5Bc6F2m47ZYzh9vVP2ip
0fxmggINn7fensv67Q+K3MWXKfyeipl2k5XKLv9Fdm9emAveouKyxTOtB/77
i8Tv2W4fZqdii1ZW6znXf2jbCYgviaJgtX8XVvmX/iHn/a/vWb0n43jxswOS
hgzQHPS6e2gvGYd1cO41DGOAM/1rIdPHSNjvQrO/3WMGCDxdPm3oTcRuW92e
XmbbAuVRV04RA5uwUzGfWLTlFvCfvdKl5NOICXM+j0kj9PGL73yM++qx7p3d
ggOCjFCpsC3ty0INVpLr85xzYoTE/e6yqk5VmMdDlkdglhHet01YWK2X4OnF
d+cDV7eCQM1DR+3KVPw64S4pUY8JmHU0uay07uFnKnrbKkKYICROJVP5dxhu
vJpa/4aZGSiLZlES17xQ+KrFP31+FhC4tD3q545c5Jf+65itIwt88T1yi/tn
AXLTKS31zGcBJmG13M2Rh8jmxhbrXBlWmALVm0YnKxBBuK6Q6MEKTleOrN1c
r0K6LU6rfbWsUMzkeftdaC0S/0PJ/aPNBm7HE/Z8zm5AvPkuS3xBbBDvlzgX
U9+I2BAPQRmzwaAsb/4ksQltfmjPOLB1GyjcTSvbUkZE38K8Pp85uA28ihn0
OW+T0LSEKLp+dxsY7b+tqn6UjF53Pk2+/2IbvBjY+5TCSkHPLl6fK+NhBzKW
ObZSTkFtTNL67SfY4b9y8e5jmlTUWDJ0byyHHWa8M48fq6Ci0gNhU0sf2KE+
SfT9bVYayp7fp7VNigMen9GwzrKmoYSY8RgJNw54MDi8evAWDUXIx07oVXOA
WJZI16V0Ggp4pq16bIkDPlqze36gjz08ZyI9NDkhc5forYZQGjrNmTwaEcgJ
7Dn1bss2NGRTgxRzHnHC2Gnjs/3sNESwXrzVxLAdYv5e1I6soSLdb9lDzwnb
QWnnHxkPPSpSSjSXmYnZDlSvq7cWaylIXO3njc2+7fB3Ocbg3g4K4h162M+7
awdEsezJfOdARmzXjkrsO74Dft6XDLudQEKbPP/89mftgNwO15+m9US0RKzu
Pf1uB5SbdLtOtjWhmeOOogESO8HZ88CiUUsjep5B6iqt2AmWQzNc28LrUZvu
RQG8uBPit+y6wJFVi95cjiF9FuSCvht3mFp5qlH/du1tTKe5oLRkVaCptRQN
HebOHAjmAhOtsGdfJYrRWOxXmaxcLhD2PL//u38hmmEuIyhPcEGX4W3L2c8Z
aPOPQJjDqV0wgBcPDSUfQ4yGKzskg3ZBkFzs0u3jvpjt5mDeYvYusPxkt+dW
QRTm+RnTEvF2F9wP2p1wrTwNK3xd/1l9khuCd9VZrTWUYFWl19HXb3DDFSbB
JzvNyrG2RyOvaRY3VC+/k85pr8Smcx7qo2PccNCP8If3Rh02lzrYUfiLG5w+
Bb0QHqvH1hckbS4L8sCr2ABzwbkGfPL9+JUtDjwQWLd/O8PrJnxGlLr5/DoP
HOdYb3YkE7GzY+rd9AweGM5PSme6TcIemT7C5yk88EzSxdyeQMY+ry0rFEd5
4OvokC95iYwDeOV1f/7kgcx3b/Zlx1Fw8DHmnnZ+XpCmsF2P3kXFEYlTx+9q
88Kvcs80jmgqjhlonTluzwv8QfJXX8xQcQJn9jXxAF44yxDzPlKVhlMtAhg/
p/HC5DeRic+uNJwdcyyJROKFKz++d72No+EH3criYa944T+rWG/NLBouZuKo
s1jlBVWRSOvFZBquNJ034uPjg0dTP7zZA2m4Pqyr74MmH8z8OHKr0JyGyW0P
TlXa8YHLp9WaMSYafrQZ9J+fHx/ombnkz1VTcae+ww2UygfxbPrK3CZU3Buo
ycZO5IMrr7hMGzsoeIDMlTEyzAd258Jv7VOh4JGVL9IPfvBB10fX1fVYMn6r
/pTozsMPA9zt3blDJDzpU2KmqcEP9YQzpIptJDxbGz709xg/xBx6V9epQsT/
fTl9/qkvPxycELfO2N+ElxT0l1KS+aFt7JXZzOFGvFm6vF1+iB8EgvGKAJ2n
jLMDuT++84NuVaSKG08tZpOsUmzbJQAxrLWMzsQqzPvg4iHbowKQrxj2xYlU
ioXfoTGxqwLwK8G/8ZxQMRYXEXVdSBSA6/y50upXCrFixkhUyKAA9BAXgvrf
ZGDT+/vby44IAuE4o5+k+1EcZkGsGPIShB99jy6mKPmiNmbJlD/3BMHCYJS5
9lgU0g9muGTbJwg/k+c2nx1KQ4E63kdufRYE78zaRK+ubERefqdbwS4EdS62
NEXeAqTh3sLxz1wIJsrv81QdLUG+Ugqr8m5C4GNwerl0rAzVf8h8b3dHCMTu
SMUoWFUiJfuAhsonQsBWH+1stFaLPHbNZr+aEQKbtJ0LGan1qLzPNoqBSRgY
uyOjaAUNSMpM7YS9qTB8avEbMLnfhC78fQDh54Xh9hXNa/I+RFRA26FQHSYM
jQIDaYYmJPTeL4Rn9IEwlNy/d+DNFjISVf2yuQULwwrf3+MeDWTk+NlxTum9
MFC5r/e6HqGgzNKnL078EYaBbd7oxDgFvT6vS4sQFYExdTOHPjsq4hMrK6ox
EIEoSwUG9xYqshvjix9zFAHBkl2t73bQUHJKlP/WmyIg/knx8yc6jwetf5xR
zhKBAHbGb6eCaGgH+wXzk1QRkAn8cGpXKg1ZPhlUixoVge8zQTvWMmkoLgyJ
1P0UgbTVfoNtcTTUa1DL9JZPFO6f+n3N1pWGWNZEvzJpiQITv3PWkiqdx413
R1XsRMG398Vz9nkqiriy0e54TRQUzfsPjsdSUbuce2V0sig8KDmtXylERX8/
jqbUN4jCIuv22IF0CjJ8cCBkfFAUlMuKE2q2UNBNR9IlliVRiGGp7KMDA1H5
pGzUdoqBheFC0vUiElobTNZzUhYDl2TzdN83RKQdv0XyjpUYlHGbxx9kICK/
gz6cjZfFICj3bHm+QBNaarX6wFolBt+vV2bUCTcg5RuPetWfiQE+LJvzg7Ue
XdZUbDz9SQzq7v6Zz3pZgxYq2aKbZHeDqMox/6hdFUjm0nWv9wd2A/NPRV2P
lFLkLDF3Ytul3XCOLSt7eGsxmszoUjhbvBt0OZJpDj556E3UrUF2iT2gK1Bl
9cY8BAnCIk0L9sCeZj1jTpFTyP73qYfnzu6BcgH7Yulwbzx0VS+AnLcHFDoN
vPMsE7CLysZ2te3ioLkkFzR7tQhbjt8pEdwtDiIvuwuIpiVY8w6fEYOKOBge
iL8tyVCOmT6oXn5hIw7cqlZBa9o1+Etc21bKeXGI/rzClltVh4e1LXPyfcVB
wMx5pGFLAy5KcH12JVUcPmfZrf6Ub8Jx+qvnj5eIg6hV0eo5KSK+OhexbkgW
h93BB8u9OUnYIZkrSapHHP6wxiUemSJhMM6X4xwTh0+fFWuMi8hY7j/F9h8L
4vCLSV/+njUFc6XTToyvi0PED4vNvFkK/mVy8FsnuwSYceTemL9ExR8WR25X
ikgA52xs/4+XVNyddWF3spIEfNBddjsvQ8O1+5dIN4wkgF1SzPEj3U/Tv4dY
nbeWgI99E8kmdD7fyuOYNT8rATjxochJOp8vHcoKVvWRADn2CxqiSTRstSrD
KxguAX6sXE7JV2lYs5BY9S9JAmyWRmzH9GlY1MrUbL6IHn/3amPPIt1v11+8
HWiSAGWTDun6GCr+XHzal/xYAnzumZye2U7FQzaft+W/koCeqqQ4pRAKbt4M
LIyekwBz69AkzlEyLipn0buyJgG/OXTHRETJOM4uddCObS88HrFuZbIiYV+G
vW6GQnvBJuj6ZqQHEZ+srvsnqbAXAkejGd38mzA4GGVwGOyFEbBSS/RqxHJM
z5V/HKbPH+Xg/WLfgH+dmjvdeWUv1E+evJu0XIPTOcQenWvYC60v7YVTDz7E
tyiVtuade+FhpPKeQo8C7HJR97PK8F6QdbjC7/MnG2u22Ar/W9kLXJoB7K+4
E/CwR1xgnq4k9ERqVurVRKBmfkGu6EOSsFe0/GXIQAIq6iwpu+woCWxq0wdH
3dOQr3DHa4NgSbgawLoYm1GAHLutvSTvScKSr8XqrWsPkYnvBDNHviQUzq5/
pBmVIq5na5pvsSTo7CfDQnIV+uUf3dcxKAmNjS8j/wnWog8SPM4VU5JQJVJ9
YcSkHnX3F/xOXJaE2b4IIQe3BlR7QzklcKsUzH36E/L3ViNKl36kcI5XCvaI
/st9GtWEbr081HlQWgrK+eQnnwUS0aWQ0ZMq2lIg2nNkXtKRhKzkXb7zH5SC
hIN7bVnlyGjjrn/LO3spaFzEYeuvyKj8a3R08SUpyBDIFn5+lYLsj6Yf8QyQ
gpElNh+G3xTERCwVUr8tBf25VulKV+n+y0/5+CtNCvhaWfH3YSo6e6OnBpdI
gaBBdcQWSRrinBi9fpskBbM6nbvFztBQs/GCidUTKVhsJpbxRdOQW+EvDt5X
UpCdsku5L4OG+Ji2vX47IwVvJgRG1ej+23lJqKBwRQrciiMWDobRkM9TeQ83
JmlIPHm7Z489De1W0tdU4ZWGnMEtn98K0NDzBIu/q5LSoPdysb3yCRUFfnfs
faQhDS/2i98ZPEtFMnaeyZFm0nBTLUIgb46CRshBTha20hAWO1Xm40hB4ULx
MrsuSkPyx6SQ5hYyUg7OXRr1lYbfWYJpv9jJaOJ9dXN+hDTIRSgYU8xJKM6k
NcolWRr2ZltUJ/oTkW5xv7VSkTTs47sQrJTchFLcv07TOqThfk9CbmxeA4K+
v9VhL6XhznGz42P36tFX5Z3XD05Jg9jpKxws07XIYkWF4xWDDBzjnPi4KVOJ
GEKvaiwhGfDdwhmxI/EBqp0K/0M+IgMvPi5XOQtko1OE5J6QszJgGKNRxxSX
isjbmk5xhMrAFGG0pyA6Al1OXYmUaZOBmcvaJ9T+xWHhNSbrxX4ZqKhOK64T
T8E9J/kEie9kIFFPOiOjMRPv3aNdbfJHBjoPh6nnPS/EbyqujzgZykIEu0vK
oZ9V+DZnTL6kpSwIGnvGn7auxZremW7/nZKFyP5P3moH6/H0y3L1Bk9ZOG34
QcbcsQEnatI2rwfJQk41873Ms43YOONpt/FdWWD/Eqlha9+EP6+/SWTOkQV5
0/OIaETEmU7/OfZVysLz3X+ZmPhI+ADekEpplgWmB5NZGeMkvCLB8e3kM1no
VTzv9DKRjAujRGjib2VhLOy5j4QmBVvPK0bOf5KF/54karA8oeDNQ4ZWteuy
YM+nWsBpRsWV1ZYC/tvkIKktsnqwhopP7Dw9ZSAkBwx9Cpl/6D7K5HulilFe
Drg7XqhY0321cSTE/6muHHyRF2C6d52Gy6OdL0wfkgOlM7m2X1JoOF/78JHf
jnJQJJl78lom3Z/n1Qx5L8sBv17GO7FoGo7LFJTfF0LPz940++ckDYcd+sd3
IEEOgmW/lBgI0HDAxizj2QdykJyV48jXSsWXq/q+Xa+Xg4frV3d8OEzFF52a
JhI75CDr8m5LxscU7Lg9+2nFkBwQb//X8keagm3awsidH+WgZ6i0xtmXjA94
uz4cX5EDGy77++8rSNhQ3DpxhVkeOFUEjsr0E7H6S82Q7QLyIH/3A3nbuyYs
FyHiISMnD0JTZZlubxsx78yCmYOFPPw7tbXgSmE9Zk97oXr1lDyMJDa6Wr6t
xQwHyGJxl+Vhj/iVixt21fhLWeRaS4I8fCx1G7/7pxQ/8dxdtWdYHvRtGnta
n6TjgB+23POnFGDa2ddwr0o2ulys/+/fZQV4EcBwvnd7AbpwXOKL4C0F2PII
W7GtFiFrytcnFgUKsNQSwvnhbjkiuL1qvNigAK5FDOtIuwrpCz16ENypAKJ3
thWY9tQg2aDYG7UzChDtuj/87aEGOg98LvWsKsDnSuOu4y6NiPedve0kiyKI
qj5pr/RuQuwJRrAuoAiFhwmqU65ExICk9nHLK8LdOu/qXVYk9PMbu7CiviJI
mf2+e2k3GX0p+M5COKwIqinPykXHyWj66NgPJydFYJF/zxcVQUFjjHjS/4oi
HFA53sXAS0UDTSX9CbcUwT/0v50c96nosXN8c9l9RWAPcDmo+oOKmvmulbUX
KEJTTcx2HqChhu6TqW8aFGHuuzDJ05+Gyq9D+HKnIowRaBFsKTSULyfrxTGi
CHa1GuP9dP9MfbP9lNSsIoRkHzpNvk330biVg0Y/FSHmWc3ckBMNhRmMa9qz
KkGKglWUhQgNBXzpkPAWVIIRzXkrx04qupxXviNGXgnahoT2HT9GRRes7/8u
0FeC7mG+xIfPKcjhn/8C7bASGG0jsHUpU5B1vdOrIScl8Hyq9Wp/MBkRzpt1
fr6iBKkbVk5DRBIy4FaoYwpVgt72wnt76b45sMXxaf99JdAj7HsX97UJnfse
+zG9QAnWxwW12ZcbUdTgJwH5TiWYV4EPC931iL9dSH15SAnWtq4xBmjWoYq6
Q5YtH5VA/2KzBBeuRgMJFWFWzPsg3OnnKZ7YMnTu1ptsfv598C16VlKxvxgt
X9lG+iCzDx4U/PqU9LcQCVi5f7pqvg8chvZkfryUic5xyB9Lv7sPknl8e+6n
6aDlDYfLZ3P3wfY2ve+TvQE46r+Y23I1++BxYs6wTdAdXPF0obl5YB/c9w67
GlKXgQ1pgq8iP+yD2VcLRTJ38/BAufk3y6V9YNI5+UWitBAv3ymX/LBLGYbq
H3JIaZXhqOtjRuV7leHYr8GZzPcVmN+VzeGqhjI0ajl+GvCpxgYH3OK3HlcG
a3/aS8WH9XhAK7O0z0UZyDd+KVZ0NuBz0r3taQHKUJ/htUNtqBFHMcmtymYq
w8usssoHrUTMv3Ji5/dyZeAs4XrRl0HC5R/vyDfTlGGisOdd8hky1h+mmEU+
U4abBi76aBcF93fOn7YcV4bDzshBrY6CzzUKBPJ9UYbKr9UW4zpUvFx4MPn9
pjIMPI0ndFZScVTS9eqy7SqQejifJZSVhvnDy7p9dqtA89mDhm1WdP75jE7q
qahAAfLvhhAaNjjH+psRVOCOh93KeBoNDxzR4euzUYGXc9UVNzJo+BxyVUk7
rwKH7dp9BSNoeFk549AZX/p4NSP6+XEajtrdc1E2UgWCIjrqm7np6+1YC1lK
UYEjlnE6e2lUXPFHJpNWrAIcA2M5xw5RseGifWMESQXIjq+O13dR8MDE7b7D
3SqwNlN0o0mOXl8feY53VAWA4cbh+UAyXm6ZY3hPf2xLO8M6PxFJOLqKX6Ts
lwpU809ueLwj4nirh8JUJlXYqA/PUPrRhHcbDWuG86kC4+th1uefGvC85ueO
WTFVoOzb7RjcV4/rlbYesZBRhZ5rT18qQB02FdVw59FRhSIxS+nbhpXY9Xdy
XomDKqye/m02fCofp1p/6bpxThXapmZcPi5k4vbC/f9ZualCcExk4Y0LKVjQ
/Jf2z+uq4G68kSlwMgz3pp4ePJChCpb3RGfUX8ajlXnyT+EHqsCVdV720WYK
EjfgEvtWqgpJ7CpGxuFZKHCq0z2DrAq2ghsEAekiJK8st3XhlSqwL1wt69Co
Rvbh4fKP3qnCf8FrktzRtShi5O2RxFn6/N6BBdOz9ahWVjPAeVEVTAOf01S8
G9Dbm/dydVdVoV2mfeHm1UbEMjDXyflHFTwWPoc7ujQhdQn4NMmkBoI7Zkd3
WhDRGb+snSRONdCcrxVc2E33oZ5lrVheNfDTjHtj+JGEyMKWTqdF1aBlgzvL
L53OzyslEWpSaqC/vl9nqy4F7ej4W86spAY5X3Ze9OihIH1ehxdvNNSAbZXr
jx6Bii65NqzWGKgBmj/gzVVLRcnN7KIRZmog9+fkejYTDbVtdza1P6wGqcY2
39MO0tDnc61uCrZqoMrh/6svgIYEifz3/zrS426HpUSS6f04qw9p6IIaFHJ5
inhm0X3S8el4qYca/FerJkOJp6Hcmr2MQb5q8AEZaGy7TO/vGYLljtxUAy2e
/Bc3dWhoxfaVtWSEGvRGLnFrfaMi8TJl/7VYNUjYKhfqk0JFlht3cp4nqUF/
tseInxTdP62mOh5kqUGwy+pYZhEFFRfoL1wrVIMtX8z4THdQ0OCPlB3mFWrw
/UJN1IwrGW0eWNQUbVCDQzMkfcZ6EpLLPnBqiaoG4jGOfxTmichu8UH443Y1
ODFdNvJ7OxHVpBwbuDyoBioXeEwO7WtEb+eqVmBMje5v7LVGsg2IRZ9ZhG9S
DTgkQ2m9PPXozCTFtfWbGrRzvPjFk1iFduwT27Jjpzr8s1LbKuBViLy75zXq
rNQhN+3tfNuFSNwO1Z5K9vR4gW2BZOJ9zNXi87DijDqQarYJmw6m4fq6de5i
b3XoV/54IOxFAWZQaLOQCFSHg17zSydrHuKjxRER+WHqUP1KmyZ6oxQvZ3Is
Zyapw+AOtzy5wSpsyjMoz5+tDqdbLmzG2NfilHup51OK1CHOPaMj4lw9nmE9
mcVVpQ5vt5cNNN5uwJoRYi/vNakDj/UJ9e5cOh83p9g4HqnDSL3/odbCJvwq
oBRiHqtDXke5YnkqEct89whk7leHsfLNO2V+JBzgqVIf8UodDAVVfBeBjLtn
f8z/e6cO9S//7Gn7RcYC56h7QubUgbntaZpPDgW7vQ0+sfFVHb5PfjPxlqNi
qp3J/etr6hB68tBt3QdUzPaCuWflnzp8YbVTOfuPih0OPft7lU0DlC3Tx+Lo
/ljelaD9jUsDRlOnjAJv0vC6ka3XZSENcNkmf2M9lYYtqAKlnyQ0QPN6k9JP
Oi+z1SfeXVLQAHdyeJZnJA3/V13AN6OuATbfRgovn6BhfVkXq/MGGqDgNUSR
4KX7ZaF89HszDSjfsKP20nk5LvL10SlLDVib2t5INKdipfTGlTE7DXj/Wz7L
qoOCg7muK9mf1gC/8fb5nVIU3Bdn4DzsogH2rJcU46+SsRgzQ66NlwaMeO4P
u1RJwl6hj4f7AzTgmPr+jeMviLhtPYbjcKgGBNdQNiWnmvAOPyuz3jsa8JlP
N7xqshGf/boraH+iBmgfcrIeG2jADB+z/0OFGnB8i6k/+lmLbU6f3dtaoQHq
oeJbHgVU48JRSUf9Rg3oD0p7tv1dBTbtq36q2aUBYVx8L147F+NIUlu5/KwG
8OygkLOPJuERlcjJ0kUN8K06lrYn+DaWqjwoKPVTA8SebSo8CvPDj/MH7+xm
1YTBD9ksBxKDEUvM9CUeeU1Qidaz2qf2ANkzluUnqmlCrGrBnFZIESoL9ny9
XV8Tftmdev/KpgSZX13Zz3ZYE85m27A9aa5EmZ+pIdG2mkBsviMubFmDPrmE
kBidNIEvruVIWGcdinNkkf5zWRPIUbuOdys0ImNVzp+f/DTh6aYBgSzdhL4z
c/e8DtaE1oCr/da7iKh4XCCzK0oTcuuDlYa/EJFDg5h7fbwmFCzLhKZQSIjj
jqR+Xqom6LpJHVv0IaM2J3mOuFxNuCVmJGkpSEG+6ioTAcWa0GRrMSZfQ0HS
bFo1F6s1Ie9NucJOFSoae6d/y4aoCc1HnrGk5lFRfBMcMXqkCXJPMj+c/UVF
KPaAuMJjTWB5774qj2ho+Yzld/4+ev0V5om0qzRUqnmsc+sIPX7ddd/cfRo6
ye6QsjSuCb46aQ8y6LzknDzt/O6jJv3nNXdvdwINtZMuaj37rAnrrsHnb3rT
kN9ddxbKD03gnQ7w7jegIdnz3qMPf2uCq/x60wLdf99q+5cnbtUCZxvvp8yZ
VJTAGXQjhEMLin+IHvGSoyKT6TALDx4t+GUgXhtUQkErlNsiJ0S0gHB54GX6
Tgoqvxf/xUxSC8TOPxzWofPy1MXkVlVFLcg5zZozW01CO/QyE8Q0tKDdSPeq
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
eaDqgcoqvGb+/qXAQUOJlJ0JRf8DoYLvhw==
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  PlotRange->{{0, 100}, {-0.09999999937017896, 0.09999999999932083}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{{3.527940221820922*^9, 3.527940239400219*^9}, {
  3.5279422819385138`*^9, 3.527942291988112*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Program Defensively", "Subsection",
 CellChangeTimes->{{3.5238345666275997`*^9, 3.5238345713388*^9}}],

Cell["\<\
At different places in your program, think about what kinds of answers and \
parameters you expect to be passed to your routines.  Check and make sure \
functions are called with the kinds of arguments you expect.  If you expect a \
result to be positive or real, check and see if that is the case.

Sometimes writing these checks into the code can add unacceptable overhead to \
computation time.  In this case, you can have testing and production versions \
of the module with identical interfaces.  In the testing phase, you run with \
the slower version that looks for problems.  In the production phase you can \
use the streamlined version.\
\>", "Text",
 CellChangeTimes->{{3.5238357899172*^9, 3.52383595977*^9}}],

Cell["\<\
As an example, consider the following inefficient program that computes x to \
a power.  The algorithm will succeed if supplied with an integer power, but \
will fail otherwise.\
\>", "Text",
 CellChangeTimes->{{3.5238360332771997`*^9, 3.5238361100448*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"pow", "[", 
   RowBox[{"x_", ",", "n_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"prod", "=", "1"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Do", "[", 
      RowBox[{
       RowBox[{"prod", " ", "*=", " ", "x"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}], ";", 
     "\[IndentingNewLine]", "prod"}]}], "\[IndentingNewLine]", 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"pow", "[", 
  RowBox[{"x", ",", "3"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"pow", "[", 
  RowBox[{"x", ",", "3.5"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"pow", "[", 
  RowBox[{"x", ",", 
   RowBox[{"-", "2"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.5238360783456*^9, 3.52383633183*^9}}],

Cell[BoxData[
 SuperscriptBox["x", "3"]], "Output",
 CellChangeTimes->{3.527940275938757*^9}],

Cell[BoxData[
 SuperscriptBox["x", "3"]], "Output",
 CellChangeTimes->{3.5279402759487567`*^9}],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{3.5279402759487567`*^9}]
}, Open  ]],

Cell["\<\
It gives the correct answser for positive integers, but gives an incorrect \
answser for negative integers or real numbers.  Writing it as follows warns \
the caller about the problem.\
\>", "Text",
 CellChangeTimes->{{3.523836320598*^9, 3.5238363734196*^9}, {
  3.5238366551556*^9, 3.5238366583691998`*^9}, {3.5238626663948*^9, 
  3.5238626665352*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"pow2", "[", 
   RowBox[{"x_", ",", "n_Integer"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"prod", "=", "1"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"n", "\[GreaterEqual]", "0"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Do", "[", 
        RowBox[{
         RowBox[{"prod", " ", "*=", " ", "x"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"prod", "=", "\"\<n must be non-negative\>\""}]}], "]"}], ";", 
     "\[IndentingNewLine]", "prod"}]}], "\[IndentingNewLine]", 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"pow2", "[", 
  RowBox[{"x", ",", "3"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"pow2", "[", 
  RowBox[{"x", ",", "3.5"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"pow2", "[", 
  RowBox[{"x", ",", 
   RowBox[{"-", "2"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.5238363855408*^9, 3.5238363866172*^9}, {
  3.5238364259604*^9, 3.5238364316232*^9}, {3.5238365471724*^9, 
  3.5238365965620003`*^9}, {3.5238366271535997`*^9, 3.5238366368724003`*^9}}],

Cell[BoxData[
 SuperscriptBox["x", "3"]], "Output",
 CellChangeTimes->{3.5279402843584204`*^9}],

Cell[BoxData[
 RowBox[{"pow2", "[", 
  RowBox[{"x", ",", "3.5`"}], "]"}]], "Output",
 CellChangeTimes->{3.5279402843584204`*^9}],

Cell[BoxData["\<\"n must be non-negative\"\>"], "Output",
 CellChangeTimes->{3.5279402843584204`*^9}]
}, Open  ]],

Cell[TextData[{
 "There are some better ways to deal with problem arguments using ",
 StyleBox[ButtonBox["Message",
  BaseStyle->"Link",
  ButtonData->"paclet://ref/Message"],
  FontWeight->"Bold"],
 ", ",
 StyleBox[ButtonBox["Assert",
  BaseStyle->"Link",
  ButtonData->"paclet://ref/Assert"],
  FontWeight->"Bold"],
 ", or ",
 StyleBox[ButtonBox["Abort",
  BaseStyle->"Link",
  ButtonData->"paclet://ref/Abort"],
  FontWeight->"Bold"],
 "."
}], "Text",
 CellChangeTimes->{{3.5238630869396*^9, 3.5238632275892*^9}, {
  3.523873237641225*^9, 3.523873244663927*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["(#10) Message (5 min)", "Subsection",
 CellChangeTimes->{{3.5238644810832*^9, 3.52386448854*^9}}],

Cell[TextData[{
 "The ",
 StyleBox[ButtonBox["Message",
  BaseStyle->"Link",
  ButtonData->"paclet://ref/Message"],
  FontWeight->"Bold"],
 " function prints a formatted message associated with your function that can \
be turned On and Off.  Explain the following output to your TA."
}], "Text",
 CellChangeTimes->{{3.5238635370959997`*^9, 3.5238635923199997`*^9}, {
  3.5238644264832*^9, 3.5238644370132*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"NameQ", "[", "\"\<pow3\>\"", "]"}], ",", 
   RowBox[{"Remove", "[", "\"\<pow3\>\"", "]"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"pow3", "::", "nint"}], " ", "=", " ", 
   "\"\<pow3 called with `1` which is not an integer\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"pow3", "::", "neg"}], " ", "=", " ", 
   "\"\<pow3 called with `1` which is not positive\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pow3", "[", 
   RowBox[{"x_", ",", "n_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"prod", "=", "Null"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"n", "<", "0"}], ",", 
       RowBox[{"Message", "[", 
        RowBox[{
         RowBox[{"pow3", "::", "neg"}], ",", "n"}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"IntegerQ", "[", "n", "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"prod", "=", "1"}], ";", " ", 
          RowBox[{"Do", "[", 
           RowBox[{
            RowBox[{"prod", " ", "*=", " ", "x"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Message", "[", 
          RowBox[{
           RowBox[{"pow3", "::", "nint"}], ",", " ", "n"}], "]"}]}], "]"}]}], 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", "prod"}]}], 
   "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"{", 
  RowBox[{
   RowBox[{"pow3", "[", 
    RowBox[{"x", ",", "3"}], "]"}], ",", " ", 
   RowBox[{"pow3", "[", 
    RowBox[{"x", ",", "3.5"}], "]"}], ",", " ", 
   RowBox[{"pow3", "[", 
    RowBox[{"x", ",", 
     RowBox[{"-", "2"}]}], "]"}]}], "}"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Off", "[", 
   RowBox[{"pow3", "::", "nint"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"{", 
  RowBox[{
   RowBox[{"pow3", "[", 
    RowBox[{"x", ",", "3"}], "]"}], ",", " ", 
   RowBox[{"pow3", "[", 
    RowBox[{"x", ",", "3.5"}], "]"}], ",", " ", 
   RowBox[{"pow3", "[", 
    RowBox[{"x", ",", 
     RowBox[{"-", "2"}]}], "]"}]}], "}"}]}], "Input",
 CellChangeTimes->{{3.5238383430408*^9, 3.5238385680984*^9}, {
   3.5238387438478003`*^9, 3.5238387514294*^9}, {3.5238387895544*^9, 
   3.5238387968084*^9}, {3.5238388401608*^9, 3.5238388448564*^9}, {
   3.5238388926392*^9, 3.5238388996436*^9}, {3.5238596752312*^9, 
   3.5238596797084*^9}, 3.5238597576336*^9, {3.5238598068562*^9, 
   3.5238598219102*^9}, {3.5238598732834*^9, 3.5238598928458*^9}, {
   3.523859958475*^9, 3.5238599652142*^9}, {3.5238627499639997`*^9, 
   3.5238627547532*^9}, {3.5238636537528*^9, 3.5238636564983997`*^9}, {
   3.5238637087427998`*^9, 3.5238637533744*^9}, {3.5238637846212*^9, 
   3.5238639693719997`*^9}, {3.5238640044252*^9, 3.523864075842*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"pow3", "::", "nint"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"pow3 called with \[NoBreak]\\!\\(3.5`\\)\[NoBreak] which \
is not an integer\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.527940311947317*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"pow3", "::", "neg"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"pow3 called with \[NoBreak]\\!\\(-2\\)\[NoBreak] which is \
not positive\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5279403119673157`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   SuperscriptBox["x", "3"], ",", "Null", ",", "Null"}], "}"}]], "Output",
 CellChangeTimes->{3.5279403119673157`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"pow3", "::", "neg"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"pow3 called with \[NoBreak]\\!\\(-2\\)\[NoBreak] which is \
not positive\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5279403119673157`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   SuperscriptBox["x", "3"], ",", "Null", ",", "Null"}], "}"}]], "Output",
 CellChangeTimes->{3.527940311977316*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["(#11) Assert (5 min)", "Subsection",
 CellChangeTimes->{{3.5238645012072*^9, 3.5238645081647997`*^9}}],

Cell[TextData[{
 "The ",
 StyleBox[ButtonBox["Assert",
  BaseStyle->"Link",
  ButtonData->"paclet://ref/Assert"],
  FontWeight->"Bold"],
 " function is a quick way to combine a condition test with a message.  \
Unfortunately, this means you lose control of other things you might want to \
do to shape the returned result.  Explain the following output to your TA."
}], "Text",
 CellChangeTimes->{{3.5238629364308*^9, 3.5238630114667997`*^9}, {
  3.5238641752139997`*^9, 3.5238642605148*^9}, {3.5238645117060003`*^9, 
  3.5238645223764*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"NameQ", "[", "\"\<pow3\>\"", "]"}], ",", 
   RowBox[{"Remove", "[", "\"\<pow3\>\"", "]"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"pow3", "[", 
    RowBox[{"x_", ",", "n_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"prod", "=", "1"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Assert", "[", 
       RowBox[{"n", "\[GreaterEqual]", "0"}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Assert", "[", 
       RowBox[{"IntegerQ", "[", "n", "]"}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Do", "[", 
       RowBox[{
        RowBox[{"prod", " ", "*=", " ", "x"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}], ";", 
      "\[IndentingNewLine]", "prod"}]}], "\[IndentingNewLine]", "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"On", "[", "Assert", "]"}], "\[IndentingNewLine]", 
 RowBox[{"{", 
  RowBox[{
   RowBox[{"pow3", "[", 
    RowBox[{"x", ",", "3"}], "]"}], ",", " ", 
   RowBox[{"pow3", "[", 
    RowBox[{"x", ",", "3.5"}], "]"}], ",", " ", 
   RowBox[{"pow3", "[", 
    RowBox[{"x", ",", 
     RowBox[{"-", "2"}]}], "]"}]}], "}"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Off", "[", "Assert", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"{", 
  RowBox[{
   RowBox[{"pow3", "[", 
    RowBox[{"x", ",", "3"}], "]"}], ",", " ", 
   RowBox[{"pow3", "[", 
    RowBox[{"x", ",", "3.5"}], "]"}], ",", " ", 
   RowBox[{"pow3", "[", 
    RowBox[{"x", ",", 
     RowBox[{"-", "2"}]}], "]"}]}], "}"}]}], "Input",
 CellChangeTimes->{{3.5238642791568003`*^9, 3.523864406406*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Assert", "::", "asrtf"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Assertion \[NoBreak]\\!\\(IntegerQ[3.5`]\\)\[NoBreak] \
failed. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/Assert\\\", ButtonNote -> \
\\\"Assert::asrtf\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.527940447811882*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Assert", "::", "asrtf"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Assertion \[NoBreak]\\!\\(\\(\\(-2\\)\\) \[GreaterEqual] 0\
\\)\[NoBreak] failed. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/Assert\\\", ButtonNote -> \
\\\"Assert::asrtf\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5279404478218813`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   SuperscriptBox["x", "3"], ",", 
   SuperscriptBox["x", "3"], ",", "1"}], "}"}]], "Output",
 CellChangeTimes->{3.5279404478218813`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   SuperscriptBox["x", "3"], ",", 
   SuperscriptBox["x", "3"], ",", "1"}], "}"}]], "Output",
 CellChangeTimes->{3.5279404478218813`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["(#12) Abort (5 min)", "Subsection",
 CellChangeTimes->{{3.523864529178*^9, 3.5238645388656*^9}}],

Cell[TextData[{
 "Sometimes you will encounter conditions that make it impossible or \
dangerous to continue a calculation.  This is when ",
 StyleBox[ButtonBox["Abort",
  BaseStyle->"Link",
  ButtonData->"paclet://ref/Abort"],
  FontWeight->"Bold"],
 " comes in handy.  Write a function which will sum the numbers from 1 to n, \
but will abort if the caller supplies an argument larger then ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["10", "7"], TraditionalForm]]],
 ".  Provide two test cases, one which fails and the other which doesn\
\[CloseCurlyQuote]t"
}], "Text",
 CellChangeTimes->{{3.5238645421572*^9, 3.5238647192808*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"mySum", "[", "n_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "result", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"result", " ", "=", " ", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"n", ">", 
        SuperscriptBox["10", "7"]}], ",", 
       RowBox[{"Abort", "[", "]"}], ",", 
       RowBox[{"Sum", "[", 
        RowBox[{"i", ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}]}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"mySum", "[", "3", "]"}], "\[IndentingNewLine]", 
 RowBox[{"mySum", "[", 
  SuperscriptBox["10", "7"], "]"}], "\[IndentingNewLine]", 
 RowBox[{"mySum", "[", 
  RowBox[{
   SuperscriptBox["10", "7"], "+", "1"}], "]"}]}], "Input",
 CellChangeTimes->{{3.5238647012472*^9, 3.5238647800584*^9}, 
   3.527878086440916*^9, {3.527940518589051*^9, 3.5279406802125854`*^9}, {
   3.527940799057832*^9, 3.5279408405261726`*^9}, {3.5279409009237566`*^9, 
   3.5279409019037175`*^9}, {3.5279409348424*^9, 3.527940952511693*^9}, {
   3.5279410547176046`*^9, 3.527941118915037*^9}}],

Cell[BoxData["6"], "Output",
 CellChangeTimes->{{3.5279410632972617`*^9, 3.527941077506693*^9}, 
   3.527941120794962*^9}],

Cell[BoxData["50000005000000"], "Output",
 CellChangeTimes->{{3.5279410632972617`*^9, 3.527941077506693*^9}, 
   3.527941120804961*^9}],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{{3.5279410632972617`*^9, 3.527941077506693*^9}, 
   3.527941120804961*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Debugging (20 min)", "Section",
 CellChangeTimes->{{3.4342263997303743`*^9, 3.4342264046992517`*^9}, {
   3.4342339202041435`*^9, 3.434233921907312*^9}, {3.434238140890129*^9, 
   3.43423819153205*^9}, {3.434400229117914*^9, 3.4344002659936495`*^9}, {
   3.4344009342451315`*^9, 3.4344009343545094`*^9}, 3.434919533221583*^9, {
   3.5238332292552*^9, 3.5238332302848*^9}, {3.5238333651312*^9, 
   3.5238333673932*^9}, {3.5238666089960003`*^9, 3.5238666118508*^9}}],

Cell[TextData[{
 StyleBox[ButtonBox["Debugging",
  BaseStyle->"Link",
  ButtonData->"paclet://guide/TuningAndDebugging"],
  FontWeight->"Bold"],
 " could be described as the process of figuring out why your code is not \
working properly.  This process requires that you know what your code ",
 StyleBox["should",
  FontSlant->"Italic"],
 " be doing, and also the ability to find out what it actually ",
 StyleBox["is",
  FontSlant->"Italic"],
 " doing.  In this section, we will present some simple debugging concepts \
and tools for monitoring the status of a calculation.  These tools will be \
useful to you when you need to debug your own programs.\n\nWith modules and \
packages of any significant complexity, you will probably spend more time \
debugging your program than writing it the first time.  Be systematic and don\
\[CloseCurlyQuote]t be discouraged.  ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " gives you a rich set of tools to isolate and fix problems.  Debugging is a \
natural outgrowth of well-designed tests."
}], "Text",
 CellChangeTimes->{{3.434919208522027*^9, 3.434919318519945*^9}, {
  3.434919348683576*^9, 3.434919624264451*^9}, {3.5238332781924*^9, 
  3.5238332956644*^9}, {3.5238336088188*^9, 3.5238337062408*^9}, {
  3.5238338306196003`*^9, 3.523833840666*^9}, {3.5238632868380003`*^9, 
  3.5238633238798*^9}}],

Cell[CellGroupData[{

Cell["\<\
(#11-#13) Critical Functions (20 min)\
\>", "Subsection",
 CellChangeTimes->{{3.5238337307328*^9, 3.523833741762*^9}, {
  3.5238367690668*^9, 3.5238367876308002`*^9}, {3.5238665960480003`*^9, 
  3.52386660026*^9}, {3.5238666661232*^9, 3.5238666671216*^9}}],

Cell[CellGroupData[{

Cell["(#11) Print (5 min)", "Subsubsection",
 CellChangeTimes->{{3.434230737825802*^9, 3.4342307383258142`*^9}, {
  3.434915324799014*^9, 3.434915324916974*^9}, {3.43491919090975*^9, 
  3.4349191910693493`*^9}, {3.5238367440755997`*^9, 3.5238367458384*^9}, {
  3.5238367910316*^9, 3.5238367963512*^9}}],

Cell[TextData[{
 "The ",
 StyleBox["Print",
  FontWeight->"Bold"],
 " function is the easiest way to monitor the value of a variable within a \
loop.  We have used this function several times during the past few labs.  \
Print doesn't return output that can be passed to another function.  It \
simply displays its argument in the notebook window for the user."
}], "Text",
 CellChangeTimes->{{3.434914045974196*^9, 3.434914068680315*^9}, {
  3.434919644515065*^9, 3.434919773860268*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Sum", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Print", "[", "i", "]"}], ";", "i"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "1", ",", "10"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.434227106529718*^9, 3.434227111545471*^9}, {
  3.4342272143137274`*^9, 3.4342272342204866`*^9}, {3.434227275252787*^9, 
  3.4342272779559813`*^9}, {3.434227381693012*^9, 3.4342274112406435`*^9}, {
  3.5279412098713984`*^9, 3.5279412110413513`*^9}}],

Cell[CellGroupData[{

Cell[BoxData["1"], "Print",
 CellChangeTimes->{3.5279412122013054`*^9}],

Cell[BoxData["2"], "Print",
 CellChangeTimes->{3.5279412122013054`*^9}],

Cell[BoxData["3"], "Print",
 CellChangeTimes->{3.5279412122213044`*^9}],

Cell[BoxData["4"], "Print",
 CellChangeTimes->{3.527941212231304*^9}],

Cell[BoxData["5"], "Print",
 CellChangeTimes->{3.527941212231304*^9}],

Cell[BoxData["6"], "Print",
 CellChangeTimes->{3.527941212231304*^9}],

Cell[BoxData["7"], "Print",
 CellChangeTimes->{3.527941212231304*^9}],

Cell[BoxData["8"], "Print",
 CellChangeTimes->{3.5279412122413034`*^9}],

Cell[BoxData["9"], "Print",
 CellChangeTimes->{3.527941212251303*^9}],

Cell[BoxData["10"], "Print",
 CellChangeTimes->{3.527941212251303*^9}]
}, Open  ]],

Cell[BoxData["55"], "Output",
 CellChangeTimes->{3.527941212251303*^9}]
}, Open  ]],

Cell["\<\
Add one or more Print statements to the following module to diagnose why it \
returns a complex answer for the case of x=1.5.\
\>", "Text",
 CellChangeTimes->{{3.5238369472967997`*^9, 3.523836996624*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"func", "[", "x_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"y", ",", " ", "z"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"y", "=", 
      RowBox[{"1.9", " ", "x"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"While", "[", 
       RowBox[{
        RowBox[{"y", ">", "0.5"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"z", "=", 
          RowBox[{
           RowBox[{"Cos", "[", "y", "]"}], "^", "2"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"y", "=", 
          RowBox[{"Sqrt", "[", 
           RowBox[{"Log", "[", "z", "]"}], "]"}]}], ";"}]}], 
       "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", 
      RowBox[{"Print", "[", 
       RowBox[{"Log", "[", "z", "]"}], "]"}], "\[IndentingNewLine]", 
      "z"}]}]}], "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"func", "[", "1.5", "]"}]}], "Input",
 CellChangeTimes->{{3.5238370018344*^9, 3.5238371632008*^9}, {
  3.5238372242748003`*^9, 3.523837280778*^9}, {3.527941229750603*^9, 
  3.5279412563495393`*^9}, {3.5279413170871096`*^9, 3.5279413978038807`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Greater", "::", "nord"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Invalid comparison with \[NoBreak]\\!\\(\\(\\(0.` \
\[VeryThinSpace]\\)\\) + \\(\\(0.2936992199983615`\\\\ \[ImaginaryI]\\)\\)\\)\
\\n\[NoBreak] attempted. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/nord\\\", ButtonNote -> \
\\\"Greater::nord\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{{3.5279413578354797`*^9, 3.527941398233864*^9}}],

Cell[BoxData[
 RowBox[{"-", "0.08625923182764597`"}]], "Print",
 CellChangeTimes->{{3.5279413832544627`*^9, 3.527941398233864*^9}}],

Cell[BoxData[
 RowBox[{"0.9173563924195798`", " ", 
  SuperscriptBox["Null", "2"]}]], "Output",
 CellChangeTimes->{{3.5279413755647707`*^9, 3.527941398233864*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["(#12) Throw and Catch (10 min)", "Subsubsection",
 CellChangeTimes->{{3.434320236703565*^9, 3.434320252047708*^9}, {
   3.4343204925382395`*^9, 3.434320496116456*^9}, 3.434320589478221*^9, {
   3.4343219619977317`*^9, 3.4343219655446973`*^9}, {3.4349153270450068`*^9, 
   3.434915327172999*^9}, {3.434919191828044*^9, 3.434919191995913*^9}, {
   3.5238373199964*^9, 3.5238373234596*^9}, {3.5238649477896*^9, 
   3.5238649483824*^9}, {3.5238656677574*^9, 3.5238656693798*^9}}],

Cell[TextData[{
 StyleBox[ButtonBox["Throw",
  BaseStyle->"Link",
  ButtonData->"paclet://ref/Throw"],
  FontWeight->"Bold"],
 " and ",
 StyleBox[ButtonBox["Catch",
  BaseStyle->"Link",
  ButtonData->"paclet://ref/Catch"],
  FontWeight->"Bold"],
 " not only work to terminate a loop, but also return information at the time \
of termination.  The information tagged by ",
 StyleBox["Throw",
  FontWeight->"Bold"],
 " is returned as output by the nearest ",
 StyleBox["Catch",
  FontWeight->"Bold"],
 ".  In practice, ",
 StyleBox["Throw",
  FontWeight->"Bold"],
 " is usually used to flag an error condition or unexpected argument.  ",
 StyleBox["Catch",
  FontWeight->"Bold"],
 " can then be used to decide whether to continue the calculation, substitute \
another value, print an error message, or abort the calculation."
}], "Text",
 CellChangeTimes->{{3.4343218506667566`*^9, 3.434321900105522*^9}, {
  3.434914087809043*^9, 3.434914121985999*^9}, {3.434915089378335*^9, 
  3.434915158792004*^9}, {3.434915205348135*^9, 3.434915313101016*^9}, {
  3.4979514699414*^9, 3.4979515346502*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"temp", " ", "=", " ", "1"}], ";", " ", 
   RowBox[{"counter", " ", "=", " ", "0"}], ";"}], " "}], "\n", 
 RowBox[{"Catch", "[", 
  RowBox[{"While", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Abs", "[", "temp", "]"}], " ", ">", " ", "0.0005"}], ",", " ", 
    RowBox[{
     RowBox[{"temp", " ", "=", " ", 
      RowBox[{"RandomReal", "[", "]"}]}], ";", " ", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"++", "counter"}], " ", ">=", " ", "1000"}], ",", " ", "\n", 
       "     ", 
       RowBox[{"Throw", "[", 
        RowBox[{"{", 
         RowBox[{"\"\<Limit exceeded!\>\"", ",", " ", "counter"}], "}"}], 
        "]"}]}], "]"}]}]}], "]"}], "]"}], "\n", "counter"}], "Input",
 CellChangeTimes->{{3.434221751830141*^9, 3.4342217559083705`*^9}, {
   3.4343219402002983`*^9, 3.4343219407159367`*^9}, {3.434914133732071*^9, 
   3.434914142763812*^9}, 3.434914183448303*^9, {3.434914329082576*^9, 
   3.43491446314991*^9}, {3.434914493664116*^9, 3.434914502670741*^9}, {
   3.434914574273356*^9, 3.43491459210634*^9}, {3.4349147911943808`*^9, 
   3.434915054351071*^9}, {3.434915166554871*^9, 3.434915179117087*^9}, 
   3.5238373272192*^9, 3.523837362054*^9},
 CellID->138675430],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Limit exceeded!\"\>", ",", "1000"}], "}"}]], "Output",
 CellChangeTimes->{3.5279414948599987`*^9}],

Cell[BoxData["1000"], "Output",
 CellChangeTimes->{3.527941494869998*^9}]
}, Open  ]],

Cell[TextData[{
 "Write a function exp[x_] that returns ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["\[ExponentialE]", "x"], TraditionalForm]]],
 " if ",
 Cell[BoxData[
  FormBox[
   RowBox[{"x", "<", "10"}], TraditionalForm]]],
 " but throws an error with tag overflow and returns ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["\[ExponentialE]", "10"], TraditionalForm]]],
 " if ",
 Cell[BoxData[
  FormBox[
   RowBox[{"x", "\[GreaterEqual]", "10"}], TraditionalForm]]],
 ".  Demonstrate how this funcition works without a Catch for exp[5] and \
exp[20].  Then demonstrate what happens if Catch is used with the tag \
overflow for exp[20]."
}], "Text",
 CellChangeTimes->{{3.5238649570559998`*^9, 3.523864960176*^9}, {
  3.5238654215114*^9, 3.5238655931426*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"exp", "[", "x_", "]"}], ":=", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"x", "<", "10"}], ",", 
    RowBox[{"Exp", "[", "x", "]"}], ",", 
    RowBox[{"Throw", "[", 
     RowBox[{
      RowBox[{"Exp", "[", "10", "]"}], ",", "overflow"}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"exp", "[", "5", "]"}], "\[IndentingNewLine]", 
 RowBox[{"exp", "[", "20", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Catch", "[", 
  RowBox[{
   RowBox[{"exp", "[", "30", "]"}], ",", "overflow"}], "]"}]}], "Input",
 CellChangeTimes->{{3.5238650017656*^9, 3.5238651143196*^9}, {3.5238652481*^9,
   3.523865273849*^9}, {3.523865341203*^9, 3.523865379641*^9}}],

Cell[BoxData[
 SuperscriptBox["\[ExponentialE]", "5"]], "Output",
 CellChangeTimes->{3.52794152906863*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Throw", "::", "nocatch"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Uncaught \[NoBreak]\\!\\(Throw[\\(\\(\[ExponentialE]\\^10, \
overflow\\)\\)]\\)\[NoBreak] returned to top level. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/Throw/nocatch\\\", ButtonNote -> \
\\\"Throw::nocatch\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.527941529128628*^9}],

Cell[BoxData[
 RowBox[{"Hold", "[", 
  RowBox[{"Throw", "[", 
   RowBox[{
    SuperscriptBox["\[ExponentialE]", "10"], ",", "overflow"}], "]"}], 
  "]"}]], "Output",
 CellChangeTimes->{3.527941529128628*^9}],

Cell[BoxData[
 SuperscriptBox["\[ExponentialE]", "10"]], "Output",
 CellChangeTimes->{3.527941529128628*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
(#13) Catching Messages and Aborts (5 min)\
\>", "Subsubsection",
 CellChangeTimes->{{3.523865685635*^9, 3.5238657001118*^9}, {
  3.5238657380198*^9, 3.5238657405938*^9}}],

Cell[TextData[{
 "You can also intercept a ",
 StyleBox["Message",
  FontWeight->"Bold"],
 " or an ",
 StyleBox["Abort",
  FontWeight->"Bold"],
 " similarly to how you ",
 StyleBox["Catch",
  FontWeight->"Bold"],
 " a ",
 StyleBox["Throw",
  FontWeight->"Bold"],
 ".  The ",
 StyleBox[ButtonBox["Check",
  BaseStyle->"Link",
  ButtonData->"paclet://ref/Check"],
  FontWeight->"Bold"],
 " function checks to see if any messages were generated by your call.  It \
returns an alternate answer in the case of a message.  Explain the output of \
the following cell to your TA.  The function slope computes the slope of a \
line passing through two points."
}], "Text",
 CellChangeTimes->{{3.5238657035126*^9, 3.5238657307346*^9}, {
  3.5238658039142*^9, 3.5238658862042*^9}, {3.5238659187146*^9, 
  3.5238659344706*^9}, {3.5238665037427998`*^9, 3.5238665037427998`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"slope", "[", 
   RowBox[{"p1_", ",", " ", "p2_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"p2", "[", 
      RowBox[{"[", "2", "]"}], "]"}], "-", 
     RowBox[{"p1", "[", 
      RowBox[{"[", "2", "]"}], "]"}]}], ")"}], "/", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"p2", "[", 
      RowBox[{"[", "1", "]"}], "]"}], "-", 
     RowBox[{"p1", "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], ")"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"slope", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "7"}], "}"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"slope", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "7"}], "}"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Quiet", "[", 
  RowBox[{"Check", "[", 
   RowBox[{
    RowBox[{"slope", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "3"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "7"}], "}"}]}], "]"}], ",", "\[Infinity]"}], "]"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.523865906453*^9, 3.523865907701*^9}, {
  3.5238659377934*^9, 3.5238660289598*^9}, {3.5238660689737997`*^9, 
  3.5238661018898*^9}, {3.5238661325282*^9, 3.5238661733378*^9}, {
  3.5238662109962*^9, 3.5238662397469997`*^9}, {3.5238663740508003`*^9, 
  3.5238663757356*^9}, {3.523866458222*^9, 3.5238664712012*^9}, {
  3.5279416047256036`*^9, 3.527941627214704*^9}, {3.527941680462574*^9, 
  3.5279416807825613`*^9}}],

Cell[BoxData["4"], "Output",
 CellChangeTimes->{
  3.527941576846719*^9, {3.5279416116553264`*^9, 3.5279416276446867`*^9}, 
   3.5279416813225393`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Power", "::", "infy"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Infinite expression \[NoBreak]\\!\\(1\\/0\\)\[NoBreak] \
encountered. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/infy\\\", ButtonNote -> \
\\\"Power::infy\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.527941576846719*^9, {3.527941611665326*^9, 3.5279416276446867`*^9}, 
   3.5279416813225393`*^9}],

Cell[BoxData["ComplexInfinity"], "Output",
 CellChangeTimes->{
  3.527941576846719*^9, {3.5279416116553264`*^9, 3.5279416276446867`*^9}, 
   3.5279416813225393`*^9}],

Cell[BoxData["\[Infinity]"], "Output",
 CellChangeTimes->{
  3.527941576846719*^9, {3.5279416116553264`*^9, 3.5279416276446867`*^9}, 
   3.527941681332539*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Optional Functions", "Subsection",
 CellChangeTimes->{{3.5238337441176*^9, 3.5238337484231997`*^9}, {
  3.5238666733616*^9, 3.5238666747812*^9}}],

Cell[CellGroupData[{

Cell["Evaluation Monitor", "Subsubsection",
 CellChangeTimes->{{3.4342194400271125`*^9, 3.434219449667799*^9}, 
   3.4342194864180346`*^9, {3.4349162315703077`*^9, 3.434916231695719*^9}, {
   3.434919192540071*^9, 3.434919192707918*^9}}],

Cell[TextData[{
 "A good tutorial on ",
 StyleBox[ButtonBox["Monitoring Algorithms",
  BaseStyle->"Link",
  ButtonData->"paclet://tutorial/MonitoringAndSelectingAlgorithms"],
  FontWeight->"Bold"],
 " compares ",
 StyleBox[ButtonBox["EvaluationMonitor",
  BaseStyle->"Link",
  ButtonData->"paclet://ref/EvaluationMonitor"],
  FontWeight->"Bold"],
 " and ",
 StyleBox[ButtonBox["StepMonitor",
  BaseStyle->"Link",
  ButtonData->"paclet://ref/StepMonitor"],
  FontWeight->"Bold"],
 ", two options that are allowed inside many routines that either plot or \
numerically operate on mathematical functions (e.g. ",
 StyleBox["Plot",
  FontWeight->"Bold"],
 ", ",
 StyleBox["NIntegrate",
  FontWeight->"Bold"],
 ", ",
 StyleBox["Minimize",
  FontWeight->"Bold"],
 ", etc).  The ",
 StyleBox["EvaluationMonitor",
  FontWeight->"Bold"],
 " option does something each time the function being worked on gets \
evaluated.  In the example below, it increments our local ",
 StyleBox["evals",
  FontSlant->"Italic"],
 " variable.  The ",
 StyleBox["StepMonitor",
  FontWeight->"Bold"],
 " option does something each time the parent algorithm (e.g. ",
 StyleBox["Minimize",
  FontWeight->"Bold"],
 ") makes a successful step, which might involve several function \
evaluations.  In the example below, it increments our local ",
 StyleBox["steps",
  FontSlant->"Italic"],
 " variable.\n\nThe ",
 StyleBox["algmonitor",
  FontSlant->"Italic"],
 " module that we have defined here not only finds the two-dimensional \
minimum point of a complicated function, but returns the number of function \
evaluations and the number of search steps required to find it using a \
user-specified search algorithm."
}], "Text",
 CellChangeTimes->{{3.434231004285748*^9, 3.4342311132885385`*^9}, {
  3.4342313365442533`*^9, 3.43423187821437*^9}, {3.434915961689815*^9, 
  3.434916218095252*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"algmonitor", "[", "method_", "]"}], " ", ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"evals", "=", " ", "0"}], ",", 
       RowBox[{"steps", "=", "0"}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"FindMinimum", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"x", "-", "1"}], ")"}], "^", "2"}], "+", 
         RowBox[{"100", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"y", "-", 
             RowBox[{"x", "^", "2"}]}], ")"}], "^", "2"}]}]}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"x", ",", 
            RowBox[{"-", "1"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"y", ",", "1"}], "}"}]}], "}"}], ",", 
        RowBox[{"Method", "\[Rule]", "method"}], ",", 
        RowBox[{"EvaluationMonitor", "\[RuleDelayed]", 
         RowBox[{"evals", "++"}]}], ",", 
        RowBox[{"StepMonitor", "\[RuleDelayed]", 
         RowBox[{"steps", "++"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"method", ",", "evals", ",", "steps"}], "}"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"algmonitor", "/@", " ", 
   RowBox[{"{", 
    RowBox[{
    "Automatic", ",", "\"\<LevenbergMarquardt\>\"", ",", 
     "\"\<InteriorPoint\>\"", ",", "\"\<Newton\>\"", ",", 
     "\"\<QuasiNewton\>\"", ",", " ", "\"\<ConjugateGradient\>\"", ",", 
     "\"\<Gradient\>\""}], "}"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"TableForm", "[", 
  RowBox[{"%", ",", 
   RowBox[{"TableHeadings", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Method\>\"", ",", "\"\<Evaluations\>\"", ",", "\"\<Steps\>\""}], 
       "}"}]}], "}"}]}]}], " ", "]"}]}], "Input",
 CellChangeTimes->{{3.434218777420724*^9, 3.434218792700409*^9}, {
  3.4342188355866423`*^9, 3.434218869676901*^9}, {3.4342189094697003`*^9, 
  3.4342189181875577`*^9}, {3.4342189862899585`*^9, 3.4342191203437133`*^9}, {
  3.434219151561864*^9, 3.434219420448862*^9}, {3.434232627921062*^9, 
  3.4342327337987723`*^9}, {3.434232777190508*^9, 3.4342328958966722`*^9}, {
  3.4342329438510246`*^9, 3.4342329578357573`*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Sow and Reap", "Subsubsection",
 CellChangeTimes->{{3.4342307469979115`*^9, 3.4342307526386805`*^9}, {
  3.434915609112112*^9, 3.4349156092454233`*^9}, {3.4349191932920628`*^9, 
  3.4349191934599257`*^9}}],

Cell[TextData[{
 "(a) ",
 StyleBox[ButtonBox["Sow",
  BaseStyle->"Link",
  ButtonData->"paclet://ref/Sow"],
  FontWeight->"Bold"],
 " and ",
 StyleBox[ButtonBox["Reap",
  BaseStyle->"Link",
  ButtonData->"paclet://ref/Reap"],
  FontWeight->"Bold"],
 " work together much like ",
 StyleBox["Throw",
  FontWeight->"Bold"],
 " and ",
 StyleBox["Catch",
  FontWeight->"Bold"],
 ".  ",
 StyleBox["Sow",
  FontWeight->"Bold"],
 ", however, does not terminate any loops, but rather accumulates a list of \
tagged information that is eventually returned as output by the nearest ",
 StyleBox["Reap",
  FontWeight->"Bold"],
 ".  Evaluate the following two cells, which perform identical operations, \
except for the variable-sampling performed along the way by ",
 StyleBox["Sow",
  FontWeight->"Bold"],
 " and ",
 StyleBox["Reap",
  FontWeight->"Bold"],
 "."
}], "Text",
 CellChangeTimes->{{3.434915866572707*^9, 3.4349158789742928`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"res", "  ", "=", " ", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Do", "[", 
  RowBox[{
   RowBox[{"res", " ", "=", " ", 
    RowBox[{"res", "+", "i"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "1", ",", "10"}], "}"}]}], 
  "]"}], "\[IndentingNewLine]", "res"}], "Input",
 CellChangeTimes->{{3.434227614636475*^9, 3.434227670716036*^9}, {
  3.434910411061863*^9, 3.43491046231048*^9}, {3.4349155289012814`*^9, 
  3.4349155392121468`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"res", "  ", "=", " ", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Reap", "[", 
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"res", " ", "=", " ", 
      RowBox[{"res", "+", "i"}]}], ";", " ", 
     RowBox[{"Sow", "[", "res", "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", "10"}], "}"}]}], "]"}], 
  "]"}], "\[IndentingNewLine]", "res"}], "Input",
 CellChangeTimes->{{3.434227614636475*^9, 3.434227670716036*^9}, {
  3.434910411061863*^9, 3.43491046231048*^9}, {3.4349155289012814`*^9, 
  3.434915554735581*^9}}],

Cell[TextData[{
 "\n(b) This is a somewhat more interesting example that shows the points \
sampled during a one-dimensional numerical integration of ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "(", "x", ")"}], "=", 
    SqrtBox["x"]}], TraditionalForm]]],
 ".  The ",
 StyleBox["Sow",
  FontWeight->"Bold"],
 " operation was used within the ",
 StyleBox[ButtonBox["EvaluationMonitor",
  BaseStyle->"Link",
  ButtonData->"paclet://ref/EvaluationMonitor"],
  FontWeight->"Bold"],
 " option of ",
 StyleBox["NIntegrate",
  FontWeight->"Bold"],
 ".  ",
 StyleBox["NIntegrate",
  FontWeight->"Bold"],
 " includes this option just in case someone wants to take a look under the \
hood."
}], "Text",
 CellChangeTimes->{{3.4349156177651577`*^9, 3.434915801646039*^9}, {
  3.434915883696645*^9, 3.434915884477922*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"f", "[", "x_", "]"}], " ", ":=", 
  RowBox[{"Sqrt", "[", "x", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"{", 
   RowBox[{"result", ",", 
    RowBox[{"{", "points", "}"}]}], "}"}], " ", "=", " ", 
  RowBox[{"Reap", "[", 
   RowBox[{"NIntegrate", "[", 
    RowBox[{
     RowBox[{"f", "[", "x", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"PrecisionGoal", "\[Rule]", "4"}], ",", 
     RowBox[{"EvaluationMonitor", "\[RuleDelayed]", 
      RowBox[{"Sow", "[", 
       RowBox[{"{", 
        RowBox[{"x", ",", 
         RowBox[{"f", "[", "x", "]"}]}], "}"}], "]"}]}]}], "]"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"f", "[", "x", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "1"}], "}"}]}], "]"}], ",", 
   RowBox[{"Graphics", "[", 
    RowBox[{"Point", "/@", "points"}], "]"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.43422783904847*^9, 3.4342280142092037`*^9}, {
  3.434228811448363*^9, 3.43422890979463*^9}, {3.434228947983108*^9, 
  3.43422895178008*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Monitor", "Subsubsection",
 CellChangeTimes->{{3.4342184530139966`*^9, 3.43421845405986*^9}, {
  3.434916380014097*^9, 3.434916381846355*^9}, {3.43491772366957*^9, 
  3.434917723802738*^9}, {3.4349191942441187`*^9, 3.434919194411955*^9}}],

Cell[TextData[{
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 "'s ",
 StyleBox[ButtonBox["Monitor",
  BaseStyle->"Link",
  ButtonData->"paclet://ref/Monitor"],
  FontWeight->"Bold"],
 " function allows the user to monitor the progress of a lengthy computation. \
 Evaluate the following two examples.  In the first example, which repeatedly \
evaluates the average of ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["10", "6"], TraditionalForm]]],
 " random numbers, we implement both numeric and graphical monitors.  In the \
second example, which we modified from the \"Applications\" section of the DC \
reference page, we fit a one-dimensional function to a set of data, while \
monitoring a plot of the fitting function.  Observe that monitors are \
temporary, disappearing after a computation has finished."
}], "Text",
 CellChangeTimes->{{3.4342184586647806`*^9, 3.4342184698161*^9}, {
  3.434218501883549*^9, 3.434218539261731*^9}, {3.434916257922707*^9, 
  3.4349163593553667`*^9}, {3.434916638077463*^9, 3.434916676388489*^9}, {
  3.434916784714609*^9, 3.434916813193001*^9}, {3.434917201134646*^9, 
  3.434917450522965*^9}, {3.4349174819560833`*^9, 3.434917566598205*^9}, {
  3.434917596659881*^9, 3.434917599056828*^9}, {3.4349177299085608`*^9, 
  3.434917750691806*^9}, {3.439751116902275*^9, 3.4397511193241653`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ranavg", "[", "num_", "]"}], ":=", 
   RowBox[{
    RowBox[{"Sum", "[", 
     RowBox[{
      RowBox[{"RandomReal", "[", "]"}], ",", 
      RowBox[{"{", "num", "}"}]}], "]"}], "/", "num"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Monitor", "[", "   ", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"ranavg", "[", 
      RowBox[{"10", "^", "6"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "1", ",", "10"}], "}"}]}], "]"}], ",", "  ", 
   RowBox[{"{", 
    RowBox[{"n", ",", 
     RowBox[{"ProgressIndicator", "[", 
      RowBox[{"n", ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "10"}], "}"}]}], "]"}]}], "}"}]}], "   ", 
  "]"}]}], "Input",
 CellChangeTimes->{{3.4342330595102353`*^9, 3.434233121246191*^9}, {
   3.4342332585934567`*^9, 3.434233258999717*^9}, {3.4342339031412067`*^9, 
   3.43423390757882*^9}, 3.434916371455845*^9, {3.434916608501425*^9, 
   3.434916626597364*^9}, {3.434916883310914*^9, 3.434917163181221*^9}, {
   3.434917462414051*^9, 3.434917469197506*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"data", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0.18", ",", 
       RowBox[{"-", "0.13"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.84", ",", 
       RowBox[{"-", "0.06"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.05", ",", "0.88"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.24", ",", 
       RowBox[{"-", "0.63"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.67", ",", "0.93"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.05", ",", "0.88"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.65", ",", "0.92"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.01", ",", "0.99"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.17", ",", 
       RowBox[{"-", "0.04"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.23", ",", 
       RowBox[{"-", "0.55"}]}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"lp", " ", "=", " ", 
    RowBox[{"ListPlot", "[", 
     RowBox[{"data", ",", " ", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "1"}], "}"}]}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"PointSize", "[", "0.02", "]"}], "}"}]}]}], "]"}]}], ";"}], 
  "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"model", "[", 
    RowBox[{"{", 
     RowBox[{"a_", ",", " ", "k_", ",", " ", "w_", ",", " ", "p_"}], "}"}], 
    "]"}], " ", ":=", " ", 
   RowBox[{"a", " ", 
    RowBox[{"Exp", "[", 
     RowBox[{
      RowBox[{"-", "k"}], " ", "x"}], "]"}], " ", 
    RowBox[{"Sin", "[", 
     RowBox[{
      RowBox[{"w", " ", "x"}], " ", "+", "p"}], "]"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"varlist", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{"a", ",", "k", ",", "w", ",", "p"}], "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Monitor", "[", 
  RowBox[{
   RowBox[{"FindFit", "[", 
    RowBox[{"data", ",", " ", 
     RowBox[{"model", "[", "varlist", "]"}], ",", "varlist", ",", "x", ",", 
     RowBox[{"StepMonitor", "\[RuleDelayed]", 
      RowBox[{"Pause", "[", "0.5", "]"}]}]}], "]"}], ",", 
   RowBox[{"Show", "[", 
    RowBox[{"lp", ",", 
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{"model", "[", "varlist", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "0", ",", "1"}], "}"}]}], "]"}]}], "]"}]}], 
  "]"}]}], "Input",
 CellContext->"Global`",
 CellChangeTimes->{{3.434233316657443*^9, 3.4342333196731453`*^9}, 
   3.434233357002226*^9, {3.4342335888206606`*^9, 3.434233663431945*^9}, {
   3.434233716933315*^9, 3.434233810763842*^9}, {3.434233860765122*^9, 
   3.434233874046712*^9}, {3.434916741934814*^9, 3.434916753724718*^9}},
 CellID->683934099]
}, Closed]],

Cell[CellGroupData[{

Cell["Trace", "Subsubsection",
 CellChangeTimes->{{3.434238161484406*^9, 3.4342381621406727`*^9}, {
  3.4349177573662643`*^9, 3.4349177574917593`*^9}, {3.4349191952681217`*^9, 
  3.4349191954199457`*^9}, {3.523823589994858*^9, 3.523823597194858*^9}}],

Cell[TextData[{
 "The ",
 StyleBox[ButtonBox["Trace",
  BaseStyle->"Link",
  ButtonData->"paclet://ref/Trace"],
  FontWeight->"Bold"],
 " function lets us look under the hood by capturing the inputs received and \
the outputs returned at every step of a calculation.  Though the output can \
be pretty opaque, ",
 StyleBox["Trace",
  FontWeight->"Bold"],
 " is a powerful tool if you really need to know how your calculation is \
proceeding internally."
}], "Text",
 CellChangeTimes->{{3.434918179454487*^9, 3.434918199690749*^9}, {
  3.434918731463666*^9, 3.4349187906413317`*^9}, {3.434918867038553*^9, 
  3.4349188692195168`*^9}, {3.4349189594476223`*^9, 3.434919110034667*^9}, {
  3.4349191653722*^9, 3.434919176155645*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"a", " ", "=", " ", "2"}], ";", " ", 
  RowBox[{"b", " ", "=", " ", "3"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"crazy", " ", "=", " ", 
  RowBox[{"Trace", "[", 
   RowBox[{"Exp", "[", 
    RowBox[{"2", "*", 
     RowBox[{"(", 
      RowBox[{"a", "+", "b", "+", "7"}], ")"}]}], "]"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"crazy", "//", "TreeForm"}], "\[IndentingNewLine]", 
 RowBox[{"crazy", "//", "InputForm"}]}], "Input",
 CellChangeTimes->{{3.43491828059326*^9, 3.4349184205359*^9}, {
  3.4349184887397337`*^9, 3.4349185101141253`*^9}, {3.4349185431344147`*^9, 
  3.434918560134693*^9}, {3.434918640599846*^9, 3.4349187251523523`*^9}, {
  3.434918887215424*^9, 3.434918955791238*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " Workbench"
}], "Subsubsection",
 CellChangeTimes->{{3.52395385292605*^9, 3.52395386218605*^9}}],

Cell[TextData[{
 "Debugging and maintaining large projects and packages is best done using \
the ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " Workbench.  This includes facilities for important debugging and testing \
procedures we haven\[CloseCurlyQuote]t had time and space to review here.  \
These include:"
}], "Text",
 CellChangeTimes->{{3.5239538649860497`*^9, 3.52395393405175*^9}}],

Cell[CellGroupData[{

Cell["version control", "Item",
 CellChangeTimes->{{3.52395394645175*^9, 3.52395394913175*^9}}],

Cell["unit testing", "Item",
 CellChangeTimes->{{3.5239539494717503`*^9, 3.52395395177175*^9}}],

Cell["full featured debugger", "Item",
 CellChangeTimes->{{3.52395396476175*^9, 3.52395396931595*^9}}],

Cell[CellGroupData[{

Cell["break points", "Subitem",
 CellChangeTimes->{{3.52395396946595*^9, 3.52395398604595*^9}}],

Cell["watch points", "Subitem",
 CellChangeTimes->{{3.52395398626595*^9, 3.52395398827595*^9}}],

Cell["call stack", "Subitem",
 CellChangeTimes->{{3.5239539887459497`*^9, 3.52395399071595*^9}}],

Cell["stepping", "Subitem",
 CellChangeTimes->{{3.5239539908559504`*^9, 3.52395399471595*^9}}],

Cell["monitoring", "Subitem",
 CellChangeTimes->{3.52395400650595*^9}]
}, Open  ]]
}, Open  ]]
}, Closed]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["On Your Own (30 min)", "Section",
 CellChangeTimes->{{3.523823630999858*^9, 3.523823633543858*^9}, {
  3.52389847068729*^9, 3.5238984731662903`*^9}}],

Cell["\<\
Write a package which will translate voltage measurements from a temperature \
sensing diode into temperature.  The package should have a routine to call \
with calibration data (measured voltage/temperature pairs), a routine to call \
which takes a voltage and returns a temperature, and a routine to call for \
testing.  Be sure your tests check for appropriately handling the following \
conditions:\
\>", "Text",
 CellChangeTimes->{{3.5238990997062902`*^9, 3.5238991423442903`*^9}, {
  3.52389945635829*^9, 3.523899579015536*^9}}],

Cell[CellGroupData[{

Cell["providing inputs within calibration limits", "Item",
 CellChangeTimes->{{3.523899600551751*^9, 3.523899632081955*^9}, {
  3.523899685206421*^9, 3.52389969801566*^9}}],

Cell[CellGroupData[{

Cell["where voltages exactly match calibration voltages", "Subitem",
 CellChangeTimes->{{3.523899632927631*^9, 3.523899658036702*^9}}],

Cell["\<\
where voltages are between calibration voltages\
\>", "Subitem",
 CellChangeTimes->{{3.52389965832193*^9, 3.5238996659270096`*^9}, {
  3.5279416595034122`*^9, 3.527941659533411*^9}}]
}, Open  ]],

Cell["providing inputs outside calibration limits", "Item",
 CellChangeTimes->{{3.5238996691145573`*^9, 3.5238997053975606`*^9}}],

Cell["\<\
providing inputs which have a wrong data type (string, for instance)\
\>", "Item",
 CellChangeTimes->{{3.52389970608511*^9, 3.5238997301673603`*^9}}],

Cell["\<\
providing calibration data where the voltages and not stricly increasing or \
decreasing\
\>", "Item",
 CellChangeTimes->{{3.523899730439578*^9, 3.523899751079077*^9}}]
}, Open  ]],

Cell["\<\
You might find the Interpolation function helpful in this exercise.  Be sure \
your package is appropriately documented both for your own reference and so \
others will know how to use it.  Any data which is stored between calls \
should be private and not global.\
\>", "Text",
 CellChangeTimes->{{3.5238997645608535`*^9, 3.5238998313942776`*^9}, {
   3.5239003257899494`*^9, 3.523900328607231*^9}, 3.5239006627016373`*^9, {
   3.52787827809408*^9, 3.5278782803023005`*^9}}],

Cell["\<\
Here is the calibration data.  The first number in of each pair is a voltage \
and the second number the temperature in Kelvin.\
\>", "Text",
 CellChangeTimes->{{3.5238998368866677`*^9, 3.523899873679703*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"theData", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"107.97661143675317`", ",", "1.9900090719454193`"}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{"148.6923000122924`", ",", "1.7707436134679264`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"176.90564492163165`", ",", "1.6229034973271557`"}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{"16.986009272807575`", ",", "2.46351469610207`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"190.75588793412516`", ",", "1.544097704545851`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"137.21427597874347`", ",", "1.832416246014891`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"116.79096336113136`", ",", "1.958138047605583`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"37.47560343337524`", ",", "2.358506792969041`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"148.18089978704614`", ",", "1.7693512922939507`"}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{"30.508283755738418`", ",", "2.405814449469174`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"157.96394182463771`", ",", "1.6992645810170925`"}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{"116.43206946261877`", ",", "1.949081213417996`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"178.34183449930978`", ",", "1.6195753575106822`"}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{"132.72852946818014`", ",", "1.8529397030092025`"}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{"178.94781961135678`", ",", "1.612147000768918`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"76.37488131962016`", ",", "2.167933095119373`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"64.33294897830152`", ",", "2.223872800337109`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"183.59678070648843`", ",", "1.5944520983951989`"}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{"151.40943403271868`", ",", "1.7620324465090833`"}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{"167.15847588777987`", ",", "1.6784745802966434`"}], "}"}]}], 
     "}"}]}], ";"}], "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.523899876277482*^9, 3.5238998980079994`*^9}, {
   3.523899937490841*^9, 3.5239000779719725`*^9}, {3.5239001171507225`*^9, 
   3.5239002863880095`*^9}, {3.5279417351703854`*^9, 3.527941740130187*^9}, {
   3.527942626574728*^9, 3.527942656983512*^9}, {3.527942704901595*^9, 
   3.5279427294606123`*^9}, {3.527944101115744*^9, 3.5279441143652143`*^9}, {
   3.5279441674930887`*^9, 3.5279442027916765`*^9}, 3.527944327906672*^9, {
   3.5285471511137576`*^9, 3.5285471524727573`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Calibrate", "[", "theData", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"VoltToTemp", "[", "x", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "1.5441", ",", "2.46351"}], "}"}]}], 
  "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.5285475741097574`*^9, 3.528547610622758*^9}, {
  3.5285476475147576`*^9, 3.528547745716758*^9}, {3.5285478080977573`*^9, 
  3.528547825742758*^9}, {3.5285478627977576`*^9, 3.5285479533037577`*^9}, {
  3.5285480937447577`*^9, 3.528548219688758*^9}, {3.5285482815097575`*^9, 
  3.5285482841327577`*^9}, {3.5285483237627573`*^9, 3.5285483712317576`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"InterpolatingFunction", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{"1.544097704545851`", ",", "2.46351469610207`"}], "}"}], "}"}], 
    ",", "\<\"<>\"\>"}], "]"}],
  False,
  Editable->False]], "Output",
 CellChangeTimes->{{3.5285475974497576`*^9, 3.5285476111977577`*^9}, {
  3.5285476484937572`*^9, 3.5285477464547577`*^9}, {3.5285478105387573`*^9, 
  3.528547828558758*^9}, {3.5285478683147573`*^9, 3.5285479549077578`*^9}, {
  3.5285481221647577`*^9, 3.5285481643777575`*^9}, {3.5285482001167574`*^9, 
  3.5285482205317574`*^9}, {3.5285483478377576`*^9, 3.5285483714557576`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
BTIZbFrsmpQUWCg8/qZIthMZxD4ketjtYKGwRoKSuyUZMp8KXMrcxULdnhXr
mtXJ4F5ssqVGkYXufLz46dwOMsjfjS4d3c1CvAuPb5/H3w8l11hdSiosdLJB
8MR5/D5/PHZfkN0eFuq78N71P7Y3aJ4NI4apstDTrSM6XfPeUE37u6tGnYWs
rBxzbg57wwUP5TejGix0bHiPOLHbG4yd/O0FtFjoRew5m4ZWb/hsNBZhp81C
EetP/z311huSdOXWhOmw0OF1Dw08qrzBUc39XuY+FpIw8tzz8Jk3bNyZpV2j
i89T7FRxf+QNfdJdTaN6LCTi4FgRdt8b7q5f7ylwgIUKTDbrLOV6g88q+wUl
fRYauxKsNJztDTu5r1+yQyx0tiSVf2+GN8zQm7aEAQtJqrboL6V4Q+lfgbJM
AxYKzfUwU0jyhpMTJiY1htj/S1fT31/1Bp2B6O5RIxYSDcrIbb/sDaxvNUEC
JixU0fWx3/GiN9Q2sYjKpiz03cG11iLOG2Lr9qXbmbGQDPXWm2cx3mD+Mkwx
zJyFjLPeH0yN9obVpc/eZFqw0Hy47OhMFNZz1bBalyULqZqcfVqL2YUmUrDe
moUiU4W8t+PfX3ivt9HhIL7+cGrLFnzefVm/hCQbfP2pgW9Fsd7Qci59pdmW
hS4l3RmbiPeGha53J4TtWOiDOSeoFdcrqTU7Zm7PQv63Fe5rXvMGg2TpI/EO
LHTdWDVDLNkbaL+smt45spDZgrYFLc0bEi3O6BOdWOie99E6jUxvKC8oLNN3
ZqFXJqXCoTne0Ev8tu3cERYqdjiivK3AG7jciRkvj7LQf4ZBe0xKsN5VKsJL
Lix0sEFI8luZN5wKuTx7gsRC+07YNGrUekN2y3OfJ+4sFEVQukNo8IY6xbHO
GQ8WWs8hnNPA+Vgzqv+G6o3nU54Q+g7naS8KVCsgs1D2M6/sLT+9wS3rVv6I
DwtZXt31p33BG4odFq6QqCy0NOOidvj/36NP5FYyaSwkN8xU3bwOf08L257o
8mOhA4snIrTx97LR+2Jnh0AW+njYWjgAf//0a3pssziBzxt5y3+Rht//kq/e
jA9hofxa8X0Np8ig+Oul0PtQFroVvHHRNoYMpwvWzeqHsdC3DcXKu3PIsFbi
02vNs3gezv6J6e4mg8mSprNsHAs9GrXtd8Pvs49eCl1ZymAht8ajvNqhvuCu
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
+3o1oOmnVxpXcIPqno28TSxV+B/XM8Yi
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{1.55, 0},
  PlotRange->{{1.5441, 2.46351}, {0., 218.8693751367954}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{{3.5285475974497576`*^9, 3.5285476111977577`*^9}, {
  3.5285476484937572`*^9, 3.5285477464547577`*^9}, {3.5285478105387573`*^9, 
  3.528547828558758*^9}, {3.5285478683147573`*^9, 3.5285479549077578`*^9}, {
  3.5285481221647577`*^9, 3.5285481643777575`*^9}, {3.5285482001167574`*^9, 
  3.5285482205317574`*^9}, {3.5285483478377576`*^9, 3.528548371485758*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"hi", " ", "=", " ", 
  RowBox[{"Interpolation", "[", "theData", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"hi", "[", "107.9766", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"hi", "[", "x", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "1", ",", "5"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.5285460844137573`*^9, 3.5285461287047577`*^9}, {
  3.5285467433887577`*^9, 3.5285467509087577`*^9}, {3.5285471556217575`*^9, 
  3.528547156405758*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"InterpolatingFunction", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{"16.986009272807575`", ",", "190.75588793412516`"}], "}"}], 
     "}"}], ",", "\<\"<>\"\>"}], "]"}],
  False,
  Editable->False]], "Output",
 CellChangeTimes->{{3.5285460900477576`*^9, 3.5285461298037577`*^9}, {
  3.528546738379758*^9, 3.528546751471758*^9}}],

Cell[BoxData["1.990009385722331`"], "Output",
 CellChangeTimes->{{3.5285460900477576`*^9, 3.5285461298037577`*^9}, {
  3.528546738379758*^9, 3.5285467514737577`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"check", " ", "=", " ", 
  RowBox[{"Calibrate", "[", "data", "]"}]}]], "Input",
 CellChangeTimes->{{3.5285468003767576`*^9, 3.5285468207927575`*^9}, {
  3.5285469167867575`*^9, 3.5285469243707576`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"InterpolatingFunction", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{"16.986009272807575`", ",", "190.75588793412516`"}], "}"}], 
     "}"}], ",", "\<\"<>\"\>"}], "]"}],
  False,
  Editable->False]], "Output",
 CellChangeTimes->{{3.5285460900477576`*^9, 3.5285461298037577`*^9}, {
   3.528546738379758*^9, 3.5285467514847574`*^9}, {3.528546807049758*^9, 
   3.5285468453817577`*^9}, 3.5285469250997577`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Optional", "Subsection",
 CellChangeTimes->{{3.523900645516919*^9, 3.5239006466840353`*^9}}],

Cell["\<\
The data is a bit noisy.  Can you find a way to smooth out the noise in the \
data?  If you can, add that functionality to your package.\
\>", "Text",
 CellChangeTimes->{{3.5239006348428516`*^9, 3.5239006817095375`*^9}}],

Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<`*\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.5285467093387575`*^9, 3.5285467132957573`*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
AutoGeneratedPackage->None,
WindowSize->{784, 1122},
WindowMargins->{{0, Automatic}, {0, Automatic}},
ShowSelection->True,
FrontEndVersion->"8.0 for Microsoft Windows (32-bit) (February 23, 2011)",
StyleDefinitions->FrontEnd`FileName[{"Creative"}, "PastelColor.nb", 
  CharacterEncoding -> "WindowsANSI"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "Info3527915831-7596412"->{
  Cell[52830, 1341, 216, 4, 40, "Print",
   CellTags->"Info3527915831-7596412"]},
 "Info3527918134-5844438"->{
  Cell[192422, 4976, 121, 2, 42, "Print",
   CellTags->"Info3527918134-5844438"],
  Cell[192546, 4980, 990, 29, 55, "Print",
   CellTags->"Info3527918134-5844438"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"Info3527915831-7596412", 422221, 10055},
 {"Info3527918134-5844438", 422332, 10058}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[567, 22, 958, 14, 65, "Title"],
Cell[1528, 38, 354, 6, 40, "Subtitle"],
Cell[1885, 46, 4527, 66, 281, "Text"],
Cell[CellGroupData[{
Cell[6437, 116, 408, 5, 75, "Section"],
Cell[6848, 123, 775, 12, 65, "Text"],
Cell[CellGroupData[{
Cell[7648, 139, 341, 4, 36, "Subsection"],
Cell[7992, 145, 1089, 29, 65, "Text"],
Cell[CellGroupData[{
Cell[9106, 178, 1268, 32, 182, "Input"],
Cell[10377, 212, 241, 6, 40, "Output"],
Cell[10621, 220, 100, 2, 40, "Output"],
Cell[10724, 224, 2095, 41, 253, "Output"],
Cell[CellGroupData[{
Cell[12844, 269, 97, 2, 23, "Print"],
Cell[12944, 273, 97, 2, 23, "Print"],
Cell[13044, 277, 97, 2, 23, "Print"],
Cell[13144, 281, 97, 2, 23, "Print"],
Cell[13244, 285, 97, 2, 23, "Print"],
Cell[13344, 289, 99, 2, 23, "Print"],
Cell[13446, 293, 97, 2, 23, "Print"],
Cell[13546, 297, 97, 2, 23, "Print"],
Cell[13646, 301, 97, 2, 23, "Print"],
Cell[13746, 305, 100, 2, 23, "Print"]
}, Open  ]],
Cell[13861, 310, 100, 2, 40, "Output"]
}, Open  ]],
Cell[13976, 315, 609, 12, 65, "Text"],
Cell[CellGroupData[{
Cell[14610, 331, 455, 12, 62, "Input"],
Cell[15068, 345, 514, 11, 21, "Message"],
Cell[15585, 358, 183, 5, 54, "Output"]
}, Open  ]],
Cell[15783, 366, 725, 22, 83, "Text"],
Cell[CellGroupData[{
Cell[16533, 392, 676, 12, 102, "Input"],
Cell[17212, 406, 98, 2, 40, "Output"],
Cell[17313, 410, 99, 2, 40, "Output"],
Cell[17415, 414, 99, 2, 40, "Output"]
}, Open  ]],
Cell[17529, 419, 184, 5, 47, "Text"],
Cell[17716, 426, 215, 4, 41, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[17968, 435, 570, 7, 36, "Subsection"],
Cell[18541, 444, 1621, 38, 119, "Text"],
Cell[20165, 484, 260, 6, 41, "Input"],
Cell[CellGroupData[{
Cell[20450, 494, 293, 7, 41, "Input"],
Cell[20746, 503, 230, 8, 40, "Output"]
}, Open  ]],
Cell[20991, 514, 190, 5, 47, "Text"],
Cell[CellGroupData[{
Cell[21206, 523, 238, 5, 41, "Input"],
Cell[21447, 530, 100, 2, 40, "Output"]
}, Open  ]],
Cell[21562, 535, 491, 10, 83, "Text"],
Cell[CellGroupData[{
Cell[22078, 549, 738, 16, 62, "Input"],
Cell[22819, 567, 100, 2, 40, "Output"],
Cell[22922, 571, 155, 4, 40, "Output"]
}, Open  ]],
Cell[23092, 578, 608, 12, 83, "Text"],
Cell[23703, 592, 444, 11, 41, "Input"],
Cell[24150, 605, 351, 7, 47, "Text"],
Cell[24504, 614, 347, 9, 41, "Input"],
Cell[CellGroupData[{
Cell[24876, 627, 220, 3, 41, "Input"],
Cell[25099, 632, 98, 2, 40, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[25246, 640, 358, 6, 36, "Subsection"],
Cell[25607, 648, 719, 18, 49, "Text"],
Cell[CellGroupData[{
Cell[26351, 670, 457, 10, 62, "Input"],
Cell[26811, 682, 100, 2, 40, "Output"]
}, Open  ]],
Cell[26926, 687, 449, 10, 65, "Text"],
Cell[CellGroupData[{
Cell[27400, 701, 741, 19, 62, "Input"],
Cell[28144, 722, 99, 2, 40, "Output"]
}, Open  ]],
Cell[28258, 727, 459, 9, 47, "Text"],
Cell[CellGroupData[{
Cell[28742, 740, 731, 19, 62, "Input"],
Cell[29476, 761, 102, 2, 40, "Output"]
}, Open  ]],
Cell[29593, 766, 736, 14, 83, "Text"],
Cell[CellGroupData[{
Cell[30354, 784, 950, 23, 182, "Input"],
Cell[31307, 809, 96, 1, 40, "Output"]
}, Open  ]],
Cell[31418, 813, 1764, 35, 101, "Text"],
Cell[CellGroupData[{
Cell[33207, 852, 1844, 46, 202, "Input"],
Cell[35054, 900, 3902, 67, 250, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[39005, 973, 205, 3, 36, "Subsection"],
Cell[39213, 978, 620, 12, 47, "Text"],
Cell[CellGroupData[{
Cell[39858, 994, 975, 22, 202, "Input"],
Cell[40836, 1018, 152, 3, 40, "Output"],
Cell[40991, 1023, 150, 3, 40, "Output"],
Cell[41144, 1028, 390, 8, 40, "Output"],
Cell[41537, 1038, 149, 3, 40, "Output"],
Cell[41689, 1043, 150, 3, 40, "Output"],
Cell[41842, 1048, 162, 3, 40, "Output"]
}, Open  ]],
Cell[42019, 1054, 197, 4, 29, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[42253, 1063, 210, 3, 36, "Subsection"],
Cell[42466, 1068, 1930, 46, 119, "Text"],
Cell[44399, 1116, 231, 5, 29, "Text"],
Cell[44633, 1123, 1286, 35, 122, "Input"],
Cell[45922, 1160, 112, 1, 29, "Text"],
Cell[CellGroupData[{
Cell[46059, 1165, 1710, 31, 462, "Input"],
Cell[47772, 1198, 340, 7, 40, "Output"],
Cell[48115, 1207, 114, 2, 40, "Output"],
Cell[48232, 1211, 136, 3, 40, "Output"],
Cell[48371, 1216, 117, 2, 40, "Output"],
Cell[48491, 1220, 181, 5, 40, "Output"],
Cell[48675, 1227, 117, 2, 40, "Output"],
Cell[48795, 1231, 137, 3, 40, "Output"],
Cell[48935, 1236, 125, 2, 40, "Output"],
Cell[49063, 1240, 179, 5, 40, "Output"],
Cell[49245, 1247, 123, 2, 40, "Output"],
Cell[49371, 1251, 137, 3, 40, "Output"],
Cell[49511, 1256, 125, 2, 40, "Output"],
Cell[49639, 1260, 372, 8, 40, "Output"],
Cell[50014, 1270, 112, 2, 40, "Output"],
Cell[50129, 1274, 179, 5, 40, "Output"],
Cell[50311, 1281, 139, 3, 40, "Output"],
Cell[50453, 1286, 158, 4, 40, "Output"]
}, Open  ]],
Cell[50626, 1293, 1010, 17, 83, "Text"],
Cell[CellGroupData[{
Cell[51661, 1314, 1166, 25, 122, "Input"],
Cell[52830, 1341, 216, 4, 40, "Print",
 CellTags->"Info3527915831-7596412"],
Cell[53049, 1347, 619, 11, 40, "Output"],
Cell[53671, 1360, 8248, 243, 250, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[61980, 1610, 673, 9, 75, "Section"],
Cell[CellGroupData[{
Cell[62678, 1623, 516, 6, 36, "Subsection"],
Cell[63197, 1631, 1628, 23, 137, "Text"],
Cell[CellGroupData[{
Cell[64850, 1658, 962, 26, 142, "Input"],
Cell[65815, 1686, 724, 21, 84, "Output"],
Cell[66542, 1709, 1503, 50, 95, "Output"],
Cell[68048, 1761, 1505, 50, 95, "Output"],
Cell[69556, 1813, 19158, 627, 194, "Output"],
Cell[88717, 2442, 1627, 56, 116, "Output"],
Cell[90347, 2500, 1690, 56, 116, "Output"]
}, Open  ]],
Cell[92052, 2559, 1307, 30, 101, "Text"],
Cell[93362, 2591, 1610, 39, 182, "Input"],
Cell[CellGroupData[{
Cell[94997, 2634, 131, 2, 41, "Input"],
Cell[95131, 2638, 1024, 31, 95, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[96204, 2675, 543, 7, 36, "Subsection"],
Cell[96750, 2684, 1380, 43, 49, "Text"],
Cell[CellGroupData[{
Cell[98155, 2731, 668, 19, 43, "Input"],
Cell[98826, 2752, 1744, 37, 380, "Output"]
}, Open  ]],
Cell[100585, 2792, 1824, 48, 123, "Text"],
Cell[CellGroupData[{
Cell[102434, 2844, 2239, 42, 129, "Input"],
Cell[104676, 2888, 2637, 89, 161, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[107362, 2983, 436, 6, 36, "Subsection"],
Cell[107801, 2991, 208, 5, 29, "Text"],
Cell[CellGroupData[{
Cell[108034, 3000, 1160, 22, 62, "Input"],
Cell[109197, 3024, 29862, 495, 241, "Output"]
}, Open  ]],
Cell[139074, 3522, 3134, 96, 191, "Text"],
Cell[142211, 3620, 1982, 48, 162, "Input"],
Cell[CellGroupData[{
Cell[144218, 3672, 217, 5, 41, "Input"],
Cell[144438, 3679, 617, 10, 60, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[145104, 3695, 896, 12, 36, "Subsection"],
Cell[146003, 3709, 2651, 76, 159, "Text"],
Cell[148657, 3787, 2351, 49, 102, "Input"],
Cell[151011, 3838, 1525, 35, 83, "Text"],
Cell[152539, 3875, 3944, 89, 222, "Input"],
Cell[156486, 3966, 1832, 49, 75, "Text"],
Cell[158321, 4017, 971, 13, 41, "Input"],
Cell[159295, 4032, 5362, 180, 227, "Text"],
Cell[164660, 4214, 2454, 50, 250, "Input"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[167163, 4270, 665, 9, 75, "Section"],
Cell[167831, 4281, 1591, 38, 155, "Text"],
Cell[CellGroupData[{
Cell[169447, 4323, 1073, 16, 36, "Subsection"],
Cell[170523, 4341, 1228, 32, 137, "Text"],
Cell[CellGroupData[{
Cell[171776, 4377, 663, 16, 41, "Input"],
Cell[CellGroupData[{
Cell[172464, 4397, 71, 1, 23, "Print"],
Cell[172538, 4400, 71, 1, 23, "Print"],
Cell[172612, 4403, 71, 1, 23, "Print"],
Cell[172686, 4406, 71, 1, 23, "Print"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[172806, 4413, 621, 15, 41, "Input"],
Cell[CellGroupData[{
Cell[173452, 4432, 69, 1, 23, "Print"],
Cell[173524, 4435, 69, 1, 23, "Print"],
Cell[173596, 4438, 69, 1, 23, "Print"],
Cell[173668, 4441, 69, 1, 23, "Print"],
Cell[173740, 4444, 69, 1, 23, "Print"],
Cell[173812, 4447, 71, 1, 23, "Print"],
Cell[173886, 4450, 71, 1, 23, "Print"],
Cell[173960, 4453, 71, 1, 23, "Print"],
Cell[174034, 4456, 70, 1, 23, "Print"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[174153, 4463, 418, 12, 41, "Input"],
Cell[CellGroupData[{
Cell[174596, 4479, 71, 1, 23, "Print"],
Cell[174670, 4482, 71, 1, 23, "Print"],
Cell[174744, 4485, 71, 1, 23, "Print"],
Cell[174818, 4488, 71, 1, 23, "Print"],
Cell[174892, 4491, 69, 1, 23, "Print"],
Cell[174964, 4494, 69, 1, 23, "Print"],
Cell[175036, 4497, 69, 1, 23, "Print"],
Cell[175108, 4500, 71, 1, 23, "Print"],
Cell[175182, 4503, 71, 1, 23, "Print"],
Cell[175256, 4506, 72, 1, 23, "Print"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[175377, 4513, 612, 15, 41, "Input"],
Cell[CellGroupData[{
Cell[176014, 4532, 69, 1, 23, "Print"],
Cell[176086, 4535, 69, 1, 23, "Print"],
Cell[176158, 4538, 71, 1, 23, "Print"],
Cell[176232, 4541, 69, 1, 23, "Print"]
}, Open  ]],
Cell[176316, 4545, 77, 1, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[176430, 4551, 659, 16, 41, "Input"],
Cell[CellGroupData[{
Cell[177114, 4571, 68, 1, 23, "Print"],
Cell[177185, 4574, 68, 1, 23, "Print"],
Cell[177256, 4577, 68, 1, 23, "Print"],
Cell[177327, 4580, 69, 1, 23, "Print"],
Cell[177399, 4583, 71, 1, 23, "Print"],
Cell[177473, 4586, 69, 1, 23, "Print"],
Cell[177545, 4589, 71, 1, 23, "Print"],
Cell[177619, 4592, 71, 1, 23, "Print"],
Cell[177693, 4595, 71, 1, 23, "Print"],
Cell[177767, 4598, 72, 1, 23, "Print"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[177900, 4606, 691, 9, 36, "Subsection"],
Cell[178594, 4617, 370, 7, 47, "Text"],
Cell[CellGroupData[{
Cell[178989, 4628, 499, 9, 62, "Input"],
Cell[179491, 4639, 143, 2, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[179671, 4646, 550, 13, 62, "Input"],
Cell[180224, 4661, 125, 2, 40, "Output"],
Cell[180352, 4665, 3621, 65, 255, "Output"]
}, Open  ]],
Cell[183988, 4733, 69, 1, 41, "Input"],
Cell[CellGroupData[{
Cell[184082, 4738, 1009, 21, 102, "Input"],
Cell[185094, 4761, 71, 1, 40, "Output"]
}, Open  ]],
Cell[185180, 4765, 587, 14, 102, "Input"],
Cell[CellGroupData[{
Cell[185792, 4783, 1287, 30, 142, "Input"],
Cell[187082, 4815, 143, 3, 40, "Output"],
Cell[187228, 4820, 142, 4, 125, "Output"]
}, Open  ]],
Cell[187385, 4827, 1162, 28, 83, "Text"],
Cell[CellGroupData[{
Cell[188572, 4859, 95, 1, 41, "Input"],
Cell[188670, 4862, 78, 1, 40, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[188797, 4869, 170, 2, 36, "Subsection"],
Cell[188970, 4873, 169, 4, 29, "Text"],
Cell[189142, 4879, 530, 12, 47, "Text"],
Cell[CellGroupData[{
Cell[189697, 4895, 661, 15, 102, "Input"],
Cell[190361, 4912, 81, 2, 43, "Output"],
Cell[190445, 4916, 117, 3, 40, "Output"]
}, Open  ]],
Cell[190577, 4922, 509, 9, 65, "Text"],
Cell[CellGroupData[{
Cell[191111, 4935, 792, 18, 122, "Input"],
Cell[191906, 4955, 72, 1, 40, "Output"],
Cell[191981, 4958, 72, 1, 40, "Output"]
}, Open  ]],
Cell[192068, 4962, 148, 3, 29, "Text"],
Cell[CellGroupData[{
Cell[192241, 4969, 156, 3, 41, "Input"],
Cell[CellGroupData[{
Cell[192422, 4976, 121, 2, 42, "Print",
 CellTags->"Info3527918134-5844438"],
Cell[192546, 4980, 990, 29, 55, "Print",
 CellTags->"Info3527918134-5844438"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[193609, 5017, 350, 6, 75, "Section"],
Cell[193962, 5025, 631, 12, 83, "Text"],
Cell[CellGroupData[{
Cell[194618, 5041, 154, 2, 36, "Subsection"],
Cell[194775, 5045, 778, 12, 101, "Text"],
Cell[195556, 5059, 465, 8, 47, "Text"],
Cell[CellGroupData[{
Cell[196046, 5071, 7651, 213, 585, "Input"],
Cell[203700, 5286, 248, 6, 40, "Output"]
}, Open  ]],
Cell[203963, 5295, 670, 10, 101, "Text"],
Cell[CellGroupData[{
Cell[204658, 5309, 7212, 198, 682, "Input"],
Cell[211873, 5509, 341, 7, 40, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[212263, 5522, 94, 1, 36, "Subsection"],
Cell[212360, 5525, 998, 16, 137, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[213395, 5546, 101, 1, 36, "Subsection"],
Cell[213499, 5549, 807, 14, 137, "Text"],
Cell[214309, 5565, 857, 23, 102, "Input"],
Cell[215169, 5590, 250, 5, 29, "Text"],
Cell[CellGroupData[{
Cell[215444, 5599, 431, 11, 41, "Input"],
Cell[215878, 5612, 73, 1, 40, "Output"]
}, Open  ]],
Cell[215966, 5616, 234, 5, 29, "Text"],
Cell[CellGroupData[{
Cell[216225, 5625, 519, 13, 41, "Input"],
Cell[216747, 5640, 74, 1, 40, "Output"]
}, Open  ]],
Cell[216836, 5644, 378, 7, 47, "Text"],
Cell[CellGroupData[{
Cell[217239, 5655, 521, 12, 41, "Input"],
Cell[217763, 5669, 445, 10, 40, "Message"],
Cell[218211, 5681, 445, 10, 40, "Message"],
Cell[218659, 5693, 477, 10, 21, "Message"],
Cell[219139, 5705, 477, 10, 21, "Message"],
Cell[219619, 5717, 145, 3, 40, "Output"]
}, Open  ]],
Cell[219779, 5723, 225, 4, 47, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[220041, 5732, 102, 1, 36, "Subsection"],
Cell[220146, 5735, 972, 16, 191, "Text"],
Cell[CellGroupData[{
Cell[221143, 5755, 1153, 31, 212, "Input"],
Cell[222299, 5788, 161, 4, 40, "Output"]
}, Open  ]],
Cell[222475, 5795, 364, 6, 47, "Text"],
Cell[222842, 5803, 400, 12, 41, "Input"],
Cell[223245, 5817, 162, 3, 29, "Text"],
Cell[223410, 5822, 1961, 49, 162, "Input"],
Cell[CellGroupData[{
Cell[225396, 5875, 303, 5, 41, "Input"],
Cell[CellGroupData[{
Cell[225724, 5884, 185, 4, 23, "Print"],
Cell[225912, 5890, 173, 4, 23, "Print"],
Cell[226088, 5896, 169, 4, 23, "Print"]
}, Open  ]]
}, Open  ]],
Cell[226284, 5904, 228, 5, 29, "Text"],
Cell[226515, 5911, 298, 8, 41, "Input"],
Cell[226816, 5921, 184, 4, 29, "Text"],
Cell[CellGroupData[{
Cell[227025, 5929, 179, 3, 41, "Input"],
Cell[CellGroupData[{
Cell[227229, 5936, 185, 4, 23, "Print"],
Cell[227417, 5942, 171, 4, 23, "Print"],
Cell[227591, 5948, 167, 4, 23, "Print"]
}, Open  ]]
}, Open  ]],
Cell[227785, 5956, 257, 5, 47, "Text"],
Cell[228045, 5963, 2375, 62, 242, "Input"],
Cell[CellGroupData[{
Cell[230445, 6029, 138, 2, 41, "Input"],
Cell[CellGroupData[{
Cell[230608, 6035, 185, 4, 23, "Print"],
Cell[230796, 6041, 173, 4, 23, "Print"],
Cell[230972, 6047, 169, 4, 23, "Print"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[231202, 6058, 173, 4, 36, "Subsection"],
Cell[231378, 6064, 889, 15, 155, "Text"],
Cell[232270, 6081, 367, 6, 47, "Text"],
Cell[232640, 6089, 3058, 81, 282, "Input"],
Cell[235701, 6172, 198, 4, 29, "Text"],
Cell[CellGroupData[{
Cell[235924, 6180, 1377, 36, 82, "Input"],
Cell[237304, 6218, 21168, 355, 241, "Output"]
}, Open  ]],
Cell[258487, 6576, 859, 16, 119, "Text"],
Cell[259349, 6594, 406, 7, 65, "Text"],
Cell[CellGroupData[{
Cell[259780, 6605, 1004, 29, 82, "Input"],
Cell[260787, 6636, 80992, 1364, 238, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[341828, 8006, 107, 1, 36, "Subsection"],
Cell[341938, 8009, 730, 12, 137, "Text"],
Cell[342671, 8023, 267, 5, 47, "Text"],
Cell[CellGroupData[{
Cell[342963, 8032, 815, 23, 162, "Input"],
Cell[343781, 8057, 93, 2, 40, "Output"],
Cell[343877, 8061, 95, 2, 40, "Output"],
Cell[343975, 8065, 72, 1, 40, "Output"]
}, Open  ]],
Cell[344062, 8069, 363, 7, 47, "Text"],
Cell[CellGroupData[{
Cell[344450, 8080, 1207, 30, 202, "Input"],
Cell[345660, 8112, 95, 2, 40, "Output"],
Cell[345758, 8116, 128, 3, 40, "Output"],
Cell[345889, 8121, 101, 1, 40, "Output"]
}, Open  ]],
Cell[346005, 8125, 565, 19, 29, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[346607, 8149, 103, 1, 36, "Subsection"],
Cell[346713, 8152, 410, 10, 47, "Text"],
Cell[CellGroupData[{
Cell[347148, 8166, 2999, 77, 302, "Input"],
Cell[350150, 8245, 263, 7, 21, "Message"],
Cell[350416, 8254, 260, 7, 21, "Message"],
Cell[350679, 8263, 158, 4, 43, "Output"],
Cell[350840, 8269, 260, 7, 21, "Message"],
Cell[351103, 8278, 156, 4, 43, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[351308, 8288, 108, 1, 36, "Subsection"],
Cell[351419, 8291, 541, 12, 47, "Text"],
Cell[CellGroupData[{
Cell[351985, 8307, 1723, 48, 262, "Input"],
Cell[353711, 8357, 429, 10, 21, "Message"],
Cell[354143, 8369, 449, 10, 21, "Message"],
Cell[354595, 8381, 177, 5, 43, "Output"],
Cell[354775, 8388, 177, 5, 43, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[355001, 8399, 102, 1, 36, "Subsection"],
Cell[355106, 8402, 637, 15, 67, "Text"],
Cell[CellGroupData[{
Cell[355768, 8421, 1146, 27, 152, "Input"],
Cell[356917, 8450, 122, 2, 40, "Output"],
Cell[357042, 8454, 135, 2, 40, "Output"],
Cell[357180, 8458, 129, 2, 40, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[357370, 8467, 470, 6, 75, "Section"],
Cell[357843, 8475, 1353, 27, 155, "Text"],
Cell[CellGroupData[{
Cell[359221, 8506, 266, 5, 36, "Subsection"],
Cell[CellGroupData[{
Cell[359512, 8515, 302, 4, 27, "Subsubsection"],
Cell[359817, 8521, 488, 10, 65, "Text"],
Cell[CellGroupData[{
Cell[360330, 8535, 468, 10, 41, "Input"],
Cell[CellGroupData[{
Cell[360823, 8549, 71, 1, 23, "Print"],
Cell[360897, 8552, 71, 1, 23, "Print"],
Cell[360971, 8555, 71, 1, 23, "Print"],
Cell[361045, 8558, 69, 1, 23, "Print"],
Cell[361117, 8561, 69, 1, 23, "Print"],
Cell[361189, 8564, 69, 1, 23, "Print"],
Cell[361261, 8567, 69, 1, 23, "Print"],
Cell[361333, 8570, 71, 1, 23, "Print"],
Cell[361407, 8573, 69, 1, 23, "Print"],
Cell[361479, 8576, 70, 1, 23, "Print"]
}, Open  ]],
Cell[361564, 8580, 71, 1, 40, "Output"]
}, Open  ]],
Cell[361650, 8584, 214, 4, 47, "Text"],
Cell[CellGroupData[{
Cell[361889, 8592, 1191, 29, 222, "Input"],
Cell[363083, 8623, 561, 11, 39, "Message"],
Cell[363647, 8636, 131, 2, 23, "Print"],
Cell[363781, 8640, 163, 3, 40, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[363993, 8649, 481, 6, 27, "Subsubsection"],
Cell[364477, 8657, 1092, 29, 83, "Text"],
Cell[CellGroupData[{
Cell[365594, 8690, 1254, 29, 102, "Input",
 CellID->138675430],
Cell[366851, 8721, 142, 3, 40, "Output"],
Cell[366996, 8726, 73, 1, 40, "Output"]
}, Open  ]],
Cell[367084, 8730, 767, 22, 67, "Text"],
Cell[CellGroupData[{
Cell[367876, 8756, 689, 17, 102, "Input"],
Cell[368568, 8775, 106, 2, 40, "Output"],
Cell[368677, 8779, 495, 10, 29, "Message"],
Cell[369175, 8791, 207, 6, 43, "Output"],
Cell[369385, 8799, 108, 2, 40, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[369542, 8807, 181, 4, 27, "Subsubsection"],
Cell[369726, 8813, 865, 25, 65, "Text"],
Cell[CellGroupData[{
Cell[370616, 8842, 1569, 45, 102, "Input"],
Cell[372188, 8889, 151, 3, 40, "Output"],
Cell[372342, 8894, 524, 12, 40, "Message"],
Cell[372869, 8908, 165, 3, 40, "Output"],
Cell[373037, 8913, 159, 3, 40, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[373257, 8923, 151, 2, 36, "Subsection"],
Cell[CellGroupData[{
Cell[373433, 8929, 237, 3, 27, "Subsubsection"],
Cell[373673, 8934, 1864, 53, 137, "Text"],
Cell[375540, 8989, 2411, 62, 182, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[377988, 9056, 211, 3, 21, "Subsubsection"],
Cell[378202, 9061, 930, 33, 47, "Text"],
Cell[379135, 9096, 484, 12, 82, "Input"],
Cell[379622, 9110, 585, 15, 82, "Input"],
Cell[380210, 9127, 824, 26, 69, "Text"],
Cell[381037, 9155, 1162, 32, 82, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[382236, 9192, 244, 3, 21, "Subsubsection"],
Cell[382483, 9197, 1334, 26, 85, "Text"],
Cell[383820, 9225, 1072, 29, 62, "Input"],
Cell[384895, 9256, 2809, 83, 182, "Input",
 CellID->683934099]
}, Closed]],
Cell[CellGroupData[{
Cell[387741, 9344, 250, 3, 21, "Subsubsection"],
Cell[387994, 9349, 728, 17, 47, "Text"],
Cell[388725, 9368, 735, 16, 102, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[389497, 9389, 163, 5, 21, "Subsubsection"],
Cell[389663, 9396, 398, 9, 65, "Text"],
Cell[CellGroupData[{
Cell[390086, 9409, 95, 1, 29, "Item"],
Cell[390184, 9412, 95, 1, 29, "Item"],
Cell[390282, 9415, 102, 1, 29, "Item"],
Cell[CellGroupData[{
Cell[390409, 9420, 95, 1, 16, "Subitem"],
Cell[390507, 9423, 95, 1, 16, "Subitem"],
Cell[390605, 9426, 96, 1, 16, "Subitem"],
Cell[390704, 9429, 94, 1, 16, "Subitem"],
Cell[390801, 9432, 70, 1, 16, "Subitem"]
}, Open  ]]
}, Open  ]]
}, Closed]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[390956, 9442, 155, 2, 75, "Section"],
Cell[391114, 9446, 544, 9, 83, "Text"],
Cell[CellGroupData[{
Cell[391683, 9459, 172, 2, 29, "Item"],
Cell[CellGroupData[{
Cell[391880, 9465, 134, 1, 16, "Subitem"],
Cell[392017, 9468, 192, 4, 16, "Subitem"]
}, Open  ]],
Cell[392224, 9475, 129, 1, 29, "Item"],
Cell[392356, 9478, 159, 3, 29, "Item"],
Cell[392518, 9483, 178, 4, 29, "Item"]
}, Open  ]],
Cell[392711, 9490, 485, 8, 65, "Text"],
Cell[393199, 9500, 219, 4, 47, "Text"],
Cell[393421, 9506, 2710, 61, 262, "Input"],
Cell[CellGroupData[{
Cell[396156, 9571, 659, 12, 82, "Input"],
Cell[396818, 9585, 643, 14, 40, "Output"],
Cell[397464, 9601, 21936, 364, 253, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[419437, 9970, 515, 11, 82, "Input"],
Cell[419955, 9983, 386, 11, 40, "Output"],
Cell[420344, 9996, 166, 2, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[420547, 10003, 225, 4, 41, "Input"],
Cell[420775, 10009, 465, 12, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[421277, 10026, 98, 1, 36, "Subsection"],
Cell[421378, 10029, 230, 4, 47, "Text"],
Cell[421611, 10035, 137, 2, 41, "Input"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
