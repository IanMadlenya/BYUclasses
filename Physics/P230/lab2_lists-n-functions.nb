(* Content-type: application/mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 7.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       145,          7]
NotebookDataLength[    344918,       8195]
NotebookOptionsPosition[    329768,       7722]
NotebookOutlinePosition[    330242,       7741]
CellTagsIndexPosition[    330199,       7738]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Physics 230 -- Lab 2 (Lists and Functions)", "Title",
 CellChangeTimes->{{3.399308987464324*^9, 3.399308997477577*^9}, {
   3.3996509147507887`*^9, 3.3996509168582067`*^9}, 3.4274817158062444`*^9, {
   3.427505828304313*^9, 3.427505832757467*^9}, {3.4275745555520296`*^9, 
   3.42757455564578*^9}, {3.427574731865658*^9, 3.4275747372563176`*^9}, {
   3.4332596447706146`*^9, 3.4332596557552705`*^9}, {3.4332800782155266`*^9, 
   3.4332800788717937`*^9}, {3.439671351819152*^9, 3.439671380928713*^9}}],

Cell["\<\
Branton J. Campbell, BYU Physics & Astronomy
R. Steven Turley, BYU Physics and Astronomy\
\>", "Subtitle",
 CellChangeTimes->{{3.433259527908248*^9, 3.433259551315097*^9}, {
  3.439668146501763*^9, 3.4396681489705286`*^9}, {3.4717903873401966`*^9, 
  3.471790388152707*^9}, {3.5112831590234137`*^9, 3.511283174862939*^9}}],

Cell[CellGroupData[{

Cell["Introduction (15 min)", "Section",
 CellChangeTimes->{{3.5112854853061504`*^9, 3.5112854974763937`*^9}, {
  3.5113448882086*^9, 3.5113448886766*^9}, {3.51217166969005*^9, 
  3.51217167103165*^9}}],

Cell[CellGroupData[{

Cell["Lists (5 min)", "Subsection",
 CellChangeTimes->{{3.5113449127162*^9, 3.511344913231*^9}, {
  3.51217164944125*^9, 3.51217165410565*^9}}],

Cell[CellGroupData[{

Cell["Introduction", "Subsubsection",
 CellChangeTimes->{{3.5113451781658*^9, 3.5113451794294*^9}}],

Cell[TextData[{
 "In physics it is natural to organize data and numbers in lists and tables.  \
One example would be the elements of a vector.  Another might be a list of \
voltages in a circuit at different times, the speed of a swinging penculum at \
different angles, or the length of a rod at different temperatures.  \
Experimental data is often a list of characteristics of a system as a \
function of different measurements parameters.  The basic mechanism for \
storing collections of numbers of other things in ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " is the List.  It is a fundamental and central idea in ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " and an important concept in computational physics in general.\n\nIf you \
have had previous programming experience using other languages, you\
\[CloseCurlyQuote]ll recognize that a ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " List is similar to an array in other programming languages.\n\nIn the \
following sections we\[CloseCurlyQuote]ll introduce how ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " Lists can be used to represent the various kinds of data you might work \
when using ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " to solve physics problems."
}], "Text",
 CellChangeTimes->{{3.5113449227782*^9, 3.5113449495945997`*^9}, {
  3.5113449915741997`*^9, 3.5113451546722*^9}, {3.5113452019714003`*^9, 
  3.5113455502882*^9}, {3.5113455834226*^9, 3.5113456324533997`*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Vectors", "Subsubsection",
 CellChangeTimes->{{3.511345186309*^9, 3.5113451873542*^9}}],

Cell[TextData[{
 "Geometrically, a vector is a quantity that has a magnitude and a direction \
associated with it.  Common vectors you have seen so far in physics include \
position, velocity, acceleration, force, angular momentum, and torque.  A \
vector can be expressed in terms of its components in different directions.  \
For example, in rectangular (Carteisian) coordinates, a two dimensional \
position can be represented in terms of its x position (the distance along \
the x axis) and its y position (the distance along the y axis).  For example, \
the vector w in the following figure has an x component ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["w", "x"], TraditionalForm]]],
 " and a y component ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["w", "y"], TraditionalForm]]],
 "."
}], "Text",
 CellChangeTimes->{{3.5113452059182*^9, 3.5113452103486*^9}, {
  3.5113456416418*^9, 3.5113457712153997`*^9}, {3.5113459864486*^9, 
  3.5113460279758*^9}, {3.5113467063574*^9, 3.5113467180418*^9}}],

Cell[BoxData[
 GraphicsBox[{
   LineBox[{{0.08611111111111114, 0.9083333333333339}, {0.08611111111111114, 
    0.1444444444444446}}], 
   LineBox[{{0.08888872222222227, 0.14722222222222237`}, {0.9694442777777776, 
    0.14722222222222237`}}], 
   ArrowBox[{{0.08611094444444445, 0.15000000000000013`}, {0.5833331666666666,
     0.6555555555555559}}], InsetBox[Cell["x",
     GeneratedCell->False,
     CellAutoOverwrite->False,
     CellBaseline->Baseline,
     TextAlignment->Left], {1.0222220555555552`, 0.13611111111111152`}, {
    Left, Baseline},
    Alignment->{Left, Top}], InsetBox[
    StyleBox[Cell["y",
      GeneratedCell->False,
      CellAutoOverwrite->False,
      CellBaseline->Baseline,
      TextAlignment->Left],
     Background->RGBColor[
      0.9490196078431372, 1., 
       0.8666666666666667]], {0.07777761111111117, 0.9361111111111113}, {
    Left, Baseline},
    Alignment->{Left, Top}], 
   {Dashing[{0, Small}], 
    LineBox[{{0.5799085091324195, 0.6438356164383561}, {0.5799085091324198, 
     0.15525114155251218`}}]}, 
   {Dashing[{0, Small}], 
    LineBox[{{0.5753422990867579, 0.6438356164383561}, {0.09132403424657504, 
     0.6438356164383561}}]}, InsetBox[
    StyleBox[Cell["w",
      GeneratedCell->False,
      CellAutoOverwrite->False,
      CellBaseline->Baseline,
      TextAlignment->Left],
     Background->RGBColor[
      0.9490196078431372, 1., 
       0.8666666666666667]], {0.30593590639269386`, 0.42009132420091344`}, {
    Left, Baseline},
    Alignment->{Left, Top}], InsetBox[
    StyleBox[Cell[TextData[Cell[BoxData[
      FormBox[
       SubscriptBox["w", "x"], TraditionalForm]]]],
      GeneratedCell->False,
      CellAutoOverwrite->False,
      CellBaseline->Baseline,
      TextAlignment->Left],
     Background->RGBColor[
      0.9490196078431372, 1., 
       0.8666666666666667]], {0.2968034863013697, 0.6712328767123288}, {
    Left, Baseline},
    Alignment->{Left, Top}], InsetBox[
    StyleBox[Cell[TextData[Cell[BoxData[
      FormBox[
       SubscriptBox["w", "y"], TraditionalForm]]]],
      GeneratedCell->False,
      CellAutoOverwrite->False,
      CellBaseline->Baseline,
      TextAlignment->Left],
     Background->RGBColor[
      0.9490196078431372, 1., 
       0.8666666666666667]], {0.6164381894977167, 0.38356164383561664`}, {
    Left, Baseline},
    Alignment->{Left, Top}]},
  ContentSelectable->True,
  ImagePadding->{{0., 0.}, {0., 0.}},
  ImageSize->{296., 219.},
  PlotRange->{{0., 1.333333}, {0., 1.}},
  PlotRangePadding->Automatic]], "Input",
 CellChangeTimes->{{3.5113458231633997`*^9, 3.511345904533*^9}, {
  3.5113459443129997`*^9, 3.5113459685397997`*^9}, {3.511346058349*^9, 
  3.511346124571*^9}, {3.5113467234862003`*^9, 3.5113467445618*^9}}],

Cell[TextData[{
 "We write this mathematically as a row vector ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{
     SubscriptBox["w", "x"], ",", 
     SubscriptBox["w", "y"]}], ")"}], TraditionalForm]]],
 " or a column vector ",
 Cell[BoxData[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      SubscriptBox["w", "x"]},
     {
      SubscriptBox["w", "y"]}
    }], "\[NoBreak]", ")"}]]],
 ".  In ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 ", we store the elements in curly brackets."
}], "Text",
 CellChangeTimes->{{3.5113461397654*^9, 3.5113463579158*^9}, {
  3.5113467511762*^9, 3.511346759413*^9}}],

Cell[BoxData[
 RowBox[{"w", "=", 
  RowBox[{"{", 
   RowBox[{"wx", ",", "wy"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.5113463599594*^9, 3.5113463708638*^9}, {
  3.5113467658402*^9, 3.511346769241*^9}}],

Cell["\<\
A three dimensional vector is represented by its components in the x, y, and \
z directions.\
\>", "Text",
 CellChangeTimes->{{3.5113463949189997`*^9, 3.5113464201286*^9}}],

Cell[BoxData[
 RowBox[{"w", "=", 
  RowBox[{"{", 
   RowBox[{"wx", ",", " ", "wy", ",", " ", "wz"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.5113464226870003`*^9, 3.5113464294886*^9}, {
  3.5113467724077997`*^9, 3.5113467786166*^9}}],

Cell["\<\
Vectors are sometimes more conveniently represented in other coordinate \
systems than rectangular coordinate systems.  For instance, in Physics 121 \
you learned that two-dimensional rotational motion is most conveniently \
represented in the polar coordinates r and \[Theta] as shown in the figure \
below.\
\>", "Text",
 CellChangeTimes->{{3.511346439769*^9, 3.5113465431502*^9}}],

Cell[BoxData[
 GraphicsBox[{
   LineBox[{{0.08611111111111114, 0.9083333333333339}, {0.08611111111111114, 
    0.1444444444444446}}], 
   LineBox[{{0.08888872222222227, 0.14722222222222237`}, {0.9694442777777776, 
    0.14722222222222237`}}], 
   ArrowBox[{{0.08611094444444445, 0.15000000000000013`}, {0.5833331666666666,
     0.6555555555555559}}], InsetBox[Cell["x",
     GeneratedCell->False,
     CellAutoOverwrite->False,
     CellBaseline->Baseline,
     TextAlignment->Left], {1.0222220555555552`, 0.13611111111111152`}, {
    Left, Baseline},
    Alignment->{Left, Top}], InsetBox[
    StyleBox[Cell["y",
      GeneratedCell->False,
      CellAutoOverwrite->False,
      CellBaseline->Baseline,
      TextAlignment->Left],
     Background->RGBColor[
      0.9490196078431372, 1., 
       0.8666666666666667]], {0.07777761111111117, 0.9361111111111113}, {
    Left, Baseline},
    Alignment->{Left, Top}], InsetBox[
    StyleBox[Cell["r",
      GeneratedCell->False,
      CellAutoOverwrite->False,
      CellBaseline->Baseline,
      TextAlignment->Left],
     Background->RGBColor[
      0.9490196078431372, 1., 
       0.8666666666666667]], {0.30593590639269386`, 0.42009132420091344`}, {
    Left, Baseline},
    Alignment->{Left, Top}], 
   {Dashing[{0, Small}], LineBox[CompressedData["
1:eJxTTMoPSmViYGBQBmIQ/YaBo+5Y/3l7D0vZpyVTLtvX8SmUB6+4YO+gzbiW
Zcsley3hK53Kny/Yz1DznWWSecn+mnjHnM+2F+1fKM5sT5G7ZN8iY7P+cMdF
ewuw9otw/gQJw6QjQNpI8cPByUDxB8K1/l+A+u6pLrmSDNRnwH/SRgVobpdW
xHNjoLkdXKJaISsQ/BusieItsQi+Acg5Qgg+w8+Pj48D3W2hz/OLGejOBe87
96n/OgfnBzwDOfCc/TPjAzxX/mHyP9zZWfz83Fn7SRYl8ks8L9svuBzo526J
4DuceqmxfPEZOP/BgUZmdr4z9na2GkagcELnT9gueS+t4jScb7Bu445jj07Z
v3G84+Jy/7L9hSWek9V8T9nPcpsQLqJ1xb5h9sPctu0n7d28XbKelFyxP9Ah
qOzWcwLOL6hf+Xfpt+NwvkCZIzBIEPwDOTc3pZ4+BucnJBf2HjVF8BmiODNU
FxyF8zcELHRq5ULwA9xBEX4Eod7u4neX+4fh7lsAjOwlngg+JD0csgcApdMH
bA==
     "]]}, InsetBox[
    StyleBox[Cell["\[Theta]",
      GeneratedCell->False,
      CellAutoOverwrite->False,
      CellBaseline->Baseline,
      TextAlignment->Left],
     Background->RGBColor[
      0.9490196078431372, 1., 
       0.8666666666666667]], {0.3333331666666665, 0.22374429223744308`}, {
    Left, Baseline},
    Alignment->{Left, Top}]},
  ContentSelectable->True,
  ImagePadding->{{0., 0.}, {0., 0.}},
  ImageSize->{296., 219.},
  PlotRange->{{0., 1.333333}, {0., 1.}},
  PlotRangePadding->Automatic]], "Input",
 CellChangeTimes->{{3.5113458231633997`*^9, 3.511345904533*^9}, {
  3.5113459443129997`*^9, 3.5113459685397997`*^9}, {3.511346058349*^9, 
  3.511346124571*^9}, {3.5113465606534*^9, 3.5113465693426*^9}, {
  3.5113466030698*^9, 3.5113466403694*^9}}],

Cell[TextData[{
 "The component r is the length of the vector and the component \[Theta] is \
the angle the vector makes with the x axis.  It could be stored in ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " as"
}], "Text",
 CellChangeTimes->{{3.5113466487934*^9, 3.5113466850634003`*^9}, {
  3.5113467867130003`*^9, 3.5113467955582*^9}}],

Cell[BoxData[
 RowBox[{"w", "=", 
  RowBox[{"{", 
   RowBox[{"r", ",", " ", "theta"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.5113467995674*^9, 3.5113468040290003`*^9}}],

Cell[TextData[{
 "We\[CloseCurlyQuote]ll see in a later lesson that ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " has functions to do many useful things with vectors like adding and \
subtracting them, converting from one coordinate system to another, finding \
cross products and dot products, and drawing them."
}], "Text",
 CellChangeTimes->{{3.5113469251942*^9, 3.5113469396085997`*^9}, {
  3.5113470305254*^9, 3.511347080773*^9}, {3.511347223825*^9, 
  3.5113472269918003`*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Other Lists", "Subsubsection",
 CellChangeTimes->{{3.5113472726062*^9, 3.5113472740414*^9}}],

Cell[TextData[{
 "You can also create general lists of numbers in ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " using the same notation you did with vectors.  For example, let\
\[CloseCurlyQuote]s say you computed or measured the temperature of a rod \
cooling down in time to have the values in the following table.\n",
 Cell[BoxData[GridBox[{
    {
     StyleBox[
      RowBox[{"time", " ", 
       RowBox[{"(", "min", ")"}]}],
      FontWeight->"Bold"], 
     StyleBox[
      RowBox[{"temperature", " ", 
       RowBox[{"(", "K", ")"}]}],
      FontWeight->"Bold"]},
    {"0", "400"},
    {"1", "350"},
    {"2", "306"},
    {"3", "268"},
    {"4", "235"},
    {"5", "205"},
    {"6", "180"},
    {"7", "157"},
    {"8", "138"},
    {"9", "120"},
    {"10", "105"},
    {"11", "92"}
   },
   GridBoxDividers->{
    "Columns" -> {{True}}, "ColumnsIndexed" -> {}, "Rows" -> {{True}}, 
     "RowsIndexed" -> {}}]]],
 "\nYou could work with this in ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " as a list of lists which you would enter as follows."
}], "Text",
 CellChangeTimes->{{3.5113472777854*^9, 3.5113474819426003`*^9}, {
  3.5113475275414*^9, 3.5113476511714*^9}, {3.523708020102791*^9, 
  3.523708029652092*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"temp", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"0", ",", "400"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"1", ",", "350"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"2", ",", "306"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"3", ",", "268"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"4", ",", "235"}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"5", ",", "205"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"6", ",", "180"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"7", ",", "157"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"8", ",", "138"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"9", ",", "120"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"10", ",", "105"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"11", ",", "92"}], "}"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.5113476598606*^9, 3.5113477202326*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "400"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "350"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "306"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "268"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "235"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "205"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "180"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "157"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "138"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", "120"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "105"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"11", ",", "92"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.5113502965206003`*^9}]
}, Open  ]],

Cell[TextData[{
 "Once you had stored the data in a list like this you could manipulate it, \
find the best equation to describe its functional form, plot it, or transform \
it in other ways.  We\[CloseCurlyQuote]ll see how to do this in future \
lessons.\n\nAs you\[CloseCurlyQuote]ll see later, ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " has a built-in functions to do many powerful things with lists of numbers, \
symbols, and strings."
}], "Text",
 CellChangeTimes->{{3.5113477313241997`*^9, 3.5113478786661997`*^9}, {
  3.5113502643222*^9, 3.5113502920902*^9}}]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Functions (10 min)", "Subsection",
 CellChangeTimes->{{3.511344916663*^9, 3.5113449178174*^9}, {
  3.51217166115685*^9, 3.51217166786485*^9}}],

Cell["\<\
In physics you will frequently have occasions to perform the same calculation \
over and over.  In these cases, you can save a lot of time by saving the \
steps to do the calculation as a function.  A function can have arguments, \
variables used in the function to determine its value.  As an example, let\
\[CloseCurlyQuote]s say you wanted to find the position of a simple harmonic \
oscillator with amplitude 10, a frequency of 5 Hz and a phase of 0 at various \
times.  You could create the function sho as follows.\
\>", "Text",
 CellChangeTimes->{{3.511285504906543*^9, 3.5112855055065546`*^9}, 
   3.511285640439253*^9, {3.5113115364112544`*^9, 3.5113116317007465`*^9}, {
   3.5113117391963725`*^9, 3.5113117777577257`*^9}, {3.511311914734195*^9, 
   3.511312005725716*^9}, {3.511312057432706*^9, 3.511312076805352*^9}, {
   3.5113448918122*^9, 3.5113449091126003`*^9}, {3.5117435982274*^9, 
   3.5117436052318*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"sho", "[", "t_", "]"}], ":=", 
  RowBox[{"10", " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"2", " ", "Pi", " ", "5", " ", "t"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.5113120071836576`*^9, 3.51131205131135*^9}, {
  3.5113120832163*^9, 3.5113120918541036`*^9}, {3.5113121495049305`*^9, 
  3.5113121500446444`*^9}}],

Cell["\<\
The underbar after the t in the function defintion identifies it as a \
variable which will be substituted into the function.  The variable t is what \
is known as a dummy variable.  It won\[CloseCurlyQuote]t replace values of t \
defined outside the function and its definition won\[CloseCurlyQuote]t \
persist beyond the execution of the function. 

Now that the function is defined, you could compute its values as various \
times.\
\>", "Text",
 CellChangeTimes->{{3.5113121062338*^9, 3.511312125456657*^9}, {
  3.511312323832488*^9, 3.5113124096269927`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"sho", "[", "1.724", "]"}], "\[IndentingNewLine]", 
 RowBox[{"sho", "[", "3.619", "]"}], "\[IndentingNewLine]", 
 RowBox[{"sho", "[", "s", "]"}]}], "Input",
 CellChangeTimes->{{3.5113121267548237`*^9, 3.5113121856857443`*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{"-", "7.2896862742141835`"}], TraditionalForm]], "Output",
 CellChangeTimes->{3.52370808335565*^9}],

Cell[BoxData[
 FormBox["8.270805742745553`", TraditionalForm]], "Output",
 CellChangeTimes->{3.5237080833575478`*^9}],

Cell[BoxData[
 FormBox[
  RowBox[{"10", " ", 
   RowBox[{"cos", "(", 
    RowBox[{"10", " ", "\[Pi]", " ", "s"}], ")"}]}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{3.523708083359618*^9}]
}, Closed]],

Cell["\<\
You could also use this function as an argument to other functions.  If you \
wanted to plot the amplitude of sho as a funciton of time, you could do it as \
follows.\
\>", "Text",
 CellChangeTimes->{{3.511312196490015*^9, 3.511312207963931*^9}, {
  3.511312240836499*^9, 3.5113122653934774`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"sho", "[", "t", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.511312266792735*^9, 3.511312274888442*^9}}],

Cell[BoxData[
 FormBox[
  GraphicsBox[{{}, {}, 
    {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
EqQ5DB7fZv9ZLggiT+1cd6njw+BiW2/zK1IQmRzZyvHhBPl+Ca7n67UE0bpd
XBuzTw/D6l4xlqoQAXRaoEGk02gYPqVC7x9VfjTWeH6b1O1h4KpTejL1hRtJ
nLY8G/dmGOyecRIDNUzIRcs9KpNOzvfkporot5miZrMbJirjw7Bt0fLfsytz
RZvua4unTA7D+dsS/ML0n0XV7/kDY2eHQeTSH7UfkwtFQivvPAL+DEPZDJsO
59xKUUJq9m1bnhG4InDMknWKBTcKjB1Q2jMCQWefX/Kx58XUrTVLH/eOQN7n
Z0rFgnz4PnzKIg6MwFDqK/G+W3xY4pb9Dkk0AjhAgGlGmh9blDERnCdHYOqJ
QMwBJwG89FCcc8x0BLwGaq2+yQljyo+TnbHuI7Asmz7fu0ECexUfSDPwHAFP
jWsZbcYS+OdHJQ/2VyNQLhfMKpIogYvteFSt/Ueg8DgDWxyVxBYczX47w0cg
4XLfrn/2Ujhhl/Hx7+kj8FZSzMzskwzmEz8pc+/LCNTeevG7Y04GP/q7f2FT
9gi0D69bc1CVxSerpGI9v45AmFEn37YcWTxpNvD3TPkIdCGh61zGcljZ63p2
X88IKNxVNTp7kIKDbYx8/PtGwO22ytqQEQX/0z9hcXhwBE6cldy/YkfBjbKK
5A0cAYfigLiCDxR8N2v69u25Efh4Y0DYlo2Ku8P6NWXnRyBUmFeDkKLiw66N
kk2/R8BuffoHw51ULKCdUaW6OgKpfzY3HTKl4syB+/Kr6+nAOjp2myuViqXK
LVdTN9Dhz4jjtdwiKnZPNmy5xE0Hynyc/FATFZ9/sO9pCT8djhTR1ifNU3Hh
xW1G94XosBLjo3qcjfTPIckdm0XpsOTFpHlJmMCLXGu9XlJ0GNhreuLvLtIz
c1Nf1GXp0J62dOP5YQJXtvd5TVPosHyj/NszXdIf7/Fevc3k+3c3uTFuEpjp
xWde1m10eAz79xuQ/bvVrRh6lhIdmJ/vzNr9jPSX2vMg8Z10kO3kTTUJJX10
RXzPO1U6KFxxSf8dQ+B7vp865NTosP6tK794CoH58o88ittHhzXu2yElmaSH
RjoltqjTAXs58P0uILAW/52C5IN0kD+RcTy9lMAj6ixmOw7R4S6xnvdnDYFl
gra/33OMDiq3mKO5ugicX1R8OF+LDtudusRpfQQ2nDQc1tCmw/065eeHhkl/
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
3aFqSXouyFXWdp3POHgtnLbhIL2nueAl/NJvHNazLjTuID04b/U7nzdgHLre
Dmn///urcX2XzYODxoHpc23bRtKT+ufq2KTfjsPhiybXS///fdjKvcmxoeOg
16O8+v/vx2aqx+luixiHiqq2AEzGFp95f6dHjsOkZIfS/z//FFJwCld7Pw4m
Eqn1jeT4pWF0VBg7Dh5Hy13kyPntefXomvHjMLzZ/eQC6eVNz7+9qkkYh90i
SP0Muf7WpS3/6SWT+fuBrimT+3t2O6i9M3Uc7pmVdgaQ+9859M/pUvo4CIr9
SXlM5mfovDWFnjEOmpEsK5Ok5wNq2stvZY1D/b9ffQOk9w+jw7d+5ZD3Qbzh
4UUy/z8zU/kd88nXOzxHL5L1idkqnsP0bRz0r7GeG2ok0DrBWWae4nEwtbEv
ekrWO+PFxY9BpeOQp9AiFp7/f9+Xn5KsIPPBUi5zIINAxSPv3m6pHQfHhnPM
fNEEsruwQSOtfhwk7ibqHA0mELXBfmh30zj8YrAprPMmkFuu9vYj7ePgM63g
KPiA3M/2nOaqznEwTK15fOMmuZ/3VAfdnnGYd1QVP2ZGrv/VcrHpAHlfHySf
itAkELPZRyOHiXGQf2Xj9I28P+nNAn//MsbBSEJP2HyVisyPP4l1nyHzYRgz
5cOgIqxiMB0wPw7Z3s8GvWuoyJWF5XnqX/L+dgtuI55TkYrDna2qzBPg+frR
4ra7VDTA6KrPZ5mA5SfmF7+bUhFqTxev5JgA096p8vDdVMSUaJY2JDABd+d+
jQgNUFA5o+NOlPAEBM8Ms+VVkP5UOatsIjYB2/k+FvaS3hTNPZLaJj0BqpEm
tR9IbypXbEmu3DIBzuHnf+iR3jQZ+Rn/6eAEeP3LfFYpK4eoW29ZWh+agPG1
hM3P/8misVsj8ls0J0A/cO8u/0JZdG++I+79iQmYCtpw/c8+WeTF8i0mSH8C
6JhOnFKQQXmUF5GONyfAokLPNbpdEj25xmSmdnsC8E6NZa6Xkkgz8ZH0vM0E
pDFxhaTvl0SNKrcibt+fgP+OGG36FC6BxuBsmLnrBIjnsGfn6YsjETPJ4GPB
E6Dlqcws80EE2YWl+QgUT4Camq6lfSMfylkNe1FcOgGiZulWDrZ8aNXM46ld
xQRwfXf+u4GPD70gTO83104Ad3Z1Lg7nQREpnKYBHRMgjHxltV5yobLCa0oC
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
LWqv4Xg4x/RvX2dmCPz/f6n/AqJsZJc=
      "]]}},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->True,
   AxesOrigin->{0, 0},
   PlotRange->{{0, 1}, {-9.999981778376757, 9.999999999997945}},
   PlotRangeClipping->True,
   PlotRangePadding->{
     Scaled[0.02], 
     Scaled[0.02]}], TraditionalForm]], "Output",
 CellChangeTimes->{3.523708095749477*^9}]
}, Closed]],

Cell[TextData[{
 "Functions can have any number of arguments, including no arguments.\n\n\
Create a funciton which will use the Ideal Gas Law, ",
 Cell[BoxData[
  FormBox[
   RowBox[{"pV", "=", 
    SubscriptBox["Nk", "B"]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "T to compute the pressure of an ideal gas at various absolute temperatures. \
 Use V = 0.05 ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["m", "3"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{"N", "=", 
    RowBox[{"1.5", "\[Times]", 
     SuperscriptBox["10", "22"]}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " molecules, ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["k", "B"], " ", "is", " ", "1.38", "\[Times]"}], 
   TraditionalForm]],
  FormatType->"TraditionalForm"],
 " ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["10", 
    RowBox[{"-", "23"}]], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " J/K.  Use this function to compute the pressure of this gas at 200 K, 300 \
K, and 400 K."
}], "Text",
 CellChangeTimes->{{3.5113122945979905`*^9, 3.511312310649479*^9}, {
  3.511312538647983*^9, 3.511312596747117*^9}, {3.511312631612235*^9, 
  3.5113126414808536`*^9}, {3.511312773752616*^9, 3.511312982029171*^9}, {
  3.511313055603285*^9, 3.5113130592829905`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"pressure", " ", "[", 
    RowBox[{"v_", ",", "n_", ",", "k_", ",", "T_"}], "]"}], "=", 
   FractionBox[
    RowBox[{"(", 
     RowBox[{"n", "*", "k", "*", "T"}], ")"}], "v"]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"v", " ", "=", " ", "0.05"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"n", " ", "=", " ", 
   RowBox[{"1.5", " ", "*", " ", 
    SuperscriptBox["10", "22"]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"k", " ", "=", " ", 
   RowBox[{"1.38", " ", "*", " ", 
    SuperscriptBox["10", 
     RowBox[{"-", "23"}]]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"pressure", "[", 
  RowBox[{"v", ",", "n", ",", "k", ",", "200"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"pressure", "[", 
  RowBox[{"v", ",", "n", ",", "k", ",", "300"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"pressure", "[", 
  RowBox[{"v", ",", "n", ",", "k", ",", "400"}], "]"}]}], "Input",
 CellChangeTimes->{{3.5113130314452176`*^9, 3.5113131028495045`*^9}, 
   3.5224171483571997`*^9, {3.523708120320731*^9, 3.523708282888302*^9}}],

Cell[BoxData[
 FormBox["828.0000000000001`", TraditionalForm]], "Output",
 CellChangeTimes->{
  3.5237081759694653`*^9, {3.5237082566539288`*^9, 3.523708283696224*^9}}],

Cell[BoxData[
 FormBox["1242.0000000000002`", TraditionalForm]], "Output",
 CellChangeTimes->{
  3.5237081759694653`*^9, {3.5237082566539288`*^9, 3.5237082836995907`*^9}}],

Cell[BoxData[
 FormBox["1656.0000000000002`", TraditionalForm]], "Output",
 CellChangeTimes->{
  3.5237081759694653`*^9, {3.5237082566539288`*^9, 3.523708283702277*^9}}]
}, Closed]],

Cell["\<\
Your functions can be more complex than what you can express in a single \
line.  This is accomplished by using the Module statement.  A Module has two \
arguments.  The first argument is a list of variables which are used inside \
your function, but you don\[CloseCurlyQuote]t want to use outside your \
function.  The second argument is a sequence of statements terminated by \
semicolons which make up the body of your function.

As an example, suppose you wanted to write a function to compute where the \
image from a compound lens would be.  For each element, the location of the \
image can be computed from the equation 1/f=1/o+1/i.  Solving for i, \
1/i=1/f-1/o, i=1/(1/f-1/o).  For the next element, the image of the previous \
element becomes the object of previous element.  Using some specific focal \
lengths,\
\>", "Text",
 CellChangeTimes->{{3.511313147555928*^9, 3.511313194652398*^9}, {
  3.5113400156847973`*^9, 3.5113400899318275`*^9}, {3.5113401224905252`*^9, 
  3.5113403659707856`*^9}, {3.5113405490634613`*^9, 3.5113405742424545`*^9}, {
  3.511743700189*^9, 3.5117437643518*^9}, {3.51217119543445*^9, 
  3.5121711960584497`*^9}, {3.524312144004545*^9, 3.5243121469521112`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"image", "[", "object_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"f1", "=", "2"}], ",", " ", 
      RowBox[{"f2", "=", 
       RowBox[{"-", "3"}]}], ",", " ", 
      RowBox[{"f3", "=", "2.7"}], ",", " ", 
      RowBox[{"f4", "=", 
       RowBox[{"-", "4.6"}]}], ",", " ", 
      RowBox[{"f5", "=", "10"}], ",", " ", "i1", ",", " ", "i2", ",", " ", 
      "i3", ",", " ", "i4"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"i1", "=", 
      RowBox[{"1", "/", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"1", "/", "f1"}], "-", 
         RowBox[{"1", "/", "object"}]}], ")"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"i2", "=", 
      RowBox[{"1", "/", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"1", "/", "f2"}], "-", 
         RowBox[{"1", "/", "i1"}]}], ")"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"i3", "=", 
      RowBox[{"1", "/", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"1", "/", "f3"}], "-", 
         RowBox[{"1", "/", "i2"}]}], ")"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"i4", "=", 
      RowBox[{"1", "/", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"1", "/", "f4"}], "-", 
         RowBox[{"1", "/", "i3"}]}], ")"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"1", "/", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"1", "/", "f5"}], "-", 
        RowBox[{"1", "/", "i4"}]}], ")"}]}]}]}], "\[IndentingNewLine]", 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"image", "[", "11", "]"}]}], "Input",
 CellChangeTimes->{{3.511340368380689*^9, 3.511340406579161*^9}, {
  3.5113404375679216`*^9, 3.511340499295452*^9}, {3.511743786301*^9, 
  3.5117438973417997`*^9}}],

Cell[BoxData[
 FormBox["0.6992097936455943`", TraditionalForm]], "Output",
 CellChangeTimes->{3.523708353910804*^9}]
}, Open  ]],

Cell["\<\
Notice that the last statement of the Module doesn\[CloseCurlyQuote]t have a \
semicolon at the end.  In this case, the function will return the value \
computated in this last statement.  Also note that the variables in the first \
argument of Module can either be initialized there, or computed later in the \
Module.\
\>", "Text",
 CellChangeTimes->{{3.5117439022246*^9, 3.5117439479326*^9}, {
  3.51217123081525*^9, 3.51217125209365*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Working with functions (15 min)\
\>", "Section",
 CellChangeTimes->{{3.429383392792961*^9, 3.4293833938554745`*^9}, {
  3.4294977991819453`*^9, 3.429497802135108*^9}, {3.4311840685252204`*^9, 
  3.4311840712752733`*^9}, {3.4311874241208963`*^9, 3.4311874243865266`*^9}, {
  3.4311875642954626`*^9, 3.4311875644673414`*^9}, {3.51217155120805*^9, 
  3.51217159819525*^9}}],

Cell[CellGroupData[{

Cell["(#1) Pure (argumentative) functions (5 min)", "Subsection",
 CellChangeTimes->{{3.4275116218570166`*^9, 3.427511626169544*^9}, {
   3.427543146928627*^9, 3.4275431517568445`*^9}, 3.429383520153966*^9, {
   3.429455259675497*^9, 3.4294552625504785`*^9}, {3.431184036883988*^9, 
   3.431184038321515*^9}, {3.434735669600775*^9, 3.434735679679222*^9}, {
   3.4840872015217333`*^9, 3.484087215974951*^9}, {3.4840874936017275`*^9, 
   3.4840875054611783`*^9}, 3.51217154946085*^9}],

Cell[TextData[{
 "The \"arguments\" of a function are the variables that the function takes \
as input.  For ",
 StyleBox["f",
  FontSlant->"Italic"],
 "(",
 StyleBox["x",
  FontSlant->"Italic"],
 "), we say that ",
 StyleBox["f",
  FontSlant->"Italic"],
 " is the function and ",
 StyleBox["x",
  FontSlant->"Italic"],
 "  is its argument.",
 StyleBox["  To train a function to take an argument, we use what we call a \
variable \"pattern\" (e.g. a variable name followed by an underscore).  Once \
we have trained a function to take an argument, we can call it an \
\"argumentative\" function.  ",
  FontSize->14,
  FontWeight->"Bold"],
 StyleBox["Mathematica",
  FontSize->14,
  FontWeight->"Bold",
  FontSlant->"Italic"],
 StyleBox["'s documentation refers to it as a  ",
  FontSize->14,
  FontWeight->"Bold"],
 StyleBox[ButtonBox["Pure Function",
  BaseStyle->"Link",
  ButtonData->"paclet://tutorial/PureFunctions"],
  FontSize->14,
  FontWeight->"Bold"],
 StyleBox[".  Remember this terminology -- it will be helpful in later labs.",
  FontSize->14,
  FontWeight->"Bold"],
 "\n\n(a) Evaluate the following three cells and observe each output \
carefully."
}], "Text",
 CellChangeTimes->{{3.4275116438259077`*^9, 3.427511690841833*^9}, {
  3.4275117384983883`*^9, 3.4275118400302877`*^9}, {3.427512049578504*^9, 
  3.427512050437885*^9}, {3.4275122243139973`*^9, 3.4275122280952716`*^9}, {
  3.4275123654086504`*^9, 3.4275124359247265`*^9}, {3.4275126330666137`*^9, 
  3.427512634394747*^9}, {3.427512884849475*^9, 3.427512891193266*^9}, {
  3.4275129340060396`*^9, 3.4275129558655543`*^9}, {3.427513892996552*^9, 
  3.4275139406531067`*^9}, {3.4275464972630825`*^9, 3.4275465767479663`*^9}, {
  3.429385134596506*^9, 3.429385208613078*^9}, {3.4318038936475573`*^9, 
  3.4318038943350706`*^9}, {3.4347353442466135`*^9, 3.434735357840799*^9}, {
  3.4347355211741505`*^9, 3.434735623036785*^9}, {3.4840872259281397`*^9, 
  3.484087259443979*^9}, {3.4840874634452844`*^9, 3.48408747446098*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"f", "[", "x", "]"}], " ", "=", " ", 
    RowBox[{"3", " ", "x"}]}], " ", ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"without", " ", "pattern"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"g", "[", "x_", "]"}], " ", "=", " ", 
    RowBox[{"3", " ", "x"}]}], " ", ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"with", " ", "pattern"}], " ", "*)"}]}]}], "Input",
 CellChangeTimes->{{3.399173512367625*^9, 3.399173527055125*^9}, {
   3.39917356838325*^9, 3.39917357332075*^9}, {3.399173638648875*^9, 
   3.399173639242625*^9}, {3.399404603845406*^9, 3.399404605981606*^9}, {
   3.399758539316167*^9, 3.3997585408624477`*^9}, {3.401126831059501*^9, 
   3.401126831715151*^9}, {3.4011268749567895`*^9, 3.4011269390387135`*^9}, {
   3.4011272213894444`*^9, 3.4011272281176558`*^9}, {3.4011272649745183`*^9, 
   3.401127273560404*^9}, {3.4011273116505117`*^9, 3.401127319533915*^9}, {
   3.405699528312214*^9, 3.4056996122351627`*^9}, {3.4056998715509825`*^9, 
   3.405699880316719*^9}, 3.4057085914952865`*^9, {3.4275110768066535`*^9, 
   3.42751110590059*^9}, {3.427511868592971*^9, 3.4275120107345057`*^9}, {
   3.4275120597660694`*^9, 3.4275121010944586`*^9}, {3.4275121339227943`*^9, 
   3.427512178876207*^9}, {3.4275122458297606`*^9, 3.427512250767292*^9}, {
   3.427512282376869*^9, 3.4275123580648537`*^9}, {3.4275123897525563`*^9, 
   3.427512394861964*^9}, 3.4275125385972586`*^9, {3.4275125835037966`*^9, 
   3.4275125998164005`*^9}, {3.4275128580055532`*^9, 
   3.4275128591305604`*^9}, {3.4275129160527997`*^9, 
   3.4275129230997195`*^9}, {3.4293856180245686`*^9, 3.429385645618672*^9}, {
   3.4294546875385337`*^9, 3.4294546887416506`*^9}, {3.523708454684185*^9, 
   3.523708455679811*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"f", "[", "x", "]"}], "\[IndentingNewLine]", 
 RowBox[{"g", "[", "x", "]"}]}], "Input",
 CellChangeTimes->{{3.399173512367625*^9, 3.399173527055125*^9}, {
   3.39917356838325*^9, 3.39917357332075*^9}, {3.399173638648875*^9, 
   3.399173639242625*^9}, {3.399404603845406*^9, 3.399404605981606*^9}, {
   3.399758539316167*^9, 3.3997585408624477`*^9}, {3.401126831059501*^9, 
   3.401126831715151*^9}, {3.4011268749567895`*^9, 3.4011269390387135`*^9}, {
   3.4011272213894444`*^9, 3.4011272281176558`*^9}, {3.4011272649745183`*^9, 
   3.401127273560404*^9}, {3.4011273116505117`*^9, 3.401127319533915*^9}, {
   3.405699528312214*^9, 3.4056996122351627`*^9}, {3.4056998715509825`*^9, 
   3.405699880316719*^9}, 3.4057085914952865`*^9, {3.4275110768066535`*^9, 
   3.42751110590059*^9}, {3.427511868592971*^9, 3.4275120107345057`*^9}, {
   3.427512078000561*^9, 3.427512079047443*^9}, {3.4275122550173187`*^9, 
   3.427512256095451*^9}, {3.4275123238458843`*^9, 3.4275123264396515`*^9}, {
   3.4275123974557304`*^9, 3.427512401690133*^9}, {3.427512603144547*^9, 
   3.4275126065508184`*^9}, {3.4275128702087564`*^9, 3.4275128729431486`*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{"3", " ", "x"}], TraditionalForm]], "Output",
 CellChangeTimes->{3.5237084589257717`*^9}],

Cell[BoxData[
 FormBox[
  RowBox[{"3", " ", "x"}], TraditionalForm]], "Output",
 CellChangeTimes->{3.523708458927731*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"f", "[", "y", "]"}], "\[IndentingNewLine]", 
 RowBox[{"g", "[", "y", "]"}]}], "Input",
 CellChangeTimes->{{3.399173512367625*^9, 3.399173527055125*^9}, {
   3.39917356838325*^9, 3.39917357332075*^9}, {3.399173638648875*^9, 
   3.399173639242625*^9}, {3.399404603845406*^9, 3.399404605981606*^9}, {
   3.399758539316167*^9, 3.3997585408624477`*^9}, {3.401126831059501*^9, 
   3.401126831715151*^9}, {3.4011268749567895`*^9, 3.4011269390387135`*^9}, {
   3.4011272213894444`*^9, 3.4011272281176558`*^9}, {3.4011272649745183`*^9, 
   3.401127273560404*^9}, {3.4011273116505117`*^9, 3.401127319533915*^9}, {
   3.405699528312214*^9, 3.4056996122351627`*^9}, {3.4056998715509825`*^9, 
   3.405699880316719*^9}, 3.4057085914952865`*^9, {3.4275110768066535`*^9, 
   3.42751110590059*^9}, {3.427511868592971*^9, 3.427511872030493*^9}, 
   3.4275119371090345`*^9, {3.427512005843849*^9, 3.427512016125165*^9}, {
   3.427512105828864*^9, 3.4275121077195015`*^9}, {3.427512268767407*^9, 
   3.4275122708299203`*^9}, {3.4275124046276517`*^9, 3.427512408643302*^9}, {
   3.427512611878978*^9, 3.4275126151602488`*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{"f", "(", "y", ")"}], TraditionalForm]], "Output",
 CellChangeTimes->{3.523708462548724*^9}],

Cell[BoxData[
 FormBox[
  RowBox[{"3", " ", "y"}], TraditionalForm]], "Output",
 CellChangeTimes->{3.523708462550643*^9}]
}, Open  ]],

Cell[TextData[{
 "When ",
 StyleBox["x",
  FontSlant->"Italic"],
 " is used as the argument, functions ",
 StyleBox["f ",
  FontSlant->"Italic"],
 "and ",
 StyleBox["g",
  FontSlant->"Italic"],
 " both know what to do because ",
 StyleBox["x",
  FontSlant->"Italic"],
 " was an explicit part of the definition.  But only ",
 StyleBox["g",
  FontSlant->"Italic"],
 " seems to know what to do with ",
 StyleBox["y",
  FontSlant->"Italic"],
 ", which wasn't explicity defined.  The unusual quantity \"",
 StyleBox["x",
  FontSlant->"Italic"],
 "_\" in the left-hand-side of the definition of ",
 StyleBox["g",
  FontSlant->"Italic"],
 ", is called a pattern, and essentially means \"",
 StyleBox["an arbitrary quantity called x",
  FontSlant->"Italic"],
 "\".  Its effect is such that an any argument sent to ",
 StyleBox["g",
  FontSlant->"Italic"],
 " simply replaces ",
 StyleBox["x",
  FontSlant->"Italic"],
 " on the right-hand side of its definition.  This is the way that we expect \
functions to behave.\n\nClear all variables before continuing."
}], "Text",
 CellChangeTimes->{{3.405708655046872*^9, 3.4057086741906137`*^9}, {
  3.4275129632406015`*^9, 3.427513109538413*^9}, {3.4275131435386305`*^9, 
  3.4275136290104876`*^9}, {3.4275139481844053`*^9, 3.4275140049816437`*^9}, {
  3.4275140629820147`*^9, 3.427514190045328*^9}, {3.427546353730914*^9, 
  3.4275463972780676`*^9}, {3.4275464303407793`*^9, 3.4275464792629676`*^9}, {
  3.427546594044952*^9, 3.4275467248426642`*^9}, {3.4293340640382795`*^9, 
  3.4293340653039207`*^9}, {3.4293835465761795`*^9, 3.429383549529342*^9}, {
  3.429385233535272*^9, 3.429385600883724*^9}, {3.429454574711131*^9, 
  3.429454579648599*^9}, {3.4347355086268735`*^9, 3.434735509033137*^9}, {
  3.4397389693818016`*^9, 3.4397390024601383`*^9}, {3.4840837550153008`*^9, 
  3.4840837809842167`*^9}}],

Cell[BoxData[
 RowBox[{" ", 
  RowBox[{"Clear", "[", "\"\<`*\>\"", "]"}]}]], "Input",
 CellChangeTimes->{{3.429959487120536*^9, 3.429959498042271*^9}}],

Cell[TextData[{
 "\n(b) When defining functions, it is often helpful to employ the delayed \
assignment (",
 StyleBox[ButtonBox["SetDelayed",
  BaseStyle->"Link",
  ButtonData->"paclet://ref/SetDelayed"],
  FontWeight->"Bold"],
 "), indicated by \":=\" rather than \"=\".  Delayed assignments allow you to \
safely retrieve the current values of any global variables that you use in \
your function definition (otherwise you get stuck with the value that was \
current when you defined the function).  Evaluate the cells below.  Explain \
the effect of the delayed assignment to your instructor or TA."
}], "Text",
 CellChangeTimes->{{3.405708655046872*^9, 3.4057086741906137`*^9}, {
   3.4275129632406015`*^9, 3.427513109538413*^9}, {3.4275131435386305`*^9, 
   3.4275136290104876`*^9}, {3.4275139481844053`*^9, 
   3.4275140049816437`*^9}, {3.4275140629820147`*^9, 3.427514190045328*^9}, {
   3.427546353730914*^9, 3.4275463972780676`*^9}, {3.4275464303407793`*^9, 
   3.4275464792629676`*^9}, {3.427546594044952*^9, 3.4275467248426642`*^9}, {
   3.4293340640382795`*^9, 3.4293340653039207`*^9}, {3.4293835465761795`*^9, 
   3.429383549529342*^9}, {3.429385233535272*^9, 3.429385600883724*^9}, {
   3.429454574711131*^9, 3.4294546014609594`*^9}, {3.429454641413829*^9, 
   3.4294546696636477`*^9}, {3.4294547108821344`*^9, 
   3.4294547419131856`*^9}, {3.4294547752723475`*^9, 
   3.4294549364275656`*^9}, {3.4294550442393756`*^9, 3.429455134285674*^9}, {
   3.4294954679212866`*^9, 3.4294954900306616`*^9}, {3.431803903725876*^9, 
   3.431803905679038*^9}, 3.434735497642147*^9, 3.4347356308182836`*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"m", " ", "=", " ", "2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"f", "[", "x_", "]"}], " ", "=", " ", 
    RowBox[{"m", " ", "x"}]}], " ", ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"regular", " ", "assignment"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"g", "[", "x_", "]"}], " ", ":=", " ", 
    RowBox[{"m", " ", "x"}]}], " ", ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"delayed", " ", "assignment"}], " ", "*)"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"f", "[", "7", "]"}], "\[IndentingNewLine]", 
 RowBox[{"g", "[", "7", "]"}]}], "Input",
 CellChangeTimes->{{3.399173512367625*^9, 3.399173527055125*^9}, {
   3.39917356838325*^9, 3.39917357332075*^9}, {3.399173638648875*^9, 
   3.399173639242625*^9}, {3.399404603845406*^9, 3.399404605981606*^9}, {
   3.399758539316167*^9, 3.3997585408624477`*^9}, {3.401126831059501*^9, 
   3.401126831715151*^9}, {3.4011268749567895`*^9, 3.4011269390387135`*^9}, {
   3.4011272213894444`*^9, 3.4011272281176558`*^9}, {3.4011272649745183`*^9, 
   3.401127273560404*^9}, {3.4011273116505117`*^9, 3.401127319533915*^9}, {
   3.405699528312214*^9, 3.4056996122351627`*^9}, {3.4056998715509825`*^9, 
   3.405699880316719*^9}, 3.4057085914952865`*^9, {3.4275110768066535`*^9, 
   3.42751110590059*^9}, {3.427511868592971*^9, 3.4275120107345057`*^9}, {
   3.4275120597660694`*^9, 3.4275121010944586`*^9}, {3.4275121339227943`*^9, 
   3.427512178876207*^9}, {3.4275122458297606`*^9, 3.427512250767292*^9}, {
   3.427512282376869*^9, 3.4275123580648537`*^9}, {3.4275123897525563`*^9, 
   3.427512394861964*^9}, 3.4275125385972586`*^9, {3.4275125835037966`*^9, 
   3.4275125998164005`*^9}, {3.4275128580055532`*^9, 
   3.4275128591305604`*^9}, {3.4275129160527997`*^9, 
   3.4275129230997195`*^9}, {3.4293856180245686`*^9, 3.429385645618672*^9}, {
   3.4294546875385337`*^9, 3.4294546887416506`*^9}, {3.429454958989921*^9, 
   3.4294550317550807`*^9}, 3.4294676406907153`*^9, {3.4299594785737705`*^9, 
   3.429959480386247*^9}, {3.4299595332449455`*^9, 3.429959545463539*^9}, {
   3.4299702132253575`*^9, 3.4299702172566853`*^9}, {3.4717882112491817`*^9, 
   3.471788252171318*^9}, {3.523708569405856*^9, 3.523708592915313*^9}}],

Cell[BoxData[
 FormBox["14", TraditionalForm]], "Output",
 CellChangeTimes->{
  3.5237085413764153`*^9, {3.523708573916217*^9, 3.523708593494267*^9}}],

Cell[BoxData[
 FormBox["14", TraditionalForm]], "Output",
 CellChangeTimes->{
  3.5237085413764153`*^9, {3.523708573916217*^9, 3.523708593497856*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"m", " ", "=", " ", "3"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"f", "[", "7", "]"}], "\[IndentingNewLine]", 
 RowBox[{"g", "[", "7", "]"}]}], "Input",
 CellChangeTimes->{{3.399173512367625*^9, 3.399173527055125*^9}, {
   3.39917356838325*^9, 3.39917357332075*^9}, {3.399173638648875*^9, 
   3.399173639242625*^9}, {3.399404603845406*^9, 3.399404605981606*^9}, {
   3.399758539316167*^9, 3.3997585408624477`*^9}, {3.401126831059501*^9, 
   3.401126831715151*^9}, {3.4011268749567895`*^9, 3.4011269390387135`*^9}, {
   3.4011272213894444`*^9, 3.4011272281176558`*^9}, {3.4011272649745183`*^9, 
   3.401127273560404*^9}, {3.4011273116505117`*^9, 3.401127319533915*^9}, {
   3.405699528312214*^9, 3.4056996122351627`*^9}, {3.4056998715509825`*^9, 
   3.405699880316719*^9}, 3.4057085914952865`*^9, {3.4275110768066535`*^9, 
   3.42751110590059*^9}, {3.427511868592971*^9, 3.4275120107345057`*^9}, {
   3.427512078000561*^9, 3.427512079047443*^9}, {3.4275122550173187`*^9, 
   3.427512256095451*^9}, {3.4275123238458843`*^9, 3.4275123264396515`*^9}, {
   3.4275123974557304`*^9, 3.427512401690133*^9}, {3.427512603144547*^9, 
   3.4275126065508184`*^9}, {3.4275128702087564`*^9, 
   3.4275128729431486`*^9}, {3.4294550008334036`*^9, 
   3.4294550168176765`*^9}, {3.4299595394948654`*^9, 
   3.4299595407292247`*^9}, {3.471788255843217*^9, 3.471788258108856*^9}}],

Cell[BoxData[
 FormBox["14", TraditionalForm]], "Output",
 CellChangeTimes->{3.523708595563408*^9}],

Cell[BoxData[
 FormBox["21", TraditionalForm]], "Output",
 CellChangeTimes->{3.523708595565316*^9}]
}, Open  ]],

Cell[TextData[{
 "\n(c) In the cell below, use a delayed assignment and a variable \
\"pattern\" to define an argumentative function, ",
 StyleBox["h",
  FontSlant->"Italic"],
 "(",
 StyleBox["x",
  FontSlant->"Italic"],
 ") = ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["x", "2"], "-", " ", "m"}], TraditionalForm]],
  CellChangeTimes->{{3.427546403059355*^9, 3.427546404809366*^9}}],
 ".  Then set the value of ",
 StyleBox["m",
  FontSlant->"Italic"],
 " to 1 and demonstrate that your function properly evaluates ",
 StyleBox["h",
  FontSlant->"Italic"],
 "(1), ",
 StyleBox["h",
  FontSlant->"Italic"],
 "(2) and ",
 StyleBox["h",
  FontSlant->"Italic"],
 "(3)."
}], "Text",
 CellChangeTimes->{{3.405708655046872*^9, 3.4057086741906137`*^9}, {
  3.4275129632406015`*^9, 3.427513109538413*^9}, {3.4275131435386305`*^9, 
  3.4275136290104876`*^9}, {3.4275139481844053`*^9, 3.4275140049816437`*^9}, {
  3.4275140629820147`*^9, 3.427514190045328*^9}, {3.427546353730914*^9, 
  3.4275463972780676`*^9}, {3.4275464303407793`*^9, 3.4275464792629676`*^9}, {
  3.427546594044952*^9, 3.4275467248426642`*^9}, {3.4293340640382795`*^9, 
  3.4293340653039207`*^9}, {3.4293835465761795`*^9, 3.429383549529342*^9}, {
  3.429385233535272*^9, 3.429385600883724*^9}, {3.429454574711131*^9, 
  3.429454610632776*^9}, {3.4294547450381656`*^9, 3.4294547733504844`*^9}, {
  3.4294551511761913`*^9, 3.429455239644375*^9}, {3.431803917023006*^9, 
  3.431803918210529*^9}, {3.4347353809196625`*^9, 3.434735382075949*^9}, {
  3.4347354351870236`*^9, 3.4347354715944386`*^9}, {3.439934288937068*^9, 
  3.439934301218397*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{" ", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"h", "[", "x_", "]"}], " ", ":=", " ", 
     RowBox[{
      SuperscriptBox["x", "2"], " ", "-", " ", "m"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"m", "=", "1"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"h", "[", "1", "]"}], "\[IndentingNewLine]", 
   RowBox[{"h", "[", "2", "]"}], "\[IndentingNewLine]", 
   RowBox[{"h", "[", "3", "]"}]}]}]], "Input",
 CellChangeTimes->{
  3.429383542247999*^9, {3.523708606103251*^9, 3.523708636880918*^9}}],

Cell[BoxData[
 FormBox["0", TraditionalForm]], "Output",
 CellChangeTimes->{3.523708638934832*^9}],

Cell[BoxData[
 FormBox["3", TraditionalForm]], "Output",
 CellChangeTimes->{3.523708638937708*^9}],

Cell[BoxData[
 FormBox["8", TraditionalForm]], "Output",
 CellChangeTimes->{3.523708638940482*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
(#2) Prefix and Postfix functional forms (10 min)\
\>", "Subsection",
 CellChangeTimes->{{3.399174072852*^9, 3.399174093836375*^9}, {
   3.399761770200031*^9, 3.3997617717619305`*^9}, {3.4057025135379243`*^9, 
   3.4057025141004314`*^9}, {3.4057213369726944`*^9, 3.405721337535716*^9}, {
   3.4293831238988943`*^9, 3.429383132649006*^9}, {3.429465487563163*^9, 
   3.4294654946568675`*^9}, {3.4311840546812043`*^9, 3.431184056384362*^9}, 
   3.4311874194958076`*^9, {3.431187559607873*^9, 3.4311875599360037`*^9}, {
   3.51217157013085*^9, 3.51217158989605*^9}, {3.5121716821700497`*^9, 
   3.51217168563325*^9}}],

Cell[TextData[{
 "(a) In addition to the standard ",
 StyleBox["g",
  FontSlant->"Italic"],
 "[",
 StyleBox["x",
  FontSlant->"Italic"],
 "] form for calling a function, ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " provides several different shorthand forms for calling functions.  We \
emphasize two such forms here: ",
 StyleBox[ButtonBox["Prefix",
  BaseStyle->"Link",
  ButtonData->"paclet://ref/Prefix"],
  FontWeight->"Bold"],
 StyleBox[" ",
  FontWeight->"Bold"],
 "(@) and ",
 StyleBox[ButtonBox["Postfix",
  BaseStyle->"Link",
  ButtonData->"paclet://ref/Postfix"],
  FontWeight->"Bold"],
 " (//), each of which are very convenient when used properly.  Evaluate the \
following two cells and think carefully about the output."
}], "Text",
 CellChangeTimes->{{3.4293858573870077`*^9, 3.429386004717018*^9}, {
  3.429455411190152*^9, 3.429455435908744*^9}, {3.4294643441329813`*^9, 
  3.429464404773218*^9}, {3.429464475413391*^9, 3.4294644997726097`*^9}, {
  3.4294666904598026`*^9, 3.429466755804389*^9}, {3.431803967883357*^9, 
  3.431803977446041*^9}, {3.4332811483522964`*^9, 3.433281151571129*^9}, {
  3.51217143952765*^9, 3.5121714471560497`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"g", "[", "x", "]"}], "     ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "function", " ", "call", " ", "in", " ", "standard", " ", "notation"}], 
   " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"g", "@", "x"}], "      ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "equivalent", " ", "shorthand", " ", "call", " ", "in", " ", 
    "\"\<prefix\>\"", " ", "notation"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"x", "//", "g", "  ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "equivalent", " ", "shorthand", " ", "call", " ", "in", " ", 
    "\"\<postfix\>\"", " ", "notation"}], " ", "*)"}]}]}], "Input",
 CellChangeTimes->{{3.3991394562604237`*^9, 3.399139476448053*^9}, {
  3.4057007725000143`*^9, 3.4057009121111765`*^9}, {3.405700959205529*^9, 
  3.405700967346258*^9}, {3.4057010095499234`*^9, 3.4057010182219095`*^9}, {
  3.405783273560341*^9, 3.4057832772326155`*^9}, {3.429455371190408*^9, 
  3.429455390612159*^9}, {3.4294554425805764`*^9, 3.429455453064884*^9}, {
  3.42946441224192*^9, 3.4294644180075083`*^9}, {3.429467424969204*^9, 
  3.429467426391097*^9}, {3.4294674642665825`*^9, 3.4294674690635185`*^9}}],

Cell[BoxData[
 FormBox["x", TraditionalForm]], "Output",
 CellChangeTimes->{3.523708678202441*^9}],

Cell[BoxData[
 FormBox["x", TraditionalForm]], "Output",
 CellChangeTimes->{3.523708678204378*^9}],

Cell[BoxData[
 FormBox["x", TraditionalForm]], "Output",
 CellChangeTimes->{3.523708678206382*^9}]
}, Open  ]],

Cell["\<\

The postfix notation is like reverse polish notation if you have ever used an \
HP calculator.  Try these examples and explain the output to your TA.\
\>", "Text",
 CellChangeTimes->{{3.4293860120608625`*^9, 3.4293860748272905`*^9}, {
   3.4294576062386036`*^9, 3.4294578145653954`*^9}, {3.429457907283552*^9, 
   3.4294579083772955`*^9}, {3.4294581471570168`*^9, 
   3.4294581524069834`*^9}, {3.4294584036710005`*^9, 
   3.4294584045303698`*^9}, {3.4294639946508427`*^9, 3.4294640247444*^9}, 
   3.42946584976397*^9, {3.429467521845444*^9, 3.429467522798581*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"the", " ", "sequential", " ", "approach"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"7", "/", "3"}], "\[IndentingNewLine]", 
   RowBox[{"N", "[", "%", "]"}], "\[IndentingNewLine]", 
   RowBox[{"Round", "[", "%", "]"}], "\[IndentingNewLine]", 
   RowBox[{"Exp", "[", "%", "]"}], "\[IndentingNewLine]", 
   RowBox[{"Log", "[", "%", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.4294581336414785`*^9, 3.429458134532098*^9}, {
  3.42945816464128*^9, 3.429458234593957*^9}, {3.429458286374876*^9, 
  3.429458331640211*^9}, {3.433281252089327*^9, 3.43328125924576*^9}}],

Cell[BoxData[
 FormBox[
  FractionBox["7", "3"], TraditionalForm]], "Output",
 CellChangeTimes->{3.523708690785096*^9}],

Cell[BoxData[
 FormBox["2.3333333333333335`", TraditionalForm]], "Output",
 CellChangeTimes->{3.5237086907870502`*^9}],

Cell[BoxData[
 FormBox["2", TraditionalForm]], "Output",
 CellChangeTimes->{3.5237086907890797`*^9}],

Cell[BoxData[
 FormBox[
  SuperscriptBox["\[ExponentialE]", "2"], TraditionalForm]], "Output",
 CellChangeTimes->{3.5237086907911177`*^9}],

Cell[BoxData[
 FormBox["2", TraditionalForm]], "Output",
 CellChangeTimes->{3.5237086907931356`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Log", "[", 
   RowBox[{"Exp", "[", 
    RowBox[{"Round", "[", 
     RowBox[{"N", "[", 
      RowBox[{"7", "/", "3"}], "]"}], "]"}], "]"}], "]"}], "  ", 
  RowBox[{"(*", " ", 
   RowBox[{"standard", " ", "form"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"7", "/", "3"}], " ", "//", " ", "N"}], " ", "//", " ", 
    "Round"}], " ", "//", " ", "Exp"}], " ", "//", " ", "Log", "  ", 
  RowBox[{"(*", " ", 
   RowBox[{"postfix", " ", "form"}], " ", "*)"}]}]}], "Input",
 CellChangeTimes->{{3.4294582535000863`*^9, 3.429458270874975*^9}, {
  3.42945835370257*^9, 3.429458447014473*^9}, {3.429464054056712*^9, 
  3.4294640545410843`*^9}, {3.429465586000033*^9, 3.4294655976249585`*^9}}],

Cell[BoxData[
 FormBox["2", TraditionalForm]], "Output",
 CellChangeTimes->{3.523708717060492*^9}],

Cell[BoxData[
 FormBox["2", TraditionalForm]], "Output",
 CellChangeTimes->{3.523708717062448*^9}]
}, Open  ]],

Cell[TextData[{
 "\n(b) Because ",
 StyleBox[ButtonBox["Cos",
  BaseStyle->"Link",
  ButtonData->"paclet://ref/Cos"],
  FontWeight->"Bold"],
 " and ",
 StyleBox[ButtonBox["ArcCos",
  BaseStyle->"Link",
  ButtonData->"paclet://ref/ArcCos"],
  FontWeight->"Bold"],
 " are inverse functions, arccos(cos(",
 StyleBox["x",
  FontSlant->"Italic"],
 ")) evaluates to ",
 StyleBox["x",
  FontSlant->"Italic"],
 ".  In the cell below, evaluate the arccos(cos(\[Pi])) using the prefix \
notation for ",
 StyleBox["Cos",
  FontWeight->"Bold"],
 " and the postfix notation for ",
 StyleBox["ArcCos",
  FontWeight->"Bold"],
 ".  The ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " symbol for \[Pi] is ",
 StyleBox[ButtonBox["Pi",
  BaseStyle->"Link",
  ButtonData->"paclet://ref/Pi"],
  FontWeight->"Bold"],
 "., which is one of several built-in ",
 StyleBox[ButtonBox["Mathematical Constants",
  BaseStyle->"Link",
  ButtonData->"paclet://tutorial/MathematicalConstants"],
  FontWeight->"Bold"],
 ". "
}], "Text",
 CellChangeTimes->{{3.4293820296973886`*^9, 3.429382075651102*^9}, {
   3.429382112948454*^9, 3.429382239575075*^9}, {3.429382315060416*^9, 
   3.4293824820313034`*^9}, {3.429382540360175*^9, 3.4293825410008082`*^9}, {
   3.4293825786419153`*^9, 3.4293829210212975`*^9}, {3.4293829540685954`*^9, 
   3.429382954881106*^9}, {3.4294553125032835`*^9, 3.4294553161126356`*^9}, {
   3.429464542975458*^9, 3.4294645435692043`*^9}, {3.4294658946699324`*^9, 
   3.4294659232322493`*^9}, {3.4294675388300366`*^9, 3.429467548720788*^9}, 
   3.433281166821519*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Cos", "[", 
  RowBox[{"\[Pi]", "//", "ArcCos"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Cos", "@", "\[Pi]"}], "//", "ArcCos"}]}], "Input",
 CellChangeTimes->{{3.4294645477410526`*^9, 3.429464548834796*^9}, {
  3.5237087710392933`*^9, 3.523708805395967*^9}}],

Cell[BoxData[
 FormBox["\[Pi]", TraditionalForm]], "Output",
 CellChangeTimes->{{3.523708782033268*^9, 3.523708806540557*^9}}],

Cell[BoxData[
 FormBox["\[Pi]", TraditionalForm]], "Output",
 CellChangeTimes->{{3.523708782033268*^9, 3.5237088065430527`*^9}}]
}, Open  ]],

Cell["\<\

(c) In the cell below, create the 2x2 matrix, {{1, 1}, {-1, 1}},  and then \
apply a succession of functions in postfix notation to invert it, transpose \
it, evaluate its determinant, and convert the result to a numeric \
floating-point value.  Do all this on one line with a single expression.\
\>", "Text",
 CellChangeTimes->{{3.4293820296973886`*^9, 3.429382075651102*^9}, {
   3.429382112948454*^9, 3.429382239575075*^9}, {3.429382315060416*^9, 
   3.4293824820313034`*^9}, {3.429382950584176*^9, 3.4293829513966866`*^9}, {
   3.429464551928526*^9, 3.429464552256649*^9}, {3.4294675563458858`*^9, 
   3.429467557908406*^9}, {3.4318039976183033`*^9, 3.431804000258979*^9}, 
   3.433281188134565*^9, {3.439668356112479*^9, 3.439668363846904*^9}, {
   3.439934370000087*^9, 3.4399343849220576`*^9}, 3.484083840906475*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"(", GridBox[{
       {"1", "1"},
       {
        RowBox[{"-", "1"}], "1"}
      }], ")"}], "//", "Inverse"}], "//", "Transpose"}], "//", 
  "Det"}]], "Input",
 CellChangeTimes->{{3.4293822442001343`*^9, 3.429382307216566*^9}, {
   3.4293825621104536`*^9, 3.429382569813677*^9}, 3.429382931318304*^9, {
   3.523708812364979*^9, 3.52370885642162*^9}, {3.523710738739794*^9, 
   3.5237107395387163`*^9}}],

Cell[BoxData[
 FormBox[
  FractionBox["1", "2"], TraditionalForm]], "Output",
 CellChangeTimes->{{3.523708848057906*^9, 3.5237088567884398`*^9}, 
   3.5237107402245007`*^9}]
}, Open  ]],

Cell["\<\

\
\>", "Text",
 CellChangeTimes->{{3.4293820296973886`*^9, 3.429382075651102*^9}, {
   3.429382112948454*^9, 3.429382239575075*^9}, {3.429382315060416*^9, 
   3.4293824820313034`*^9}, {3.429382540360175*^9, 3.4293825410008082`*^9}, {
   3.4293825786419153`*^9, 3.4293829210212975`*^9}, {3.4293829540685954`*^9, 
   3.429382965443741*^9}, {3.4293829978347807`*^9, 3.429383087679681*^9}, {
   3.4293835807328663`*^9, 3.4293835866079416`*^9}, {3.4294675690960493`*^9, 
   3.429467619768573*^9}, 3.433281189931486*^9, 3.5121715271684504`*^9}]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Working with lists (70 min)", "Section",
 CellChangeTimes->{{3.427508689978878*^9, 3.4275086919476404`*^9}, {
   3.42750882546412*^9, 3.42750882779226*^9}, {3.427514208139194*^9, 
   3.427514216373622*^9}, {3.4275745791615553`*^9, 3.427574579661559*^9}, {
   3.427574635380666*^9, 3.427574639521317*^9}, {3.42947342551476*^9, 
   3.4294734269522786`*^9}, {3.431187155146982*^9, 3.431187157490777*^9}, {
   3.431187499559845*^9, 3.431187499762974*^9}, 3.4332817598992014`*^9, {
   3.51217392225205*^9, 3.51217392286045*^9}}],

Cell[CellGroupData[{

Cell["(#3) Generating lists (10 min)", "Subsection",
 CellChangeTimes->{{3.429377696110669*^9, 3.429377699141958*^9}, {
  3.4294735405318575`*^9, 3.429473543203767*^9}, {3.4311840883849764`*^9, 
  3.431184089728752*^9}, {3.51217246775485*^9, 3.51217246808245*^9}}],

Cell[TextData[{
 "Go to the DC guide page on ",
 StyleBox[ButtonBox["List Manipulation",
  BaseStyle->"Link",
  ButtonData->"paclet://guide/ListManipulation"],
  FontWeight->"Bold"],
 " and review the \"Basic Examples\" for simple list functions like ",
 StyleBox["Table",
  FontWeight->"Bold"],
 ", ",
 StyleBox["Array",
  FontWeight->"Bold"],
 ", ",
 StyleBox["Range",
  FontWeight->"Bold"],
 ", ",
 StyleBox["Join",
  FontWeight->"Bold"],
 ", ",
 StyleBox["Append",
  FontWeight->"Bold"],
 ", ",
 StyleBox["Reverse",
  FontWeight->"Bold"],
 ", ",
 StyleBox["Sort",
  FontWeight->"Bold"],
 ", ",
 StyleBox["Transpose",
  FontWeight->"Bold"],
 ", ",
 StyleBox["Flatten",
  FontWeight->"Bold"],
 ", ",
 StyleBox["Union",
  FontWeight->"Bold"],
 ", and for each of the functions in the \"Elements of Lists\" section.\n\n\
(a) The use of curly brackets is really a shorthand notation for the ",
 StyleBox[ButtonBox["List",
  BaseStyle->"Link",
  ButtonData->"paclet://ref/List"],
  FontWeight->"Bold"],
 " function.  Try the following."
}], "Text",
 CellChangeTimes->{
  3.429377701329486*^9, {3.429379534696703*^9, 3.429379548431254*^9}, {
   3.429383287775992*^9, 3.4293832886822534`*^9}, 3.429466240792717*^9, {
   3.4294664574632053`*^9, 3.4294664602600627`*^9}, 3.4294673662653275`*^9, {
   3.4396684361754913`*^9, 3.439668446519308*^9}, {3.4396684773632555`*^9, 
   3.4396684773632555`*^9}, {3.4396685097853374`*^9, 3.439668543082426*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"{", 
   RowBox[{"a", ",", "b", ",", "c"}], "}"}], "             ", 
  RowBox[{"(*", " ", 
   RowBox[{"shorthand", " ", "notation"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"List", "[", 
   RowBox[{"a", ",", "b", ",", "c"}], "]"}], "    ", 
  RowBox[{"(*", " ", 
   RowBox[{"standard", " ", "notation"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"%", " ", "//", " ", "FullForm", "  ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "coverts", " ", "shorthand", " ", "notation", " ", "into", " ", "standard",
     " ", "notation"}], " ", "*)"}]}]}], "Input",
 CellChangeTimes->{
  3.429377701329486*^9, {3.429379534696703*^9, 3.429379546259351*^9}, {
   3.4294662580894814`*^9, 3.4294662941986256`*^9}, {3.429466843539887*^9, 
   3.429466947056837*^9}, {3.429467374406057*^9, 3.429467396906345*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{"a", ",", "b", ",", "c"}], "}"}], TraditionalForm]], "Output",
 CellChangeTimes->{3.5237090776474857`*^9}],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{"a", ",", "b", ",", "c"}], "}"}], TraditionalForm]], "Output",
 CellChangeTimes->{3.523709077650844*^9}],

Cell[BoxData[
 FormBox[
  TagBox[
   StyleBox[
    RowBox[{"List", "[", 
     RowBox[{"a", ",", "b", ",", "c"}], "]"}],
    ShowSpecialCharacters->False,
    ShowStringCharacters->True,
    NumberMarks->True],
   FullForm], TraditionalForm]], "Output",
 CellChangeTimes->{3.523709077653904*^9}]
}, Open  ]],

Cell[TextData[{
 "\n(b) Lists are fundamental to the way that ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " operates, and there are many ways to generate them.  Here are a few \
equivalent ways to create a list of integers from 1 to 10.  Any one of them \
might be appropriate depending on the circumstances.  Go to the DC guide page \
on ",
 StyleBox[ButtonBox["Constructing Lists",
  BaseStyle->"Link",
  ButtonData->"paclet://guide/ConstructingLists"],
  FontWeight->"Bold"],
 ", and browse the basic examples associated with each of these functions.  \
Give special attention to the ",
 StyleBox[ButtonBox["Range",
  BaseStyle->"Link",
  ButtonData->"paclet://ref/Range"],
  FontWeight->"Bold"],
 " and ",
 StyleBox[ButtonBox["Table",
  BaseStyle->"Link",
  ButtonData->"paclet://ref/Table"],
  FontWeight->"Bold"],
 " functions."
}], "Text",
 CellChangeTimes->{
  3.429377701329486*^9, {3.429379534696703*^9, 3.429379548431254*^9}, {
   3.429383287775992*^9, 3.4293832886822534`*^9}, 3.429466240792717*^9, {
   3.4294681335251484`*^9, 3.4294684536073704`*^9}, {3.429468628093979*^9, 
   3.429468654906822*^9}, {3.4294687018761735`*^9, 3.4294687050168386`*^9}, {
   3.431803173836862*^9, 3.431803174555626*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"{", 
  RowBox[{
  "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", "8", 
   ",", "9", ",", "10"}], "}"}], "\[IndentingNewLine]", 
 RowBox[{"List", "[", 
  RowBox[{
  "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", "8", 
   ",", "9", ",", "10"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"n", "^", "2"}], ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", "1", ",", "10"}], "}"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Range", "[", "10", "]"}]}], "Input",
 CellChangeTimes->{
  3.429377701329486*^9, {3.429379534696703*^9, 3.429379546259351*^9}, {
   3.429467743082651*^9, 3.4294677958958273`*^9}, {3.4294679291162825`*^9, 
   3.429467929506912*^9}, {3.429468019101809*^9, 3.4294680526491137`*^9}, {
   3.4294961089103103`*^9, 3.4294961273792963`*^9}, {3.51217178087125*^9, 
   3.51217178160445*^9}, {3.523710900018661*^9, 3.523710900519758*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{
   "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", "8", 
    ",", "9", ",", "10"}], "}"}], TraditionalForm]], "Output",
 CellChangeTimes->{3.523709092420925*^9, 3.523710901668723*^9}],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{
   "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", "8", 
    ",", "9", ",", "10"}], "}"}], TraditionalForm]], "Output",
 CellChangeTimes->{3.523709092420925*^9, 3.523710901671618*^9}],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{
   "1", ",", "4", ",", "9", ",", "16", ",", "25", ",", "36", ",", "49", ",", 
    "64", ",", "81", ",", "100"}], "}"}], TraditionalForm]], "Output",
 CellChangeTimes->{3.523709092420925*^9, 3.523710901673802*^9}],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{
   "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", "8", 
    ",", "9", ",", "10"}], "}"}], TraditionalForm]], "Output",
 CellChangeTimes->{3.523709092420925*^9, 3.523710901675981*^9}]
}, Open  ]],

Cell[TextData[{
 "\n(c) In the cell below, use two different methods (",
 StyleBox["Range",
  FontWeight->"Bold"],
 " and ",
 StyleBox["Table",
  FontWeight->"Bold"],
 ") to create a list of the even numbers from 0 to 100."
}], "Text",
 CellChangeTimes->{{3.4294685207176046`*^9, 3.4294686187188587`*^9}, {
  3.429479514936454*^9, 3.429479528952258*^9}, {3.4318031674929905`*^9, 
  3.4318031774775567`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Range", "[", 
  RowBox[{"0", ",", "100", ",", "2"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Table", "[", 
  RowBox[{"n", ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", "0", ",", "100", ",", "2"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.4399346642363453`*^9, 3.439934664705098*^9}, {
  3.5237091007647543`*^9, 3.5237091400757303`*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{
   "0", ",", "2", ",", "4", ",", "6", ",", "8", ",", "10", ",", "12", ",", 
    "14", ",", "16", ",", "18", ",", "20", ",", "22", ",", "24", ",", "26", 
    ",", "28", ",", "30", ",", "32", ",", "34", ",", "36", ",", "38", ",", 
    "40", ",", "42", ",", "44", ",", "46", ",", "48", ",", "50", ",", "52", 
    ",", "54", ",", "56", ",", "58", ",", "60", ",", "62", ",", "64", ",", 
    "66", ",", "68", ",", "70", ",", "72", ",", "74", ",", "76", ",", "78", 
    ",", "80", ",", "82", ",", "84", ",", "86", ",", "88", ",", "90", ",", 
    "92", ",", "94", ",", "96", ",", "98", ",", "100"}], "}"}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{{3.523709107866703*^9, 3.523709140452549*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{
   "0", ",", "2", ",", "4", ",", "6", ",", "8", ",", "10", ",", "12", ",", 
    "14", ",", "16", ",", "18", ",", "20", ",", "22", ",", "24", ",", "26", 
    ",", "28", ",", "30", ",", "32", ",", "34", ",", "36", ",", "38", ",", 
    "40", ",", "42", ",", "44", ",", "46", ",", "48", ",", "50", ",", "52", 
    ",", "54", ",", "56", ",", "58", ",", "60", ",", "62", ",", "64", ",", 
    "66", ",", "68", ",", "70", ",", "72", ",", "74", ",", "76", ",", "78", 
    ",", "80", ",", "82", ",", "84", ",", "86", ",", "88", ",", "90", ",", 
    "92", ",", "94", ",", "96", ",", "98", ",", "100"}], "}"}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{{3.523709107866703*^9, 3.5237091404551077`*^9}}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
(#4) Properties of lists (10 min)\
\>", "Subsection",
 CellChangeTimes->{{3.429386553145913*^9, 3.4293865559896994`*^9}, {
  3.429473546485059*^9, 3.4294735486725864`*^9}, {3.4311841001352024`*^9, 
  3.431184102307119*^9}, {3.51217246997005*^9, 3.51217247107765*^9}}],

Cell[TextData[{
 "(a) Lists have a variety of properties that can be measured or tested.  In \
the cell below, create a list called ",
 StyleBox["temp",
  FontSlant->"Italic"],
 " containing at least five distinct numerical values.  Then measure the ",
 StyleBox[ButtonBox["Length",
  BaseStyle->"Link",
  ButtonData->"paclet://ref/Length"],
  FontWeight->"Bold"],
 ", the ",
 StyleBox[ButtonBox["Max",
  BaseStyle->"Link",
  ButtonData->"paclet://ref/Max"],
  FontWeight->"Bold"],
 "imum value and the ",
 StyleBox[ButtonBox["Min",
  BaseStyle->"Link",
  ButtonData->"paclet://ref/Min"],
  FontWeight->"Bold"],
 "imum value of your list."
}], "Text",
 CellChangeTimes->{{3.429469525308588*^9, 3.4294695538089533`*^9}, {
  3.4294696395444255`*^9, 3.4294698658754473`*^9}, {3.431803185665214*^9, 
  3.4318031864152284`*^9}, {3.439739052210457*^9, 3.439739055054225*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{" ", 
  RowBox[{
   RowBox[{
    RowBox[{"temp", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
      "1", ",", "4", ",", "6", ",", "8", ",", "4", ",", "8", ",", "3", ",", 
       "23"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"Length", "[", "temp", "]"}], "\[IndentingNewLine]", 
   RowBox[{"Max", "[", "temp", "]"}], "\[IndentingNewLine]", 
   RowBox[{"Min", "[", "temp", "]"}]}]}]], "Input",
 CellChangeTimes->{
  3.4294695148084536`*^9, {3.5237091524258947`*^9, 3.5237091842901487`*^9}}],

Cell[BoxData[
 FormBox["8", TraditionalForm]], "Output",
 CellChangeTimes->{{3.523709177673606*^9, 3.5237091853707123`*^9}}],

Cell[BoxData[
 FormBox["23", TraditionalForm]], "Output",
 CellChangeTimes->{{3.523709177673606*^9, 3.523709185373486*^9}}],

Cell[BoxData[
 FormBox["1", TraditionalForm]], "Output",
 CellChangeTimes->{{3.523709177673606*^9, 3.523709185375551*^9}}]
}, Open  ]],

Cell[TextData[{
 "\n(b) As mentioned earlier, matrices and vectors are represented in ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " as lists.  A vector is a one-dimensional list, whereas a matrix is a \
two-dimensional nested list (i.e. a list of lists).  Higher-dimensional \
nested lists are also very common.  We say that nested lists have more than \
one \"level\" -- the top level is level 1, the next level is level 2, and so \
on.  The ",
 StyleBox[ButtonBox["Dimensions",
  BaseStyle->"Link",
  ButtonData->"paclet://ref/Dimensions"],
  FontWeight->"Bold"],
 " function shows how many levels a list has and how many list elements exist \
at each level.  Try the following examples and explain the output to your TA."
}], "Text",
 CellChangeTimes->{{3.429386521208004*^9, 3.4293865354581866`*^9}, {
   3.429386579786879*^9, 3.4293865844588137`*^9}, {3.429386654694088*^9, 
   3.4293866619285555`*^9}, {3.429386695241482*^9, 3.4293866969602537`*^9}, {
   3.429468891737979*^9, 3.429468944488654*^9}, {3.429468978864094*^9, 
   3.429468997614334*^9}, {3.4294699426108046`*^9, 3.429470065393626*^9}, {
   3.4294701044722514`*^9, 3.429470180051344*^9}, {3.429470508336796*^9, 
   3.429470531962098*^9}, {3.4294743142761364`*^9, 3.429474337620185*^9}, 
   3.429478641253396*^9, {3.43180318830589*^9, 3.4318031890246534`*^9}, {
   3.51217180849885*^9, 3.5121718137248497`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "3"}], "}"}], "//", "Dimensions"}]], "Input",
 CellChangeTimes->{
  3.429384676621894*^9, {3.429470183192009*^9, 3.42947033406894*^9}, {
   3.42947436966747*^9, 3.4294744032304*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{"{", "3", "}"}], TraditionalForm]], "Output",
 CellChangeTimes->{3.5237092065715322`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"4", ",", "5", ",", "6"}], "}"}]}], "}"}], "//", 
  "Dimensions"}]], "Input",
 CellChangeTimes->{
  3.429384676621894*^9, {3.429470183192009*^9, 3.429470336240843*^9}, {
   3.42947439115212*^9, 3.42947441143363*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{"2", ",", "3"}], "}"}], TraditionalForm]], "Output",
 CellChangeTimes->{3.523709209125984*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"9", ",", "8"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"7", ",", "6"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"5", ",", "4"}], "}"}]}], "}"}], " ", "//", "  ", 
  "Dimensions"}]], "Input",
 CellChangeTimes->{
  3.429384676621894*^9, {3.429470183192009*^9, 3.4294703386783743`*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{"3", ",", "2"}], "}"}], TraditionalForm]], "Output",
 CellChangeTimes->{3.52370921785616*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", "17", "}"}], " ", "//", " ", "Dimensions", " "}]], "Input",
 CellChangeTimes->{
  3.429384676621894*^9, {3.429470183192009*^9, 3.4294703289595*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{"{", "1", "}"}], TraditionalForm]], "Output",
 CellChangeTimes->{3.523709219324668*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"8", "//", " ", "Dimensions"}]], "Input",
 CellChangeTimes->{
  3.429384676621894*^9, {3.429470183192009*^9, 3.429470340615899*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{"{", "}"}], TraditionalForm]], "Output",
 CellChangeTimes->{3.523709220943626*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", "}"}], " ", "//", " ", "Dimensions"}]], "Input",
 CellChangeTimes->{
  3.429384676621894*^9, {3.429470183192009*^9, 3.429470340615899*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{"{", "0", "}"}], TraditionalForm]], "Output",
 CellChangeTimes->{3.5237092223959427`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"9", ",", "8", ",", "7", ",", "6", ",", "5"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5", ",", "6", ",", "7", ",", "8", ",", "9"}], "}"}]}], "}"}], 
    ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5", ",", "4", ",", "3", ",", "2", ",", "1"}], "}"}]}], 
     "}"}]}], "}"}], " ", "//", "  ", "Dimensions"}]], "Input",
 CellChangeTimes->{
  3.429384676621894*^9, {3.429470183192009*^9, 3.4294703386783743`*^9}, {
   3.4294703851789694`*^9, 3.429470480336437*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{"2", ",", "2", ",", "5"}], "}"}], TraditionalForm]], "Output",
 CellChangeTimes->{3.523709224750793*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["(#5) Parts of lists (10 min)", "Subsection",
 CellChangeTimes->{{3.4293846704968157`*^9, 3.4293846741218615`*^9}, {
  3.429473563657153*^9, 3.429473567016571*^9}, {3.43118410861974*^9, 
  3.4311841108385324`*^9}, {3.51217247293405*^9, 3.5121724733084497`*^9}}],

Cell[TextData[{
 "One can reach inside any list, even a nested list, to extract one or more \
elements by specifying their locations.  Browse the DC guide page on ",
 StyleBox[ButtonBox["Elements of Lists",
  BaseStyle->"Link",
  ButtonData->"paclet://guide/ElementsOfLists"],
  FontWeight->"Bold"],
 " and review the basic examples for ",
 StyleBox[ButtonBox["Part",
  BaseStyle->"Link",
  ButtonData->"paclet://ref/Part"],
  FontWeight->"Bold"],
 ".\n\n(a) Evaluate the following examples and explain the output."
}], "Text",
 CellChangeTimes->{{3.4294751037081156`*^9, 3.429475178443447*^9}, {
  3.4294752774915905`*^9, 3.429475279882246*^9}, {3.429476929715863*^9, 
  3.4294769570130877`*^9}, {3.4294774552694654`*^9, 3.4294777173978205`*^9}, {
  3.4294779198379116`*^9, 3.429477935150608*^9}, {3.429478211982276*^9, 
  3.4294782442639394`*^9}, {3.4294783558434925`*^9, 3.429478370984311*^9}, {
  3.429478493063999*^9, 3.4294785444552817`*^9}, {3.429969842436989*^9, 
  3.4299698428276215`*^9}, {3.4318032010092587`*^9, 3.431803213196993*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"temp", " ", "=", " ", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"12", "*", 
      RowBox[{"(", 
       RowBox[{"i", "-", "1"}], ")"}]}], " ", "+", " ", 
     RowBox[{"4", "*", 
      RowBox[{"(", 
       RowBox[{"j", "-", "1"}], ")"}]}], "+", "k"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "2"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", "3"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"k", ",", "4"}], "}"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"temp", "[", 
  RowBox[{"[", "1", "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"temp", "[", 
  RowBox[{"[", 
   RowBox[{"2", ",", "2"}], "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"temp", "[", 
  RowBox[{"[", 
   RowBox[{"2", ",", "3", ",", "4"}], "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"temp", "[", 
  RowBox[{"[", 
   RowBox[{"1", ",", "1", ",", 
    RowBox[{"2", ";;", "4"}]}], "]"}], "]"}]}], "Input",
 CellChangeTimes->{
  3.4293867072260103`*^9, 3.4294750958642654`*^9, {3.4294751950061593`*^9, 
   3.429475202990637*^9}, 3.4294752455693064`*^9, {3.429475293413669*^9, 
   3.4294753626645555`*^9}, {3.4294754029150705`*^9, 
   3.4294754655096216`*^9}, {3.429478247138976*^9, 3.429478351530937*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"{", 
       RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}], 
      RowBox[{"{", 
       RowBox[{"5", ",", "6", ",", "7", ",", "8"}], "}"}], 
      RowBox[{"{", 
       RowBox[{"9", ",", "10", ",", "11", ",", "12"}], "}"}]},
     {
      RowBox[{"{", 
       RowBox[{"13", ",", "14", ",", "15", ",", "16"}], "}"}], 
      RowBox[{"{", 
       RowBox[{"17", ",", "18", ",", "19", ",", "20"}], "}"}], 
      RowBox[{"{", 
       RowBox[{"21", ",", "22", ",", "23", ",", "24"}], "}"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{3.523709310824148*^9}],

Cell[BoxData[
 FormBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "2", "3", "4"},
     {"5", "6", "7", "8"},
     {"9", "10", "11", "12"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{3.523709310826755*^9}],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{"17", ",", "18", ",", "19", ",", "20"}], "}"}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{3.523709310828779*^9}],

Cell[BoxData[
 FormBox["24", TraditionalForm]], "Output",
 CellChangeTimes->{3.5237093108307533`*^9}],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{"2", ",", "3", ",", "4"}], "}"}], TraditionalForm]], "Output",
 CellChangeTimes->{3.523709310832782*^9}]
}, Open  ]],

Cell[TextData[{
 "\n(b) In the cell below, demonstrate an application of each of the \
following functions: ",
 Cell[TextData[ButtonBox["First",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/First"]], "InlineFunctionSans",
  FontWeight->"Bold"],
 ",",
 StyleBox["\[MediumSpace]", "InlineSeparator"],
 " ",
 Cell[TextData[StyleBox[ButtonBox["Last",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Last"],
  FontWeight->"Bold"]], "InlineFunctionSans"],
 StyleBox[",\[MediumSpace]", "InlineSeparator"],
 " ",
 Cell[TextData[StyleBox[ButtonBox["Rest",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Rest"],
  FontWeight->"Bold"]], "InlineFunctionSans"],
 StyleBox[",\[MediumSpace]", "InlineSeparator"],
 " ",
 Cell[TextData[ButtonBox["Most",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Most"]], "InlineFunctionSans",
  FontWeight->"Bold"],
 StyleBox[",\[MediumSpace]", "InlineSeparator"],
 " ",
 Cell[TextData[StyleBox[ButtonBox["Take",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Take"],
  FontWeight->"Bold"]], "InlineFunctionSans"],
 ", ",
 Cell[TextData[StyleBox[ButtonBox["Drop",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Drop"],
  FontWeight->"Bold"]], "InlineFunctionSans"],
 " and the shorthand form of ",
 StyleBox[ButtonBox["Part",
  BaseStyle->"Link",
  ButtonData->"paclet://ref/Part"],
  FontWeight->"Bold"],
 " to the list of integers from 1 to 10.",
 Cell[TextData[ButtonBox["",
  BaseStyle->"NewInVersionLink",
  ButtonData->"paclet:ref/TakeWhile"]], "InlineFunctionSans",
  Background->Dynamic[
    If[CurrentValue[{TaggingRules, "ModificationHighlight"}] === True, 
     RGBColor[0.92, 1, 0.59], None]]]
}], "Text",
 CellChangeTimes->{{3.429477835805586*^9, 3.4294778984001374`*^9}, {
  3.4294784462040243`*^9, 3.429478485642029*^9}, {3.4294785552991705`*^9, 
  3.429478585502682*^9}, {3.4295003424332485`*^9, 3.429500351042734*^9}, {
  3.429969852796562*^9, 3.42996985606225*^9}, {3.431803216400179*^9, 
  3.4318032199471226`*^9}, {3.43993493998811*^9, 3.439934972519568*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"zeroToTen", " ", "=", " ", 
   RowBox[{"Range", "[", "10", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"First", "[", "zeroToTen", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Last", "[", "zeroToTen", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Rest", "[", "zeroToTen", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Most", "[", "zeroToTen", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Take", "[", 
  RowBox[{"zeroToTen", ",", "4"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Take", "[", 
  RowBox[{"zeroToTen", ",", 
   RowBox[{"-", "4"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Drop", "[", 
  RowBox[{"zeroToTen", ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "7", ",", "2"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.4399348269561367`*^9, 3.439934827393639*^9}, {
  3.523709404564473*^9, 3.523709516976411*^9}}],

Cell[BoxData[
 FormBox["1", TraditionalForm]], "Output",
 CellChangeTimes->{{3.5237095059062157`*^9, 3.523709517763384*^9}}],

Cell[BoxData[
 FormBox["10", TraditionalForm]], "Output",
 CellChangeTimes->{{3.5237095059062157`*^9, 3.523709517767563*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{
   "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", "8", ",", "9", 
    ",", "10"}], "}"}], TraditionalForm]], "Output",
 CellChangeTimes->{{3.5237095059062157`*^9, 3.523709517770513*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{
   "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", "8", 
    ",", "9"}], "}"}], TraditionalForm]], "Output",
 CellChangeTimes->{{3.5237095059062157`*^9, 3.5237095177735977`*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{{3.5237095059062157`*^9, 3.523709517776471*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{"7", ",", "8", ",", "9", ",", "10"}], "}"}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{{3.5237095059062157`*^9, 3.523709517779169*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{"2", ",", "4", ",", "6", ",", "8", ",", "9", ",", "10"}], "}"}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{{3.5237095059062157`*^9, 3.523709517781702*^9}}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["(#6) Searching Lists (5 min)", "Subsection",
 CellChangeTimes->{{3.4294709331547337`*^9, 3.4294709377641673`*^9}, {
   3.4294735698603578`*^9, 3.4294735727510195`*^9}, {3.4311841141667213`*^9, 
   3.4311841166667695`*^9}, 3.431187460887227*^9, {3.51217247482165*^9, 
   3.51217247597605*^9}}],

Cell[TextData[{
 "Review the functions presented on the tutorial page about ",
 StyleBox[ButtonBox["Testing And Searching List Elements",
  BaseStyle->"Link",
  ButtonData->"paclet://tutorial/TestingAndSearchingListElements"],
  FontWeight->"Bold"],
 ".\n\n(a) In the cell below, we use ",
 StyleBox[ButtonBox["Position",
  BaseStyle->"Link",
  ButtonData->"paclet://ref/Position"],
  FontWeight->"Bold"],
 " to locate the number 9 in a ragged nested list, and ",
 StyleBox[ButtonBox["Count",
  BaseStyle->"Link",
  ButtonData->"paclet://ref/Count"],
  FontWeight->"Bold"],
 " the number of times that the number 9 appears in the list.  Evaluate the \
cell and explain the output."
}], "Text",
 CellChangeTimes->{{3.429386521208004*^9, 3.4293865354581866`*^9}, {
  3.429386579786879*^9, 3.4293865844588137`*^9}, {3.429386654694088*^9, 
  3.4293866619285555`*^9}, {3.429386695241482*^9, 3.4293866969602537`*^9}, {
  3.429468891737979*^9, 3.429468944488654*^9}, {3.429468978864094*^9, 
  3.429468997614334*^9}, {3.42946991723548*^9, 3.4294699231730556`*^9}, {
  3.4294709955774074`*^9, 3.4294710924223967`*^9}, {3.4294711911424103`*^9, 
  3.429471194454953*^9}, {3.429471245939987*^9, 3.429471288331155*^9}, {
  3.429471321815958*^9, 3.429471347878792*^9}, {3.4294714319267426`*^9, 
  3.4294715091621065`*^9}, {3.429471631194918*^9, 3.4294717064458814`*^9}, {
  3.4318032255409794`*^9, 3.431803226244118*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"temp", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"9", ",", 
     RowBox[{"{", 
      RowBox[{"8", ",", "9", ",", "5"}], "}"}], ",", "6", ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", 
       RowBox[{"{", 
        RowBox[{"8", ",", "2", ",", 
         RowBox[{"{", 
          RowBox[{"9", ",", "5"}], "}"}]}], "}"}]}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Position", "[", 
  RowBox[{"temp", ",", "9"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Count", "[", 
  RowBox[{"temp", ",", "9", ",", "\[Infinity]"}], "]"}]}], "Input",
 CellChangeTimes->{
  3.429384676621894*^9, {3.4294711055631905`*^9, 3.429471168970252*^9}, {
   3.429471203111314*^9, 3.4294712036894464`*^9}, {3.4294713728478613`*^9, 
   3.4294714230203786`*^9}, {3.429471614710332*^9, 3.4294716200541506`*^9}, 
   3.4294717522745934`*^9, {3.429471949245864*^9, 3.4294719576990976`*^9}, {
   3.4294719924807925`*^9, 3.429471992793297*^9}, 3.4294724188768754`*^9, 
   3.5237096011044807`*^9, {3.523711507068111*^9, 3.523711529804081*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", "1", "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"2", ",", "2"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"4", ",", "2", ",", "3", ",", "1"}], "}"}]}], "}"}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{{3.523709591112018*^9, 3.52370962560036*^9}, {
  3.523711510004826*^9, 3.523711535716626*^9}}],

Cell[BoxData[
 FormBox["3", TraditionalForm]], "Output",
 CellChangeTimes->{{3.523709591112018*^9, 3.52370962560036*^9}, {
  3.523711510004826*^9, 3.5237115357195807`*^9}}]
}, Open  ]],

Cell[TextData[{
 "\n(b) One can also ",
 StyleBox[ButtonBox["Select",
  BaseStyle->"Link",
  ButtonData->"paclet://ref/Select"],
  FontWeight->"Bold"],
 " list elements that satisfy a certain test.  For example, given the numbers \
from 1 to 20, we can extract the following sublists."
}], "Text",
 CellChangeTimes->{{3.4294735980482187`*^9, 3.4294736966276054`*^9}, {
  3.42947379072256*^9, 3.4294737953944945`*^9}, {3.431803231275465*^9, 
  3.431803231947353*^9}, {3.51217192762045*^9, 3.51217192808845*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"temp", " ", "=", " ", 
  RowBox[{"Range", "[", "20", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Select", "[", 
   RowBox[{"temp", ",", "OddQ"}], "]"}], "  ", 
  RowBox[{"(*", " ", "odd", " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Select", "[", 
   RowBox[{"temp", ",", 
    RowBox[{
     RowBox[{"#", ">", "10"}], "&"}]}], "]"}], "  ", 
  RowBox[{"(*", " ", 
   RowBox[{"greater", " ", "than", " ", "10"}], " ", 
   "*)"}]}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.4294791006655264`*^9, 3.429479132119054*^9}, {
  3.51217450266565*^9, 3.51217450325845*^9}, {3.523711629200158*^9, 
  3.52371163656953*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{
   "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", "8", 
    ",", "9", ",", "10", ",", "11", ",", "12", ",", "13", ",", "14", ",", 
    "15", ",", "16", ",", "17", ",", "18", ",", "19", ",", "20"}], "}"}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{3.523709644530717*^9}],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{
   "1", ",", "3", ",", "5", ",", "7", ",", "9", ",", "11", ",", "13", ",", 
    "15", ",", "17", ",", "19"}], "}"}], TraditionalForm]], "Output",
 CellChangeTimes->{3.523709644533121*^9}],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{
   "11", ",", "12", ",", "13", ",", "14", ",", "15", ",", "16", ",", "17", 
    ",", "18", ",", "19", ",", "20"}], "}"}], TraditionalForm]], "Output",
 CellChangeTimes->{3.5237096445352182`*^9}]
}, Open  ]],

Cell[TextData[{
 "\n(c) In the cell below, use ",
 StyleBox[ButtonBox["Select",
  BaseStyle->"Link",
  ButtonData->"paclet://ref/Select"],
  FontWeight->"Bold"],
 " to obtain a list of all of the prime numbers in the range from 1 to 100."
}], "Text",
 CellChangeTimes->{{3.4294735980482187`*^9, 3.4294736966276054`*^9}, {
  3.42947379072256*^9, 3.4294737953944945`*^9}, {3.429473889083194*^9, 
  3.4294739896001053`*^9}, {3.431803234884909*^9, 3.4318032371974535`*^9}, {
  3.51217194194125*^9, 3.5121719424872503`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"temp", " ", "=", " ", 
   RowBox[{"Range", "[", "100", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Select", "[", 
  RowBox[{"temp", ",", " ", "PrimeQ"}], "]"}]}], "Input",
 CellChangeTimes->{{3.4399350762233567`*^9, 3.439935076629609*^9}, {
  3.523709655507531*^9, 3.523709673354301*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{
   "2", ",", "3", ",", "5", ",", "7", ",", "11", ",", "13", ",", "17", ",", 
    "19", ",", "23", ",", "29", ",", "31", ",", "37", ",", "41", ",", "43", 
    ",", "47", ",", "53", ",", "59", ",", "61", ",", "67", ",", "71", ",", 
    "73", ",", "79", ",", "83", ",", "89", ",", "97"}], "}"}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{3.523709675599057*^9}]
}, Open  ]],

Cell["\<\
There are several other ways to select list elements -- we only emphasized \
one here.\
\>", "Text",
 CellChangeTimes->{{3.4294765221481466`*^9, 3.4294766110399094`*^9}, 
   3.429476892481012*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
(#7-#11) Manipulating and processing lists (40 min)\
\>", "Subsection",
 CellChangeTimes->{{3.429473394701866*^9, 3.429473397951907*^9}, {
   3.4294766500404086`*^9, 3.4294766721500664`*^9}, {3.429482341894513*^9, 
   3.429482342238268*^9}, 3.4294955367337866`*^9, {3.4299702533355026`*^9, 
   3.4299702560855556`*^9}, {3.4311870615514355`*^9, 3.431187063004588*^9}, {
   3.431187491809696*^9, 3.431187491965949*^9}, {3.433281751461486*^9, 
   3.433281751539613*^9}, {3.51217247828485*^9, 3.51217248071845*^9}, {
   3.5121738985244503`*^9, 3.5121739085240498`*^9}, {3.51233693788535*^9, 
   3.51233693969895*^9}}],

Cell["\<\
As a physicist, you will often be faced with collections of data from \
computations or measurements.  You\[CloseCurlyQuote]ll frequently want to \
extract certain elements or list of elements from the data.  You may also \
want to transofrm the list in different ways or apply an operation to each \
element of the list.  In this section, you will learn some tools which are \
helpful in that kind of analysis.\
\>", "Text",
 CellChangeTimes->{{3.51217195824325*^9, 3.51217204320085*^9}}],

Cell[CellGroupData[{

Cell["\<\
(#7) Miscellaneous tools (10 min)\
\>", "Subsubsection",
 CellChangeTimes->{{3.4294807501553893`*^9, 3.4294807696087637`*^9}, {
  3.42948083807839*^9, 3.4294808406877985`*^9}, {3.429482085609983*^9, 
  3.429482090875675*^9}, {3.429497768994059*^9, 3.4294977773066654`*^9}, {
  3.431185929967209*^9, 3.4311859325922594`*^9}, {3.51217230167725*^9, 
  3.51217230397045*^9}, {3.5121724832456503`*^9, 3.51217248424405*^9}}],

Cell[TextData[{
 "(a) In the cell below, complete the following sequence of operations on the \
list provided so that each operation acts on the result of the previous \
operation (",
 StyleBox["%",
  FontWeight->"Bold"],
 ") and appears on a separate line.  (1) ",
 StyleBox[ButtonBox["Flatten",
  BaseStyle->"Link",
  ButtonData->"paclet://ref/Flatten"],
  FontWeight->"Bold"],
 " the list, (2) ",
 StyleBox[ButtonBox["Sort",
  BaseStyle->"Link",
  ButtonData->"paclet://ref/Sort"],
  FontWeight->"Bold"],
 " in ascending order, (3) find the ",
 StyleBox[ButtonBox["Union",
  BaseStyle->"Link",
  ButtonData->"paclet://ref/Union"],
  FontWeight->"Bold"],
 " (i.e. the unique elements),  (4) use ",
 StyleBox[ButtonBox["Complement",
  BaseStyle->"Link",
  ButtonData->"paclet://ref/Complement"],
  FontWeight->"Bold"],
 " to extract only those elements that are greater than 3, (5) ",
 StyleBox[ButtonBox["Reverse",
  BaseStyle->"Link",
  ButtonData->"paclet://ref/Reverse"],
  FontWeight->"Bold"],
 " the order.  If done correctly, this should yield {10, 9, 8, 7, 6, 4}."
}], "Text",
 CellChangeTimes->{{3.405708787362527*^9, 3.405708799305842*^9}, {
   3.429379580556665*^9, 3.42937960518198*^9}, {3.4293810283564463`*^9, 
   3.429381043075385*^9}, {3.4293811602175093`*^9, 3.4293811649988203`*^9}, 
   3.429381642004926*^9, {3.429386735273244*^9, 3.4293867709299507`*^9}, {
   3.429475633949278*^9, 3.4294756861374454`*^9}, {3.4294799693953958`*^9, 
   3.429480456448505*^9}, {3.429480518261796*^9, 3.429480558887316*^9}, {
   3.429480596856552*^9, 3.4294806893264856`*^9}, 3.429480867516267*^9, {
   3.429481033721519*^9, 3.4294810349559097`*^9}, {3.4294963969296217`*^9, 
   3.4294965096341896`*^9}, {3.4299040958632*^9, 3.429904099628825*^9}, {
   3.42990413214445*^9, 3.42990415720695*^9}, {3.4311841473704844`*^9, 
   3.4311841880587654`*^9}, {3.51217208149885*^9, 3.5121720845408497`*^9}, {
   3.51217223991685*^9, 3.5121722535668497`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"dat", " ", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"4", ",", "8", ",", "9", ",", "10"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"8", ",", "6", ",", "7", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "7", ",", "8", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "1", ",", "2", ",", "8"}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Flatten", "[", "dat", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Sort", "[", "%", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Union", "[", "%", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Complement", "[", 
   RowBox[{"%", ",", 
    RowBox[{"Range", "[", "3", "]"}]}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Reverse", "[", "%", "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.399139342103443*^9, 3.3991393822286997`*^9}, {
   3.399140169014985*^9, 3.3991401802806826`*^9}, {3.3991411974590673`*^9, 
   3.399141201943471*^9}, {3.3991418238849516`*^9, 3.399141829244361*^9}, 
   3.3994051156757836`*^9, {3.40570880368871*^9, 3.4057088266205015`*^9}, 
   3.429379569869028*^9, {3.42947957793726*^9, 3.429479617437766*^9}, {
   3.4294797233766217`*^9, 3.429479963395319*^9}, {3.4294804709486904`*^9, 
   3.429480505105378*^9}, 3.429480545309017*^9, {3.4294805758719087`*^9, 
   3.429480578090687*^9}, {3.429496254896554*^9, 3.429496311397277*^9}, {
   3.4294963687261357`*^9, 3.4294963843200855`*^9}, {3.4294965372282925`*^9, 
   3.429496538040803*^9}, {3.4295004568878384`*^9, 3.42950045737222*^9}, 
   3.429969882015874*^9, {3.5121721085492496`*^9, 3.51217217091805*^9}, {
   3.51217221662605*^9, 3.51217222745245*^9}, {3.51217226015005*^9, 
   3.51217227712285*^9}, {3.523709753121395*^9, 3.523709792959648*^9}, {
   3.5237098585451183`*^9, 3.523709865103092*^9}, {3.523709919758325*^9, 
   3.523709970782865*^9}, {3.52371167108141*^9, 3.5237116888242683`*^9}, {
   3.5237117202159*^9, 3.523711734367082*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{"10", ",", "9", ",", "8", ",", "7", ",", "6", ",", "4"}], "}"}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{3.5237099434651117`*^9, 3.523711690172318*^9, 
  3.5237117349244003`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
(#8) Joining lists together (5 min)\
\>", "Subsubsection",
 CellChangeTimes->{{3.4294809359858932`*^9, 3.429480964080003*^9}, {
  3.4294820935319595`*^9, 3.4294820956726117`*^9}, {3.4311859410142965`*^9, 
  3.4311859424361987`*^9}, {3.5121723207248497`*^9, 3.51217232139565*^9}, {
  3.5121724866932497`*^9, 3.51217248728605*^9}}],

Cell[TextData[{
 "In the cell below, complete the following sequence of operations.  (a) \
Define ",
 StyleBox["dat1",
  FontSlant->"Italic"],
 " = {2,3,4} and ",
 StyleBox["dat2",
  FontSlant->"Italic"],
 " = {7,8,9}.  (b) ",
 StyleBox[ButtonBox["Append",
  BaseStyle->"Link",
  ButtonData->"paclet://ref/Append"],
  FontWeight->"Bold"],
 " a 5 at the back of ",
 StyleBox["dat1",
  FontSlant->"Italic"],
 " and call the result ",
 StyleBox["dat3",
  FontSlant->"Italic"],
 ".  (c) ",
 StyleBox[ButtonBox["Prepend",
  BaseStyle->"Link",
  ButtonData->"paclet://ref/Prepend"],
  FontWeight->"Bold"],
 " a 6 at the front of ",
 StyleBox["dat2",
  FontSlant->"Italic"],
 " and call the result ",
 StyleBox["dat4",
  FontSlant->"Italic"],
 ". (d) ",
 StyleBox[ButtonBox["Join",
  BaseStyle->"Link",
  ButtonData->"paclet://ref/Join"],
  FontWeight->"Bold"],
 " lists ",
 StyleBox["dat3",
  FontSlant->"Italic"],
 " and ",
 StyleBox["dat4",
  FontSlant->"Italic"],
 " and call the result ",
 StyleBox["dat5",
  FontSlant->"Italic"],
 "."
}], "Text",
 CellChangeTimes->{{3.4294734103583164`*^9, 3.4294734163271427`*^9}, {
   3.4294752676633396`*^9, 3.4294752719602695`*^9}, {3.4294755831361275`*^9, 
   3.4294756109646087`*^9}, {3.429475659277727*^9, 3.429475679106106*^9}, {
   3.4294793147932673`*^9, 3.4294794234352827`*^9}, 3.429480720748763*^9, {
   3.4294809810020943`*^9, 3.429481343256731*^9}, {3.429481382007227*^9, 
   3.42948159199429*^9}, {3.42948164707312*^9, 3.429481702792583*^9}, {
   3.429481766074643*^9, 3.429481782121723*^9}, {3.429481885044916*^9, 
   3.4294819968119717`*^9}, {3.4295004677629776`*^9, 3.429500509232259*^9}, 
   3.5121723298196497`*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"dat1", "=", " ", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3", ",", "4"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dat2", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"7", ",", "8", ",", "9"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dat3", " ", "=", " ", 
   RowBox[{"Append", "[", 
    RowBox[{"dat1", ",", "5"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dat4", " ", "=", " ", 
   RowBox[{"Prepend", "[", 
    RowBox[{"dat2", ",", "6"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"dat5", " ", "=", " ", 
  RowBox[{"dat3", " ", "~", "Join", "~", "dat4", " ", 
   RowBox[{"(*", 
    RowBox[{"or", " ", "I", " ", "could", " ", "have", " ", "done", " ", 
     RowBox[{"Join", "[", 
      RowBox[{"dat3", ",", " ", "dat4"}], "]"}]}], "*)"}]}]}]}], "Input",
 CellChangeTimes->{{3.43993531811553*^9, 3.4399353188186593`*^9}, {
  3.5237122261545887`*^9, 3.5237123428437843`*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{
   "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", "8", ",", 
    "9"}], "}"}], TraditionalForm]], "Output",
 CellChangeTimes->{3.5237123173810368`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["(#9) Map (10 min)", "Subsubsection",
 CellChangeTimes->{{3.4293811792802534`*^9, 3.4293811802802663`*^9}, {
  3.4293817548344955`*^9, 3.429381755506379*^9}, {3.4294722816251183`*^9, 
  3.4294722864220552`*^9}, {3.429476777276412*^9, 3.429476778338926*^9}, {
  3.429482229361823*^9, 3.4294822890032115`*^9}, {3.4294833593919125`*^9, 
  3.429483359954419*^9}, {3.42949678899714*^9, 3.429496792731563*^9}, {
  3.429497684977359*^9, 3.429497685696118*^9}, {3.4294990832608814`*^9, 
  3.4294990841202674`*^9}, {3.4311859542645507`*^9, 3.43118597035861*^9}, {
  3.4332817462269764`*^9, 3.433281746867618*^9}, {3.51217248918925*^9, 
  3.5121724901564503`*^9}}],

Cell[TextData[{
 "\n(a) Evaluate the cell below to send a simple list as an argument to an \
arbitrary function \"",
 StyleBox["f ",
  FontSlant->"Italic"],
 "\".  In general, an arbitrary function won't know how to eat a list."
}], "Text",
 CellChangeTimes->{{3.4057088419292336`*^9, 3.4057088696039143`*^9}, {
   3.4293798278879557`*^9, 3.4293798522632675`*^9}, {3.429379906967093*^9, 
   3.429379926951724*^9}, {3.429381050497355*^9, 3.4293810518254967`*^9}, 
   3.4293811824834194`*^9, 3.429381636364229*^9, {3.429496824856974*^9, 
   3.429496881951455*^9}, {3.4318032693855715`*^9, 3.431803270979352*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"temp", " ", "=", " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"4", ",", "5", ",", "6"}], "}"}]}], 
   "}"}]}], "\[IndentingNewLine]", 
 RowBox[{"f", "[", "temp", "]"}]}], "Input",
 CellChangeTimes->{{3.399139342103443*^9, 3.3991393822286997`*^9}, {
   3.399140169014985*^9, 3.3991401802806826`*^9}, {3.3991411974590673`*^9, 
   3.399141201943471*^9}, {3.3991418238849516`*^9, 3.399141829244361*^9}, 
   3.3994051156757836`*^9, 3.3998403795149837`*^9, {3.399843487762249*^9, 
   3.3998435115955343`*^9}, {3.405708833758315*^9, 3.4057088367637105`*^9}, 
   3.40570913063501*^9, {3.429496802716066*^9, 3.4294968137787075`*^9}, {
   3.429496899139175*^9, 3.4294969053736296`*^9}, {3.429905135597575*^9, 
   3.429905234441325*^9}, {3.429905357503825*^9, 3.429905359222575*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "2", "3"},
     {"4", "5", "6"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{3.523712367243204*^9, 3.52389942956841*^9, 
  3.5243096962810173`*^9}],

Cell[BoxData[
 FormBox[
  RowBox[{"f", "(", 
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {"1", "2", "3"},
      {"4", "5", "6"}
     },
     GridBoxAlignment->{
      "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
        "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.7]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], ")"}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{3.523712367243204*^9, 3.52389942956841*^9, 
  3.52430969628413*^9}]
}, Open  ]],

Cell[TextData[{
 "\n(b) Suppose that you want to apply the function to each element of the \
list individually.  We can say that we want to ",
 StyleBox[ButtonBox["Map",
  BaseStyle->"Link",
  ButtonData->"paclet://ref/Map"],
  FontWeight->"Bold"],
 " the function onto each element of the list.  Evaluate the cell below to \
map the function ",
 StyleBox["f ",
  FontSlant->"Italic"],
 "onto each element of ",
 StyleBox["temp",
  FontSlant->"Italic"],
 ".  Then browse and execute several of the basic DC examples on the ",
 StyleBox[ButtonBox["Map",
  BaseStyle->"Link",
  ButtonData->"paclet://ref/Map"],
  FontWeight->"Bold"],
 " reference page."
}], "Text",
 CellChangeTimes->{{3.4057091410286684`*^9, 3.405709153378964*^9}, 
   3.429379890373131*^9, {3.4293799309048996`*^9, 3.4293799917963037`*^9}, {
   3.429380153704626*^9, 3.429380270987377*^9}, {3.4293810028873706`*^9, 
   3.4293810030436225`*^9}, {3.4293810546692834`*^9, 3.429381082044634*^9}, {
   3.429381241437299*^9, 3.429381302141201*^9}, {3.4294976581176395`*^9, 
   3.429497679289786*^9}, {3.4318032734168987`*^9, 3.431803274260665*^9}, {
   3.4332820572193127`*^9, 3.433282073250973*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Map", "[", 
   RowBox[{"f", ",", "temp"}], "]"}], "  ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "standard", " ", "form", " ", "of", " ", "the", " ", "Map", " ", 
    "command"}], " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.399139342103443*^9, 3.3991393822286997`*^9}, {
   3.399140169014985*^9, 3.3991401802806826`*^9}, {3.3991411974590673`*^9, 
   3.399141201943471*^9}, {3.3991418238849516`*^9, 3.399141829244361*^9}, 
   3.3994051156757836`*^9, {3.3998403795149837`*^9, 3.399840394769534*^9}, {
   3.399840444323427*^9, 3.3998404775153327`*^9}, 3.3998405748449807`*^9, {
   3.3998435204082346`*^9, 3.3998435314046135`*^9}, {3.405709157730526*^9, 
   3.4057091724131336`*^9}, {3.405709296933544*^9, 3.4057093110682936`*^9}, {
   3.429496911342456*^9, 3.4294969567024117`*^9}, {3.433281999811593*^9, 
   3.4332820002959805`*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"f", "(", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "3"}], "}"}], ")"}], ",", 
    RowBox[{"f", "(", 
     RowBox[{"{", 
      RowBox[{"4", ",", "5", ",", "6"}], "}"}], ")"}]}], "}"}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{3.523712383836043*^9, 3.523899449761807*^9, 
  3.524309698264948*^9}]
}, Open  ]],

Cell["\<\

(c) Rather than mapping a function onto the level 1 (default) elements of a \
list, we can specify a lower level.  Evaluate the cell below, and explain to \
your TA how mapping at level 2 is different from the mapping at level 1.\
\>", "Text",
 CellChangeTimes->{{3.4294709724677362`*^9, 3.429471002655623*^9}, {
   3.4294712360336103`*^9, 3.42947124306495*^9}, 3.4294715730691743`*^9, {
   3.429471712758462*^9, 3.4294717438838606`*^9}, {3.4294724302051454`*^9, 
   3.4294724383615*^9}, {3.429472512987455*^9, 3.429472528347027*^9}, {
   3.429472566894395*^9, 3.429472590629074*^9}, {3.4294726358327775`*^9, 
   3.429472654864271*^9}, {3.4294729918685846`*^9, 3.4294731068700566`*^9}, {
   3.429473338388645*^9, 3.4294733413886833`*^9}, 3.429473482202986*^9, {
   3.4294969908903494`*^9, 3.4294971058918214`*^9}, {3.42990510139445*^9, 
   3.429905111847575*^9}, {3.431803276526334*^9, 3.431803277229472*^9}, {
   3.4332821046267767`*^9, 3.4332822198328505`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Map", "[", 
   RowBox[{"f", ",", " ", "temp", ",", 
    RowBox[{"{", "2", "}"}]}], "]"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"map", " ", "to", " ", "level", " ", "2"}], " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.42947096063946*^9, 3.4294709616082225`*^9}, {
   3.4294713627852325`*^9, 3.4294713658633966`*^9}, {3.4294717552590065`*^9, 
   3.429471762274721*^9}, {3.4294718344318943`*^9, 3.4294719048234205`*^9}, {
   3.4294720256843424`*^9, 3.4294720994977875`*^9}, {3.4294721599673114`*^9, 
   3.429472164420493*^9}, {3.4294723216568813`*^9, 3.4294723218287582`*^9}, {
   3.4294723839858036`*^9, 3.4294723845951867`*^9}, 3.429472423736313*^9, {
   3.4294726154731417`*^9, 3.429472629707699*^9}, {3.4294726855365386`*^9, 
   3.4294728876485004`*^9}, {3.429472972149582*^9, 3.429472974243359*^9}, {
   3.42947316066762*^9, 3.4294731682614675`*^9}, {3.4294732041369267`*^9, 
   3.4294732737784433`*^9}, {3.429497155751835*^9, 3.429497288894164*^9}, {
   3.429497334691625*^9, 3.4294973679108*^9}, 3.429905006597575*^9, {
   3.42990504108195*^9, 3.42990506920695*^9}, {3.4299052546757*^9, 
   3.4299052951757*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"f", "(", "1", ")"}], 
      RowBox[{"f", "(", "2", ")"}], 
      RowBox[{"f", "(", "3", ")"}]},
     {
      RowBox[{"f", "(", "4", ")"}], 
      RowBox[{"f", "(", "5", ")"}], 
      RowBox[{"f", "(", "6", ")"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{3.523712449076559*^9, 3.52389945310314*^9, 
  3.5243096998031607`*^9}]
}, Open  ]],

Cell[TextData[{
 " \n(d) Use ",
 StyleBox[ButtonBox["MapAt",
  BaseStyle->"Link",
  ButtonData->"paclet://ref/MapAt"],
  FontWeight->"Bold"],
 " to map the function ",
 StyleBox["f",
  FontSlant->"Italic"],
 " onto the number 5 inside of ",
 StyleBox["temp",
  FontSlant->"Italic"],
 ", but nowhere else."
}], "Text",
 CellChangeTimes->{{3.429381525659687*^9, 3.429381652786314*^9}, {
   3.4294974152707815`*^9, 3.4294974499587255`*^9}, {3.4295005446702123`*^9, 
   3.4295005989990325`*^9}, {3.431803280776415*^9, 3.4318032814326777`*^9}, {
   3.433281799603343*^9, 3.4332819006371794`*^9}, 3.4397391201327667`*^9, {
   3.439935499554191*^9, 3.439935510288635*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MapAt", "[", 
  RowBox[{"f", ",", "temp", ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "2"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.4293815936918077`*^9, 3.4293815943793163`*^9}, {
   3.429497464302659*^9, 3.4294975563663373`*^9}, {3.4299053078007*^9, 
   3.4299053373632*^9}, 3.4332819206845675`*^9, {3.523712525646111*^9, 
   3.523712541148507*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "2", "3"},
     {"4", 
      RowBox[{"f", "(", "5", ")"}], "6"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{3.523712542026347*^9, 3.523899455604126*^9, 
  3.5243097041743307`*^9}]
}, Open  ]],

Cell[TextData[{
 " \n(e) In the cell below, use the standard form of ",
 StyleBox["Map",
  FontWeight->"Bold"],
 " to map a nameless function onto the list of integers from 1 to 10, thereby \
obtaining the square of each integer.  Then repeat the exercise using the \
shorthand \"",
 StyleBox["/@",
  FontWeight->"Bold"],
 "\" form of ",
 StyleBox["Map",
  FontWeight->"Bold"],
 "."
}], "Text",
 CellChangeTimes->{{3.429381525659687*^9, 3.429381652786314*^9}, {
   3.4294976064451036`*^9, 3.429497644586217*^9}, {3.4318032865890265`*^9, 
   3.4318032874640436`*^9}, {3.433282230708129*^9, 3.43328229324098*^9}, {
   3.43993558217972*^9, 3.439935632164415*^9}, {3.439935674570936*^9, 
   3.4399357741340733`*^9}, {3.4399358075717874`*^9, 3.439935817149974*^9}, 
   3.4840840093294287`*^9, {3.484088662546709*^9, 3.4840886666873603`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"myList", " ", "=", " ", 
   RowBox[{"Range", "[", "10", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Map", "[", 
  RowBox[{
   RowBox[{"Function", "[", 
    RowBox[{"x", ",", 
     SuperscriptBox["x", "2"]}], "]"}], ",", "myList"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Function", "[", 
   RowBox[{"x", ",", " ", 
    SuperscriptBox["x", "2"]}], "]"}], "/@", " ", "myList"}]}], "Input",
 CellChangeTimes->{{3.4293815936918077`*^9, 3.4293815943793163`*^9}, {
  3.4295006065460043`*^9, 3.429500613780472*^9}, {3.4299053774257*^9, 
  3.429905377628825*^9}, {3.523712549444057*^9, 3.523712597331191*^9}, {
  3.523712638740069*^9, 3.523712665066633*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{
   "1", ",", "4", ",", "9", ",", "16", ",", "25", ",", "36", ",", "49", ",", 
    "64", ",", "81", ",", "100"}], "}"}], TraditionalForm]], "Output",
 CellChangeTimes->{{3.523712615681044*^9, 3.52371266580929*^9}, 
   3.523899460664361*^9}],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{
   "1", ",", "4", ",", "9", ",", "16", ",", "25", ",", "36", ",", "49", ",", 
    "64", ",", "81", ",", "100"}], "}"}], TraditionalForm]], "Output",
 CellChangeTimes->{{3.523712615681044*^9, 3.52371266580929*^9}, 
   3.523899460667067*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
(#10) Listable functions (5 min)\
\>", "Subsubsection",
 CellChangeTimes->{{3.429472262812378*^9, 3.429472267437437*^9}, {
  3.429482250658971*^9, 3.42948225531528*^9}, {3.4294823045971613`*^9, 
  3.429482304909665*^9}, {3.4311859645616236`*^9, 3.431185966139779*^9}, {
  3.51217249282405*^9, 3.51217249332325*^9}}],

Cell[TextData[{
 "(a) Many mathematical functions are ",
 StyleBox[ButtonBox["Listable",
  BaseStyle->"Link",
  ButtonData->"paclet://ref/Listable"],
  FontWeight->"Bold"],
 " (a.k.a. self mapping or self threading), so that they automatically get \
applied to each element when applied to the whole list. Here are a few \
examples of listable functions.  Evaluate them."
}], "Text",
 CellChangeTimes->{{3.4057834901464033`*^9, 3.4057835458555884`*^9}, {
   3.4293800565315075`*^9, 3.4293801047196245`*^9}, {3.4293802848938055`*^9, 
   3.4293803098316245`*^9}, {3.42938098762155*^9, 3.429380988699689*^9}, {
   3.429381089169725*^9, 3.4293810959198112`*^9}, 3.4294722703749743`*^9, {
   3.4294767024004536`*^9, 3.4294767503385677`*^9}, {3.431803311698884*^9, 
   3.4318033124176474`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"temp", " ", "=", " ", 
   RowBox[{"Range", "[", "8", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"temp", "+", "temp"}], "    ", 
  RowBox[{"(*", "  ", 
   RowBox[{"Plus", " ", "is", " ", "Listable"}], "  ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"10", "*", "temp"}], "        ", 
  RowBox[{"(*", "  ", 
   RowBox[{"Times", " ", "is", " ", "Listable"}], "  ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"temp", "^", "2"}], "             ", 
  RowBox[{"(*", "  ", 
   RowBox[{"Power", " ", "is", " ", "Listable"}], "  ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Cos", "[", 
   RowBox[{"temp", "*", 
    RowBox[{"Pi", "/", "4"}]}], "]"}], " ", 
  RowBox[{"(*", "  ", 
   RowBox[{"Cos", " ", "is", " ", "Listable"}], "  ", 
   "*)"}]}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.3991403020939617`*^9, 3.399140320984708*^9}, {
   3.399141224990494*^9, 3.3991412268811307`*^9}, {3.3994051472821865`*^9, 
   3.3994051576669245`*^9}, {3.3998403070948625`*^9, 
   3.3998403697820187`*^9}, {3.3998404102892456`*^9, 3.399840427477911*^9}, {
   3.39984057966467*^9, 3.3998405950596*^9}, {3.3998435373161416`*^9, 
   3.3998435403888884`*^9}, 3.4057093870171347`*^9, {3.4057095083443127`*^9, 
   3.405709543109848*^9}, {3.429380315409821*^9, 3.429380461083561*^9}, {
   3.4293805067716455`*^9, 3.429380507459154*^9}, {3.4293805474909163`*^9, 
   3.4293805693036957`*^9}, {3.429380640976488*^9, 3.4293807467590923`*^9}, {
   3.429381664505214*^9, 3.4293816697865314`*^9}, {3.429476835542783*^9, 
   3.429476848121069*^9}, {3.4294977093839207`*^9, 3.4294977397124343`*^9}, {
   3.429500628015029*^9, 3.429500658624796*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{
   "2", ",", "4", ",", "6", ",", "8", ",", "10", ",", "12", ",", "14", ",", 
    "16"}], "}"}], TraditionalForm]], "Output",
 CellChangeTimes->{3.523712700752761*^9, 3.523899479012443*^9}],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{
   "10", ",", "20", ",", "30", ",", "40", ",", "50", ",", "60", ",", "70", 
    ",", "80"}], "}"}], TraditionalForm]], "Output",
 CellChangeTimes->{3.523712700752761*^9, 3.5238994790151863`*^9}],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{
   "1", ",", "4", ",", "9", ",", "16", ",", "25", ",", "36", ",", "49", ",", 
    "64"}], "}"}], TraditionalForm]], "Output",
 CellChangeTimes->{3.523712700752761*^9, 3.523899479017338*^9}],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{
    FractionBox["1", 
     SqrtBox["2"]], ",", "0", ",", 
    RowBox[{"-", 
     FractionBox["1", 
      SqrtBox["2"]]}], ",", 
    RowBox[{"-", "1"}], ",", 
    RowBox[{"-", 
     FractionBox["1", 
      SqrtBox["2"]]}], ",", "0", ",", 
    FractionBox["1", 
     SqrtBox["2"]], ",", "1"}], "}"}], TraditionalForm]], "Output",
 CellChangeTimes->{3.523712700752761*^9, 3.523899479019665*^9}]
}, Open  ]],

Cell[TextData[{
 "\n(b) Functions that are not listable must be mapped explicitly.  To see \
this, evaluate the following example.  You may want to review the DC \
reference pages for ",
 StyleBox[ButtonBox["IdentityMatrix",
  BaseStyle->"Link",
  ButtonData->"paclet://ref/IdentityMatrix"],
  FontWeight->"Bold"],
 ", ",
 StyleBox[ButtonBox["MatrixForm",
  BaseStyle->"Link",
  ButtonData->"paclet://ref/MatrixForm"],
  FontWeight->"Bold"],
 " and ",
 StyleBox[ButtonBox["TableForm",
  BaseStyle->"Link",
  ButtonData->"paclet://ref/TableForm"],
  FontWeight->"Bold"],
 "."
}], "Text",
 CellChangeTimes->{{3.4057834901464033`*^9, 3.4057835458555884`*^9}, {
   3.4293800565315075`*^9, 3.4293801047196245`*^9}, {3.4293802848938055`*^9, 
   3.4293803098316245`*^9}, {3.429380922370715*^9, 3.429380927058275*^9}, {
   3.4293811015917587`*^9, 3.4293811145450497`*^9}, {3.4293813383447895`*^9, 
   3.4293813460480127`*^9}, {3.429469046989966*^9, 3.429469129662899*^9}, {
   3.4294691711165543`*^9, 3.4294693350874033`*^9}, {3.4294693767910624`*^9, 
   3.429469377478571*^9}, {3.429469422276019*^9, 3.4294694706516385`*^9}, {
   3.4318033150583234`*^9, 3.4318033214646964`*^9}, 3.439668993413433*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"MatrixForm", "[", 
   RowBox[{"IdentityMatrix", "[", "temp", "]"}], "]"}], "  ", 
  RowBox[{"(*", "  ", 
   RowBox[{
   "evaluation", " ", "fails", " ", "since", " ", "these", " ", "functions", 
    " ", "are", " ", "not", " ", "listable"}], "  ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "/@", 
  RowBox[{"IdentityMatrix", "/@", "temp", "  ", 
   RowBox[{"(*", "  ", 
    RowBox[{"explicit", " ", "mapping"}], "  ", "*)"}]}]}]}], "Input",
 CellChangeTimes->{{3.3991403020939617`*^9, 3.399140320984708*^9}, {
   3.399141224990494*^9, 3.3991412268811307`*^9}, {3.3994051472821865`*^9, 
   3.3994051576669245`*^9}, {3.3998403070948625`*^9, 
   3.3998403697820187`*^9}, {3.3998404102892456`*^9, 3.399840427477911*^9}, {
   3.39984057966467*^9, 3.3998405950596*^9}, {3.3998435373161416`*^9, 
   3.3998435403888884`*^9}, 3.4057093870171347`*^9, {3.4057095083443127`*^9, 
   3.405709543109848*^9}, {3.429380315409821*^9, 3.429380461083561*^9}, {
   3.4293805067716455`*^9, 3.429380507459154*^9}, {3.4293805474909163`*^9, 
   3.4293805693036957`*^9}, {3.429380640976488*^9, 3.429380744727816*^9}, {
   3.4293807773688593`*^9, 3.4293808790576606`*^9}, {3.4293809294489307`*^9, 
   3.429380965043136*^9}, {3.4293813525793467`*^9, 3.429381419361451*^9}, {
   3.42950066206234*^9, 3.4295006705468235`*^9}, 3.4399358599471226`*^9}],

Cell[BoxData[
 FormBox[
  RowBox[{
   StyleBox[
    RowBox[{"IdentityMatrix", "::", "dims"}], "MessageName"], 
   RowBox[{
   ":", " "}], "\<\"Dimension specification \
\[NoBreak]\\!\\(TraditionalForm\\`\\({1, 2, 3, 4, 5, 6, 7, 8}\\)\\)\[NoBreak] \
should be a positive machine integer or a pair of positive machine integers. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/IdentityMatrix\\\", ButtonNote \
-> \\\"IdentityMatrix::dims\\\"]\\)\"\>"}], TraditionalForm]], "Message", \
"MSG",
 CellChangeTimes->{3.523712726467743*^9, 3.5238994847302437`*^9}],

Cell[BoxData[
 FormBox[
  TagBox[
   RowBox[{"IdentityMatrix", "[", 
    RowBox[{"{", 
     RowBox[{
     "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", 
      "8"}], "}"}], "]"}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]], TraditionalForm]], "Output",
 CellChangeTimes->{3.523712726470525*^9, 3.523899484734025*^9}],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{
    TagBox[
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {"1"}
       },
       GridBoxAlignment->{
        "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
         "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.7]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
     Function[BoxForm`e$, 
      MatrixForm[BoxForm`e$]]], ",", 
    TagBox[
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {"1", "0"},
        {"0", "1"}
       },
       GridBoxAlignment->{
        "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
         "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.7]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
     Function[BoxForm`e$, 
      MatrixForm[BoxForm`e$]]], ",", 
    TagBox[
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {"1", "0", "0"},
        {"0", "1", "0"},
        {"0", "0", "1"}
       },
       GridBoxAlignment->{
        "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
         "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.7]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
     Function[BoxForm`e$, 
      MatrixForm[BoxForm`e$]]], ",", 
    TagBox[
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {"1", "0", "0", "0"},
        {"0", "1", "0", "0"},
        {"0", "0", "1", "0"},
        {"0", "0", "0", "1"}
       },
       GridBoxAlignment->{
        "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
         "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.7]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
     Function[BoxForm`e$, 
      MatrixForm[BoxForm`e$]]], ",", 
    TagBox[
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {"1", "0", "0", "0", "0"},
        {"0", "1", "0", "0", "0"},
        {"0", "0", "1", "0", "0"},
        {"0", "0", "0", "1", "0"},
        {"0", "0", "0", "0", "1"}
       },
       GridBoxAlignment->{
        "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
         "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.7]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
     Function[BoxForm`e$, 
      MatrixForm[BoxForm`e$]]], ",", 
    TagBox[
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {"1", "0", "0", "0", "0", "0"},
        {"0", "1", "0", "0", "0", "0"},
        {"0", "0", "1", "0", "0", "0"},
        {"0", "0", "0", "1", "0", "0"},
        {"0", "0", "0", "0", "1", "0"},
        {"0", "0", "0", "0", "0", "1"}
       },
       GridBoxAlignment->{
        "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
         "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.7]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
     Function[BoxForm`e$, 
      MatrixForm[BoxForm`e$]]], ",", 
    TagBox[
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {"1", "0", "0", "0", "0", "0", "0"},
        {"0", "1", "0", "0", "0", "0", "0"},
        {"0", "0", "1", "0", "0", "0", "0"},
        {"0", "0", "0", "1", "0", "0", "0"},
        {"0", "0", "0", "0", "1", "0", "0"},
        {"0", "0", "0", "0", "0", "1", "0"},
        {"0", "0", "0", "0", "0", "0", "1"}
       },
       GridBoxAlignment->{
        "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
         "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.7]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
     Function[BoxForm`e$, 
      MatrixForm[BoxForm`e$]]], ",", 
    TagBox[
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {"1", "0", "0", "0", "0", "0", "0", "0"},
        {"0", "1", "0", "0", "0", "0", "0", "0"},
        {"0", "0", "1", "0", "0", "0", "0", "0"},
        {"0", "0", "0", "1", "0", "0", "0", "0"},
        {"0", "0", "0", "0", "1", "0", "0", "0"},
        {"0", "0", "0", "0", "0", "1", "0", "0"},
        {"0", "0", "0", "0", "0", "0", "1", "0"},
        {"0", "0", "0", "0", "0", "0", "0", "1"}
       },
       GridBoxAlignment->{
        "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
         "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.7]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
     Function[BoxForm`e$, 
      MatrixForm[BoxForm`e$]]]}], "}"}], TraditionalForm]], "Output",
 CellChangeTimes->{3.523712726470525*^9, 3.523899484740349*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
(#11) Advaced list operations (10 min)\
\>", "Subsubsection",
 CellChangeTimes->{{3.429482042875061*^9, 3.429482059265896*^9}, {
   3.4294821011883073`*^9, 3.429482111391563*^9}, {3.429482150376437*^9, 
   3.4294821612828264`*^9}, {3.4294822129553633`*^9, 
   3.4294822140335016`*^9}, {3.4294823152847977`*^9, 3.429482317175447*^9}, {
   3.4294825858820114`*^9, 3.429482586788273*^9}, {3.4294833530949564`*^9, 
   3.42948335373559*^9}, {3.4295064321205707`*^9, 3.429506432526826*^9}, {
   3.431187042597946*^9, 3.4311870463792686`*^9}, 3.431187471481181*^9, {
   3.5121724986740503`*^9, 3.51217249897045*^9}, {3.5121735640448503`*^9, 
   3.51217356471565*^9}, {3.51217390523245*^9, 3.5121739054352503`*^9}, {
   3.51233693369315*^9, 3.51233693431015*^9}}],

Cell[TextData[{
 "The ",
 StyleBox[ButtonBox["Dot",
  BaseStyle->"Link",
  ButtonData->"paclet://ref/Dot"],
  FontWeight->"Bold"],
 " product is a mathematical tool that we routinely encounter in a wide \
variety of physics problems.  You may remember using the dot product to find \
the work done by a force over a distance.  It can also be used to break a \
vector up into its components.  The ",
 StyleBox[ButtonBox["Cross",
  BaseStyle->"Link",
  ButtonData->"paclet://ref/Cross"],
  FontWeight->"Bold"],
 " product is a way to combine two vectors to get another vector.  You may \
remember using it to compute torque and the direction of propagation of an \
electromagnetic wave.  It can also be used to find a vector normal to the \
plane defined by two other vectors, since a cross product is perpendicular to \
both vectors.\n\n(a) Find the dot product of the two vectors a and b below."
}], "Text",
 CellChangeTimes->{{3.4294734103583164`*^9, 3.4294734163271427`*^9}, {
   3.4294752676633396`*^9, 3.4294752719602695`*^9}, {3.4294755831361275`*^9, 
   3.4294756109646087`*^9}, {3.429475659277727*^9, 3.429475679106106*^9}, {
   3.4294793147932673`*^9, 3.4294794234352827`*^9}, 3.429480720748763*^9, 
   3.4294820179216166`*^9, {3.429482064031582*^9, 3.4294820659222307`*^9}, {
   3.429482129876175*^9, 3.4294821361887555`*^9}, 3.429482199830195*^9, {
   3.4294823235505285`*^9, 3.429482324113036*^9}, {3.429483265187581*^9, 
   3.4294832687032514`*^9}, 3.429483349204282*^9, {3.4294992185751133`*^9, 
   3.429499471828355*^9}, {3.429499526047799*^9, 3.429499620752136*^9}, {
   3.429499684143573*^9, 3.429500041101267*^9}, {3.4295002247286167`*^9, 
   3.4295002270255213`*^9}, {3.4295002936669993`*^9, 3.4295002967920394`*^9}, 
   3.429500727563178*^9, {3.4295049313982363`*^9, 3.4295050013991327`*^9}, {
   3.429506448698908*^9, 3.4295064733710985`*^9}, {3.4311860879077415`*^9, 
   3.4311860886733813`*^9}, {3.4311865937768292`*^9, 3.431186647246606*^9}, {
   3.51217265185045*^9, 3.51217293313405*^9}, {3.51217303628125*^9, 
   3.5121730396820498`*^9}, {3.51217308116245*^9, 3.51217308276925*^9}, {
   3.51217317766405*^9, 3.5121732634952497`*^9}, {3.51217346128765*^9, 
   3.5121734757800503`*^9}, 3.5237127972528267`*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"a", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", 
     RowBox[{"Sqrt", "[", "2", "]"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"b", "=", 
   RowBox[{"{", 
    RowBox[{"3", ",", " ", 
     RowBox[{"-", "1"}], ",", " ", 
     RowBox[{"Sqrt", "[", "2", "]"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"a", ".", "b"}]}], "Input",
 CellChangeTimes->{
  3.429503055202347*^9, 3.4295031160468755`*^9, {3.42950500586794*^9, 
   3.429505020102497*^9}, {3.429505075228203*^9, 3.42950511488496*^9}, 
   3.4305692470778184`*^9, 3.4311865706201344`*^9, {3.51217348208245*^9, 
   3.51217352204965*^9}, 3.51217358379445*^9, {3.523712808412593*^9, 
   3.523712811795191*^9}}],

Cell[BoxData[
 FormBox["4", TraditionalForm]], "Output",
 CellChangeTimes->{3.523712812132504*^9, 3.5238995062696753`*^9}]
}, Open  ]],

Cell["\<\
(b) Use Cross to find the torque (r x F) produced by the force F which has a \
displacement r from the axis of rotation.\
\>", "Text",
 CellChangeTimes->{{3.51217357572925*^9, 3.51217362477565*^9}, {
  3.51217368939085*^9, 3.51217369630165*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"F", "=", 
   RowBox[{"{", 
    RowBox[{"3.2", ",", "1", ",", "0"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"r", "=", 
   RowBox[{"{", 
    RowBox[{"1", ",", " ", "2", ",", " ", 
     RowBox[{"-", "2"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"r", " ", "\[Cross]", " ", "F"}]}], "Input",
 CellChangeTimes->{{3.51217362738085*^9, 3.51217368600565*^9}, {
  3.5237128165962276`*^9, 3.5237128242519913`*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{"2", ",", 
    RowBox[{"-", "6.4`"}], ",", 
    RowBox[{"-", "5.4`"}]}], "}"}], TraditionalForm]], "Output",
 CellChangeTimes->{3.5237128253842916`*^9, 3.523899507739129*^9}]
}, Open  ]],

Cell["\<\
(c) Angular momentum is the cross product of the displacement of an object \
from the origin and its momentum.  Find the angular momentum the object with \
the following displacement r and momentum p.\
\>", "Text",
 CellChangeTimes->{{3.51217370722165*^9, 3.51217379480005*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"r", "=", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3.5"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p", "=", 
   RowBox[{"{", 
    RowBox[{"0.2", ",", "0.5", ",", "0"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"r", " ", "\[Cross]", " ", "p"}]}], "Input",
 CellChangeTimes->{{3.5121737975300503`*^9, 3.51217386521845*^9}, {
  3.523712833365307*^9, 3.5237128496353416`*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"-", "1.75`"}], ",", "0.7000000000000001`", ",", 
    "0.09999999999999998`"}], "}"}], TraditionalForm]], "Output",
 CellChangeTimes->{3.523712850309813*^9, 3.523899509241338*^9}]
}, Open  ]],

Cell[TextData[{
 "(d) It is often useful to switch the rows and columns in a list so that \
operations can be done on selective elements.  The ",
 StyleBox[ButtonBox["Transpose",
  BaseStyle->"Link",
  ButtonData->"paclet://ref/Transpose"],
  FontWeight->"Bold"],
 " function will accomplish this for you by switching the rows and colums of \
the list considered as a table ot matrix.  Consider somedata triplets \
representing the voltage, angular speed, and current in a motor."
}], "Text",
 CellChangeTimes->{{3.5123344454535503`*^9, 3.51233453968575*^9}, {
  3.51233457549955*^9, 3.51233458075835*^9}, {3.5123346162051497`*^9, 
  3.5123347033765497`*^9}, {3.51233488264395*^9, 3.51233489943655*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"data", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1.0", ",", " ", "14.6", ",", " ", "2.7"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"1.5", ",", " ", "15.9", ",", " ", "4.0"}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"2.0", ",", " ", "17.2", ",", " ", "5.9"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"2.5", ",", " ", "19", ",", " ", "7.2"}], "}"}]}], 
   "}"}]}]], "Input",
 CellChangeTimes->{{3.51233462549095*^9, 3.51233462753415*^9}, {
  3.5123347159563503`*^9, 3.51233478517555*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1.`", "14.6`", "2.7`"},
     {"1.5`", "15.9`", "4.`"},
     {"2.`", "17.2`", "5.9`"},
     {"2.5`", "19", "7.2`"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{3.523712869857353*^9, 3.523899519110096*^9}]
}, Open  ]],

Cell["\<\
You could break this list up into sepearte lists of voltage, speed, and \
current as follows.\
\>", "Text",
 CellChangeTimes->{{3.5123347908631496`*^9, 3.5123348404987497`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"{", 
   RowBox[{"voltage", ",", " ", "speed", ",", " ", "current"}], "}"}], " ", 
  "=", " ", 
  RowBox[{
  "Transpose", "[", "data", 
   "]"}]}], "\[IndentingNewLine]", "voltage", "\[IndentingNewLine]", "speed", \
"\[IndentingNewLine]", "current"}], "Input",
 CellChangeTimes->{{3.51233484254915*^9, 3.51233487341535*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1.`", "1.5`", "2.`", "2.5`"},
     {"14.6`", "15.9`", "17.2`", "19"},
     {"2.7`", "4.`", "5.9`", "7.2`"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{3.5237128740841227`*^9}],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{"1.`", ",", "1.5`", ",", "2.`", ",", "2.5`"}], "}"}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{3.523712874086257*^9}],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{"14.6`", ",", "15.9`", ",", "17.2`", ",", "19"}], "}"}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{3.5237128740884943`*^9}],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{"2.7`", ",", "4.`", ",", "5.9`", ",", "7.2`"}], "}"}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{3.523712874090548*^9}]
}, Open  ]],

Cell["\<\
Extract the second element of each sublist in the following list.\
\>", "Text",
 CellChangeTimes->{{3.51233492004635*^9, 3.51233493827435*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"pdata", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "7"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"4", ",", "11"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"5", ",", "15"}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"newList", " ", "=", " ", 
  RowBox[{"pdata", "[", 
   RowBox[{"[", 
    RowBox[{"All", ",", "2"}], "]"}], 
   "]"}]}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.51233494619335*^9, 3.51233496195735*^9}, {
   3.523712895788003*^9, 3.523712905290307*^9}, {3.523712942899095*^9, 
   3.523712945649145*^9}, 3.5237129791221237`*^9, {3.523713029900918*^9, 
   3.5237130508127327`*^9}, {3.5237130875659857`*^9, 3.523713220988824*^9}, {
   3.52371329009195*^9, 3.523713317686112*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{"3", ",", "4", ",", "7", ",", "11", ",", "15"}], "}"}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{{3.5237130929538517`*^9, 3.5237131768394747`*^9}, {
   3.523713211332861*^9, 3.523713221601548*^9}, {3.5237132973025417`*^9, 
   3.52371331807484*^9}, 3.523899559723651*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Applications: statistics (35 min)", "Section",
 CellChangeTimes->{
  3.4275745886459913`*^9, {3.4275746425838366`*^9, 3.427574657490182*^9}, {
   3.4294834828778677`*^9, 3.4294834875341773`*^9}, {3.42950702737819*^9, 
   3.429507027706319*^9}, {3.429508228534189*^9, 3.4295082373624277`*^9}, {
   3.429513527945771*^9, 3.429513530023923*^9}, {3.4311871438498907`*^9, 
   3.4311871453186684`*^9}, {3.431187294805914*^9, 3.431187316212575*^9}, 
   3.433281511642846*^9, {3.4359230459294453`*^9, 3.435923049070485*^9}, 
   3.435923665052042*^9, 3.4359376620511713`*^9, 3.4381063835587034`*^9, 
   3.439669831262545*^9}],

Cell[CellGroupData[{

Cell["\<\
(#12) Statistical distributions (10 min)\
\>", "Subsection",
 CellChangeTimes->{{3.4295069500647*^9, 3.4295069571585407`*^9}, {
  3.429507030987611*^9, 3.429507034237653*^9}, {3.429508863432941*^9, 
  3.429508863901697*^9}, {3.429513590368445*^9, 3.429513590946577*^9}, {
  3.431187083083099*^9, 3.431187084505001*^9}, {3.4311872913683476`*^9, 
  3.4311873031341987`*^9}, {3.51217424721565*^9, 3.5121742477772503`*^9}}],

Cell[TextData[{
 "Statistical methods are common to nearly all types of experimental, \
computational and theoretical physics.  To perform any experiment, for \
example, is to sample a statistical (a.k.a. probability) distribution.  Use a \
stopwatch to measure the time that it takes a friend to run 100 m; flip a \
coin; weigh yourself on the bathroom scale.  When you repeat such a \
measurement, you generally won't get the same result every time because you \
are sampling a distribution that involves some uncertainty (i.e. randomness). \
 Thus, rather than simply measuring a value, the experimentor actually needs \
to characterize a probability distribution function (PDF).  If you collect \
enough samples, the statistical properties of your population of samples \
should approach those of the true PDF.\n\nReview the DC guide page on ",
 StyleBox[ButtonBox["Statistical Distributions",
  BaseStyle->"Link",
  ButtonData->"paclet://guide/StatisticalDistributions"],
  FontWeight->"Bold"],
 ".  Briefly explore the reference pages of several of the continuous and \
discrete PDFs linked there.  Give special attention to the ",
 StyleBox[ButtonBox["NormalDistribution",
  BaseStyle->"Link",
  ButtonData->"paclet://ref/NormalDistribution"],
  FontWeight->"Bold"],
 " and the ",
 StyleBox[ButtonBox["PoissonDistribution",
  BaseStyle->"Link",
  ButtonData->"paclet://ref/PoissonDistribution"],
  FontWeight->"Bold"],
 ".  Observe that each type of distribution is characterized by a unique set \
of parameters.  Also observe that regardless of the parameter values \
selected, most of the PDF\[CloseCurlyQuote]s available in ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " are normalized, which means that they integrate to 1 (i.e. there's a 100% \
chance that each sample will be somewhere in the distribution).\n\nSome of \
the most commonly measured properties of statistical distributions are ",
 StyleBox[ButtonBox["Mean",
  BaseStyle->"Link",
  ButtonData->"paclet://ref/Mean"],
  FontWeight->"Bold"],
 ", ",
 StyleBox[ButtonBox["Variance",
  BaseStyle->"Link",
  ButtonData->"paclet://ref/Variance"],
  FontWeight->"Bold"],
 " and the ",
 StyleBox[ButtonBox["StandardDeviation",
  BaseStyle->"Link",
  ButtonData->"paclet://ref/StandardDeviation"],
  FontWeight->"Bold"],
 ".  The mean is a measure of the weighted center of a distribution, whereas \
the standard deviation is a measure of the width of a distribution.  If you \
need to brush up on these quantities, the browse the DC tutorial on ",
 ButtonBox["Basic Statistics",
  BaseStyle->"Link",
  ButtonData->"paclet://tutorial/BasicStatistics"],
 ".  The ",
 ButtonBox["MathWorld",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://www.mathworld.com"], None}],
 " encyclopedia may also be helpful.\n\nIn the cell below, create a normal \
distribution with \[Mu] = 8 and \[Sigma] = 2, and name it \"ndist\".  \
Determine the ",
 StyleBox["Mean",
  FontWeight->"Bold"],
 ", the ",
 StyleBox["Variance",
  FontWeight->"Bold"],
 " and the ",
 StyleBox["StandardDeviation",
  FontWeight->"Bold"],
 " of this distribution.  Explain the results.  Also ",
 StyleBox[ButtonBox["Plot",
  BaseStyle->"Link",
  ButtonData->"paclet://ref/Plot"],
  FontWeight->"Bold"],
 " the PDF of this distribution over the range from ",
 StyleBox["x",
  FontSlant->"Italic"],
 " = 0 to 16.  Can you visually verify the mean and standard deviation from \
the plot?"
}], "Text",
 CellChangeTimes->{{3.4293869673543396`*^9, 3.429387022698798*^9}, {
   3.4295081780179176`*^9, 3.429508189439939*^9}, {3.4295089114648056`*^9, 
   3.4295089534184675`*^9}, {3.42950909227962*^9, 3.429509137327072*^9}, {
   3.4295092669381056`*^9, 3.429509305204221*^9}, {3.4295093360014896`*^9, 
   3.4295093360014896`*^9}, {3.4295093684706554`*^9, 
   3.4295102983888083`*^9}, {3.4295104643596826`*^9, 3.429510741331978*^9}, {
   3.429510807207821*^9, 3.4295111071491604`*^9}, {3.429511149415326*^9, 
   3.4295111551185246`*^9}, {3.429511221338122*^9, 3.4295112693387365`*^9}, {
   3.4295113054641986`*^9, 3.4295113436990633`*^9}, {3.429511388309009*^9, 
   3.4295113990435214`*^9}, {3.429511463216218*^9, 3.4295115054667587`*^9}, {
   3.429511576670795*^9, 3.429511587061553*^9}, {3.4295116670157013`*^9, 
   3.429511678906479*^9}, {3.4295117595637608`*^9, 3.4295117595637608`*^9}, {
   3.4295121668658495`*^9, 3.4295123567432795`*^9}, {3.429512480135484*^9, 
   3.4295125432769175`*^9}, {3.429512581136777*^9, 3.4295127158103757`*^9}, {
   3.4396696910585227`*^9, 3.4396697101055193`*^9}, {3.439936196558652*^9, 
   3.4399362954655347`*^9}, 3.5224185486443996`*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ndist", " ", "=", " ", 
   RowBox[{"NormalDistribution", "[", 
    RowBox[{"8", ",", "2"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Mean", "[", "ndist", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Variance", "[", "ndist", "]"}], "\[IndentingNewLine]", 
 RowBox[{"StandardDeviation", "[", "ndist", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"PDF", "[", 
    RowBox[{"ndist", ",", "x"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "16"}], "}"}], ",", " ", 
   RowBox[{"Filling", "\[Rule]", "Axis"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.4399361430739346`*^9, 3.4399361434020615`*^9}, {
  3.523713602989954*^9, 3.523713730488265*^9}, {3.523713803314513*^9, 
  3.5237138105512943`*^9}, {3.5237138457205563`*^9, 3.5237138577499638`*^9}, {
  3.523714216587618*^9, 3.523714226038589*^9}}],

Cell[BoxData[
 FormBox["8", TraditionalForm]], "Output",
 CellChangeTimes->{
  3.523713731405362*^9, 3.5237138119178762`*^9, {3.523713850882563*^9, 
   3.5237138582619534`*^9}, 3.523714226809228*^9, 3.5238998924158792`*^9}],

Cell[BoxData[
 FormBox["4", TraditionalForm]], "Output",
 CellChangeTimes->{
  3.523713731405362*^9, 3.5237138119178762`*^9, {3.523713850882563*^9, 
   3.5237138582619534`*^9}, 3.523714226809228*^9, 3.52389989241925*^9}],

Cell[BoxData[
 FormBox["2", TraditionalForm]], "Output",
 CellChangeTimes->{
  3.523713731405362*^9, 3.5237138119178762`*^9, {3.523713850882563*^9, 
   3.5237138582619534`*^9}, 3.523714226809228*^9, 3.523899892421639*^9}],

Cell[BoxData[
 FormBox[
  GraphicsBox[GraphicsComplexBox[CompressedData["
1:eJw1enk0Ve/3vzFCZpnda57vpaSS7G2MDEVkSDJEokSokDFk1ts8FqVkLpSK
kEw3YzIkkpSpiEopU7/7Xev3OX+cs/Zaz9n7PGc/z2tY54g7X7BwpaOhoVGm
nv7veth17nXzfLpWruKP29lxXBDOXCMbKzgI1Wv9e8w0iWBjW1i1/P0zXPI8
/0OtkwSs/8LtD4ktwaHcgJ1H4QBIm3+bexm/Aue2igKz9Q/B5d79kLXyFyad
lCJdNC2Bv5Zrgpb2HxjyaJ1si3aEx1O63X2adGi/2Pa51sYTWjzyhW0XGJCD
xo927yt/+CVzkKPiPBNKJ39jqDwTBnR/yziFpVmQLJ8WtTgRA+r/HB8fq2TD
py8t/EQn/oPuSLXedgUOFOFg8redzALCja9/S75xomN5dtaQZSF8Xf0wMaTC
jVtz/c6xjMVQ9KX+FXsSDw7TNwU7+VUCu2jx0ufPvGhlyqh1JqgGEs4+ciuQ
2omu9Q2pDrN18BvLPruH8uNboZ0/q5meg9+u1tqdLwXQmLVcZXGlGT5Utsa/
FhfCPtWp63ciXsK6x2CufKAwxmkZDk63tIGiNtOWW70IxtF2Fe4I7oBDt8XP
POQXQ1OjHCWB151wWfSUxEd7Atan/2RI8aWA0oIV64gpEQueCTSe9acAD8cy
c+saER8a0muodHQCQ1NulWSeOGrfFqtviO8AT7X60e3GEhjfnby7t6QNyoyc
Cxp/S2A1wVhB9cxL+PVViHMmQxLJf5xcP3G9gEfHDtGn6Umhi77mUtlMA4Qa
Rt2qnZHCtW/HTr0VegLi7w+/vRMljfOZGj9ZHtaAxt7INMFdMrjD5sUe+vZK
sBfr+0v7RgZ/FzeoGA8Ww69XiVPe4bKop35HSeBGIWQxOPhZSMnhZxcdl6/1
2cAz8eg2Xascii4rsatGpABjcLjlfh95FFLYJ6GtEgs0JQ5VU9wK+Pv6XK6U
ZDhczKlK5G5RwAfHJTToVvzhuWIMM5eXIk4vnlM6lOQJXIcvKkWwK+Hr6xum
xq5OMK7c/yagQQkNxCyOdydYwoObIPXZQRmn/u1utg0xhJNV6lyiW8rYd9DQ
ZalDE8KiCsPHS0l4S65j/6YvGSrmRHPZTcj4Yk5MS8pHHDIJrL/+/SPj//ZD
Ad+R6DjBVnCiZzZLXeaHrPeBuo+2JsA4U/1v8wUZ2FXOtU2E+QvIHXecZItX
A6v7mV2+O35AsA5PpOy4NvRy8PKScBXWm+5PlHSbwaEXd9l7AjfA9NKBBPvv
tuDkcO/k/QkaLOxf1th93BUa7i37pqXRY+3+t4NOFj4wbniej155G9JbtGz8
fh0IG8krHKcpzHiFrv3vXf1IELka7VJ3lhXPuRwx+DqbCLQth3USF3bgytaF
2BDpdNCZj3iwTYcTjT13W4pcyQfGVteFpmQuDLNZbPXYXgSG33ssL37gRg8p
pf27UkthMaE7dbNHCK2aFjdSK1qBZ3jRpFNIBE23ERjSK9rhqU/aroSzophg
67oidqATPpxq1jN6JoYZPJmlRHUKzAVG5R3aIGCUNo+PTgwFCjYl4kyLiLih
y/+vTI0CbLP6477G4ujQvW5bodEJTwLKWjN+iqMLtPd+KG0H1ib2g58LJDD5
tsoDutRW6CqV70iMkMFpppW+QfkyuO9H8tqvIIv3DfNALqYI2mf9yz4OyOLE
tAkbQf4mHP8eG6/gJ4cU3G/D/DkdEipy1/OF5HHm7kQD290koONZpmVvkUf/
CBUVx5FIeCp+/WaghwKO/KBT+XU9CAQ+CXdxCSiipLMY37qvD8xqBOcYNSqi
dRuzruhvV/h9QJwmxFUJD7uZiE0M2YHBDNNG5Q5lJFMYy7YNHoFtsvU5YZXK
uIebdbx1UAe8hM5RrlqS8HCiO6HPdg/srDuV5L9OwiucPnO1IbIgEclryHSP
jMeMLoeJDwnAe/J13UTBWtj1hPnWzgheYPuZsYeQMArPLS9wuAtJQlvEqN22
4Fm45iAdfq9LFRaPLTQY9y7D5m2mX6n7AAJVwrf+TP8CVdrQ82Ndh+FDx9K9
6r3rEN+86w7x23FQz7O+l0amwZXfp17ldjnDUz0hYvUcHS7L01VF9HpBn22U
QGUCI6pM5pWfV70CV8aykmOEmbGyuEujFiMgWUNQ42wHC35opmXYbxwPeZNW
V71Nd2DE+YzGz76pcF8xn99jhAMj7R/PhQnmAnep3E814ELejxlVuvduQ87K
sKBUDDeSnzL87X1xH2byO5NnLwvhQmO4VJBQK1wnOq1ceSWMfJtBtmcOtMPF
UdOsAG5RRCu25xOTHcBD+91q010MmSSO+PkzU0DF5OKptHICDgQZlI5GUGDG
r+EwdwARH6yZ2TXaUYBzPeeHsKQ4Jmx70eke1QkOeZIa7zvE0fWbR14hoQPq
/55mXfWXwPTMB/H24m1A93244pidDB6xfRS9f6kcIihbNflbMrgkfyKmWPIe
OIzSHpIvlcWItsKSKKMCWF37GaplIocLPJjyuDkT+tvkjhxdksNOy/r01Xc3
gKFzX9mdbHnkqT64wvYtGuynf9yr1FLAjcIdUTubQqCt0VWJe1EB49hzyz0y
fcGiJsJcOUMRU5k72i/edAeGl0Y7aTSU8OXb6kyDdAfgYlk4wzuthHKZfwSU
BC1gzDn4VHW0MgbSGZRKh+jDzGnzRRN5Egp9tqi827cPjG/SMMu/ISGtdItR
upoiuKtnf2cJIGOkqaHgor8omKe+8zCT6QXvqtUolllh4D5ddf/uvimYrGYU
6DZVgJtDRg9VUxcg5ebmWkDFXni+ofMu1+QntJXL+3Cd0QOJpXvyLjl/YPpc
WcWuMnOoenbi0uzzTRA9UCetZXYSEoi/eBsSafF9vv8OH2V3aGLu6LiEDOhX
djdl1scX5vZacdv0bMOnDI23JquCIVTv6A24vB09TWxPugdEQ8nznwmMbGz4
QHO58OmJG+B2B5hL49nx54fC0r8/M+BWfOBdfk8RLCnnyf0p0AE0LGPdN5tF
kW5nF/vx+E4oa0zenc5KwP6Wr0qfbCnQb9l9blOaiBX+ipzt1yhgFx1Liekj
ooVC/xk3egowv1lu6/IVR6s742qWsx1A/j3PkbMui30uyi8efMyF2llC5s48
ObyYJ4+TUmlgmM5+/6u+PDrV5bf19sYDrUOxzZUv8pjw4kbMu/kI2OkgnGGQ
oYBdm1+KTuVeAQ+mgbNcuor4Y2vRMYXlAlxtufzJdUYRzcg2AjHJLjBf+2d+
/YYSPhk+ESMfbg1BLZI3jNSVsaxK7anHd2PY9fXPkNmwMiaWhH06HYCw2hd9
tzyUhIvF77fLWe+Cqb5G3hZJMp77yphsrSMF46+Tb9K/IaOaxa3fxM+8YH16
9XmKYBEIpbV88v3DDe2bRaTBgWFYsyx66Z8vDuxeB6OC9s7AFp1IQkKiCjwt
yXhUR1qGKvrZMXalg9DfXOc7se8XJKZVM+isGYJiF6+vdMYajL3zvpMUbwU6
lxzT+R5Q9Z6iN/dUgRM84SH/bk6hw3Su5RPszOfB0Jkr55omI769OXJ69vcl
UKf17MtpZUKuulXnj2bh0JntLK1ziQXrY+29lTniYP7CCcGpTTaksOwRyLqb
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
1/8v/n9WzqHa
    "], {{{}, 
      {Hue[0.67, 0.6, 0.6], Opacity[0.2], EdgeForm[None], 
       GraphicsGroupBox[PolygonBox[CompressedData["
1:eJwl1WWcFVUYwOFl6ZZOgaVbSqTEABRFGqRBke6WULpDBaW7W1JQ6RCkUUJB
WrqlpASfAx+e33n/Z+buvTszdzeqcftq7SIjIiKikS/y5Zo38uVcyJzHut5m
FmtN62rSmR84VtG8hGR6ur5AKT2ZSHt19B0+0AtIbK+v3sGr+gv+pqCexnlK
6klEc25t/Q/l9XwS2eujfyG97sU5Cuip/E0JPTH8Es6tZbnN+3oeCe311ttJ
p3tyltf0FM5RXE/gOR/rW7xnnksCr/9SbyOt7sEZ8uvJnKWYHs8zauov2Eoa
3Z3T5NOTOMMbehz/UUP3Ygup9eecIq+eyGmK6rE8pbruyWZS6W6cJI+ewCle
19/xhGq6B5tIqbtygtx6PCcpor/lMVV1dzaSQnfhL3LpcZygsB7DI6roz9lA
ct2Z4+TUY/mLQno0D6msu7GeZLoTx8ihv+M4BfU3/Esl3ZV1JNUd+ZPs+luO
UUB/zQMq6i78TBLdgT/Ipj+iMz/xir32HCWrrkAnfiSxvXYcCd8BnZkoMpGR
DHxIR9aSyHltOcyr4dmnA2tIaK8Nh0ivx/Anr+mvuE953Z4fSKBb83v4zun7
4XObF5PUszha/0F+PYp7vK9vUs48h/jOa6crm78nhV6t45tb8RtpdQ3rqjA7
fi/87uaM5grWRSQxfxOupTnKXDVcd+tyayrrUcdyWteE3zv8/QjX0jrSepf3
HM+t15kzW6uF+2xdYU1tveF4LutancFaNtwn62xrPGvbcK/MmcyVrEtJbl4V
rlW4nuZ41pYcJI396taVYXbsbrhP5oW8or/WVczLSKmP6LzmEdyhnL5OGfMs
4jqnjV5JXN2CA+Gz6684TB49nH8oq6/xrnkmcby+tV5BHN2c/eHa6VEcCtdH
D+M2ZXQrlhNbN2Nf+KzhZ9KSZcSy15S94d6G7134LoXvR3jmw7PNO7Tge2I6
rwl7SKzfpjlLiWHvM3aTSL9FM5YQ3V5jdpFQj+T3cM/0UG5RWjdlMZH6U34l
gR7Bb+EZ0UO4yZu6CYuIpj9hZ3hm9XAOkkMP5gal9GcsjIh48Y+qETvC8yGH
cYDsehDXKakbs4DnNLT3S7iX5qHsJ5seyDVK6E+ZzzMa2Nse7p15CPvIqgdw
leL6E+bxH/XtbSO2eTB7yaL7c4ViuhFzeUo9e1uJZR7EHjLrflzmDX013D/z
jPBzPUMN9RyeUNfeFmKaB7KbKN2XSxTVV8I9Nk8P7+P1DfRsHlPH3mZimAew
i0y6Dxd5XV8Oz4F5Wngfr6+vZ/GI2vY2Ed3cn1/JqHtzgSL6EqXNU8P7eH09
PZOH1LK3MdqLf9UR/dhJBv0l5ymsL/KmeUp4HyfW1TP4l4/tbeB/ZNMGWw==

         "]]]}, {}, {}}, {{}, {}, 
      {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJwl1mW4VFUYgNGLgDQIKN2tSDdSUtISCijdIQIS0lLSoXSHdEkK0t3dSEpI
g4SUAuLajz8W+3v3nGGGmX3uJW3jdtXbRoqIiMj6VkREWDf5oybPzTP5ksge
m2qvKDd0Hv4w9yIVe3RfXBaxWdfihfkn6hDFA9PsFeOmzst183ekZq/uF16H
Lbo2f5tnUZeonj/dXnFu6XzcMPcmDft0//A6bNVf8I95NvV42/Nn2CvBbZ2f
m+Y+pGW//j68Dtv0l7w0z6E+0Tx/pr2PuaMLcMvcl3Qc0APC67Bd1+GVeS4N
KMhte/1Iz0E9MPy97NB1eW2eR0MKccdefzJwSA8iOjt1Pf41z6cRhblr73sy
clgPJga7dH3emBfQmI+4Z28AmTiihxCT3bpBOAgstDShCPf1QDJzVA8lFnt0
QyKxSDelKH/qQWThmB5GbPbqRrzFYt2MYjzQg3mf43o4cdinGxOZJbo5xYnL
fntNiMLPugUliMcBe02JylLdko95h/gkICHv8h4HXdeMt1mmW1GSRByy15xo
LNetKcVDPYQPOKFHkJjDugXRWaG/Ct+dM/STLsldXZpH5qFk5aQeSRKO6JbE
YKVuE75Lz5+lS3FPl+GxeRgfciq8V9csM1flh/Bv1QvNFfhLJ9UrzTVIqo9a
WxGTFB5bbV0VPhPzz+Yq4f4yr7N+Hc6HeXY4Y9bS4d63/hq+M+v98N6tK8IZ
sVYP94Z1Q/h8rGU9/pd5eDjTOps1pXVNOCPW0+Gzsy4PZ9JaLdyb1vXWH8N3
Zl5krhh+ZpjXWp/YT2ZeZf6MZPqYtTWx+CV8tx5fav6UtuHM6jnmMvypP+GJ
eQTZOaNHhfPhusW6Ek91co6bvyI2q3U7yvFUjyQHv+nRpOCEbkMc1uj2lCcl
J8NnSlx+1d9QgVSkJg1pSUd6ToX3TzzW6g5UJAOn7bXjHdbpjlQiI2fstSc+
63UnKvMsnBFyclaPIRO/6W9IwAbdmSo8D98DuTinx5KZs7oDCdmov+VTXuhR
5Oa8HkcWzumOvMsm3YWq/K1Hk4cLejzvc1534j02665U4x89hrxc1BP4gAu6
M4nYortRnZd6LPm4pCeSlYv6WxKzVXenBq/0OPLzu57Eh1zSXUjCNt2Dz3it
x1OAy3oy2fhddw33G9t1Tz7nXz2BglzRU8jOZd0tnGV26F7Edhbn6rI80DV5
Y55IIa7qqeTgiu5Ocnbq74jj+fP0JzzUtQi/rCfpwlyT08jJVd0j/Dxgl+5N
XNfO1+V4pGsTyd5k/RF/6Onk4pruGe5tdus+xHPtAl2ex/qL8PL2pugiXNcz
SGhvia7Ms3DP6V/Mn5PevDHS//9Pye2x/wBKOAX6
        "]]}}}],
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->True,
   AxesOrigin->{0, 0},
   Method->{"AxesInFront" -> True},
   PlotRange->{{0, 16}, {0., 0.19947110239004023`}},
   PlotRangeClipping->True,
   PlotRangePadding->{
     Scaled[0.02], 
     Scaled[0.02]}], TraditionalForm]], "Output",
 CellChangeTimes->{
  3.523713731405362*^9, 3.5237138119178762`*^9, {3.523713850882563*^9, 
   3.5237138582619534`*^9}, 3.523714226809228*^9, 3.523899892482321*^9}]
}, Open  ]],

Cell[TextData[{
 " \nIn the cell below, create a Poisson distribution with \[Mu] = 5 and name \
it ",
 StyleBox["pdist",
  FontSlant->"Italic"],
 ".  Determine the ",
 StyleBox["Mean",
  FontWeight->"Bold"],
 ", the ",
 StyleBox["Variance",
  FontWeight->"Bold"],
 " and the ",
 StyleBox["StandardDeviation",
  FontWeight->"Bold"],
 " of this distribution.  Explain the results.  Also create a PDF based on \
this distribution and ",
 StyleBox[ButtonBox["ListPlot",
  BaseStyle->"Link",
  ButtonData->"paclet://ref/ListPlot"],
  FontWeight->"Bold"],
 " it over the range from 0 to 20.  Can you visually verify the mean and \
standard deviation from the plot?"
}], "Text",
 CellChangeTimes->{{3.429511619327591*^9, 3.429511638468461*^9}, {
  3.4295116845003004`*^9, 3.4295117357509565`*^9}, {3.4295117959392266`*^9, 
  3.429511796361107*^9}, {3.429512041973626*^9, 3.4295120426611347`*^9}, {
  3.4295127266230145`*^9, 3.429512743185726*^9}, {3.4396697356681833`*^9, 
  3.4396697483713894`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"pdist", " ", "=", " ", 
   RowBox[{"PoissonDistribution", "[", "5", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Mean", "[", "pdist", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Variance", "[", "pdist", "]"}], "\[IndentingNewLine]", 
 RowBox[{"StandardDeviation", "[", "pdist", "]"}], "\[IndentingNewLine]", 
 RowBox[{"DiscretePlot", "[", 
  RowBox[{
   RowBox[{"PDF", "[", 
    RowBox[{"pdist", ",", "x"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "20"}], "}"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"PDF", "[", 
        RowBox[{"pdist", ",", "x"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "20"}], "}"}]}], "]"}], ",", " ", 
   RowBox[{"Filling", "\[Rule]", "Axis"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.439936478941098*^9, 3.4399364793786793`*^9}, {
  3.523713876237146*^9, 3.523713993183786*^9}, {3.52389964104277*^9, 
  3.523899689999384*^9}, {3.523899742895447*^9, 3.523899799950857*^9}}],

Cell[BoxData[
 FormBox["5", TraditionalForm]], "Output",
 CellChangeTimes->{{3.523713966422287*^9, 3.5237139936510878`*^9}, 
   3.523899657518454*^9, 3.523899690374633*^9, {3.523899791874506*^9, 
   3.523899800397602*^9}}],

Cell[BoxData[
 FormBox["5", TraditionalForm]], "Output",
 CellChangeTimes->{{3.523713966422287*^9, 3.5237139936510878`*^9}, 
   3.523899657518454*^9, 3.523899690374633*^9, {3.523899791874506*^9, 
   3.5238998004003468`*^9}}],

Cell[BoxData[
 FormBox[
  SqrtBox["5"], TraditionalForm]], "Output",
 CellChangeTimes->{{3.523713966422287*^9, 3.5237139936510878`*^9}, 
   3.523899657518454*^9, 3.523899690374633*^9, {3.523899791874506*^9, 
   3.5238998004024963`*^9}}],

Cell[BoxData[
 FormBox[
  GraphicsBox[{
    {RGBColor[0.24720000000000014`, 0.24, 0.6], {
      {Opacity[0.2], LineBox[{},
        VertexColors->None]}, 
      {Opacity[0.2], 
       LineBox[{{{0., 0.006737946999085467}, {0., 0}}, {{1., 
          0.03368973499542734}, {1., 0}}, {{2., 0.08422433748856833}, {
          2., 0}}, {{3., 0.14037389581428056`}, {3., 0}}, {{4., 
          0.1754673697678507}, {4., 0}}, {{5., 0.1754673697678507}, {
          5., 0}}, {{6., 0.1462228081398756}, {6., 0}}, {{7., 
          0.10444486295705399`}, {7., 0}}, {{8., 0.06527803934815875}, {
          8., 0}}, {{9., 0.03626557741564375}, {9., 0}}, {{10., 
          0.018132788707821874`}, {10., 0}}, {{11., 0.00824217668537358}, {
          11., 0}}, {{12., 0.0034342402855723243`}, {12., 0}}, {{13., 
          0.001320861648297048}, {13., 0}}, {{14., 0.0004717363029632314}, {
          14., 0}}, {{15., 0.00015724543432107713`}, {15., 0}}, {{16., 
          0.0000491391982253366}, {16., 0}}, {{17., 
          0.000014452705360393117`}, {17., 0}}, {{18., 
          4.014640377886977*^-6}, {18., 0}}, {{19., 
          1.0564843099702573`*^-6}, {19., 0}}, {{20., 
          2.641210774925643*^-7}, {20., 0}}},
        VertexColors->None]}}}, 
    {RGBColor[0.24720000000000014`, 0.24, 0.6], {}, PointBox[CompressedData["
1:eJxTTMoPSmViYGAQBWIQDQNlwbwP7GdW20N4H+y1QjjeHLdfCOUzOJhkcj3f
2b8VyudwCGO6N/Xo94NQvoDDm6bQ39tKj0H5Imh8CQept4UXc7cfgvJlHPIO
LGJ7tmcXlK/g4LpD9Qj/tg1QvpLDItaPN9MmLoLyVaD8SVC+moM8a52V28MG
KF/DoYPj0jZ5pRwoX8vBSco+VWJJKJSv49CkGvUv+5UdlK/nsObws3/uc1Sg
fAOH6SUL/kUe5oTyDR0OyItvtvF/ZwfhGzlkN2//uP7aBSjf2OGHW/eJCTs3
QvkmUP5EOwBnW16U
      "]], {}}},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->True,
   AxesOrigin->{0, 0},
   Method->{"MessagesHead" -> DiscretePlot},
   PlotRange->{{0, 20}, {0, 0.1754673697678507}},
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {
      Scaled[0.02], 
      Scaled[0.02]}}], TraditionalForm]], "Output",
 CellChangeTimes->{{3.523713966422287*^9, 3.5237139936510878`*^9}, 
   3.523899657518454*^9, 3.523899690374633*^9, {3.523899791874506*^9, 
   3.5238998004095984`*^9}}],

Cell[BoxData[
 FormBox[
  GraphicsBox[GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGCwB2IQDQNlwbwP7GdW20N4H+y1QjjeHLdfCOUzOJhkcj3f
2b8VyudwCGO6N/Xo94NQvoDDm6bQ39tKj0H5Imh8CQept4UXc7cfgvJlHPIO
LGJ7tmcXlK/g4LpD9Qj/tg1QvpLDItaPN9MmLoLyVaD8SVC+moM8a52V28MG
KF/DoYPj0jZ5pRwoX8vBSco+VWJJKJSv49CkGvUv+5UdlK/nsObws3/uc1Sg
fAOH6SUL/kUe5oTyDR0OyItvtvF/ZwfhGzlkN2//uP7aBSjf2OGHW/eJCTs3
QvkmUP5EOwas4IM9moADKpcDjS+AxhdB40ug8WXQ+ApofCU0vgoaXw2Nr4HG
10Lj66Dx9dD4Bmh8QzS+ERrfGI1vgsYfTZ/USp8AA3HEEA==
    "], {{{}, {}, {}, {}, 
      {Hue[0.67, 0.6, 0.6], Opacity[0.2], LineBox[{22, 1}], LineBox[{23, 2}], 
       LineBox[{24, 3}], LineBox[{25, 4}], LineBox[{26, 5}], LineBox[{27, 6}],
        LineBox[{28, 7}], LineBox[{29, 8}], LineBox[{30, 9}], 
       LineBox[{31, 10}], LineBox[{32, 11}], LineBox[{33, 12}], 
       LineBox[{34, 13}], LineBox[{35, 14}], LineBox[{36, 15}], 
       LineBox[{37, 16}], LineBox[{38, 17}], LineBox[{39, 18}], 
       LineBox[{40, 19}], LineBox[{41, 20}], LineBox[{42, 21}]}}, {{}, 
      {Hue[0.67, 0.6, 0.6], 
       PointBox[{43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 
        58, 59, 60, 61, 62, 63}]}, {}}}],
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->True,
   AxesOrigin->{0, 0},
   PlotRange->{{0., 20.}, {0., 0.1754673697678507}},
   PlotRangeClipping->True,
   PlotRangePadding->{
     Scaled[0.02], 
     Scaled[0.02]}], TraditionalForm]], "Output",
 CellChangeTimes->{{3.523713966422287*^9, 3.5237139936510878`*^9}, 
   3.523899657518454*^9, 3.523899690374633*^9, {3.523899791874506*^9, 
   3.523899800416254*^9}}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["(#13) Random numbers and statistical sampling (15 min)", "Subsection",
 CellChangeTimes->{{3.429506930814454*^9, 3.4295069410958357`*^9}, 
   3.429506985908909*^9, {3.4295070184093246`*^9, 3.4295070239250207`*^9}, {
   3.429508860807907*^9, 3.4295088612610383`*^9}, {3.4311870868175454`*^9, 
   3.431187088708207*^9}, {3.431187279821251*^9, 3.4311873015404177`*^9}, {
   3.439936623717964*^9, 3.439936630703635*^9}, {3.51217424972725*^9, 
   3.51217425000805*^9}}],

Cell[TextData[{
 "It is frequently helpful in both experimental and computational physics to \
simulate random processes.  For example, you might compare actual data you \
measure with data generated random variations on some of the parameters.  You \
could also use random distributions to see how various random variations in \
your experimental arrangment give different signals.  In computational \
physics, one often is interested in seeing what the collective properties of \
a system of random particles or distributions gives under various constraints \
and conditions.\n\nBrowse the basic examples for the first two functions \
listed there, ",
 StyleBox[ButtonBox["RandomInteger",
  BaseStyle->"Link",
  ButtonData->"paclet://ref/RandomInteger"],
  FontWeight->"Bold"],
 " (discrete) and ",
 StyleBox[ButtonBox["RandomReal",
  BaseStyle->"Link",
  ButtonData->"paclet://ref/RandomReal"],
  FontWeight->"Bold"],
 " (continuous), both of which sample uniform distibutions (i.e. all values \
in the specified range are equally probable).  These DC reference pages also \
have links to several technical tutorials that may be helpful in the future.\n\
\n(a) In the cell below,  generate a list of 20 pseudorandom integers in the \
range from -5 to +5, and also generate a list of 20 pseudorandom real numbers \
in the range from -0.5 to +0.5."
}], "Text",
 CellChangeTimes->{{3.4293869673543396`*^9, 3.429387022698798*^9}, 
   3.429508173642862*^9, {3.4295083679734745`*^9, 3.4295083756298223`*^9}, {
   3.4295084340055695`*^9, 3.4295087616660137`*^9}, {3.429508965840502*^9, 
   3.4295090467477875`*^9}, {3.4295103291235766`*^9, 3.429510461250268*^9}, {
   3.439936645784559*^9, 3.4399366697421293`*^9}, {3.5121740354612503`*^9, 
   3.5121742304612503`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"RandomInteger", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "5"}], ",", "5"}], "}"}], ",", "20"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"RandomReal", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.5"}], ",", "0.5"}], "}"}], ",", "20"}], "]"}]}], "Input",
 CellChangeTimes->{
  3.42950696529927*^9, {3.429508785588195*^9, 3.4295088201980124`*^9}, {
   3.523714128637532*^9, 3.523714157683568*^9}, {3.523714194485134*^9, 
   3.5237141945370293`*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"-", "4"}], ",", 
    RowBox[{"-", "3"}], ",", "2", ",", 
    RowBox[{"-", "3"}], ",", 
    RowBox[{"-", "2"}], ",", 
    RowBox[{"-", "3"}], ",", "4", ",", 
    RowBox[{"-", "4"}], ",", 
    RowBox[{"-", "2"}], ",", "2", ",", 
    RowBox[{"-", "2"}], ",", 
    RowBox[{"-", "1"}], ",", 
    RowBox[{"-", "4"}], ",", "1", ",", 
    RowBox[{"-", "5"}], ",", "3", ",", "5", ",", 
    RowBox[{"-", "1"}], ",", "4", ",", "0"}], "}"}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{{3.52371414183666*^9, 3.523714158068664*^9}, 
   3.5237141951060343`*^9}],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{"0.14229562042496036`", ",", "0.07872630493442823`", ",", 
    RowBox[{"-", "0.1681602259890147`"}], ",", 
    RowBox[{"-", "0.4087499209400167`"}], ",", "0.3195921478377113`", ",", 
    RowBox[{"-", "0.40705741509418214`"}], ",", "0.11059953714653181`", ",", 
    RowBox[{"-", "0.26082669629594`"}], ",", "0.3771629399244243`", ",", 
    "0.24788344962963293`", ",", 
    RowBox[{"-", "0.0050524108649194766`"}], ",", 
    RowBox[{"-", "0.058399531860900966`"}], ",", "0.06761960304009906`", ",", 
    RowBox[{"-", "0.39680092914720944`"}], ",", 
    RowBox[{"-", "0.04162034292436512`"}], ",", 
    RowBox[{"-", "0.17532527460059644`"}], ",", "0.04637391762477616`", ",", 
    RowBox[{"-", "0.19828608829492822`"}], ",", "0.33701399680745503`", ",", 
    RowBox[{"-", "0.14258012693040456`"}]}], "}"}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{{3.52371414183666*^9, 3.523714158068664*^9}, 
   3.5237141951097107`*^9}]
}, Open  ]],

Cell[TextData[{
 "\n(b) In the cell below, generate a population of 5000 samples from the \
normal ",
 StyleBox["ndist ",
  FontSlant->"Italic"],
 "distribution defined in previous exercise (use a semicolon to suppress the \
output) and name the result ",
 StyleBox["nsample",
  FontSlant->"Italic"],
 ".  Compute floating-point values for both the ",
 StyleBox["Mean",
  FontWeight->"Bold"],
 " and the ",
 StyleBox["StandardDeviation",
  FontWeight->"Bold"],
 " of ",
 StyleBox["nsample",
  FontSlant->"Italic"],
 ", and also plot its ",
 StyleBox[ButtonBox["Histogram",
  BaseStyle->"Link",
  ButtonData->"paclet://Histograms/ref/Histogram"],
  FontWeight->"Bold"],
 ".  Note that for our version of ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " (8.0), Histogram is part of the ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " kernel.  Therefore, the line Needs[\"Histograms`\"] which appears in the \
first Basic Example is no longer needed."
}], "Text",
 CellChangeTimes->{{3.4293869673543396`*^9, 3.429387022698798*^9}, {
   3.4295082036276207`*^9, 3.4295082072839174`*^9}, {3.42951282549928*^9, 
   3.4295128449995294`*^9}, {3.429513007110979*^9, 3.4295132207074633`*^9}, {
   3.4295132794738407`*^9, 3.429513293333393*^9}, {3.429513846934229*^9, 
   3.429513852699928*^9}, {3.4311871033334875`*^9, 3.43118710502102*^9}, {
   3.4399365664417105`*^9, 3.4399366164353623`*^9}, {3.4399366672104096`*^9, 
   3.4399367767431817`*^9}, {3.4399368327631087`*^9, 
   3.4399369468343687`*^9}, {3.4399370841867905`*^9, 3.439937098577784*^9}, {
   3.4399371286098027`*^9, 3.439937131906762*^9}, {3.4408803805514684`*^9, 
   3.4408803816452255`*^9}, 3.4918185871298*^9, {3.523714328180497*^9, 
   3.523714328222073*^9}, {3.5238999443461647`*^9, 3.5238999451506166`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{" ", 
  RowBox[{
   RowBox[{
    RowBox[{"nsample", " ", "=", " ", 
     RowBox[{"RandomVariate", "[", 
      RowBox[{"ndist", ",", "5000"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"Mean", "[", "nsample", "]"}], "\[IndentingNewLine]", 
   RowBox[{"StandardDeviation", "[", "nsample", "]"}], "\[IndentingNewLine]", 
   RowBox[{"Show", "[", 
    RowBox[{
     RowBox[{"Histogram", "[", 
      RowBox[{"nsample", ",", "20", ",", "\"\<PDF\>\""}], "]"}], ",", 
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{"PDF", "[", 
        RowBox[{"ndist", ",", "x"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "0", ",", "16"}], "}"}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", "Thick"}]}], "]"}]}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{
  3.429507046472184*^9, {3.4295128873281965`*^9, 3.429512916875449*^9}, {
   3.4295129907045193`*^9, 3.429513000439019*^9}, {3.4295134516010437`*^9, 
   3.429513457804248*^9}, 3.4295138709501615`*^9, {3.523714280071374*^9, 
   3.5237144934832172`*^9}, {3.5238998809647703`*^9, 3.5238998854189377`*^9}}],

Cell[BoxData[
 FormBox["8.06834653305173`", TraditionalForm]], "Output",
 CellChangeTimes->{
  3.523714392894847*^9, {3.523714452502719*^9, 3.52371449512792*^9}, {
   3.523899882178308*^9, 3.523899886057413*^9}, 3.523899933680873*^9}],

Cell[BoxData[
 FormBox["2.003677214742623`", TraditionalForm]], "Output",
 CellChangeTimes->{
  3.523714392894847*^9, {3.523714452502719*^9, 3.52371449512792*^9}, {
   3.523899882178308*^9, 3.523899886057413*^9}, 3.5238999337220573`*^9}],

Cell[BoxData[
 FormBox[
  GraphicsBox[{
    {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
     EdgeForm[Opacity[0.7]], {}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{-1., 0.}, {0., 0.0002}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{20.500000000000004`, 40.970828331332534`}, {
           94.24566345326333, 95.43368479858943}}],
         StatusArea[#, 0.0002]& ,
         TagBoxNote->"0.0002"],
        StyleBox["0.0002`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.0002, {
          GrayLevel[0]}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{0., 0.}, {1., 0.0004}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{39.970828331332534`, 60.44165666266507}, {
           94.05764210793726, 95.43368479858943}}],
         StatusArea[#, 0.0004]& ,
         TagBoxNote->"0.0004"],
        StyleBox["0.0004`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.0004, {
          GrayLevel[0]}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{1., 0.}, {2., 0.001}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{59.44165666266507, 79.9124849939976}, {
           93.49357807195899, 95.43368479858943}}],
         StatusArea[#, 0.001]& ,
         TagBoxNote->"0.001"],
        StyleBox["0.001`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.001, {
          GrayLevel[0]}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{2., 0.}, {3., 0.0032}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{78.9124849939976, 99.38331332533014}, {
           91.42534327337205, 95.43368479858943}}],
         StatusArea[#, 0.0032]& ,
         TagBoxNote->"0.0032"],
        StyleBox["0.0032`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.0032, {
          GrayLevel[0]}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{3., 0.}, {4., 0.0164}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{98.38331332533014, 118.85414165666265`}, {
           79.01593448185038, 95.43368479858943}}],
         StatusArea[#, 0.0164]& ,
         TagBoxNote->"0.0164"],
        StyleBox["0.0164`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.0164, {
          GrayLevel[0]}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{4., 0.}, {5., 0.0424}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{117.85414165666265`, 138.3249699879952}, {
           54.57315958945921, 95.43368479858943}}],
         StatusArea[#, 0.0424]& ,
         TagBoxNote->"0.0424"],
        StyleBox["0.0424`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.0424, {
          GrayLevel[0]}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{5., 0.}, {6., 0.082}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{137.3249699879952, 157.79579831932773`}, {
           17.344933214894198`, 95.43368479858943}}],
         StatusArea[#, 0.082]& ,
         TagBoxNote->"0.082"],
        StyleBox["0.082`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.082, {
          GrayLevel[0]}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{6., 0.}, {7., 0.1566}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{156.79579831932773`, 
           177.26662665066024`}, {-52.78702859173585, 95.43368479858943}}],
         StatusArea[#, 0.1566]& ,
         TagBoxNote->"0.1566"],
        StyleBox["0.1566`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.1566, {
          GrayLevel[0]}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{7., 0.}, {8., 0.1822}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{176.26662665066024`, 
           196.73745498199278`}, {-76.85376079347485, 95.43368479858943}}],
         StatusArea[#, 0.1822]& ,
         TagBoxNote->"0.1822"],
        StyleBox["0.1822`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.1822, {
          GrayLevel[0]}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{8., 0.}, {9., 0.191}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{195.73745498199278`, 
           216.20828331332532`}, {-85.12669998782265, 95.43368479858943}}],
         StatusArea[#, 0.191]& ,
         TagBoxNote->"0.191"],
        StyleBox["0.191`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.191, {
          GrayLevel[0]}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{9., 0.}, {10., 0.1608}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{215.20828331332532`, 
           235.67911164465784`}, {-56.73547684358367, 95.43368479858943}}],
         StatusArea[#, 0.1608]& ,
         TagBoxNote->"0.1608"],
        StyleBox["0.1608`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.1608, {
          GrayLevel[0]}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{10., 0.}, {11., 0.0916}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{234.67911164465784`, 255.14993997599038`}, {
           8.319908639242072, 95.43368479858943}}],
         StatusArea[#, 0.0916]& ,
         TagBoxNote->"0.0916"],
        StyleBox["0.0916`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.0916, {
          GrayLevel[0]}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{11., 0.}, {12., 0.049}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{254.14993997599038`, 274.6207683073229}, {
           48.368455193698374`, 95.43368479858943}}],
         StatusArea[#, 0.049]& ,
         TagBoxNote->"0.049"],
        StyleBox["0.049`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.049, {
          GrayLevel[0]}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{12., 0.}, {13., 0.0176}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{273.6207683073229, 294.0915966386554}, {
           77.88780640989387, 95.43368479858943}}],
         StatusArea[#, 0.0176]& ,
         TagBoxNote->"0.0176"],
        StyleBox["0.0176`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.0176, {
          GrayLevel[0]}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{13., 0.}, {14., 0.0044}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{293.0915966386554, 313.56242496998794`}, {
           90.29721520141554, 95.43368479858943}}],
         StatusArea[#, 0.0044]& ,
         TagBoxNote->"0.0044"],
        StyleBox["0.0044`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.0044, {
          GrayLevel[0]}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{14., 0.}, {15., 0.0008}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{312.56242496998794`, 333.0332533013205}, {
           93.68159941728508, 95.43368479858943}}],
         StatusArea[#, 0.0008]& ,
         TagBoxNote->"0.0008"],
        StyleBox["0.0008`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.0008, {
          GrayLevel[0]}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{15., 0.}, {16., 0.0004}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{332.0332533013205, 352.504081632653}, {
           94.05764210793726, 95.43368479858943}}],
         StatusArea[#, 0.0004]& ,
         TagBoxNote->"0.0004"],
        StyleBox["0.0004`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.0004, {
          GrayLevel[0]}], "Tooltip"]& ]}, {}, {}}, {{}, {}, 
     {Hue[0.67, 0.6, 0.6], Thickness[Large], LineBox[CompressedData["
1:eJwtmnk0ld/3x40RMsvsXvN8LyWVZG9jZIgyJxkiUSJUKFOUWR/zWJSSuVAq
QsJ1MyZDIkllKKJSytT3/tb6/fM867XWPvucs/d77+ectR5Jt7OHPRjo6OiU
aY//ex/0mH3VMpehk6f841ZOPA8w6Yv4vRcOhAedosqTj3hg583s/FrhaNju
Fe6R8pEHTHtGagqE06H92vEYZR1esDux8ixVuBhE0ls/BvzhhXfka/pJwnWw
4zHrze1R/JB+U6hF9uhDGA4Y8rZ7yA8Hucq0m/IfgfnWgm3cc/zw6Fv3rkXC
E+D9Y/Rx3koAkit5FazkmqApIjbBX3E7FAocuhov3AaujKwWaUuCENqT1Wb7
tA0incs2epWFwDZmkkH6aDsw81nnpZ0UAo5f/uEN+R3w5FIduXFSCC4Opl+c
J1BhX0UDoXxUGKzS3npbyPWCX/VKDNuMKESy1srHCQ9CzWr/LgttIigd+C+2
xm8QxLZxP9z0JMJAzNm5McogfNLwaRNMJYIMo0o56fwQ/BhMhWtzROjYKCYN
DgzDqnXxi6ACSeD4mbmLkDgKz6zPcnmJSMND9aBM44+jsPD9QD6fmTQ4+x1Z
8dd6C9m8Mwa7w6SheoHrSdvsWxheHef++lEaDs/GansbjoP82mthqYcykP0u
RP/h5gSYZmn+bTkrB7piDsUTNu9BgVFP5WypHHxx3M3MWvkeJpNS2Es+yoHE
fLB7peokBD16F/bYQR7OntKUpRufBLMBw6tXzBSA90T1vTt7pmCyhlmo21wJ
7B2Kqpe+f4LzPmd+aHSSYHHMmu2WyGcwKBsfPMFNhqvOrB5H9D8Dz2MJa3UH
MtS6nxV5lP4Z/uNuWi2eJwOn7/6Y0N3TsMkglpiYpAbtUaOOWy7PwBVn2ci7
XergxJz0sP7ODMhJnupbWFaHH9eQ+1TvDCxVnohPktgBxKSS9i7CLPx3yGT5
zbkdcCkrSO2/1lngY0rKqiHshB0VPFvEWL+Agq3LJEeCBlBJ7S49al+AXy/n
kepTDXB5cLEhzOELGKVf0ayZ04CkR+/9PpR9gXyyusqcyS6Ybakcu2v+FUw0
ROhluDThxpDJA/W0eUi9sbEaXLkb2P9FOh2QWIQDecHbLWEfZJ+yc1YxWgQ9
DdVgrdB9IDOo4sLjuwjCFOJIQf0+0CkdcR97tggbbCtLA+ra8KQ082E9aQmq
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
D2QR2H/9+0eLx///n/I/OIqY0Q==
       "]]}}},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{True, True},
   AxesOrigin->{-1., 0.},
   FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
   GridLines->{None, None},
   PlotRange->{{-1., 16.}, {All, All}},
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {
      Scaled[0.02], 
      Scaled[0.1]}},
   Ticks->{Automatic, Automatic}], TraditionalForm]], "Output",
 CellChangeTimes->{
  3.523714392894847*^9, {3.523714452502719*^9, 3.52371449512792*^9}, {
   3.523899882178308*^9, 3.523899886057413*^9}, 3.5238999339321413`*^9}]
}, Open  ]],

Cell[TextData[{
 "\n(c) In the cell below, generate a population of 5000 samples from the \
Poisson ",
 StyleBox["pdist ",
  FontSlant->"Italic"],
 "distribution defined in previous exercise (use a semicolon to suppress the \
output) and name the result ",
 StyleBox["psample",
  FontSlant->"Italic"],
 ".  Compute floating-point values for both the ",
 StyleBox["Mean",
  FontWeight->"Bold"],
 " and the ",
 StyleBox["StandardDeviation",
  FontWeight->"Bold"],
 " of ",
 StyleBox["psample",
  FontSlant->"Italic"],
 ", and also plot its ",
 StyleBox["Histogram",
  FontWeight->"Bold"],
 "."
}], "Text",
 CellChangeTimes->{{3.4293869673543396`*^9, 3.429387022698798*^9}, {
   3.4295082036276207`*^9, 3.4295082072839174`*^9}, {3.42951282549928*^9, 
   3.4295128449995294`*^9}, {3.429513007110979*^9, 3.429513147284649*^9}, {
   3.4295133197087307`*^9, 3.4295133951628213`*^9}, {3.4295134864921155`*^9, 
   3.429513491023423*^9}, {3.4311871097398605`*^9, 3.431187110427374*^9}, 
   3.4399365949782557`*^9, {3.439936952303539*^9, 3.439936985931121*^9}, {
   3.4399371147969494`*^9, 3.4399371217502527`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{" ", 
  RowBox[{
   RowBox[{
    RowBox[{"psample", " ", "=", " ", 
     RowBox[{"RandomVariate", "[", 
      RowBox[{"pdist", ",", "5000"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Mean", "[", "psample", "]"}], "//", "N"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"StandardDeviation", "[", "psample", "]"}], "//", "N"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Show", "[", 
    RowBox[{
     RowBox[{"Histogram", "[", 
      RowBox[{"psample", ",", "200", ",", "\"\<PDF\>\""}], "]"}], ",", 
     RowBox[{"ListPlot", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"x", ",", 
           RowBox[{"PDF", "[", 
            RowBox[{"pdist", ",", "x"}], "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", "0", ",", "20"}], "}"}]}], "]"}], ",", " ", 
       RowBox[{"Filling", "\[Rule]", "None"}], ",", 
       RowBox[{"Joined", "\[Rule]", "True"}], ",", " ", 
       RowBox[{"ColorFunction", "\[Rule]", 
        RowBox[{"Function", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"x", ",", "y"}], "}"}], ",", 
          RowBox[{"Hue", "[", "y", "]"}]}], "]"}]}]}], "]"}]}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{
  3.429507046472184*^9, {3.4295128873281965`*^9, 3.429512916875449*^9}, {
   3.4295129907045193`*^9, 3.429513000439019*^9}, {3.429513422397545*^9, 
   3.429513462101178*^9}, 3.42951387355957*^9, {3.5237145058911943`*^9, 
   3.5237146492943573`*^9}, {3.5238998993321543`*^9, 3.523899903313938*^9}, {
   3.523899988426217*^9, 3.523899989359414*^9}, {3.5239000225216827`*^9, 
   3.523900025071453*^9}, {3.523900089023814*^9, 3.523900106780961*^9}, {
   3.523900153573963*^9, 3.523900173610791*^9}}],

Cell[BoxData[
 FormBox["5.0086`", TraditionalForm]], "Output",
 CellChangeTimes->{{3.523714629076167*^9, 3.5237146501955643`*^9}, {
   3.5238998972715054`*^9, 3.52389991261269*^9}, 3.523899990038566*^9, {
   3.523900025430048*^9, 3.523900038499854*^9}, {3.523900099098905*^9, 
   3.523900107212359*^9}, {3.5239001698970346`*^9, 3.523900174008181*^9}}],

Cell[BoxData[
 FormBox["2.2163728255192856`", TraditionalForm]], "Output",
 CellChangeTimes->{{3.523714629076167*^9, 3.5237146501955643`*^9}, {
   3.5238998972715054`*^9, 3.52389991261269*^9}, 3.523899990038566*^9, {
   3.523900025430048*^9, 3.523900038499854*^9}, {3.523900099098905*^9, 
   3.523900107212359*^9}, {3.5239001698970346`*^9, 3.523900174061137*^9}}],

Cell[BoxData[
 FormBox[
  GraphicsBox[{
    {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
     EdgeForm[Opacity[0.7]], {}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{0., 0.}, {1., 0.0054}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{20.499999999999996`, 42.18775510204081}, {
           89.035868830165, 95.43368479858944}}],
         StatusArea[#, 0.0054]& ,
         TagBoxNote->"0.0054"],
        StyleBox["0.0054`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.0054, {
          GrayLevel[0]}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{1., 0.}, {2., 0.0302}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{41.18775510204081, 62.875510204081635`}, {
           64.24589919740089, 95.43368479858944}}],
         StatusArea[#, 0.0302]& ,
         TagBoxNote->"0.0302"],
        StyleBox["0.0302`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.0302, {
          GrayLevel[0]}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{2., 0.}, {3., 0.0826}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{61.875510204081635`, 83.56326530612245}, {
           11.867092392689628`, 95.43368479858944}}],
         StatusArea[#, 0.0826]& ,
         TagBoxNote->"0.0826"],
        StyleBox["0.0826`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.0826, {
          GrayLevel[0]}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{3., 0.}, {4., 0.1476}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{82.56326530612245, 
           104.25102040816327`}, {-53.10661833834533, 95.43368479858944}}],
         StatusArea[#, 0.1476]& ,
         TagBoxNote->"0.1476"],
        StyleBox["0.1476`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.1476, {
          GrayLevel[0]}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{4., 0.}, {5., 0.168}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{103.25102040816327`, 
           124.9387755102041}, {-73.49836755239323, 95.43368479858944}}],
         StatusArea[#, 0.168]& ,
         TagBoxNote->"0.168"],
        StyleBox["0.168`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.168, {
          GrayLevel[0]}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{5., 0.}, {6., 0.18760000000000002`}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{123.9387755102041, 
           145.6265306122449}, {-93.09044032667455, 95.43368479858944}}],
         StatusArea[#, 0.18760000000000002`]& ,
         TagBoxNote->"0.18760000000000002"],
        StyleBox["0.18760000000000002`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.18760000000000002`, {
          GrayLevel[0]}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{6., 0.}, {7., 0.1452}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{144.6265306122449, 
           166.31428571428572`}, {-50.70758901904557, 95.43368479858944}}],
         StatusArea[#, 0.1452]& ,
         TagBoxNote->"0.1452"],
        StyleBox["0.1452`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.1452, {
          GrayLevel[0]}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{7., 0.}, {8., 0.1018}, "RoundingRadius" -> 0]},
          ImageSizeCache->{{165.31428571428572`, 
           187.00204081632654`}, {-7.325142161708385, 95.43368479858944}}],
         StatusArea[#, 0.1018]& ,
         TagBoxNote->"0.1018"],
        StyleBox["0.1018`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.1018, {
          GrayLevel[0]}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{8., 0.}, {9., 0.06280000000000001}, "RoundingRadius" -> 
            0]},
          
          ImageSizeCache->{{186.00204081632654`, 207.68979591836737`}, {
           31.65908427691258, 95.43368479858944}}],
         StatusArea[#, 0.06280000000000001]& ,
         TagBoxNote->"0.06280000000000001"],
        StyleBox["0.06280000000000001`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.06280000000000001, {
          GrayLevel[0]}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{9., 0.}, {10., 0.037200000000000004`}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{206.68979591836737`, 228.3775510204082}, {
           57.24873034944328, 95.43368479858944}}],
         StatusArea[#, 0.037200000000000004`]& ,
         TagBoxNote->"0.037200000000000004"],
        StyleBox["0.037200000000000004`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.037200000000000004`, {
          GrayLevel[0]}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{10., 0.}, {11., 0.018600000000000002`}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{227.3775510204082, 249.065306122449}, {
           75.84120757401635, 95.43368479858944}}],
         StatusArea[#, 0.018600000000000002`]& ,
         TagBoxNote->"0.018600000000000002"],
        StyleBox["0.018600000000000002`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.018600000000000002`, {
          GrayLevel[0]}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{11., 0.}, {12., 0.0068000000000000005`}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{248.065306122449, 269.7530612244898}, {
           87.63643506057348, 95.43368479858944}}],
         StatusArea[#, 0.0068000000000000005`]& ,
         TagBoxNote->"0.0068000000000000005"],
        StyleBox["0.0068000000000000005`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.0068000000000000005`, {
          GrayLevel[0]}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{12., 0.}, {13., 0.0028}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{268.7530612244898, 290.44081632653064`}, {
           91.63481725940639, 95.43368479858944}}],
         StatusArea[#, 0.0028]& ,
         TagBoxNote->"0.0028"],
        StyleBox["0.0028`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.0028, {
          GrayLevel[0]}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{13., 0.}, {14., 0.0028}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{289.44081632653064`, 311.12857142857143`}, {
           91.63481725940639, 95.43368479858944}}],
         StatusArea[#, 0.0028]& ,
         TagBoxNote->"0.0028"],
        StyleBox["0.0028`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.0028, {
          GrayLevel[0]}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{14., 0.}, {15., 0.0004}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{310.12857142857143`, 331.8163265306123}, {
           94.03384657870615, 95.43368479858944}}],
         StatusArea[#, 0.0004]& ,
         TagBoxNote->"0.0004"],
        StyleBox["0.0004`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.0004, {
          GrayLevel[0]}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{15., 0.}, {16., 0.0002}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{330.8163265306123, 352.5040816326531}, {
           94.2337656886478, 95.43368479858944}}],
         StatusArea[#, 0.0002]& ,
         TagBoxNote->"0.0002"],
        StyleBox["0.0002`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.0002, {
          GrayLevel[0]}], "Tooltip"]& ]}, {}, {}}, 
    GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQBWIQDQNlwbwP7GdW20N4H+y1QjjeHLdfCOUzOJhkcj3f
2b8VyudwCGO6N/Xo94NQvoDDm6bQ39tKj0H5Imh8CQept4UXc7cfgvJlHPIO
LGJ7tmcXlK/g4LpD9Qj/tg1QvpLDItaPN9MmLoLyVaD8SVC+moM8a52V28MG
KF/DoYPj0jZ5pRwoX8vBSco+VWJJKJSv49CkGvUv+5UdlK/nsObws3/uc1Sg
fAOH6SUL/kUe5oTyDR0OyItvtvF/ZwfhGzlkN2//uP7aBSjf2OGHW/eJCTs3
QvkmUP5EOwBnW16U
     "], {{}, {}, 
      {Hue[0.67, 0.6, 0.6], 
       LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18,
         19, 20, 21},
        VertexColors->Automatic]}},
     VertexColors->{
       Hue[0.038398552555892564`], 
       Hue[0.1919987837616069], 
       Hue[0.47999921727232125`], 
       Hue[0.7999996989508927], 
       Hue[1.], 
       Hue[1.], 
       Hue[0.8333330824590773], 
       Hue[0.595237485972045], 
       Hue[0.3720228642654521], 
       Hue[0.20667870003834626`], 
       Hue[0.10333859739640512`], 
       Hue[0.04697126868261905], 
       Hue[0.019570483891195256`], 
       Hue[0.007526182883976013], 
       Hue[0.0026869548007182795`], 
       Hue[0.0008946481032154154], 
       Hue[0.00027854267594880583`], 
       Hue[0.00008086179019481351], 
       Hue[0.000021374486611436186`], 
       Hue[4.515736608049899*^-6], 
       Hue[0.]}]},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{True, True},
   AxesOrigin->{0., 0.},
   FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
   GridLines->{None, None},
   PlotRange->{{0., 16.}, {All, All}},
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {
      Scaled[0.02], 
      Scaled[0.1]}},
   Ticks->{Automatic, Automatic}], TraditionalForm]], "Output",
 CellChangeTimes->{{3.523714629076167*^9, 3.5237146501955643`*^9}, {
   3.5238998972715054`*^9, 3.52389991261269*^9}, 3.523899990038566*^9, {
   3.523900025430048*^9, 3.523900038499854*^9}, {3.523900099098905*^9, 
   3.523900107212359*^9}, {3.5239001698970346`*^9, 3.523900174167948*^9}}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["(#14) Adding random variables (10 min)", "Subsection",
 CellChangeTimes->{{3.434985299569336*^9, 3.43498532355834*^9}, {
   3.4349857571172943`*^9, 3.4349857589252033`*^9}, {3.4354297153313274`*^9, 
   3.4354297154407043`*^9}, 3.4354304046883125`*^9, {3.435715457477426*^9, 
   3.435715459325322*^9}, {3.435757802178515*^9, 3.435757802304488*^9}, {
   3.435764987772443*^9, 3.435764987916317*^9}, 3.435765024024284*^9, 
   3.435771137322639*^9, {3.43577145430758*^9, 3.435771455921034*^9}, 
   3.435773880130384*^9, {3.435778380680286*^9, 3.4357783819658537`*^9}, {
   3.4359233470675983`*^9, 3.435923367609296*^9}, {3.435923477772645*^9, 
   3.43592348194591*^9}, 3.435923530042425*^9, {3.4359376112546215`*^9, 
   3.4359376119889917`*^9}, {3.4396698284031515`*^9, 3.4396698284969025`*^9}, 
   3.4399366730396166`*^9, {3.51217427590405*^9, 3.51217427613805*^9}}],

Cell[TextData[{
 "If one repeats the same physical measurement over and over again, the \
result will be a little different each time.  We say that such an experiment \
measures a \"random variable\", or that it samples a probability \
distribution.  In the context of experimental measurements, the standard \
deviation of a random variable is often referred to as \"uncertainty\" or \
\"error\".  Thus, when ",
 StyleBox["f",
  FontSlant->"Italic"],
 " is measured to be 7.3 with an uncertainty of 0.5, we write ",
 StyleBox["f",
  FontSlant->"Italic"],
 " = 7.3\[PlusMinus]0.5, which means that ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[Sigma]", "f"], "\[TildeTilde]", "0.5"}], 
   TraditionalForm]]],
 " and that ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Mu]", "f"], TraditionalForm]]],
 " is likely to lie in the range between 6.8 and 7.8.\n\nIn the cell below, \
we create a list called ",
 StyleBox["list1",
  FontSlant->"Italic"],
 " that contains ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["10", "4"], TraditionalForm]]],
 " samples from a normal distribution with of ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Mu]", "1"], TraditionalForm]]],
 " = 20 and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Sigma]", "1"], TraditionalForm]]],
 " = 3, and another list called ",
 StyleBox["list2",
  FontSlant->"Italic"],
 " that contains ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["10", "4"], TraditionalForm]]],
 " samples from a normal distribution with of ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Mu]", "2"], TraditionalForm]]],
 " = 30 and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Sigma]", "2"], TraditionalForm]]],
 " = 4.  We then add ",
 StyleBox["list1",
  FontSlant->"Italic"],
 " and ",
 StyleBox["list2",
  FontSlant->"Italic"],
 " together to create a list ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["10", "4"], TraditionalForm]]],
 " sums, and call the result ",
 StyleBox["listf",
  FontSlant->"Italic"],
 ".  Finally, we compute the ",
 StyleBox["Mean",
  FontWeight->"Bold"],
 " and the ",
 StyleBox["StandardDeviation",
  FontWeight->"Bold"],
 " of each of ",
 StyleBox["list1",
  FontSlant->"Italic"],
 ", ",
 StyleBox["list2",
  FontSlant->"Italic"],
 " and ",
 StyleBox["listf",
  FontSlant->"Italic"],
 ". \n\nBy adding two random variables, ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["p", "1"], TraditionalForm]]],
 " and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["p", "2"], TraditionalForm]]],
 ", with respective means of ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Mu]", "1"], TraditionalForm]]],
 " and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Mu]", "2"], TraditionalForm]]],
 " and respective standard deviations of ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Sigma]", "1"], TraditionalForm]]],
 " and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Sigma]", "2"], TraditionalForm]]],
 ", we have obtained a third random variable, ",
 Cell[BoxData[
  FormBox[
   RowBox[{"f", "=", 
    RowBox[{
     SubscriptBox["p", "1"], "+", 
     SubscriptBox["p", "2"]}]}], TraditionalForm]]],
 ", with mean ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Mu]", "f"], TraditionalForm]]],
 " and standard deviation ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Sigma]", "f"], TraditionalForm]]],
 ".  Study the output carefully, and demonstrate for your TA that ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[Mu]", "f"], " ", "=", " ", 
    RowBox[{
     SubscriptBox["\[Mu]", "1"], "+", 
     SubscriptBox["\[Mu]", "2"]}]}], TraditionalForm]]],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox[
     SubscriptBox["\[Sigma]", "f"], "2"], "=", 
    RowBox[{
     SuperscriptBox[
      SubscriptBox["\[Sigma]", "1"], "2"], "+", " ", 
     SuperscriptBox[
      SubscriptBox["\[Sigma]", "2"], "2"]}]}], TraditionalForm]]],
 "."
}], "Text",
 CellChangeTimes->{{3.4357578574748163`*^9, 3.435758458556715*^9}, {
   3.435758503587185*^9, 3.4357585113025503`*^9}, {3.4357585921123877`*^9, 
   3.43575874383111*^9}, {3.435758790977404*^9, 3.435758941324051*^9}, {
   3.435758984733906*^9, 3.4357590582382193`*^9}, {3.435759105956867*^9, 
   3.43575945907382*^9}, {3.435759581936006*^9, 3.435759603190687*^9}, {
   3.435759714055921*^9, 3.4357597394031076`*^9}, {3.435759808602168*^9, 
   3.435759810372781*^9}, {3.435759851115756*^9, 3.4357598629662724`*^9}, 
   3.435759936362344*^9, 3.435759994949519*^9, {3.435760679295609*^9, 
   3.435760812481473*^9}, {3.435761202998454*^9, 3.435761255854488*^9}, {
   3.4357713583806*^9, 3.435771384450186*^9}, {3.435935502564992*^9, 
   3.435935547252206*^9}, 3.43593562864231*^9, {3.435935682860713*^9, 
   3.4359357609695883`*^9}, {3.4359358396878347`*^9, 3.435936280903761*^9}, {
   3.4359363281065836`*^9, 3.4359364495589314`*^9}, {3.435936487293065*^9, 
   3.4359365833237004`*^9}, {3.4359366339171267`*^9, 
   3.4359367398851986`*^9}, {3.4359368261033964`*^9, 3.435936861212547*^9}, {
   3.4359369197434225`*^9, 3.4359371216171303`*^9}, {3.4359372187258835`*^9, 
   3.43593729588164*^9}, {3.4359375756298494`*^9, 3.4359376369732065`*^9}, {
   3.4408805817402563`*^9, 3.440880582568386*^9}, {3.449512790826372*^9, 
   3.449512819966997*^9}, {3.449512850966997*^9, 3.449512975185747*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"list1", " ", "=", " ", 
    RowBox[{"Table", "[", " ", 
     RowBox[{
      RowBox[{"RandomReal", "[", 
       RowBox[{"NormalDistribution", "[", 
        RowBox[{"20", ",", "3"}], "]"}], "]"}], ",", 
      RowBox[{"{", "10000", "}"}]}], "]"}]}], ";"}], 
  "  "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"list2", " ", "=", "  ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"RandomReal", "[", 
      RowBox[{"NormalDistribution", "[", 
       RowBox[{"30", ",", "4"}], "]"}], "]"}], ",", 
     RowBox[{"{", "10000", "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"listf", " ", "=", " ", 
    RowBox[{"list1", "+", "list2"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"means", " ", "=", " ", 
  RowBox[{"Mean", "/@", 
   RowBox[{"{", 
    RowBox[{"list1", ",", "list2", ",", "listf"}], 
    "}"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"sds", " ", "=", 
  RowBox[{"StandardDeviation", "/@", 
   RowBox[{"{", 
    RowBox[{"list1", ",", "list2", ",", "listf"}], "}"}]}]}]}], "Input",
 CellChangeTimes->{{3.4357181302620077`*^9, 3.4357182903240013`*^9}, {
   3.4357183606925287`*^9, 3.4357183825606203`*^9}, {3.4357184203479548`*^9, 
   3.4357185597975817`*^9}, {3.435718592863364*^9, 3.435718593260504*^9}, {
   3.435720610763442*^9, 3.435720640691834*^9}, {3.4357207209526167`*^9, 
   3.435720772670697*^9}, {3.435720881388117*^9, 3.435720957011986*^9}, {
   3.435721061178031*^9, 3.435721083880239*^9}, {3.435721710978066*^9, 
   3.43572175186611*^9}, {3.43572188273656*^9, 3.435721934265892*^9}, {
   3.435721972755245*^9, 3.4357219996088142`*^9}, {3.4357220413840227`*^9, 
   3.4357220801960583`*^9}, {3.435722114271523*^9, 3.435722119055695*^9}, {
   3.435722188994125*^9, 3.4357222026474543`*^9}, {3.435722278248508*^9, 
   3.435722326194557*^9}, {3.4357224922910557`*^9, 3.4357225005438337`*^9}, {
   3.4357555445796413`*^9, 3.435755572603114*^9}, {3.435756929203718*^9, 
   3.4357569306672688`*^9}, {3.4357569666628447`*^9, 3.435757001823616*^9}, 
   3.4357589684886303`*^9, {3.4357597666542253`*^9, 3.435759771341857*^9}, {
   3.435935562892731*^9, 3.4359355649083433`*^9}, {3.43593564432971*^9, 
   3.4359356637670856`*^9}, {3.4359357526102667`*^9, 3.43593575450088*^9}, {
   3.435936589620535*^9, 3.4359366176672306`*^9}, {3.435936866525013*^9, 
   3.435936888790495*^9}, {3.5237147723234873`*^9, 3.5237147782402573`*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{
   "20.046754573841067`", ",", "29.96734467939984`", ",", 
    "50.01409925324091`"}], "}"}], TraditionalForm]], "Output",
 CellChangeTimes->{3.523714749856968*^9, 3.523714803776846*^9, 
  3.52371494213509*^9, 3.523900210077621*^9}],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{
   "3.0137742592157104`", ",", "3.9631348925325045`", ",", 
    "4.966744515839423`"}], "}"}], TraditionalForm]], "Output",
 CellChangeTimes->{3.523714749856968*^9, 3.523714803776846*^9, 
  3.52371494213509*^9, 3.523900210080441*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  SubscriptBox["\[Mu]", "f"], " ", "=", " ", 
  RowBox[{"means", "[", 
   RowBox[{"[", "3", "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["\[Mu]", "f2"], " ", "=", " ", 
   RowBox[{
    RowBox[{"means", "[", 
     RowBox[{"[", "1", "]"}], "]"}], " ", "+", " ", 
    RowBox[{"means", "[", 
     RowBox[{"[", "2", "]"}], "]"}]}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  SubscriptBox["\[Sigma]", "f"], " ", "=", " ", 
  SuperscriptBox[
   RowBox[{"sds", "[", 
    RowBox[{"[", "3", "]"}], "]"}], "2"]}], "\[IndentingNewLine]", 
 RowBox[{
  SubscriptBox["\[Sigma]", "f2"], " ", "=", " ", 
  RowBox[{
   SuperscriptBox[
    RowBox[{"sds", "[", 
     RowBox[{"[", "1", "]"}], "]"}], "2"], " ", "+", " ", 
   SuperscriptBox[
    RowBox[{"sds", "[", 
     RowBox[{"[", "2", "]"}], "]"}], "2"], " ", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
     "not", " ", "producing", " ", "the", " ", "correct", " ", "Result"}], 
     "..."}], " ", "*)"}]}]}]}], "Input",
 CellChangeTimes->{{3.52371478387995*^9, 3.5237149328215513`*^9}, {
  3.52390028164491*^9, 3.523900290940916*^9}}],

Cell[BoxData[
 FormBox["50.01409925324091`", TraditionalForm]], "Output",
 CellChangeTimes->{{3.523714800369421*^9, 3.523714828063768*^9}, {
  3.523714893221953*^9, 3.5237149430190353`*^9}, {3.523900211263896*^9, 
  3.523900215069957*^9}}],

Cell[BoxData[
 FormBox["50.01409925324091`", TraditionalForm]], "Output",
 CellChangeTimes->{{3.523714800369421*^9, 3.523714828063768*^9}, {
  3.523714893221953*^9, 3.5237149430190353`*^9}, {3.523900211263896*^9, 
  3.523900215072836*^9}}],

Cell[BoxData[
 FormBox["24.668551085620983`", TraditionalForm]], "Output",
 CellChangeTimes->{{3.523714800369421*^9, 3.523714828063768*^9}, {
  3.523714893221953*^9, 3.5237149430190353`*^9}, {3.523900211263896*^9, 
  3.523900215074942*^9}}],

Cell[BoxData[
 FormBox["24.78927346191983`", TraditionalForm]], "Output",
 CellChangeTimes->{{3.523714800369421*^9, 3.523714828063768*^9}, {
  3.523714893221953*^9, 3.5237149430190353`*^9}, {3.523900211263896*^9, 
  3.5239002150770073`*^9}}]
}, Open  ]]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Working On Your Own (35 min)", "Section",
 CellChangeTimes->{{3.5112830416769342`*^9, 3.511283048646725*^9}, {
  3.5112831354341216`*^9, 3.511283140263977*^9}, {3.51217441176445*^9, 
  3.51217441192045*^9}}],

Cell[CellGroupData[{

Cell["Adding Waves (10 min)", "Subsection",
 CellChangeTimes->{{3.51217438549405*^9, 3.51217442099965*^9}, {
  3.51217495291285*^9, 3.51217496430085*^9}, {3.5188572169118*^9, 
  3.5188572189737997`*^9}}],

Cell["\<\
Write a function to compute the height of a wave h=A cos(k x) where the \
amplitude A is 1/k.   Then create a function to compute the sum of 5 of these \
waves with values k=2\[Pi], 4\[Pi], 6\[Pi], 8\[Pi], and 10\[Pi].  Plot this \
seond function for values of x between 0 and 5.\
\>", "Text",
 CellChangeTimes->{{3.5122902841157503`*^9, 3.51229030559575*^9}, {
   3.51229044994975*^9, 3.5122904652985497`*^9}, {3.5122914933737497`*^9, 
   3.51229150910075*^9}, {3.51229157710295*^9, 3.5122916303109503`*^9}, {
   3.51229170667135*^9, 3.51229171517735*^9}, {3.51229174678415*^9, 
   3.51229189388035*^9}, 3.5122919488477497`*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "h", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"a", " ", "=", " ", 
   RowBox[{"1", "/", "k"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"h", " ", "[", "k_", "]"}], "=", " ", 
   RowBox[{"a", " ", "*", 
    RowBox[{"Cos", "[", " ", 
     RowBox[{"k", "*", "x"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sum", " ", "=", " ", 
   RowBox[{
    RowBox[{"h", "[", 
     RowBox[{"2", "\[Pi]"}], "]"}], "+", 
    RowBox[{"h", "[", 
     RowBox[{"4", "\[Pi]"}], "]"}], "+", 
    RowBox[{"h", "[", 
     RowBox[{"6", "\[Pi]"}], "]"}], "+", 
    RowBox[{"h", "[", 
     RowBox[{"8", "\[Pi]"}], "]"}], "+", 
    RowBox[{"h", "[", 
     RowBox[{"10", "\[Pi]"}], "]"}]}]}], ";", 
  RowBox[{"(*", 
   RowBox[{
   "how", " ", "could", " ", "I", " ", "have", " ", "wriiten", " ", "this", 
    " ", "with", " ", "a", " ", "list", " ", "and", " ", 
    RowBox[{"placeholders", "?"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"Plot", "[", 
   RowBox[{"sum", ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "0", ",", "5"}], "}"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.51229189610235*^9, 3.51229197687495*^9}, 
   3.51229201001735*^9, {3.51229208544175*^9, 3.5122920912445498`*^9}, {
   3.51229213146315*^9, 3.5122921369299498`*^9}, 3.5224192029216003`*^9, {
   3.523900313203204*^9, 3.523900658202661*^9}, {3.523900965028379*^9, 
   3.523900965178506*^9}, 3.523901040706506*^9}],

Cell[BoxData[
 FormBox[
  GraphicsBox[{{}, {}, 
    {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
jsn9rD8oLMlfuTcpKwq1DcLu6mlRyNj5fjAuJwpXDd+rrF1PQeJ3Z7q4OgqX
5Uwvd9ChoPW8vf19bxQqORoLhnXZ9a6vveGoFI0ysqGl5zdSCP0UHCrhFI3z
6qqL5PQpyGh+0jYpiUax89MK8wwo/KwxTd0tFYOTBkZ5wLD7q/HJ9feLwZ/D
f2Y3Alt/joV8Z3cMvncUuTVmQuGCnDWv5Mkl7JSFtKhNFP66Kf3mqjIXm+rO
pihvoVCxacQ70I6Lz8/jjSIzCmqLV8n8vMzFB4ZTSZvMWX/5xGkNPeNixQ/D
q23bKJzV7lfbN8nFktyQePftFN6fbm2YszIWc52qYictKRzWeKb71joWM+Qm
Y2J3UvhHpV/u7ulYvFFvELVkF4UIhROJ/rGxGH8hOIK/m/WLPWnoSY3FKKaS
Y25NYexdALcxMxbDf06EvbKhYBY+64tSWiwG5en/5WVLwbT64UTipVj0PRIU
ImrH7l9BM1jmRCwel68ITNhPQTdSK9SDicUjDb/81Q+w/VIVtfTUFBftI/RO
VRykUFRhqz03n4t7INBnx2EKhmZb+8TNuWgxUubV40DBUl5pfkHGJTTNH/fw
c2LX8/Xm5sKLMajvvNF9tjOF+cUu/t83R6OWQoDr9aMUpiT9vtg1XcQVjULn
Va7s/PGcc51rI3FJ5JhjtRu73wfzJM8cuIAKRhsO73Gn0DEkH2lszcEFo/4H
eo9TuLsxgmO/MBwlCgR2AZ4UlIzzrP5N/QtnHB3dK+nF+sc95fTrD8E4oaBr
/bc3hYn5uy8vXuCPw42nd63zYeubW1FV+sQb3xqNWOw7xfozV23Ol57t2D6q
bd5/mgKYbrgwU20n01BwasvZMxRUBDE2g7dcmXuKP41uBVF4Y2Cc/vhUCFPW
tJ7RDaFQt9bE3kMjnCm66Kdfc5bC7W7vB0EHI5i0sWHtwVAK79Z6V/Zvi2Ou
FWpphYdTkNY3iv9peYWJc/Fdu5BDYXlaoOJWv0QmtHlI0yCC7ffeor42zRTG
8Z/vKhGXKIyc37c2TymTOR66e8I8loJxmsEZ2WN3GL/dJa0SlymY60u993uW
w1z44RfDTaCQ32czZnikkMnfMPbr6k0KKw7tclVrKWUE4nat+1IonJ95LFtq
K5+p7igrkk+lEBkQFmHyQMA0BQe5pWSw9fFtUflRX86MVU+13M5h+/O6xs6l
ytXM9MuHi1zzKOy52m8uGKpmJI5UR2sUUGianeuc8OweoyQWZppfRCHzQnnm
wpAHjKm5WFGpkMKjE04a40OPGW6DRPSDxxTsRn7PfNFUy1xL93DlPKVwNOOk
c+Cdl0y6b62JWQ1bb2vYUGxQx/BkuOM1tRScDh7rrxOvZ+72fmuOrqMwbb2b
5S3PeuapwOqfHQ0UuHXHB73q6plOO+ra2EwhKVdihUV0A/NB09fkSivLw2vx
qRIfG5iBiSalvf+jMPpbFyyDRmZ6SkJzeyfrn49PHet6G5m5XiOFN16z/lg1
T1dWp4lZYGQbdfANBbcGr5krwpoYtbeyJj1vKUSFpHmsnN/MrCkJUMp4TyFZ
d/Lg613NzMZzHWPOvRQW3l8p+5rbzJjY6Der9VF4dfOPgPk1zYyF2s3Cvk8U
HH0/jRyc1sLYjP57Maef5atGT37+uhbm0NODLh5fKWg36Hh9cmhhXK+h8epv
FEQjQ2v/vdjCnHRXURocpGDUzVdv+aeFCdL/a6xoiEKz+Kwyx8YW5pxkT5Pv
Dwpr69KS4r+1MDGvjQu1Ryjk9fq8ODinlUksSL84OsrqL5ZvwVNsZdL+nOFS
Ns7qj8az4la2MjlWzsZBE6x/Jld+/qTbypSoPlI0nGSfn5P4sZxpZaqGlo1N
TVHgPKgd/u976v8BAydNWg==
      "]]}},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->True,
   AxesOrigin->{0, 0},
   PlotRange->{{0, 5}, {-0.12467050207709798`, 0.3634037867260037}},
   PlotRangeClipping->True,
   PlotRangePadding->{
     Scaled[0.02], 
     Scaled[0.02]}], TraditionalForm]], "Output",
 CellChangeTimes->{3.523900626206995*^9, 3.523900965587716*^9, 
  3.523901041466217*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Manipulating Data (10 min)", "Subsection",
 CellChangeTimes->{{3.51217466755765*^9, 3.51217468103605*^9}}],

Cell["\<\
Download the file Th000088.dat into the same directory as this noteboook.  \
Then read in  the file Th000088.dat, which contains reflectance data from a \
thin film of thorium taken at the Advanced Light Source at Lawrence Berkeley \
Labs by executing the following cell.\
\>", "Text",
 CellChangeTimes->{{3.51233502694355*^9, 3.5123350347325497`*^9}, {
  3.5123351484151497`*^9, 3.51233525473555*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"SetDirectory", "[", 
   RowBox[{"NotebookDirectory", "[", "]"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tdata", " ", "=", " ", 
   RowBox[{"Import", "[", 
    RowBox[{"\"\<Th000088.dat\>\"", ",", "\"\<Table\>\""}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.5123352270787497`*^9, 3.51233531144715*^9}, {
   3.523901335496011*^9, 3.523901371661236*^9}, {3.523901454242547*^9, 
   3.523901464930006*^9}, 3.523901636045498*^9, 3.523901771440979*^9}],

Cell[TextData[{
 "You\[CloseCurlyQuote]ll note that the data contains a header list followed \
by lists of four numbers.  These represent the wavelength of the beam, the \
measured reflected signal, and two other numbers which are not needed in this \
exercise.  Extract the wavelength and signal numbers and plot them using ",
 StyleBox[ButtonBox["ListLogPlot",
  BaseStyle->"Link",
  ButtonData->"paclet://ref/ListLogPlot"],
  FontWeight->"Bold"],
 "."
}], "Text",
 CellChangeTimes->{{3.5123353292255497`*^9, 3.51233546859715*^9}, {
  3.5123366598259497`*^9, 3.51233666356155*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"noHeader", " ", "=", " ", 
   RowBox[{"Rest", "[", "tdata", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "wavelength", ",", " ", "signal", ",", " ", "other1", ",", " ", 
     "other2"}], " ", "}"}], " ", "=", " ", 
   RowBox[{"Transpose", "[", "noHeader", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"wavelength", ";"}], "\[IndentingNewLine]", 
 RowBox[{"signal", ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListLogPlot", "[", 
  RowBox[{
   RowBox[{"Transpose", "[", 
    RowBox[{"{", 
     RowBox[{"wavelength", ",", "signal"}], "}"}], "]"}], ",", 
   RowBox[{"Joined", "\[Rule]", "True"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.51233668462355*^9, 3.51233669491435*^9}, {
   3.51233672929795*^9, 3.51233677115315*^9}, 3.5123368068273497`*^9, {
   3.523901448457609*^9, 3.523901459328537*^9}, {3.5239014955769043`*^9, 
   3.523901503960519*^9}, {3.523901538839469*^9, 3.523901656508806*^9}, {
   3.523901696763348*^9, 3.523901700073524*^9}, {3.523901732667264*^9, 
   3.523901765184531*^9}, {3.5243100630902843`*^9, 3.524310155767605*^9}}],

Cell[BoxData[
 FormBox[
  GraphicsBox[{{}, {}, 
    {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJxFk3tMW1Ucxy92bCbdwNsHuOncFRFlGBfLcHOO+EtwLKhkMuQ1AukYfT9w
yB+F2nK73rZr2cbMFILCes0gPKQjZEPAGfMbjwVwbqEjJHMML6goTILBLRAn
oP5zzx8nJ598Hycn5/yeLyk7qnmCoqgj/63/d6wfcM85NHD0tZEXXhpXYF3X
938GgxrIefK4M02jQGfb3hItaqBvr+HaaIMCvywtN+oEDUBS5PUXJ+WY+821
W15KC9EKXebn+XL01AsTPkYLXHI8DrJyvFoRee80EP45a/eMX034nZKMfjur
hcn9fXkjv8sw5cGZpRqe9LU9e2HYgVoYPjefTt+Q4ftZj5KaBOIv5hLHWigd
GErjDHOHZGj57XH7SUYHws5p4W+3DEs/SZh2gQ5SjN29xVIZlg8d+zigJv7e
3f4/3CzR57ZcXuZ4HciWvNtUXhqVv4ZXPUj0twdW1r2CDlJvGpZ1/TR+lrHN
wlJ62OpiE+1BGocSVB+5GL2YHy/Q0gHQw1fx9+M9FhrjZuzVbrUe4iM2QuYc
GrO+4z0cS/IVVdNnPbwe0pSdkT8l0Dgc8fCxE/Vw9V7DgdlUGvND7622CKTP
bghQrZRB5I70rs1tjEE8X32zrjMAhLuzO3dwaoPY96j/x4CDJXnJYlSilyes
Gkve40MDVC36CyMmaDzemp9yWjCI9z/POd70U0ZRl3ztpu0M4afme7vcQPit
G1M9nNoo5q2XIr71sEawn9j0rq1Uhk1swoCXJ4wHS8d8aBTfmx6q3O8SjOL7
7loJTfopk+i/Em5WVDAmmJE+zO7dKkdH98psDZjE/7M0u9bnUJugSdK6cb5D
jmtKVZ6XNYn/7ZW/cot8vAma9XZvh0SBJws8P7BI/PzrHXdcAuHb8tt3T1Fm
kPSkVWUmK3AqXWKrYczi/CxU7ov5FMzivDhzXv3AqTbDvkZh9rJUiSFV9rFq
lvjX+/UjNp7o0sVGrQuJvp0Z3xQQzLCjqfHwYIYSi7wbFW7KIvLZE/F2jrFA
VG5F8G6NEu8vvDHvAAtMLHTpCz6MwQc7rT6v2iLOe88/mHORJfpmbnKwnid9
tp6pBj+SvtGDy1vcggUyC9NDJc/F4Or22CiOssKu7DtXqsNKTGUPOR2MVewz
Fxk5J1gh/xd7a0300/jFgdpAtZrovsEw1rJEfyY4ul7JE/3l8FrjKbTCTLhw
qnw0BvO64i65BXKe78zhdo4qg1pbq3upLhb3XG+PbmbK4MIRmJYmxWLxxVvK
FigT8/8CnqBNVA==
      "]]}},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->True,
   AxesOrigin->{171.934389, -6.015181176125303},
   CoordinatesToolOptions:>{"DisplayFunction" -> ({
       Part[#, 1], 
       Exp[
        Part[#, 2]]}& ), "CopiedValueFunction" -> ({
       Part[#, 1], 
       Exp[
        Part[#, 2]]}& )},
   FrameTicks->{{{{-6.907755278982137, 
        FormBox[
         TagBox[
          InterpretationBox["\"0.0010\"", 0.001, AutoDelete -> True], 
          NumberForm[#, {
            DirectedInfinity[1], 4}, NumberPadding -> {"", "0"}]& ], 
         TraditionalForm]}, {-4.605170185988091, 
        FormBox[
         TagBox[
          InterpretationBox["\"0.0100\"", 0.01, AutoDelete -> True], 
          NumberForm[#, {
            DirectedInfinity[1], 4}, NumberPadding -> {"", "0"}]& ], 
         TraditionalForm]}, {-5.298317366548036, 
        FormBox[
         TagBox[
          InterpretationBox["\"0.0050\"", 0.005, AutoDelete -> True], 
          NumberForm[#, {
            DirectedInfinity[1], 4}, NumberPadding -> {"", "0"}]& ], 
         TraditionalForm]}, {-2.995732273553991, 
        FormBox[
         TagBox[
          InterpretationBox["\"0.0500\"", 0.05, AutoDelete -> True], 
          NumberForm[#, {
            DirectedInfinity[1], 4}, NumberPadding -> {"", "0"}]& ], 
         TraditionalForm]}, {-6.214608098422191, 
        FormBox[
         TagBox[
          InterpretationBox["\"0.0020\"", 0.002, AutoDelete -> True], 
          NumberForm[#, {
            DirectedInfinity[1], 4}, NumberPadding -> {"", "0"}]& ], 
         TraditionalForm]}, {-3.912023005428146, 
        FormBox[
         TagBox[
          InterpretationBox["\"0.0200\"", 0.02, AutoDelete -> True], 
          NumberForm[#, {
            DirectedInfinity[1], 4}, NumberPadding -> {"", "0"}]& ], 
         TraditionalForm]}, {-5.809142990314028, 
        FormBox[
         TagBox[
          InterpretationBox["\"0.0030\"", 0.003, AutoDelete -> True], 
          NumberForm[#, {
            DirectedInfinity[1], 4}, NumberPadding -> {"", "0"}]& ], 
         TraditionalForm]}, {-3.506557897319982, 
        FormBox[
         TagBox[
          InterpretationBox["\"0.0300\"", 0.03, AutoDelete -> True], 
          NumberForm[#, {
            DirectedInfinity[1], 4}, NumberPadding -> {"", "0"}]& ], 
         TraditionalForm]}, {-6.502290170873972, 
        FormBox[
         TagBox[
          InterpretationBox["\"0.0015\"", 0.0015, AutoDelete -> True], 
          NumberForm[#, {
            DirectedInfinity[1], 4}, NumberPadding -> {"", "0"}]& ], 
         TraditionalForm]}, {-4.199705077879927, 
        FormBox[
         TagBox[
          InterpretationBox["\"0.0150\"", 0.015, AutoDelete -> True], 
          NumberForm[#, {
            DirectedInfinity[1], 4}, NumberPadding -> {"", "0"}]& ], 
         TraditionalForm]}, {-4.961845129926823, 
        FormBox[
         TagBox[
          InterpretationBox["\"0.0070\"", 0.007, AutoDelete -> True], 
          NumberForm[#, {
            DirectedInfinity[1], 4}, NumberPadding -> {"", "0"}]& ], 
         TraditionalForm]}, {-2.659260036932778, 
        FormBox[
         TagBox[
          InterpretationBox["\"0.0700\"", 0.07, AutoDelete -> True], 
          NumberForm[#, {
            DirectedInfinity[1], 4}, NumberPadding -> {"", "0"}]& ], 
         TraditionalForm]}, {-6.812445099177812, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {-6.725433722188182, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {-6.6453910145146455`, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {-6.571283042360924, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {-6.437751649736401, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {-6.3771270279199666`, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {-6.319968614080018, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {-6.2659013928097425`, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {-5.521460917862246, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {-5.115995809754082, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {-4.8283137373023015`, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {-4.710530701645918, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {-4.487387150331708, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {-4.382026634673882, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {-4.286716454869556, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {-4.135166556742356, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {-4.074541934925921, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {-4.017383521085972, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {-3.9633162998156966`, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {-3.2188758248682006`, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {-2.8134107167600364`, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}}, {{-6.907755278982137, 
        FormBox["\"\"", TraditionalForm]}, {-4.605170185988091, 
        FormBox["\"\"", TraditionalForm]}, {-5.298317366548036, 
        FormBox["\"\"", TraditionalForm]}, {-2.995732273553991, 
        FormBox["\"\"", TraditionalForm]}, {-6.214608098422191, 
        FormBox["\"\"", TraditionalForm]}, {-3.912023005428146, 
        FormBox["\"\"", TraditionalForm]}, {-5.809142990314028, 
        FormBox["\"\"", TraditionalForm]}, {-3.506557897319982, 
        FormBox["\"\"", TraditionalForm]}, {-6.502290170873972, 
        FormBox["\"\"", TraditionalForm]}, {-4.199705077879927, 
        FormBox["\"\"", TraditionalForm]}, {-4.961845129926823, 
        FormBox["\"\"", TraditionalForm]}, {-2.659260036932778, 
        FormBox["\"\"", TraditionalForm]}, {-6.812445099177812, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {-6.725433722188182, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {-6.6453910145146455`, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {-6.571283042360924, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {-6.437751649736401, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {-6.3771270279199666`, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {-6.319968614080018, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {-6.2659013928097425`, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {-5.521460917862246, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {-5.115995809754082, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {-4.8283137373023015`, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {-4.710530701645918, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {-4.487387150331708, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {-4.382026634673882, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {-4.286716454869556, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {-4.135166556742356, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {-4.074541934925921, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {-4.017383521085972, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {-3.9633162998156966`, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {-3.2188758248682006`, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {-2.8134107167600364`, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}}}, {Automatic, Automatic}},
   GridLines->{None, None},
   Method->{},
   PlotRange->{{171.934389, 
    250.020152}, {-6.015181176125303, -4.287960137012592}},
   PlotRangeClipping->True,
   PlotRangePadding->{
     Scaled[0.02], {
      Scaled[0.02], 
      Scaled[0.02]}},
   Ticks->{Automatic, {{-6.907755278982137, 
       FormBox[
        TagBox[
         InterpretationBox["\"0.0010\"", 0.001, AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 4}, NumberPadding -> {"", "0"}]& ], 
        TraditionalForm]}, {-4.605170185988091, 
       FormBox[
        TagBox[
         InterpretationBox["\"0.0100\"", 0.01, AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 4}, NumberPadding -> {"", "0"}]& ], 
        TraditionalForm]}, {-5.298317366548036, 
       FormBox[
        TagBox[
         InterpretationBox["\"0.0050\"", 0.005, AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 4}, NumberPadding -> {"", "0"}]& ], 
        TraditionalForm]}, {-2.995732273553991, 
       FormBox[
        TagBox[
         InterpretationBox["\"0.0500\"", 0.05, AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 4}, NumberPadding -> {"", "0"}]& ], 
        TraditionalForm]}, {-6.214608098422191, 
       FormBox[
        TagBox[
         InterpretationBox["\"0.0020\"", 0.002, AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 4}, NumberPadding -> {"", "0"}]& ], 
        TraditionalForm]}, {-3.912023005428146, 
       FormBox[
        TagBox[
         InterpretationBox["\"0.0200\"", 0.02, AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 4}, NumberPadding -> {"", "0"}]& ], 
        TraditionalForm]}, {-5.809142990314028, 
       FormBox[
        TagBox[
         InterpretationBox["\"0.0030\"", 0.003, AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 4}, NumberPadding -> {"", "0"}]& ], 
        TraditionalForm]}, {-3.506557897319982, 
       FormBox[
        TagBox[
         InterpretationBox["\"0.0300\"", 0.03, AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 4}, NumberPadding -> {"", "0"}]& ], 
        TraditionalForm]}, {-6.502290170873972, 
       FormBox[
        TagBox[
         InterpretationBox["\"0.0015\"", 0.0015, AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 4}, NumberPadding -> {"", "0"}]& ], 
        TraditionalForm]}, {-4.199705077879927, 
       FormBox[
        TagBox[
         InterpretationBox["\"0.0150\"", 0.015, AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 4}, NumberPadding -> {"", "0"}]& ], 
        TraditionalForm]}, {-4.961845129926823, 
       FormBox[
        TagBox[
         InterpretationBox["\"0.0070\"", 0.007, AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 4}, NumberPadding -> {"", "0"}]& ], 
        TraditionalForm]}, {-2.659260036932778, 
       FormBox[
        TagBox[
         InterpretationBox["\"0.0700\"", 0.07, AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 4}, NumberPadding -> {"", "0"}]& ], 
        TraditionalForm]}, {-6.812445099177812, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-6.725433722188182, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-6.6453910145146455`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-6.571283042360924, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-6.437751649736401, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-6.3771270279199666`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-6.319968614080018, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-6.2659013928097425`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-5.521460917862246, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-5.115995809754082, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-4.8283137373023015`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-4.710530701645918, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-4.487387150331708, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-4.382026634673882, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-4.286716454869556, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-4.135166556742356, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-4.074541934925921, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-4.017383521085972, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-3.9633162998156966`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-3.2188758248682006`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-2.8134107167600364`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}}}], TraditionalForm]], "Output",
 CellChangeTimes->{{3.524310141470269*^9, 3.524310156111814*^9}}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Statistical Sampling(10 min)", "Subsection",
 CellChangeTimes->{{3.51217479466645*^9, 3.51217479600805*^9}, {
  3.5121749452220497`*^9, 3.51217494940285*^9}, {3.51233694800315*^9, 
  3.51233694829455*^9}}],

Cell[TextData[{
 "You have a box filled with 10 000 helium atoms with the geometry shown in \
the following figure.  Each atom is moving in a random direction between -\
\[Pi] and \[Pi] and with a random position in the box.  How many of the atoms \
make it out of the box without colliding with a wall?\n",
 Cell[BoxData[
  GraphicsBox[{
    LineBox[{{1.0555555555555558`, 0.1541666666666679}, {0.24444444444444483`,
      0.15416666666666723`}}], 
    LineBox[{{1.0583333333333336`, 0.8194444444444466}, {0.2472222222222226, 
     0.819444444444446}}], 
    LineBox[{{0.24444427777777777`, 0.8194444444444444}, {
     0.24444427777777777`, 0.1527777777777779}}], 
    LineBox[{{1.055555388888889, 0.8194444444444444}, {1.055555388888889, 
     0.663888888888889}}], 
    LineBox[{{1.0499998333333336`, 0.15555555555555567`}, {
     1.0499998333333336`, 0.32499999999999996`}}], InsetBox[
     StyleBox[Cell["3 mm",
       GeneratedCell->False,
       CellAutoOverwrite->False,
       CellBaseline->Baseline,
       TextAlignment->Left],
      Background->RGBColor[
       0.9490196078431372, 1., 
        0.8666666666666667]], {0.5638887222222222, 0.8416666666666668}, {
     Left, Baseline}, {0.06944444444444443, 0.04166666666666667}, {{1., 0.}, {
     0., 1.}},
     Alignment->{Left, Top}], InsetBox[
     StyleBox[Cell["2.5 mm",
       GeneratedCell->False,
       CellAutoOverwrite->False,
       CellBaseline->Baseline,
       TextAlignment->Left],
      Background->RGBColor[
       0.9490196078431372, 1., 
        0.8666666666666667]], {0.11944427777777777`, 0.48888888888888893`}, {
     Left, Baseline},
     Alignment->{Left, Top}], 
    InsetBox["", {0.2638887222222222, 0.37777777777777777`}, {Left, Baseline},
     Alignment->{Left, Top}], InsetBox[
     StyleBox[Cell["3 mm",
       GeneratedCell->False,
       CellAutoOverwrite->False,
       CellBaseline->Baseline,
       TextAlignment->Left],
      Background->RGBColor[0.9490196078431372, 1., 0.8666666666666667]], 
     {0.5138887222222221, 0.11388888888888893`}, {Left, Baseline},
     Alignment->{Left, Top}], InsetBox[
     StyleBox[Cell["0.5 mm",
       GeneratedCell->False,
       CellAutoOverwrite->False,
       CellBaseline->Baseline,
       TextAlignment->Left],
      Background->RGBColor[
       0.9490196078431372, 1., 
        0.8666666666666667]], {1.077777611111111, 0.7444444444444445}, {
     Left, Baseline},
     Alignment->{Left, Top}], InsetBox[
     StyleBox[Cell["0.5 mm",
       GeneratedCell->False,
       CellAutoOverwrite->False,
       CellBaseline->Baseline,
       TextAlignment->Left],
      Background->RGBColor[
       0.9490196078431372, 1., 
        0.8666666666666667]], {1.0597220555555555`, 0.2222222222222232}, {
     Left, Baseline}, {0.09166666666666728, 0.03333333333333333}, {{1., 0.}, {
     0., 1.}},
     Alignment->{Left, Top}]},
   ContentSelectable->True,
   ImagePadding->{{0., 0.}, {0., 0.}},
   ImageSize->{480, 360},
   PlotRange->{{0., 1.333333}, {0., 1.}},
   PlotRangePadding->Automatic]], "Input"]
}], "Text",
 CellChangeTimes->{{3.5123372969029503`*^9, 3.5123373266613503`*^9}, {
  3.5123373725223503`*^9, 3.51233739342855*^9}, {3.51233747921375*^9, 
  3.5123378780001497`*^9}, {3.51233909630875*^9, 3.51233914863515*^9}, {
  3.52390114667341*^9, 3.5239011500110292`*^9}}],

Cell["\<\
HINT: A good way to approach this would be to first create a list of random \
positions and angles for each particle.  Next create a function which will \
calculuate the angle between the position of a point inside the box and the \
position of an edge in the slit of the box.  You may find the ArcTan function \
helpful for this.  Then create a function as Module which takes a list of \
three elements as an argument ({x_, y_, theta_}) and does three things:\
\>", "Text",
 CellChangeTimes->{{3.51233904686635*^9, 3.51233911836415*^9}, {
  3.51233915908535*^9, 3.5123392536101503`*^9}, {3.5123395317999496`*^9, 
  3.51233953747015*^9}}],

Cell[CellGroupData[{

Cell["\<\
Calculate the angle between the atom position and the top slit\
\>", "ItemNumbered",
 CellChangeTimes->{{3.5123392664881496`*^9, 3.51233928339215*^9}, {
  3.51233950901035*^9, 3.5123395208467503`*^9}}],

Cell["\<\
Calculate the angle between the atom and the bottom slit\
\>", "ItemNumbered",
 CellChangeTimes->{{3.51233928398415*^9, 3.51233930104115*^9}}],

Cell["\<\
Return true if the angle of the atom\[CloseCurlyQuote]s trajectory is between \
the angle to the bottom slit and the top slit.  In other words, if tmax is \
the angle to the top of the slit and tmin is the angle to the bottom of the \
slit, the last line in the Module should be  tmin<=theta<=tmax (no semicolon).\
\>", "ItemNumbered",
 CellChangeTimes->{{3.5123392958601503`*^9, 3.51233939538015*^9}, {
  3.5188571374828*^9, 3.5188571384898*^9}}],

Cell["\<\
Use the Select and Length functions to find how many elements in the list of \
random atomic locations and directions will make it through the slit without \
hitting a wall.\
\>", "ItemNumbered",
 CellChangeTimes->{{3.51233939844215*^9, 3.51233943056715*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"xPosition", " ", "=", " ", 
     RowBox[{"RandomReal", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "3"}], "}"}], ",", "10000"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"yPosition", " ", "=", " ", 
     RowBox[{"RandomReal", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "2.5"}], "}"}], ",", "10000"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"theta", " ", "=", " ", 
     RowBox[{"RandomReal", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", 
         RowBox[{"2", "\[Pi]"}]}], "}"}], ",", "10000"}], "]"}]}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{{3.5123379302723503`*^9, 3.51233800150695*^9}, {
   3.51233814760015*^9, 3.5123381665897503`*^9}, {3.51233843854275*^9, 
   3.51233847851575*^9}, {3.51233858075695*^9, 3.51233861252295*^9}, {
   3.5123389477309504`*^9, 3.51233895329495*^9}, {3.51233899388715*^9, 
   3.51233899635435*^9}, 3.5123394370771503`*^9, {3.524310357645952*^9, 
   3.524310360853875*^9}, {3.524310395735708*^9, 3.524310481268573*^9}, {
   3.524310522553646*^9, 3.524310548074437*^9}, 3.524310586385803*^9, {
   3.524310973188733*^9, 3.5243109865745363`*^9}, {3.5243130680074787`*^9, 
   3.524313069854927*^9}, 3.524313197995347*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"dataVectors", " ", "=", " ", 
   RowBox[{"Transpose", "[", 
    RowBox[{"{", 
     RowBox[{"xPosition", ",", "yPosition", ",", "theta"}], "}"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.524311019758398*^9, 3.524311130866043*^9}, 
   3.524311183928156*^9, {3.524311297077589*^9, 3.524311365538205*^9}, {
   3.52431139710675*^9, 3.524311412023934*^9}, {3.524313194302689*^9, 
   3.524313195321299*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"testFunction", "[", 
   RowBox[{"{", 
    RowBox[{"x_", ",", "y_", ",", "\[Theta]_"}], "}"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"xMax", " ", "=", " ", "3.0"}], ",", " ", 
      RowBox[{"yMin", " ", "=", " ", "0.5"}], ",", " ", 
      RowBox[{"yMax", " ", "=", " ", "2.0"}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"thetaMax", " ", "=", "  ", 
      RowBox[{"ArcTan", "[", 
       FractionBox[
        RowBox[{"(", 
         RowBox[{"yMax", " ", "-", " ", "y"}], ")"}], 
        RowBox[{"(", 
         RowBox[{"xMax", "-", "x"}], ")"}]], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"thetaMin", " ", "=", " ", 
      RowBox[{"ArcTan", "[", 
       FractionBox[
        RowBox[{"(", 
         RowBox[{"y", " ", "-", " ", "yMin"}], ")"}], 
        RowBox[{"(", 
         RowBox[{"xMax", " ", "-", " ", "x"}], ")"}]], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"thetaMin", "<", "\[Theta]", " ", "<", " ", "thetaMax"}]}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.524311421758025*^9, 3.524311422815137*^9}, {
  3.524311704679171*^9, 3.524311747012542*^9}, {3.524311840225766*^9, 
  3.524311845962331*^9}, {3.524311880544076*^9, 3.5243118815521317`*^9}, {
  3.5243119309856977`*^9, 3.5243119330030947`*^9}, {3.524312256614352*^9, 
  3.524312258524768*^9}, {3.524312696762312*^9, 3.524312720719594*^9}, {
  3.524312760839662*^9, 3.524312917149684*^9}, {3.524313202507798*^9, 
  3.524313206411854*^9}, {3.524313390654263*^9, 3.524313394583496*^9}, {
  3.524316936605782*^9, 3.524316940202289*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Length", "[", 
   RowBox[{"Select", "[", 
    RowBox[{
     RowBox[{"testFunction", "/@", "dataVectors"}], " ", ",", 
     RowBox[{
      RowBox[{"#", "\[Equal]", "True"}], "&"}]}], "]"}], "]"}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.5243129217553673`*^9, 3.524313153739979*^9}}],

Cell[BoxData[
 FormBox["493", TraditionalForm]], "Output",
 CellChangeTimes->{{3.524313147979209*^9, 3.5243131545785847`*^9}, {
   3.5243132088513927`*^9, 3.5243132130894213`*^9}, 3.5243133737548313`*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
AutoGeneratedPackage->None,
WindowSize->{727, 852},
WindowMargins->{{4, Automatic}, {Automatic, 0}},
ShowSelection->True,
FrontEndVersion->"8.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (February 23, \
2011)",
StyleDefinitions->FrontEnd`FileName[{"Creative"}, "PastelColor.nb", 
  CharacterEncoding -> "UTF-8"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[567, 22, 506, 6, 60, "Title"],
Cell[1076, 30, 332, 6, 36, "Subtitle"],
Cell[CellGroupData[{
Cell[1433, 40, 202, 3, 72, "Section"],
Cell[CellGroupData[{
Cell[1660, 47, 143, 2, 34, "Subsection"],
Cell[CellGroupData[{
Cell[1828, 53, 99, 1, 24, "Subsubsection"],
Cell[1930, 56, 1492, 30, 176, "Text"]
}, Closed]],
Cell[CellGroupData[{
Cell[3459, 91, 93, 1, 18, "Subsubsection"],
Cell[3555, 94, 1002, 20, 104, "Text"],
Cell[4560, 116, 2737, 71, 244, "Input"],
Cell[7300, 189, 623, 22, 61, "Text"],
Cell[7926, 213, 204, 5, 37, "Input"],
Cell[8133, 220, 182, 4, 26, "Text"],
Cell[8318, 226, 234, 5, 37, "Input"],
Cell[8555, 233, 393, 7, 56, "Text"],
Cell[8951, 242, 2632, 64, 244, "Input"],
Cell[11586, 308, 346, 8, 41, "Text"],
Cell[11935, 318, 171, 4, 37, "Input"],
Cell[12109, 324, 492, 10, 56, "Text"]
}, Closed]],
Cell[CellGroupData[{
Cell[12638, 339, 98, 1, 18, "Subsubsection"],
Cell[12739, 342, 1237, 40, 280, "Text"],
Cell[CellGroupData[{
Cell[14001, 386, 903, 28, 53, "Input"],
Cell[14907, 416, 830, 27, 53, "Output"]
}, Open  ]],
Cell[15752, 446, 578, 11, 71, "Text"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[16379, 463, 148, 2, 34, "Subsection"],
Cell[16530, 467, 934, 14, 86, "Text"],
Cell[17467, 483, 351, 8, 37, "Input"],
Cell[17821, 493, 573, 11, 86, "Text"],
Cell[CellGroupData[{
Cell[18419, 508, 250, 4, 68, "Input"],
Cell[18672, 514, 133, 3, 37, "Output"],
Cell[18808, 519, 117, 2, 37, "Output"],
Cell[18928, 523, 196, 6, 37, "Output"]
}, Closed]],
Cell[19139, 532, 307, 6, 38, "Text"],
Cell[CellGroupData[{
Cell[19471, 542, 236, 6, 37, "Input"],
Cell[19710, 550, 25179, 419, 243, "Output"]
}, Closed]],
Cell[44904, 972, 1345, 40, 87, "Text"],
Cell[CellGroupData[{
Cell[46274, 1016, 1097, 27, 156, "Input"],
Cell[47374, 1045, 168, 3, 37, "Output"],
Cell[47545, 1050, 171, 3, 37, "Output"],
Cell[47719, 1055, 169, 3, 37, "Output"]
}, Closed]],
Cell[47903, 1061, 1211, 19, 143, "Text"],
Cell[CellGroupData[{
Cell[49139, 1084, 1775, 50, 158, "Input"],
Cell[50917, 1136, 116, 2, 37, "Output"]
}, Open  ]],
Cell[51048, 1141, 452, 8, 56, "Text"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[51549, 1155, 380, 7, 72, "Section"],
Cell[CellGroupData[{
Cell[51954, 1166, 482, 6, 34, "Subsection"],
Cell[52439, 1174, 1997, 49, 141, "Text"],
Cell[54439, 1225, 1804, 33, 53, "Input"],
Cell[CellGroupData[{
Cell[56268, 1262, 1160, 16, 53, "Input"],
Cell[57431, 1280, 123, 3, 37, "Output"],
Cell[57557, 1285, 121, 3, 37, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[57715, 1293, 1130, 16, 53, "Input"],
Cell[58848, 1311, 126, 3, 37, "Output"],
Cell[58977, 1316, 121, 3, 37, "Output"]
}, Open  ]],
Cell[59113, 1322, 1841, 47, 116, "Text"],
Cell[60957, 1371, 151, 3, 37, "Input"],
Cell[61111, 1376, 1606, 26, 86, "Text"],
Cell[CellGroupData[{
Cell[62742, 1406, 2311, 42, 113, "Input"],
Cell[65056, 1450, 150, 3, 37, "Output"],
Cell[65209, 1455, 150, 3, 37, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[65396, 1463, 1396, 21, 68, "Input"],
Cell[66795, 1486, 99, 2, 37, "Output"],
Cell[66897, 1490, 99, 2, 37, "Output"]
}, Open  ]],
Cell[67011, 1495, 1619, 40, 60, "Text"],
Cell[CellGroupData[{
Cell[68655, 1539, 546, 15, 102, "Input"],
Cell[69204, 1556, 98, 2, 37, "Output"],
Cell[69305, 1560, 98, 2, 37, "Output"],
Cell[69406, 1564, 98, 2, 37, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[69553, 1572, 623, 10, 26, "Subsection"],
Cell[70179, 1584, 1171, 31, 56, "Text"],
Cell[CellGroupData[{
Cell[71375, 1619, 1161, 24, 68, "Input"],
Cell[72539, 1645, 98, 2, 37, "Output"],
Cell[72640, 1649, 98, 2, 37, "Output"],
Cell[72741, 1653, 98, 2, 37, "Output"]
}, Open  ]],
Cell[72854, 1658, 575, 10, 56, "Text"],
Cell[CellGroupData[{
Cell[73454, 1672, 640, 13, 113, "Input"],
Cell[74097, 1687, 119, 3, 57, "Output"],
Cell[74219, 1692, 118, 2, 37, "Output"],
Cell[74340, 1696, 100, 2, 37, "Output"],
Cell[74443, 1700, 138, 3, 40, "Output"],
Cell[74584, 1705, 100, 2, 37, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[74721, 1712, 773, 19, 53, "Input"],
Cell[75497, 1733, 98, 2, 37, "Output"],
Cell[75598, 1737, 98, 2, 37, "Output"]
}, Open  ]],
Cell[75711, 1742, 1562, 46, 71, "Text"],
Cell[CellGroupData[{
Cell[77298, 1792, 295, 6, 53, "Input"],
Cell[77596, 1800, 126, 2, 37, "Output"],
Cell[77725, 1804, 128, 2, 37, "Output"]
}, Open  ]],
Cell[77868, 1809, 834, 13, 71, "Text"],
Cell[CellGroupData[{
Cell[78727, 1826, 462, 13, 55, "Input"],
Cell[79192, 1841, 173, 4, 57, "Output"]
}, Open  ]],
Cell[79380, 1848, 549, 10, 41, "Text"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[79978, 1864, 529, 7, 72, "Section"],
Cell[CellGroupData[{
Cell[80532, 1875, 264, 3, 34, "Subsection"],
Cell[80799, 1880, 1443, 49, 86, "Text"],
Cell[CellGroupData[{
Cell[82267, 1933, 859, 21, 68, "Input"],
Cell[83129, 1956, 157, 4, 37, "Output"],
Cell[83289, 1962, 155, 4, 37, "Output"],
Cell[83447, 1968, 294, 10, 37, "Output"]
}, Open  ]],
Cell[83756, 1981, 1224, 30, 86, "Text"],
Cell[CellGroupData[{
Cell[85005, 2015, 948, 20, 83, "Input"],
Cell[85956, 2037, 257, 6, 37, "Output"],
Cell[86216, 2045, 257, 6, 37, "Output"],
Cell[86476, 2053, 264, 6, 37, "Output"],
Cell[86743, 2061, 257, 6, 37, "Output"]
}, Open  ]],
Cell[87015, 2070, 407, 11, 56, "Text"],
Cell[CellGroupData[{
Cell[87447, 2085, 369, 8, 53, "Input"],
Cell[87819, 2095, 748, 13, 53, "Output"],
Cell[88570, 2110, 750, 13, 53, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[89369, 2129, 277, 5, 26, "Subsection"],
Cell[89649, 2136, 869, 24, 41, "Text"],
Cell[CellGroupData[{
Cell[90543, 2164, 529, 13, 83, "Input"],
Cell[91075, 2179, 124, 2, 37, "Output"],
Cell[91202, 2183, 123, 2, 37, "Output"],
Cell[91328, 2187, 122, 2, 37, "Output"]
}, Open  ]],
Cell[91465, 2192, 1387, 24, 86, "Text"],
Cell[CellGroupData[{
Cell[92877, 2220, 253, 6, 37, "Input"],
Cell[93133, 2228, 123, 3, 37, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[93293, 2236, 370, 11, 37, "Input"],
Cell[93666, 2249, 145, 4, 37, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[93848, 2258, 376, 12, 37, "Input"],
Cell[94227, 2272, 144, 4, 37, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[94408, 2281, 187, 4, 37, "Input"],
Cell[94598, 2287, 121, 3, 37, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[94756, 2295, 155, 3, 37, "Input"],
Cell[94914, 2300, 116, 3, 37, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[95067, 2308, 178, 4, 37, "Input"],
Cell[95248, 2314, 123, 3, 37, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[95408, 2322, 715, 20, 37, "Input"],
Cell[96126, 2344, 155, 4, 37, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[96330, 2354, 266, 3, 26, "Subsection"],
Cell[96599, 2359, 1047, 20, 71, "Text"],
Cell[CellGroupData[{
Cell[97671, 2383, 1242, 33, 98, "Input"],
Cell[98916, 2418, 1071, 29, 56, "Output"],
Cell[99990, 2449, 646, 18, 72, "Output"],
Cell[100639, 2469, 172, 5, 37, "Output"],
Cell[100814, 2476, 101, 2, 37, "Output"],
Cell[100918, 2480, 155, 4, 37, "Output"]
}, Open  ]],
Cell[101088, 2487, 2002, 54, 56, "Text"],
Cell[CellGroupData[{
Cell[103115, 2545, 848, 18, 143, "Input"],
Cell[103966, 2565, 124, 2, 37, "Output"],
Cell[104093, 2569, 125, 2, 37, "Output"],
Cell[104221, 2573, 251, 6, 37, "Output"],
Cell[104475, 2581, 252, 6, 37, "Output"],
Cell[104730, 2589, 194, 5, 37, "Output"],
Cell[104927, 2596, 195, 5, 37, "Output"],
Cell[105125, 2603, 215, 5, 37, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[105389, 2614, 298, 4, 26, "Subsection"],
Cell[105690, 2620, 1407, 28, 71, "Text"],
Cell[CellGroupData[{
Cell[107122, 2652, 1064, 24, 68, "Input"],
Cell[108189, 2678, 377, 11, 37, "Output"],
Cell[108569, 2691, 172, 3, 37, "Output"]
}, Open  ]],
Cell[108756, 2697, 510, 11, 56, "Text"],
Cell[CellGroupData[{
Cell[109291, 2712, 675, 17, 83, "Input"],
Cell[109969, 2731, 353, 8, 37, "Output"],
Cell[110325, 2741, 239, 6, 37, "Output"],
Cell[110567, 2749, 246, 6, 37, "Output"]
}, Open  ]],
Cell[110828, 2758, 519, 11, 41, "Text"],
Cell[CellGroupData[{
Cell[111372, 2773, 330, 7, 53, "Input"],
Cell[111705, 2782, 418, 9, 37, "Output"]
}, Open  ]],
Cell[112138, 2794, 206, 5, 26, "Text"]
}, Closed]],
Cell[CellGroupData[{
Cell[112381, 2804, 623, 10, 26, "Subsection"],
Cell[113007, 2816, 499, 8, 71, "Text"],
Cell[CellGroupData[{
Cell[113531, 2828, 428, 7, 24, "Subsubsection"],
Cell[113962, 2837, 1950, 44, 71, "Text"],
Cell[CellGroupData[{
Cell[115937, 2885, 2054, 40, 128, "Input"],
Cell[117994, 2927, 240, 6, 37, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[118283, 2939, 339, 6, 24, "Subsubsection"],
Cell[118625, 2947, 1669, 54, 56, "Text"],
Cell[CellGroupData[{
Cell[120319, 3005, 977, 24, 98, "Input"],
Cell[121299, 3031, 216, 6, 37, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[121564, 3043, 659, 9, 24, "Subsubsection"],
Cell[122226, 3054, 610, 11, 56, "Text"],
Cell[CellGroupData[{
Cell[122861, 3069, 888, 17, 53, "Input"],
Cell[123752, 3088, 654, 18, 56, "Output"],
Cell[124409, 3108, 693, 19, 56, "Output"]
}, Open  ]],
Cell[125117, 3130, 1161, 27, 71, "Text"],
Cell[CellGroupData[{
Cell[126303, 3161, 866, 16, 37, "Input"],
Cell[127172, 3179, 381, 12, 37, "Output"]
}, Open  ]],
Cell[127568, 3194, 974, 15, 56, "Text"],
Cell[CellGroupData[{
Cell[128567, 3213, 1154, 19, 37, "Input"],
Cell[129724, 3234, 846, 24, 56, "Output"]
}, Open  ]],
Cell[130585, 3261, 665, 18, 41, "Text"],
Cell[CellGroupData[{
Cell[131275, 3283, 385, 8, 37, "Input"],
Cell[131663, 3293, 687, 19, 56, "Output"]
}, Open  ]],
Cell[132365, 3315, 836, 19, 71, "Text"],
Cell[CellGroupData[{
Cell[133226, 3338, 708, 17, 78, "Input"],
Cell[133937, 3357, 291, 7, 37, "Output"],
Cell[134231, 3366, 291, 7, 37, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[134571, 3379, 325, 6, 24, "Subsubsection"],
Cell[134899, 3387, 788, 15, 56, "Text"],
Cell[CellGroupData[{
Cell[135712, 3406, 1725, 37, 113, "Input"],
Cell[137440, 3445, 240, 6, 37, "Output"],
Cell[137683, 3453, 246, 6, 37, "Output"],
Cell[137932, 3461, 241, 6, 37, "Output"],
Cell[138176, 3469, 443, 15, 61, "Output"]
}, Open  ]],
Cell[138634, 3487, 1194, 27, 56, "Text"],
Cell[CellGroupData[{
Cell[139853, 3518, 1375, 24, 68, "Input"],
Cell[141231, 3544, 629, 13, 40, "Message"],
Cell[141863, 3559, 351, 10, 37, "Output"],
Cell[142217, 3571, 6151, 160, 247, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[148417, 3737, 765, 12, 24, "Subsubsection"],
Cell[149185, 3751, 2234, 37, 131, "Text"],
Cell[CellGroupData[{
Cell[151444, 3792, 748, 18, 68, "Input"],
Cell[152195, 3812, 122, 2, 37, "Output"]
}, Open  ]],
Cell[152332, 3817, 255, 5, 41, "Text"],
Cell[CellGroupData[{
Cell[152612, 3826, 475, 13, 68, "Input"],
Cell[153090, 3841, 225, 6, 37, "Output"]
}, Open  ]],
Cell[153330, 3850, 288, 5, 41, "Text"],
Cell[CellGroupData[{
Cell[153643, 3859, 452, 13, 68, "Input"],
Cell[154098, 3874, 243, 6, 37, "Output"]
}, Open  ]],
Cell[154356, 3883, 703, 13, 71, "Text"],
Cell[CellGroupData[{
Cell[155084, 3900, 552, 14, 37, "Input"],
Cell[155639, 3916, 706, 19, 90, "Output"]
}, Open  ]],
Cell[156360, 3938, 187, 4, 26, "Text"],
Cell[CellGroupData[{
Cell[156572, 3946, 359, 9, 83, "Input"],
Cell[156934, 3957, 679, 18, 74, "Output"],
Cell[157616, 3977, 178, 5, 37, "Output"],
Cell[157797, 3984, 183, 5, 37, "Output"],
Cell[157983, 3991, 179, 5, 37, "Output"]
}, Open  ]],
Cell[158177, 3999, 153, 3, 26, "Text"],
Cell[CellGroupData[{
Cell[158355, 4006, 940, 25, 68, "Input"],
Cell[159298, 4033, 331, 7, 37, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[159702, 4048, 622, 9, 72, "Section"],
Cell[CellGroupData[{
Cell[160349, 4061, 429, 7, 34, "Subsection"],
Cell[160781, 4070, 4608, 97, 371, "Text"],
Cell[CellGroupData[{
Cell[165414, 4171, 881, 18, 98, "Input"],
Cell[166298, 4191, 223, 4, 37, "Output"],
Cell[166524, 4197, 220, 4, 37, "Output"],
Cell[166747, 4203, 221, 4, 37, "Output"],
Cell[166971, 4209, 15175, 258, 251, "Output"]
}, Open  ]],
Cell[182161, 4470, 993, 27, 86, "Text"],
Cell[CellGroupData[{
Cell[183179, 4501, 1128, 27, 113, "Input"],
Cell[184310, 4530, 222, 4, 37, "Output"],
Cell[184535, 4536, 224, 4, 37, "Output"],
Cell[184762, 4542, 236, 5, 49, "Output"],
Cell[185001, 4549, 2160, 44, 249, "Output"],
Cell[187164, 4595, 1594, 31, 249, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[188807, 4632, 470, 6, 26, "Subsection"],
Cell[189280, 4640, 1765, 31, 206, "Text"],
Cell[CellGroupData[{
Cell[191070, 4675, 521, 15, 53, "Input"],
Cell[191594, 4692, 619, 18, 37, "Output"],
Cell[192216, 4712, 980, 18, 68, "Output"]
}, Open  ]],
Cell[193211, 4733, 1779, 42, 101, "Text"],
Cell[CellGroupData[{
Cell[195015, 4779, 1098, 25, 98, "Input"],
Cell[196116, 4806, 234, 4, 37, "Output"],
Cell[196353, 4812, 237, 4, 37, "Output"],
Cell[196593, 4818, 24587, 570, 249, "Output"]
}, Open  ]],
Cell[221195, 5391, 1104, 29, 71, "Text"],
Cell[CellGroupData[{
Cell[222324, 5424, 1768, 42, 113, "Input"],
Cell[224095, 5468, 351, 5, 37, "Output"],
Cell[224449, 5475, 363, 5, 37, "Output"],
Cell[224815, 5482, 14077, 401, 249, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[238941, 5889, 869, 11, 26, "Subsection"],
Cell[239813, 5902, 5253, 159, 237, "Text"],
Cell[CellGroupData[{
Cell[245091, 6065, 2452, 50, 113, "Input"],
Cell[247546, 6117, 284, 7, 37, "Output"],
Cell[247833, 6126, 285, 7, 37, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[248155, 6138, 1151, 34, 104, "Input"],
Cell[249309, 6174, 239, 4, 37, "Output"],
Cell[249551, 6180, 239, 4, 37, "Output"],
Cell[249793, 6186, 240, 4, 37, "Output"],
Cell[250036, 6192, 241, 4, 37, "Output"]
}, Open  ]]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[250338, 6203, 213, 3, 72, "Section"],
Cell[CellGroupData[{
Cell[250576, 6210, 203, 3, 34, "Subsection"],
Cell[250782, 6215, 639, 10, 56, "Text"],
Cell[CellGroupData[{
Cell[251446, 6229, 1461, 37, 113, "Input"],
Cell[252910, 6268, 48768, 806, 239, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[301727, 7080, 112, 1, 26, "Subsection"],
Cell[301842, 7083, 412, 7, 56, "Text"],
Cell[302257, 7092, 514, 12, 53, "Input"],
Cell[302774, 7106, 583, 12, 56, "Text"],
Cell[CellGroupData[{
Cell[303382, 7122, 1135, 25, 98, "Input"],
Cell[304520, 7149, 15801, 330, 244, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[320370, 7485, 211, 3, 26, "Subsection"],
Cell[320584, 7490, 3308, 78, 426, "Text"],
Cell[323895, 7570, 648, 10, 71, "Text"],
Cell[CellGroupData[{
Cell[324568, 7584, 211, 4, 26, "ItemNumbered"],
Cell[324782, 7590, 152, 3, 26, "ItemNumbered"],
Cell[324937, 7595, 457, 7, 52, "ItemNumbered"],
Cell[325397, 7604, 269, 5, 39, "ItemNumbered"]
}, Open  ]],
Cell[325681, 7612, 1368, 33, 83, "Input"],
Cell[327052, 7647, 445, 10, 37, "Input"],
Cell[327500, 7659, 1648, 39, 149, "Input"],
Cell[CellGroupData[{
Cell[329173, 7702, 336, 9, 53, "Input"],
Cell[329512, 7713, 204, 3, 37, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
