(* Content-type: application/mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 6.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       145,          7]
NotebookDataLength[    315065,       6173]
NotebookOptionsPosition[    310142,       6014]
NotebookOutlinePosition[    310588,       6032]
CellTagsIndexPosition[    310545,       6029]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Physics 230 -- Lab 14 (Sample Final Exam)", "Title",
 CellChangeTimes->{{3.427317918278078*^9, 3.4273179356531897`*^9}, 
   3.427321334003064*^9, {3.436301249835267*^9, 3.4363012515071316`*^9}, {
   3.436302404390378*^9, 3.4363024087028503`*^9}}],

Cell[TextData[{
 "A two-hour closed-book/notes in-class final exam will be administered \
during the regularly-scheduled final exam period.  It will consist of a ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " notebook file containing six exam problems.  Your instructor and/or TA can \
clarify the meaning of the problem descriptions, but will not answer any \
other questions.  The only external resource that you are permitted to access \
is the built-in ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " Documentation Center.  Partial credit will be considered for problems that \
are only partially complete at the end of the exam period.\n\nWe provide a \
few sample exam problems here so that you will have some idea of what to \
expect on the actual exam.  A new version of this lab containing solutions \
will be posted during reading days."
}], "Text",
 CellChangeTimes->{{3.436300763854003*^9, 3.4363012152729883`*^9}, {
  3.4363013575220785`*^9, 3.4363013580533247`*^9}, {3.436647067051754*^9, 
  3.4366471009265375`*^9}, {3.4366471532855773`*^9, 3.4366471948321867`*^9}, {
  3.4366472257538633`*^9, 3.436647276581663*^9}, {3.436654296087442*^9, 
  3.4366543031187367`*^9}, {3.437759004448241*^9, 3.437759039463866*^9}, {
  3.526090397521*^9, 3.5260904148993998`*^9}}],

Cell[CellGroupData[{

Cell["(#1)", "Section",
 CellChangeTimes->{{3.4273179417938538`*^9, 3.427317943309489*^9}, {
  3.4363012983818316`*^9, 3.4363013001630707`*^9}, {3.4363013658970246`*^9, 
  3.436301386443768*^9}, {3.436647310643945*^9, 3.436647314409546*^9}}],

Cell[BoxData["Tooltip"], "Input",
 CellChangeTimes->{{3.5318451962324257`*^9, 3.531845199602359*^9}}],

Cell[TextData[{
 "Plot the expression,  ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     SuperscriptBox["x", "2"]}]], TraditionalForm]],
  CellChangeTimes->{{3.427318039919482*^9, 3.427318065700897*^9}}],
 ", and its first four derivatives, all on the same graph over the range {",
 StyleBox["x",
  FontSlant->"Italic"],
 ", -2, 2}.  Make sure that none of the curves get cut off at the top or \
bottom."
}], "Text",
 CellChangeTimes->{
  3.4273180135755634`*^9, {3.4273180463413982`*^9, 3.4273181034042635`*^9}, {
   3.427318204326784*^9, 3.427318231170706*^9}, {3.4363002307324147`*^9, 
   3.4363003118256454`*^9}, {3.436300368669032*^9, 3.436300438981082*^9}, 
   3.4363006495266094`*^9, {3.4366361031219234`*^9, 3.436636103700045*^9}, 
   3.4381079703298235`*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"eq", " ", "=", " ", 
   RowBox[{"Exp", "[", 
    RowBox[{"-", 
     RowBox[{"x", "^", "2"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eqs", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Tooltip", "[", 
      RowBox[{"D", "[", 
       RowBox[{"eq", ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", "i"}], "}"}]}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "0", ",", "4"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", "eqs", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.53184498204671*^9, 3.531845178242786*^9}, {
  3.5318452414115224`*^9, 3.5318453598891525`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   TagBox[
    TooltipBox[
     {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
o/D//0f/B3SlOPU=
       "]]},
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"-", 
        SuperscriptBox["x", "2"]}]]],
    Annotation[#, E^(-$CellContext`x^2), "Tooltip"]& ], 
   TagBox[
    TooltipBox[
     {Hue[0.9060679774997897, 0.6, 0.6], LineBox[CompressedData["
1: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
/yb8P/pVaVk=
       "]]},
     RowBox[{
       RowBox[{"-", "2"}], " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"-", 
          SuperscriptBox["x", "2"]}]], " ", "x"}]],
    Annotation[#, (-2) E^(-$CellContext`x^2) $CellContext`x, "Tooltip"]& ], 
   TagBox[
    TooltipBox[
     {Hue[0.14213595499957954`, 0.6, 0.6], LineBox[CompressedData["
1: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
XTbruEzhTGDR1O41H7ATspfweFJYtdx7L199Fm5R1Tl5NZhCrrQMw8/eWRh5
PO/GizAKVQz/WrvJZ6EEj/f73AcUxkRo+XWEZOKce7xp5jMKW2WWhp8MS0dh
Ezc2JlOoeelCZgkjDcOOHzpp+o7C5IzKBmm9NNSoDctpos+t11XC1s5wv0MD
R0vduFwKRfYJvYz2fIvxixY4GZRS6OfjWsrdnIxP132SPfSVQuaXxj5H5WTM
PVdRpfidonWLlNk9koRahVJPv/+g8LSxaPavc6/Q/Eol/8o2CgmSo+5eloju
5Pr4C78ovPm0Fvm3JuLkRGV+Wied/y+/Kq3+l6jlGXptvotC2duWxr90X6Kq
2FXh5b0UFm5Sa3F7E4+Pn5lrLOqnMLuqofxofSxqSTwaLxmisHFFYL3fwxfI
53PI358+p5Nm6p05x2Jws2lZuMowhUp/49jrm5+huMJ9ntNjFBpvPcZ1NDIK
z/6rvdg0TqGz42I+vxORWFyRq7ubpDCDfVFisP0xnvbeoF/LofCH+qYd62Me
oXLPhqtzExSO3P6pYXj6IaZqlfMIT1H4X1mgrq/YAzxcy8UjPk3hCSG3Vw54
H2uw9tK6GQojY9oLf2iF4a2DOlqzNDdLav1UKbuHt2Nu36r5R+GqrDeMaN0g
5Ezmbg6dpfDYbn7uBd8DUCRSWW7XHO2Xcjdh+8N3ULXIIK6e5rqjvxRqanzQ
L8P52ol5CsWy70TYxd/ECRTOqab5eYURKr2+hmydVnN5isJ1nRtG5t+6YO8z
A+tbNG/vaVJ/etoJc6Tkqj7SLMnnHClvfwa1bfY876HZp1GqcX2pASZ9NKmd
oVlWoNNxkZwKOOedtP/fc5Pmcb+4FVMn4EvfkXPjNI8d3ca64mIHZu3qpXU0
ez3SrXRScQYnFc27L2iev339edwOd0iIeZBh/r/5Hd9d/ClzA9LKru6h6HwX
Hv+zd4mkNyywV5N/THPppuC7L1b4gbnuwYA1NPs/FXfeGe4P4nJi2oF0/bp8
RSfql9+FUULXtofWa4mfmZZTcDC8Om09KkdzxeSI9KIlofDKcm2XLa3vvUtB
QnH+4cCsUtgdQuufNB5xS9Q3AuYivOdf0P2yt5exy51/CPc+2ZWFTFKoJ37t
1J29j0F9kuu7Hd1vqc5SQ6ObT8BeqlFjB+0HhsnpnYzpSHg/P+IYxKKw8r+U
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
jyZda5sZCuLEyo6nXq+D//d+Cvz/91P+Dx3w32I=
       "]]},
     RowBox[{
       RowBox[{
         RowBox[{"-", "2"}], " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"-", 
            SuperscriptBox["x", "2"]}]]}], "+", 
       RowBox[{"4", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"-", 
            SuperscriptBox["x", "2"]}]], " ", 
         SuperscriptBox["x", "2"]}]}]],
    Annotation[#, (-2) E^(-$CellContext`x^2) + 
     4 E^(-$CellContext`x^2) $CellContext`x^2, "Tooltip"]& ], 
   TagBox[
    TooltipBox[
     {Hue[0.37820393249936934`, 0.6, 0.6], LineBox[CompressedData["
1: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
unNa+udtkv1cvCJyyfpQzTmU6kGezySwdpLsRztrDZJu2bHQzO7l+sF3BFjM
vtK/dIKFBCbM5grekvmUWaw7Y8lCZ8u0Pzx4Q0CcO1rYt5+FavTn/NtiCOCj
7LNerUnux2tH9M8Q0g+dd2N8aiw07Wqcs4rsl7vs+QLYm1motfUXxzKAgKvp
lRl0GRa6laiGx3kT0GZhLpgpyEK7rvqVnHcj4NMz64LDdCa6/cXBCz9AQHlu
rhXWyUQzif/+LhgTQO+RHN7ZwkQfskyebDYi+59Gx5oNtUw0LLP19wEtAnzr
Ha4Mf2eiYPEXpl9kyfpedVEhKJyJ2hk2pQcHJuGyftX3O6FMdKH6R79f+yQ8
ctp2xD2IiWqe/1GP+j0JBVnj3sfvMVFs5nyrWQ75/LK6/lfhAhNh4WvnFwIm
gRnhHYyAiQqmAqePSk7CoPTPkf0GTJSSeXA1t+AkNKfwmf/WIuff4KMbwJqA
r3nPV3VtYSKiz3YDV/sEeDDex7JXk9fXie9qi5mA3h1Nn7SH5lGfNeMNIToB
jfnrqYWMeVTu6DBXzBkH3MTh2r6ueUTZVvHSdXgc4m1HtI81ziOh+Uf28qXj
YPOAC10tmEdbVYqEnL3G4Xe9akNa+Dyqd2r+xWoagwK76zt3hs4jXLqA1YTG
IK0vNzrv4TzS25HR7/txDIKZxna/7s6jZH/zyH2+Y7BXzrZ34Ow8Sni2Ni9o
0xh8v/JwVl6f3N9s1NV2t1FIonSvj6HPobNfsLXbGoYh4hTw63fOIT+HLdHH
cobBPzVhpq15Dh2uWBA1ezUMzsYudRtq5pDeY/O0lLPDoHBrKPBNzhwaWiXT
QJkdgrddU5MpoXOItj39ZLTIECR84i//pj2HCgKTcKm1AxDOuvDVWmMOiciE
2/PN9oPf/qqE+a1zKLMMmaE//eBIe+KtLzeHwo84jceE94OshPiOQqE5JL1+
g/kIfz/Ee0vHlfbMohq/gD1LY70QZ7rj+p/Hs+hJyvPhwnA6KAmbVtUHzqLk
4SrKhBsd0qqdFX77ziK/B143/+2nQ97hqMZKz1kU97mAc22BRuZ1XrPIaRZp
Hd3fY3uOBmuPFU6n6s+izKbmhMdnuuHZqUOePsMzKMH1BUseawP/y063txya
QY6K16Yk5qqhO8w+Lm/vDKq3CmnDNlWDQdYp3MxoBok5x8cmnKiCqdkTAh47
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
HRzZyxC80vO61YNB9L//M8P//s+M/g8A98D2
       "]]},
     RowBox[{
       RowBox[{"12", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"-", 
            SuperscriptBox["x", "2"]}]], " ", "x"}], "-", 
       RowBox[{"8", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"-", 
            SuperscriptBox["x", "2"]}]], " ", 
         SuperscriptBox["x", "3"]}]}]],
    Annotation[#, 12 E^(-$CellContext`x^2) $CellContext`x - 8 
     E^(-$CellContext`x^2) $CellContext`x^3, "Tooltip"]& ], 
   TagBox[
    TooltipBox[
     {Hue[0.6142719099991583, 0.6, 0.6], LineBox[CompressedData["
1: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
GajH8a/Ee2E5zGftNC10kYGaImdrrpvI4XLhr6+t3BkoT6AvI/y6HM47XtDt
4MxA4eaWhz3S5XDG69NMl90MRNLxp+jmyOGLpyQ1j+5koN1zl21Snslh5+9u
ydEbGKhWbKve8Z9yeCGry6tmDQN9ikj9p6NEwvR/JWcwLwOZNDetfatJwoOO
51LesenokrpMms1GEv7ETXr7lUlHkV1lD4V3kHCuj6fu1B86kvTVUUs7QsLW
6/sWtGrpyCJmojY4h4TN4iskNj6no21CVFpBIQlv7IvWM66go9UVmfKN5SQs
l6J0xOohHaUyDQVeviJhKtO75UgKHVFuBOYmfyfhtLqhjExfOmoVln/zlo+M
vc7cjTI6Rkdhu2tcFoXIWGPT7qPtB+nIrsJSQUKCjGuLqvX4XOhoYerwME2R
jHtvXXt7Cujo+VCWgZURGRc6EGVCJnS04o5M4K2tZBy8hnmz2ICO7rLusV9v
J2PuC16evzXpaNXPvXVNu8iY4rthxlacjpZuaJcd9SJjuurwzyEhOrJeU/sI
e5Nxze+7KHoNHYnwxugt+5Dx7RI+yYAlGnrwfp0tOYiMtRRD/uRO0VBZhWP5
cggZv0rrLvsxQkPEzyrN12Fk3BddvsOinYZK6qyWR8+TccislHDEOxpy4BlS
cbhIxrz+F7sev6IhBUrq/K04MtZ0cz4pV0hDpefCd79O4Nj7WLd1TyYNyRio
3y+6QcYO5hS++Js0FOzdszk4mWNPl5U1dY7DNm8Hs9M49vKO+GqcpKHDgrHv
V2eQcbp062YvH871Iff03Xc5eiYarkg9QEPW7KGN4Zlk/JIn5+N7RxrqKR26
HJXFsX92TQZ7Jw115ZpEHMvhxE8NObLZlIbWWY7NaOdy7HftZOWo0dD4krKS
WwHH/u7HTd9kaYjvkl/ey4cc+03SNwVEaEhXJdGBXcipl0mMh/lKGroTYblW
uZiM7SvGKWdYVLT3xOkGlRKOfTWX6Uc0Kjq7S8mTt5STz736+oFBKnpnFtb4
hsO86zQSZLqoqPLg2z+Hyzj+Lt902d1GRaUSCVm9HNZYZCleaqSiKdtDg8aP
OP5OHp2oraGik8+E7p/isN1IaxW9nIoiBWOeXuPwbw+jWPV8KrI78kkohsMh
7TkOHneoaJ+dXqYrh3mt+WVTEqno+Xq+nWs4nF53auhdLBUtXxicvvM/f5t+
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
l9G/vh2z8P/+H4X////o/wENJ5lA
       "]]},
     RowBox[{
       RowBox[{"12", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"-", 
            SuperscriptBox["x", "2"]}]]}], "-", 
       RowBox[{"48", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"-", 
            SuperscriptBox["x", "2"]}]], " ", 
         SuperscriptBox["x", "2"]}], "+", 
       RowBox[{"16", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"-", 
            SuperscriptBox["x", "2"]}]], " ", 
         SuperscriptBox["x", "4"]}]}]],
    Annotation[#, 12 E^(-$CellContext`x^2) - 48 
     E^(-$CellContext`x^2) $CellContext`x^2 + 
     16 E^(-$CellContext`x^2) $CellContext`x^4, "Tooltip"]& ]},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.531845028985771*^9, 3.531845046885413*^9}, {
   3.531845082834694*^9, 3.531845087884593*^9}, {3.531845120883933*^9, 
   3.531845132693697*^9}, {3.531845173342884*^9, 3.531845178842774*^9}, 
   3.5318452588611736`*^9, 3.5318453005203404`*^9, {3.5318453368196144`*^9, 
   3.5318453603191442`*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["(#2)", "Section",
 CellChangeTimes->{{3.4273179417938538`*^9, 3.427317943309489*^9}, {
  3.427318275405364*^9, 3.4273182754522395`*^9}, {3.4363013193660727`*^9, 
  3.436301320803563*^9}, {3.4363013690063796`*^9, 3.436301397193699*^9}, {
  3.5260904653342*^9, 3.5260904656774*^9}}],

Cell[TextData[{
 "Calculate the ",
 StyleBox["x",
  FontSlant->"Italic"],
 " = 0 Taylor-series expansion of ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     SuperscriptBox["x", "2"]}]], TraditionalForm]],
  CellChangeTimes->{{3.427318039919482*^9, 3.427318065700897*^9}}],
 "up to 9th order.  Plot this series approximation, together with the exact \
expression, on the same graph over the range {",
 StyleBox["x",
  FontSlant->"Italic"],
 ", -2, 2}."
}], "Text",
 CellChangeTimes->{
  3.4273180135755634`*^9, {3.4273180463413982`*^9, 3.4273181034042635`*^9}, {
   3.427318204326784*^9, 3.427318231170706*^9}, {3.4273183802185345`*^9, 
   3.4273183981874*^9}, {3.4273184310782356`*^9, 3.427318434765759*^9}, {
   3.4273185126412573`*^9, 3.4273186147981615`*^9}, {3.427318739298958*^9, 
   3.427318822986994*^9}, {3.4363004914026213`*^9, 3.436300493840106*^9}, {
   3.4363005526678543`*^9, 3.436300615729951*^9}, {3.4366361099968796`*^9, 
   3.4366361103406277`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ser", " ", "=", " ", 
  RowBox[{
   RowBox[{"Series", "[", 
    RowBox[{
     RowBox[{"Exp", "[", 
      RowBox[{"-", 
       RowBox[{"x", "^", "2"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "9"}], "}"}]}], "]"}], "//", 
   "Normal"}]}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Tooltip", "[", 
    RowBox[{"{", 
     RowBox[{"ser", ",", "eq"}], "}"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.438372399897174*^9, 3.438372400740924*^9}, {
  3.5318454129180927`*^9, 3.5318454134980807`*^9}, {3.531845480436742*^9, 
  3.5318455775448*^9}, {3.531845616804014*^9, 3.531845741331524*^9}}],

Cell[BoxData[
 RowBox[{"1", "-", 
  SuperscriptBox["x", "2"], "+", 
  FractionBox[
   SuperscriptBox["x", "4"], "2"], "-", 
  FractionBox[
   SuperscriptBox["x", "6"], "6"], "+", 
  FractionBox[
   SuperscriptBox["x", "8"], "24"]}]], "Output",
 CellChangeTimes->{{3.5318454952764454`*^9, 3.5318455781647873`*^9}, 
   3.5318456407635355`*^9, 3.531845695762435*^9, 3.531845741761515*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   TagBox[
    TooltipBox[
     {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
XHBzfJ5mOChB+L/3M+H/38/8H0RaBWM=
       "]]},
     RowBox[{"1", "-", 
       SuperscriptBox["x", "2"], "+", 
       FractionBox[
        SuperscriptBox["x", "4"], "2"], "-", 
       FractionBox[
        SuperscriptBox["x", "6"], "6"], "+", 
       FractionBox[
        SuperscriptBox["x", "8"], "24"]}]],
    Annotation[#, 1 - $CellContext`x^2 + Rational[1, 2] $CellContext`x^4 + 
     Rational[-1, 6] $CellContext`x^6 + Rational[1, 24] $CellContext`x^8, 
     "Tooltip"]& ], 
   TagBox[
    TooltipBox[
     {Hue[0.9060679774997897, 0.6, 0.6], LineBox[CompressedData["
1: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
o/D//0f/B3SlOPU=
       "]]},
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"-", 
        SuperscriptBox["x", "2"]}]]],
    Annotation[#, E^(-$CellContext`x^2), "Tooltip"]& ]},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.5318454952764454`*^9, 3.5318455781647873`*^9}, 
   3.5318456407635355`*^9, 3.531845695762435*^9, 3.531845741771515*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["(#3)", "Section",
 CellChangeTimes->{{3.4273179417938538`*^9, 3.427317943309489*^9}, {
  3.4273182809366493`*^9, 3.4273182810304003`*^9}, {3.4363013245222893`*^9, 
  3.436301326147279*^9}, {3.4363013703032465`*^9, 3.43630140099055*^9}, {
  3.5260904750685997`*^9, 3.526090475365*^9}}],

Cell[TextData[{
 "Consider vectors ",
 StyleBox["A",
  FontWeight->"Bold",
  FontColor->GrayLevel[0.5]],
 " and ",
 StyleBox["B",
  FontWeight->"Bold",
  FontColor->GrayLevel[0.5]],
 " defined below.  Determine the sum, scalar product, and matrix direct \
product of ",
 StyleBox["A",
  FontWeight->"Bold",
  FontColor->GrayLevel[0.5]],
 " and ",
 StyleBox["B",
  FontWeight->"Bold",
  FontColor->GrayLevel[0.5]],
 ", the cross product of A and B, the magnitude of ",
 StyleBox["A",
  FontWeight->"Bold",
  FontColor->GrayLevel[0.5]],
 ", the direction (i.e. unit vector) of ",
 StyleBox["A",
  FontWeight->"Bold",
  FontColor->GrayLevel[0.5]],
 ", and the angle between ",
 StyleBox["A",
  FontWeight->"Bold",
  FontColor->GrayLevel[0.5]],
 " and ",
 StyleBox["B",
  FontWeight->"Bold",
  FontColor->GrayLevel[0.5]],
 " (displayed as a floating-point number in degrees)."
}], "Text",
 CellChangeTimes->{
  3.4273180135755634`*^9, {3.4273180463413982`*^9, 3.4273181034042635`*^9}, {
   3.427318204326784*^9, 3.427318231170706*^9}, {3.4273189645347743`*^9, 
   3.4273189781129866`*^9}, {3.4362993402224894`*^9, 3.436299369175429*^9}, {
   3.4366361131687346`*^9, 3.4366361134968576`*^9}, {3.436636272542714*^9, 
   3.4366363475891094`*^9}, {3.4366364415885077`*^9, 
   3.4366364487915864`*^9}, {3.4366475894702854`*^9, 
   3.4366475990327244`*^9}, {3.437758453041991*^9, 3.437758465995116*^9}, {
   3.439752068939618*^9, 3.439752085830351*^9}, 3.4987207520718*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"A", "=", " ", 
   RowBox[{"{", 
    RowBox[{"2", ",", "7", ",", 
     RowBox[{"-", "3"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"B", "=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "1"}], ",", "0", ",", "5"}], "}"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "what", " ", "is", " ", "the", " ", "matrix", " ", "direct", " ", 
    "product"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"A", "+", "B"}], "\[IndentingNewLine]", 
 RowBox[{"A", ".", "B"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"KroneckerProduct", "[", 
   RowBox[{"A", ",", "B"}], "]"}], "//", 
  "MatrixForm"}], "\[IndentingNewLine]", 
 RowBox[{"Cross", "[", 
  RowBox[{"A", ",", "B"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Norm", "[", "A", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Normalize", "[", "A", "]"}], "\[IndentingNewLine]", 
 RowBox[{"rad", " ", "=", " ", 
  RowBox[{
   RowBox[{"N", "[", 
    RowBox[{"VectorAngle", "[", 
     RowBox[{"A", ",", "B"}], "]"}], "]"}], "Degree"}]}]}], "Input",
 CellChangeTimes->{{3.427318025091262*^9, 3.4273180651383934`*^9}, {
   3.4273181098418045`*^9, 3.4273181942329693`*^9}, {3.427318988206801*^9, 
   3.4273190531134663`*^9}, {3.436636360323403*^9, 3.4366364255104856`*^9}, 
   3.436647578032859*^9, {3.5318457625311003`*^9, 3.5318457875705996`*^9}, {
   3.5318458762588253`*^9, 3.53184606650502*^9}, {3.531846261911112*^9, 
   3.531846278780775*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "7", ",", "2"}], "}"}]], "Output",
 CellChangeTimes->{{3.531845919117968*^9, 3.5318459269178123`*^9}, {
  3.5318460095361595`*^9, 3.531846066765015*^9}, {3.5318462655310397`*^9, 
  3.5318462793407636`*^9}}],

Cell[BoxData[
 RowBox[{"-", "17"}]], "Output",
 CellChangeTimes->{{3.531845919117968*^9, 3.5318459269178123`*^9}, {
  3.5318460095361595`*^9, 3.531846066765015*^9}, {3.5318462655310397`*^9, 
  3.531846279370763*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"-", "2"}], "0", "10"},
     {
      RowBox[{"-", "7"}], "0", "35"},
     {"3", "0", 
      RowBox[{"-", "15"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.531845919117968*^9, 3.5318459269178123`*^9}, {
  3.5318460095361595`*^9, 3.531846066765015*^9}, {3.5318462655310397`*^9, 
  3.531846279380763*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"35", ",", 
   RowBox[{"-", "7"}], ",", "7"}], "}"}]], "Output",
 CellChangeTimes->{{3.531845919117968*^9, 3.5318459269178123`*^9}, {
  3.5318460095361595`*^9, 3.531846066765015*^9}, {3.5318462655310397`*^9, 
  3.531846279380763*^9}}],

Cell[BoxData[
 SqrtBox["62"]], "Output",
 CellChangeTimes->{{3.531845919117968*^9, 3.5318459269178123`*^9}, {
  3.5318460095361595`*^9, 3.531846066765015*^9}, {3.5318462655310397`*^9, 
  3.531846279380763*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   SqrtBox[
    FractionBox["2", "31"]], ",", 
   FractionBox["7", 
    SqrtBox["62"]], ",", 
   RowBox[{"-", 
    FractionBox["3", 
     SqrtBox["62"]]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.531845919117968*^9, 3.5318459269178123`*^9}, {
  3.5318460095361595`*^9, 3.531846066765015*^9}, {3.5318462655310397`*^9, 
  3.531846279380763*^9}}],

Cell[BoxData["0.035046352739082985`"], "Output",
 CellChangeTimes->{{3.531845919117968*^9, 3.5318459269178123`*^9}, {
  3.5318460095361595`*^9, 3.531846066765015*^9}, {3.5318462655310397`*^9, 
  3.531846279380763*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["(#4)", "Section",
 CellChangeTimes->{{3.4273179417938538`*^9, 3.427317943309489*^9}, {
   3.427318282452284*^9, 3.42731828256166*^9}, {3.4363013302878776`*^9, 
   3.436301336662837*^9}, 3.436301371943861*^9, {3.436301402834288*^9, 
   3.436301404568652*^9}, {3.5260905286858*^9, 3.5260905289198*^9}}],

Cell[TextData[{
 "Find the value of x where ",
 Cell[BoxData[
  FormBox[
   RowBox[{"x", " ", "=", " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"-", 
      SuperscriptBox["x", "2"]}]]}], TraditionalForm]],
  CellChangeTimes->{{3.427318039919482*^9, 3.427318065700897*^9}}],
 "."
}], "Text",
 CellChangeTimes->{
  3.4273180135755634`*^9, {3.4273180463413982`*^9, 3.4273181034042635`*^9}, {
   3.427318204326784*^9, 3.427318231170706*^9}, {3.427319069644822*^9, 
   3.4273191126138473`*^9}, 3.427320772296344*^9, {3.4273209585944114`*^9, 
   3.427320972922628*^9}, {3.436299388206557*^9, 3.4362993922221565`*^9}, {
   3.436299434409386*^9, 3.4362997453448963`*^9}, {3.4362999967182875`*^9, 
   3.43630000335887*^9}, {3.436300039452389*^9, 3.436300079514632*^9}, {
   3.4363022616412916`*^9, 3.4363022999691715`*^9}, 3.436636125762404*^9, {
   3.4366475344706373`*^9, 3.4366475348612604`*^9}, {3.437760999916991*^9, 
   3.437761001495116*^9}, {3.437828197974431*^9, 3.437828205286931*^9}, {
   3.5260905055666*^9, 3.5260905241306*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ans", "=", " ", 
  RowBox[{
   RowBox[{"x", "/.", 
    RowBox[{"Solve", "[", 
     RowBox[{
      RowBox[{"x", "\[Equal]", 
       RowBox[{"Exp", "[", 
        RowBox[{"-", 
         RowBox[{"x", "^", "2"}]}], "]"}]}], ",", "x"}], "]"}]}], "//", 
   "N"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Exp", "[", 
   RowBox[{"-", 
    SuperscriptBox[
     RowBox[{"ans", "[", 
      RowBox[{"[", "1", "]"}], "]"}], "2"]}], "]"}], "\[Equal]", 
  RowBox[{"ans", "[", 
   RowBox[{"[", "1", "]"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.438372441819049*^9, 3.438372442490924*^9}, {
  3.531846086314624*^9, 3.5318461258338337`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Solve", "::", "ifun"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Inverse functions are being used by \
\[NoBreak]\\!\\(Solve\\)\[NoBreak], so some solutions may not be found; use \
Reduce for complete solution information. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/Solve/ifun\\\", ButtonNote -> \
\\\"Solve::ifun\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{{3.531846093254485*^9, 3.5318461262338257`*^9}}],

Cell[BoxData[
 RowBox[{"{", "0.6529186404192048`", "}"}]], "Output",
 CellChangeTimes->{{3.531846093254485*^9, 3.5318461262338257`*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.531846093254485*^9, 3.5318461262338257`*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["(#5)", "Section",
 CellChangeTimes->{{3.4273179417938538`*^9, 3.427317943309489*^9}, {
   3.4363012983818316`*^9, 3.4363013001630707`*^9}, {3.4363013658970246`*^9, 
   3.436301386443768*^9}, {3.4365629411691527`*^9, 3.436562941512901*^9}, 
   3.43663647552579*^9, 3.4366473196126375`*^9, {3.526090547125*^9, 
   3.5260905474370003`*^9}}],

Cell[TextData[{
 "Find all of the minima and maxima of the function ",
 Cell[BoxData[
  FormBox[
   RowBox[{"f", "=", 
    RowBox[{
     SuperscriptBox["x", "4"], "-", 
     RowBox[{"3", 
      SuperscriptBox["x", "2"]}]}]}], TraditionalForm]]],
 " in the range ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"-", "2"}], "<", "x", "<", "2"}], TraditionalForm]]],
 ", not including the endpoints of the range.  Start with a plot that will \
help you to visualize the results.  Use list extraction and \
variable-replacement techniques to return each result as a single number (not \
a list or a replacement rule)."
}], "Text",
 CellChangeTimes->{
  3.4273180135755634`*^9, {3.4273180463413982`*^9, 3.4273181034042635`*^9}, {
   3.427318204326784*^9, 3.427318231170706*^9}, {3.4363002307324147`*^9, 
   3.4363003118256454`*^9}, {3.436300368669032*^9, 3.436300438981082*^9}, 
   3.4363006495266094`*^9, {3.4365630217780123`*^9, 3.436563022137385*^9}, {
   3.43663573184305*^9, 3.4366357384680076`*^9}, {3.436635780733362*^9, 
   3.4366358905920343`*^9}, {3.436635944357315*^9, 3.4366359814664526`*^9}, {
   3.4366360419035654`*^9, 3.4366360527472463`*^9}, {3.436636092340743*^9, 
   3.4366360933719864`*^9}, {3.4366565400127745`*^9, 
   3.4366565406690207`*^9}, {3.4371640385375757`*^9, 
   3.4371640540063257`*^9}, {3.4371666051228704`*^9, 3.4371666064509873`*^9}, 
   3.4381080236891985`*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"fun5", " ", "=", " ", 
   RowBox[{
    SuperscriptBox["x", "4"], "-", 
    RowBox[{"3", 
     SuperscriptBox["x", "2"]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{"fun5", ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "2"}], ",", "2"}], "}"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"answers", " ", "=", " ", 
   RowBox[{"x", "/.", 
    RowBox[{"Solve", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"D", "[", 
        RowBox[{"fun5", ",", "x"}], "]"}], "\[Equal]", "0"}], ",", "x"}], 
     "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"min1", " ", "=", " ", 
  RowBox[{"answers", "[", 
   RowBox[{"[", "2", "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"max", " ", "=", " ", 
  RowBox[{"answers", "[", 
   RowBox[{"[", "1", "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"min2", " ", "=", " ", 
  RowBox[{"answers", "[", 
   RowBox[{"[", "3", "]"}], "]"}]}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.438372485069049*^9, 3.438372485834674*^9}, {
  3.5318461520433097`*^9, 3.531846175782835*^9}, {3.5318463820387096`*^9, 
  3.5318466314437213`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
z505aMwv9Nam2t9w9tADnZpiDjL82z6c7jEC/YxRkbIyDoov9K68vWUEbDP1
u79Wc9CNmfazE/XD4LxZ0i6rlYOkjFv/tm0aBh+s2PflLw4Kexd37MDdQcis
5JRcWvEPeQ+KeU319gKPvpsKZknyLoGNqTINkG11dYvGPMmqfTKnVKuRbe7M
pnhsHlHe2YboC9cicSHX9bx888h73RPqyrE65PbFU7RtJclHrZv74puQhnjA
4pUd84j6euxF3ap2VFab2PfKmBwPeqeiWNmHOpR7wtmp80jK5vajQsdfiCV4
ZOkX0wXkkWAQVHmD7LtTwi/KzBfQnowyheRcAu1s7dvWYL2A+OnI/CuHQFaR
LscGrywgvNA0M/gRHZVvTQxcdn8BDf1OTSp5w0ChBzFR45QFZMi/ffXDnjm0
/RpI/GGSrHLYaZXHPDJuPaC6KWoRiec1PJTft5QqeGB5adGbRdS/w2nqtc1S
aunbvpMWSYtIOWNFz76nS6l7PO5ceJ25iGR3K9m2Ti6lCm/OD1lfSTL75sr2
9zzUWud9P1bTFpGN0MQQU56XSuWXCxM+xUVD2DjvXl0BKusma0OmERfRR3er
3rwnQM36Vp2sd5aLCq5+Gu35KECVzLL7GmLLRacicoU2rxOkzpu+HRW8w0UH
q+1UA8YEqflJmw/xpXBR0Zbks/1hQtRrK6arU9JJ++3+x2OqhKgy7iXGx7K5
SKJyG/jNC1Ff6Fo6PCriopjVMY+bHVZQXWajny9t56J49ZOn9I8IU+XPO0om
9XDRmHKjjomnMHW4Qv291ncuEmdcMvLNFqYaRvWUPBwnz1fUqLWQEqHyL0k9
IT3NRZO7s8/xmYlQwcm9A6eT/izLVvv2VITq1nnM2obDRTeqB9x6qkWo//f9
Hfr/7+/+B3rtO7g=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  PlotRange->{{-2, 2}, {-2.24999997976625, 3.9999983673470787`}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{
  3.5318461626630974`*^9, {3.531846400318344*^9, 3.5318464336876764`*^9}, 
   3.5318464830366898`*^9, {3.5318465146660566`*^9, 3.531846632113708*^9}}],

Cell[BoxData[
 RowBox[{"-", 
  SqrtBox[
   FractionBox["3", "2"]]}]], "Output",
 CellChangeTimes->{
  3.5318461626630974`*^9, {3.531846400318344*^9, 3.5318464336876764`*^9}, 
   3.5318464830366898`*^9, {3.5318465146660566`*^9, 3.531846632113708*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{
  3.5318461626630974`*^9, {3.531846400318344*^9, 3.5318464336876764`*^9}, 
   3.5318464830366898`*^9, {3.5318465146660566`*^9, 3.531846632123708*^9}}],

Cell[BoxData[
 SqrtBox[
  FractionBox["3", "2"]]], "Output",
 CellChangeTimes->{
  3.5318461626630974`*^9, {3.531846400318344*^9, 3.5318464336876764`*^9}, 
   3.5318464830366898`*^9, {3.5318465146660566`*^9, 3.531846632123708*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["(#6)", "Section",
 CellChangeTimes->{{3.436636184293279*^9, 3.4366362130274706`*^9}, 
   3.436637219927276*^9, 3.4366473222532463`*^9, {3.4366533310245333`*^9, 
   3.4366533312902465`*^9}, {3.526090595329*^9, 3.526090595797*^9}}],

Cell[TextData[{
 "Find all ",
 StyleBox["xy",
  FontSlant->"Italic"],
 " points that simultaneously satisfy the pair of equations, ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SuperscriptBox["x", "2"], "+", 
     SuperscriptBox["y", "2"]}], "=", "1"}], TraditionalForm]]],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SuperscriptBox["x", "2"], "-", 
     SuperscriptBox["y", "2"]}], "=", 
    FractionBox["1", "2"]}], TraditionalForm]]],
 ".  Also ",
 StyleBox["ContourPlot",
  FontWeight->"Bold"],
 " both implicit equations on the same graph to visually verify the solutions."
}], "Text",
 CellChangeTimes->{{3.436636194699463*^9, 3.436636195090085*^9}, {
   3.4366370750532036`*^9, 3.4366372033492575`*^9}, 3.4381080496579485`*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       SuperscriptBox["x", "2"], "+", 
       SuperscriptBox["y", "2"]}], "\[Equal]", "1"}], ",", 
     RowBox[{
      RowBox[{
       SuperscriptBox["x", "2"], "-", 
       SuperscriptBox["y", "2"]}], "\[Equal]", 
      RowBox[{"1", "/", "2"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "y"}], "}"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ContourPlot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"x", "^", "2"}], "+", 
        RowBox[{"y", "^", "2"}]}], "\[Equal]", "1"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"x", "^", "2"}], "-", 
        RowBox[{"y", "^", "2"}]}], "\[Equal]", 
       RowBox[{"1", "/", "2"}]}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", 
      RowBox[{"-", "4"}], ",", "4"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"y", ",", 
      RowBox[{"-", "4"}], ",", "4"}], "}"}], ",", 
    RowBox[{"Axes", "\[Rule]", "True"}], ",", 
    RowBox[{"GridLines", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", 
          FractionBox[
           SqrtBox["3"], "2"]}], ",", 
         FractionBox[
          SqrtBox["3"], "2"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "1"}], "/", "2"}], ",", 
         RowBox[{"1", "/", "2"}]}], "}"}]}], "}"}]}]}], "]"}], 
  RowBox[{"(*", 
   RowBox[{"checked", "!"}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.438372567256549*^9, 3.438372568069049*^9}, {
  3.531846722081908*^9, 3.531846775610838*^9}, {3.531846808410182*^9, 
  3.5318468535792785`*^9}, {3.531846905898232*^9, 3.531846977116808*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Rule]", 
      RowBox[{"-", 
       FractionBox[
        SqrtBox["3"], "2"]}]}], ",", 
     RowBox[{"y", "\[Rule]", 
      RowBox[{"-", 
       FractionBox["1", "2"]}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Rule]", 
      RowBox[{"-", 
       FractionBox[
        SqrtBox["3"], "2"]}]}], ",", 
     RowBox[{"y", "\[Rule]", 
      FractionBox["1", "2"]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Rule]", 
      FractionBox[
       SqrtBox["3"], "2"]}], ",", 
     RowBox[{"y", "\[Rule]", 
      RowBox[{"-", 
       FractionBox["1", "2"]}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Rule]", 
      FractionBox[
       SqrtBox["3"], "2"]}], ",", 
     RowBox[{"y", "\[Rule]", 
      FractionBox["1", "2"]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.5318467411615267`*^9, 3.531846776180826*^9}, 
   3.53184685399927*^9, 3.5318469092181654`*^9, 3.531846953337283*^9}],

Cell[BoxData[
 GraphicsBox[GraphicsComplexBox[CompressedData["
1:eJx1mAtUVlUWxz+UQEVAF1mKb2sZtczMkcnU2lfJGnV8hGhF5SPHfNDT8Zmh
gWVGpvgC85mx8JGpga5Khc4xZtARXWoKWIlSGs9PHppiqDjfd/Z/H6ZvrfnW
XVzuveeee87e/73375yur7wZPbmJy+VSfi6X9/xM7l3t7v2HW63K3zh2TmwR
TTye/9LxfLfK+/r1nz0HjS+aNmtb/mU17+2BnpaFtPBCXfyFustq9eQXUia/
UEDPVYzcQelVKvH+ISvvH/IDJaa5F6S5q9TsuG7Jcd1O0ltjFwzasKZanTo6
csneKzmUUj/a80a1mmHaf09db2Z0vplRrQpatfb8DtEd86tWLu8vY9UAc3bV
8LXrZNb/Pl+ysTirM94PbW3eV6vRfyb3r97A9zvkme+rhRhfMo9PRWP8n/P4
1WzML5fnp17E/JN5/uoF2KeS7aMGwX7b2X7qorlfqQKzNiSmji5WI3b231W1
r0IFeFq9lPyLijhQ9vnHPSvUOvO9X1Xi0qDePY+UqXFR84J/i7ykvjPdlqhl
5vslynx+Y+NZ7ks7eU/6kX7lO/JdGYeMS8Yp45Z5yLxknjJvsYPYRewkdnu3
PHVBeWqjXcXOYnfxg/hlXH36+Pr0Rr+JH8Wvf9KBx+9/0oFHF/JcdCM6El1N
QP+iO9Gh6FJ0KrpNwPhF16Jz0b3EgcSFxInEjcQR7Eti31ttjf1pDOyfxP6h
PvDPWPYfJcF/y9m/JP7NZ7/Tb/D/br5Pm6GD+fweTYEOHuR+SXTwN/4utYIO
TvO46D7oYACPm7KgA/idRAdjed60FTqIZ7vQWugAfierA7Yr7YAOZrDd6Rj7
QY1nv5DooBP7jYZCBzfYr7TFnIOz4We6XOX9nRddkE8+oONGByuy5P3h5nmL
J7qg/9bcP03E90UnMzG+BOgEuqVk0QnmJzpZjPm/Cp3Ewj7LoBPogkQnA2Hf
bdCJj/1pJPyDOKVI+E90sgj+HQ+diP+3QCfnoQ85h7wauvaJCSW2XQdvNysv
UffwyqhJ8WX0QVTf96P6XqIdS49uX3q0jE7keH8XyfE2u7/cfrd/p+OdXxtQ
QdHt1jzbbs0vtH7n/nU791fQuMBZowJnFdt51Bh7X6CimPAZVXsrqUXT+YfP
6PP0dORXc/4e7Kb4guCtR6YU0Ze52VpNb7TLfL+MHX0uuemGPv9o5FeF9Kr3
7teNdhS7ip3F7rbOwC/iJ/Gb+FH8Kn4Wv4sORBeikxv/R1e+urve4D13yJb2
P5j+M1V6g7fyNOpYdC06F91LHEhcSJxI3PjkUxtnEncShxKXPvnaxrHEtcS5
+EvygOQFyROSNySPSF6RPCN6kjwkeUnylOQtyWOS1yTPia4kD0pe9KmX5Msj
7I9Wzr7Uk+MGzQ/VRV3/+eGxjqHOiv1RJSGfhmiefogz7YnblT1jQvTBoDV9
w58Mcd4wegrWWYfnZx2+Gex0rq7tVP12sH6N7ztFbQ89tfCBYB33UPDjdT+2
dM5NubfV+qEtddy8Sf5ht4Occ6bjIP3BxLaLJ34b5DzSMqdXy/uC9Fm+71RN
bZhw8VQLvTjvvZEhqS2cDfGt8/vdbK77FK/KmaybO0NNPDXX4Wf7bw2Y3dyZ
7QmGjqeb6af5vrO+dN6m0nnNdMwY76+Z84X5BepJns+1XRzofGvmFaBHeeMt
MtDpcGZgxzMJAXof33cq/PYGHusUoKNbDxvco02AsyS9W0rS83fpmn0HTleM
uMvpbuLeX79cOOvlwmv+TuWB3ZUHevrrbnzfGTlbPTtbNdVPdSn0HE2dGcP9
PUdTPaWu/eS69k2d1cZfTbQZ7v4mnB5+9NPJfN/ZEhmbFhnrp3XzDZ7Dz/kh
fNep8F0uXWvixeU0Ycdp8/c9l8OXd9QtDiT6YOPZjzaeva04DzXQXx5K6/1Q
2i01xuSb23TB2Pmm8lpj4tpb1Mtr/6h6Vcj3aZgnisJ+vaGW7UjInjS9npqY
tFOnBm9Ys7nVlD/ogLHTdWXsNvAGGTvOuqaK24/qvntmHUUYO/yuMrkdLf7j
zMd/nLmqmiV28RzXyWnlP7CV/1WVWjjKg1jXKMXM+4rqwu/RU8YgtYrd+TuZ
80c16k1vOCdfJX/wyjJ+jxZ5p7ndDZ65Al27VbDXfLrWxsHDJ5t4jlpKuGeq
5yhX6eb9Gmr9jfd5qeqXENY3IazGxl2OMUwN2yenxNbPU4jThrJLaauWV1EP
rgNqQvVajySrqLfJz5eU5N25bfotatPvojox3RsAl21eYLu5qaOx4y/K7T11
dFPXj/fcSNpTrCTvNzPzacwzd6o88VZ7Xu3tkZfZI6+CzCnznNr5WHb58Dcr
bN56y+i9nLq/4wmHTYUqe+fdYTOfK6dc87iA7TuknFi3BUrq1DNG2PmqgxFI
mc2bzc04yqgP53HYu4xYdydUhTfsNpXSTfP9PLW8bq7nKKVZ5p8jaoTpv5Qe
NfbOUblrqoIjwkptHmd7l9I4M+5Dal2PGe8l/1pC7U37gzZPxqR+6vntV6NN
PSyhbd5q2HGvOhuXXRCXXWLrRoYJzBIqv3vws3cPzlChFZ+FVHxWQp+f9ho6
Xkldl7okz/flmee0B+8/z+9TAfqP5v4pGt//K3/fckEsj4/WYvzrjT0O0iHM
L4LnRzmYv9TRobBPsWmfQ0thvyi2H/0G+x5k+8LupXSM7U9+8AfHx0lqA/9J
XRf/DmP/0ifwfzD7n76GPrayPugV6If9Wkhp0Jdwxi7o717Wn+UWV7XRJ52B
foVj8qHv+iSjbxoK/Yex/unfiA+pZxI/czh+KBbxFcHxRVcRf8JhlhvgV434
fYDjlyIR3+KnFYh/rjul9CDyw1zODxSA/CHzYnvXUp05V5Lkn0TOPzQV+UnG
sQz5axnnL/LJb7QC+U/68Ud+HMD5kXzyJ/2I/Cr9tEP+Hcb5l55Efpb3kpC/
G94x+Zt88jslIv/34PxPw1EfpF066scjXD9I6stiri9kcG2hy+H7DeA5ub5D
CvXrBNcvx6e+8bWn/iVz/XMmoT5Ku0Gon29x/XR86qvzIupvOddfx436LO1G
oX4v5vrt+NR3ZwTqfzjXf2c8+EDaRYMftjM/OD584bQFf8xk/nB6gU+k3fvg
l3XML44P3ziLwD8PM/84U8BH0m46+Okn5ifHh6+cg+Cvjsxfzn7wmbTz4Tfn
HPgumfnO6fuFa+Ghl0NtO+HBBTk/PfZlfKhca/ChvK/l/W/4PT0d/eP7lgPB
h7oTxifceB7jBx9q8KEzledvORB8qMGHlhuvwn7gQw0+dB5h+1sObMf+0XPg
H+HGz+A/8KEGH4r/LQeCDzX40HJjFfQDPtTgQ9Gf5UDwoQYfWm4cDf2CDzX4
UPRvORB8qMGHlhvTET+HOL70KcQX4k9L/IEPNfiQhBuXIX7Bhwp8KPFvORB8
qMCHlhtjkD/Ah4qXpXWSfyz3gQ/BOdckf1nOE45cjvwGPlTgQ8mPlvOEK4cj
f4IPFfjQciTzmBt1/Qo4xS353HIUeFCBB+ldrgdqM+oB6oXlDvCgAg9aDt03
bd3WaetKCPynwH8UYfq/bNdn4D0F3rNcmhv6ybUtGecpk+upAs9RrTFwhd0X
i+F6rHajHn/D9VpJvQbPqftQz0dxvVdrUe/BA3ZfDvyGdcMJGsz8oZaDP/7F
fGL3/cBnCnxmOXnlhyZQ6T9xEXu2ZJUo4aNdzE/qaBjzE/hK7WH+orppm69P
21xi9yHl+cafmc/AX+pF8Bv4TgnfjWH+Uu3nMv/JeGLXMx+uZ/5Swo+5GP9q
8OVhzE/4cwjmD/5Sq5i/1DbwK/hWCd+CtxR4C+cydQ+u28Pews/ijzXg61T4
qy/4+zv4U/gc/KUq2d+qHnoQvv8WehkI/hc9HWE9qbHQ2wNYX/SGHmX9IfrN
ZP3CPjWqH9Y7/aF/sSt4SYGXVC/ETxLWU1hv2XE0Rfw1w3pM4jMF6zWs5+w4
UhDPKVjv+cS7rBdtP0HIF4OxnvTJJ7Ietf10QT6KwXoV61n73krks0Csd33y
nUpCPuyD9TLW07bdLuTTx7De9sm3fO3Jx/5Yr2M9r6Xd98jnZ7De98n3fO2p
B6uxX4D9BNvuadSTmdhv8Kk3ejzq0WXsV2A/w7aLQT1Lwn6HT73T0aiHnbBf
gv0U224s6umX2G+RersZ+zHtUY/nYb8G+zm23RLU803Y75F6fwX7QR+CBx7F
fhH2k2y718ETRdhvEt64gP2obPCI7FdhP8u28+EZ2Q/Tsh/2OPOSbSd8BF7S
/wVKYA2f
   "], {{}, {}, 
    TagBox[
     TooltipBox[
      {Hue[0.67, 0.6, 0.6], 
       LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18,
         19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 
        53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 
        70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 
        87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 
        103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 
        117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 
        131, 132, 133, 134, 135, 136, 137, 138}]},
      RowBox[{
        RowBox[{
          SuperscriptBox["x", "2"], "+", 
          SuperscriptBox["y", "2"]}], "\[Equal]", "1"}]],
     Annotation[#, $CellContext`x^2 + $CellContext`y^2 == 1, "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      {Hue[0.9060679774997897, 0.6, 0.6], LineBox[CompressedData["
1:eJwt0ddCDgAAQOH/R0VbkaQoEsnT9Ag9AA+iklUySskoGjKKQlSohDRUMioJ
WRVt8V24+G7PzUnLOZh9IBgIBMo5RC555HOYAo5wlGMc5wSFFHGSYk5xmjOc
pYRSzlH2v3+eCi5wkUtcppIqrnCVamqopY5r1HOdG9zkFg00cps7NNHMXe5x
nxYe8JBW2mjnEY95QgeddPGUbp7xnBf08JJe+uhngFcMMsQwrxnhDW95x3tG
GWOcD0zwkUk+8ZkvTPGVb3znBz+ZZoZZfvGbOeZZYJElllnhD6v8JWBukDWs
ZR0hhBLGejYQTgSRRBFNDLFsJI54NrGZBLaQyFaS2EYyKWxnB6mksZNdpLOb
DPawl0z2kcV+/gEtb2Bq
        "]], LineBox[CompressedData["
1:eJwV0Nc6FgAAgOHfpbiARGSWUTQIRWZDNlmV2ZQ9myqFZM+IzMxb63XwPs93
/AWXNGTVBwUCgRHOiRDOE0oYFwgngotEEkU0McQSxyUuE08CiSRxhaskk8I1
rnODm6SSxi3SySCT29whi2zukkMueeRTQCH3uM8DHlLEI4opoZQyyqmgkiqq
eUwNtdRxNqOBJzzlGY000UwLrbTxnBe85BWveUM7b+mgky666aGXPvoZYJAh
hnnHez7wkU98ZoQvfOUbo3znB2OMM8FPJvnFFNPMMMsc8yywyBLLrLDKb9ZY
5w8bbPKXLbbZYZc99vnHAYccccwJp/wHLVpGnA==
        "]]},
      RowBox[{
        RowBox[{
          SuperscriptBox["x", "2"], "-", 
          SuperscriptBox["y", "2"]}], "\[Equal]", 
        FractionBox["1", "2"]}]],
     Annotation[#, $CellContext`x^2 - $CellContext`y^2 == Rational[1, 2], 
      "Tooltip"]& ]}],
  AspectRatio->1,
  Axes->True,
  Frame->True,
  GridLines->
   NCache[{{Rational[-1, 2] 3^Rational[1, 2], Rational[1, 2] 
      3^Rational[1, 2]}, {
      Rational[-1, 2], 
      Rational[1, 2]}}, {{-0.8660254037844386, 0.8660254037844386}, {-0.5, 
    0.5}}],
  PlotRange->{{-4, 4}, {-4, 4}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{{3.5318467411615267`*^9, 3.531846776180826*^9}, 
   3.53184685399927*^9, 3.5318469092181654`*^9, 3.531846953337283*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["(#7)", "Section",
 CellChangeTimes->{{3.436636184293279*^9, 3.43663621468371*^9}, {
   3.4366374742693987`*^9, 3.43663747561314*^9}, 3.4366473227219925`*^9, {
   3.436653333025199*^9, 3.4366533331502404`*^9}, {3.5260906088854*^9, 
   3.5260906099462*^9}}],

Cell[TextData[{
 "Show that the Fourier transform of ",
 StyleBox["f",
  FontSlant->"Italic"],
 " = ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", "2"}], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"t", "-", "4"}], ")"}], "2"]}]], "-", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", "2"}], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"t", "+", "4"}], ")"}], "2"]}]]}], TraditionalForm]]],
 " is equal to  \[ImaginaryI] ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", 
       FractionBox["1", "8"]}], 
      SuperscriptBox["\[Omega]", "2"]}]], 
    RowBox[{"sin", "(", 
     RowBox[{"4", "\[Omega]"}], ")"}]}], TraditionalForm]]],
 ".  Plot ",
 StyleBox["f",
  FontSlant->"Italic"],
 " over the range {",
 StyleBox["t",
  FontSlant->"Italic"],
 ", -8, 8}, and plot the imaginary part of its Fourier transform over the \
range {\[Omega], -8, 8}."
}], "Text",
 CellChangeTimes->{{3.436636194699463*^9, 3.436636195090085*^9}, {
   3.4366373967230196`*^9, 3.4366374573632565`*^9}, 3.4366383816385913`*^9, {
   3.4366384701067753`*^9, 3.436638507465911*^9}, {3.4366388578699183`*^9, 
   3.4366389009165177`*^9}, {3.4366389426506257`*^9, 3.436639018025143*^9}, {
   3.436639051790552*^9, 3.4366391953833833`*^9}, {3.436639228523796*^9, 
   3.4366394002726965`*^9}, {3.4366394566160865`*^9, 3.436639723505003*^9}, {
   3.437829330771306*^9, 3.437829338115056*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"func7", " ", "=", " ", 
  RowBox[{
   RowBox[{"Exp", "[", 
    RowBox[{
     RowBox[{"-", "2"}], "*", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"t", "-", "4"}], ")"}], "2"]}], "]"}], " ", "-", " ", 
   RowBox[{"Exp", "[", 
    RowBox[{
     RowBox[{"-", "2"}], "*", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"t", "+", "4"}], ")"}], "2"]}], 
    "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{"func7", ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", 
     RowBox[{"-", "8"}], ",", "8"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "1.5"}], ",", "1.5"}], "}"}]}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fourier", " ", "=", 
   RowBox[{"FourierTransform", "[", 
    RowBox[{"func7", ",", "t", ",", "w"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"{", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"Im", "[", "fourier", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"w", ",", 
       RowBox[{"-", "8"}], ",", "8"}], "}"}], ",", 
     RowBox[{
     "PlotLabel", "\[Rule]", 
      "\"\<Imaginary part of the Fourier Transform\>\""}]}], "]"}], ",", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"Im", "[", 
      RowBox[{"I", "*", 
       RowBox[{"Exp", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "1"}], "/", "8"}], "*", 
         RowBox[{"w", "^", "2"}]}], "]"}], "*", 
       RowBox[{"Sin", "[", 
        RowBox[{"4", "*", "w"}], "]"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"w", ",", 
       RowBox[{"-", "8"}], ",", "8"}], "}"}], ",", 
     RowBox[{"PlotLabel", "->", "\"\<The Complex Function given us\>\""}]}], 
    "]"}]}], "}"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.4366361964338264`*^9, 3.4366361968556986`*^9}, {
   3.4366372845518627`*^9, 3.436637385285593*^9}, {3.436637464191338*^9, 
   3.4366374679100637`*^9}, {3.436637539347107*^9, 3.436637543362706*^9}, {
   3.4366375739250107`*^9, 3.4366375891280384`*^9}, {3.436637636205862*^9, 
   3.4366376660650463`*^9}, {3.436637700767949*^9, 3.436637704142927*^9}, 
   3.436637734595857*^9, {3.4366378312983637`*^9, 3.436637876798072*^9}, {
   3.4366379237196465`*^9, 3.436637990281721*^9}, {3.4366380824061313`*^9, 
   3.4366380853436127`*^9}, {3.4366383489200506`*^9, 3.436638365591819*^9}, {
   3.4366384400600924`*^9, 3.43663844034134*^9}, {3.4366384972159767`*^9, 
   3.4366385383094635`*^9}, {3.436638568996767*^9, 3.436638636824458*^9}, {
   3.4366386761523314`*^9, 3.4366386920584793`*^9}, {3.436638726777007*^9, 
   3.43663885133871*^9}, {3.4366389048696175`*^9, 3.436638935978793*^9}, {
   3.4366389696817026`*^9, 3.436638974634796*^9}, 3.4366390402125015`*^9, {
   3.4366390798841224`*^9, 3.436639080821616*^9}, 3.4366391267275724`*^9, {
   3.4366391978677425`*^9, 3.436639202305214*^9}, {3.436639415256976*^9, 
   3.436639453053609*^9}, {3.4366396535992002`*^9, 3.436639658021047*^9}, 
   3.436656195311856*^9, {3.437829360396306*^9, 3.437829363083806*^9}, 
   3.526215534992262*^9, {3.531857720638731*^9, 3.5318579571402073`*^9}}],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{
    RowBox[{"-", "2"}], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "4"}], "+", "t"}], ")"}], "2"]}]], "-", 
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{
    RowBox[{"-", "2"}], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"4", "+", "t"}], ")"}], "2"]}]]}]], "Output",
 CellChangeTimes->{{3.5318577442654343`*^9, 3.531857842162796*^9}, {
  3.5318578747400303`*^9, 3.531857897757286*^9}, {3.531857928481592*^9, 
  3.5318579574799957`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  PlotRange->{{-8, 8}, {-1.5, 1.5}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], Automatic}]], "Output",
 CellChangeTimes->{{3.5318577442654343`*^9, 3.531857842162796*^9}, {
  3.5318578747400303`*^9, 3.531857897757286*^9}, {3.531857928481592*^9, 
  3.531857957495019*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[{{}, {}, 
     {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
RC9dLbhlembR28CkNy9vb6Izb0336o/MojHWlXvhZZvIVOvja8Y3s+hlqp2N
+pNN1JH4jHJqdhY939kuuDS6ifLEeveZzc+itirp8cIvm+gtRbtu/tMsqj90
644t7RbSWDcKFdvGlb0/zXlJW+i+Jd/jrQ+zqOikFV+X3BY6QM/WF/1uFmV9
aH0VeGQL9Xfvc8bjsyjVY2fCfqstlNWmcqO4fxbFb0Ybfbq8haKDcux1ns6i
yNhF9qwbWyjQ+INfZs0sChY80WuevoVuB4Xfqc2dRT6FTdGsD7eQ57rg44T4
WeS2X1QXd25tn9+WexSvzSJnHM54dWoLeQlz+hQ7zCJ7w4WO3UtbqF5MzOa7
7iySfmQj1sdJA8KNsyDANYvyr93aKhSkgYhuDlqaxRkkCk/eXt9JA5kjR0Yn
+mYQqV8yU1mNBhKCAurcQ2dQSopVIK82DQw8+aKvaT2DuG1ibb8a04Dv3mEG
kvwMYp5fIuedpQE6vmht1tH36MaDnX8Dr2zn06hc3V/4Hm15WU6c9KeBHlMH
2Wiv92iFpiWVM5EGWN6sBIyzvUfzlCj+a800QO/pkskgOY2c3jf9NH9OAxPR
M5HMA+/Qu+Kvg3sHacDTwtv4u8k7NK5olvhhjgYyhr479Rq8RV3GVE4TPloI
4hzGc6KvEWHve6KnMC2ojWdTZLbvc2c4C8VuS9GCWStz+1Gu/9Ban5zihDot
nFCZlXRcnkRyxzRszzjRgohPSw192ThK1LItda+lhZW7dV8me4eQjWq6TpIl
HbzJdIzT6HmCikinjj86s41DSTsrv7ehX3/ErEcv0oEwvc/dUKMWFFdX4koO
oQMpIouqKEcDwvsbU3KL6YAl4dHJarVSJLFn/H31Kh2gH5cUrs5kYXeOe1+G
6ejhTsbpK/8cC3DrF/vfvznogd9DMVjFoBRbls2xqO+gB7vPZvHpwdU4WvqP
fPsxetg6KF1v9O0x/rZDIHgogx6eiHWdYdd9jlUDcj2eFtCDLsOuw5IGXThs
ZM+5qkp6aKo95X/GoBsTo44axrfTQ3/t78ufUS/W/OpL0V+gh7mQX9MyK/04
WoeBS22ZHhTH35/ZM/USD2Ul0sps0oMy15RtW+MAdjYt/cTIxwCVdCGr4rWv
cEL9VP1TNQawtDEOK9IdwlPc58uqtBjgfljHhZtFQ1jiwq/MbCMG2IumNNfo
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
6NHTZ9ZEQX/Z28a/Whr9730n+N/7Tuj/AC83UdQ=
       "]]}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->True,
    AxesOrigin->{0, 0},
    ImageSize->{307., Automatic},
    PlotLabel->FormBox[
     "\"Imaginary part of the Fourier Transform\"", TraditionalForm],
    PlotRange->{{-8, 8}, {-0.9811926532795532, 0.9811519438724415}},
    PlotRangeClipping->True,
    PlotRangePadding->{
      Scaled[0.02], 
      Scaled[0.02]}], ",", 
   GraphicsBox[{{}, {}, 
     {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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

       "]]}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->True,
    AxesOrigin->{0, 0},
    ImageSize->{273., Automatic},
    PlotLabel->FormBox["\"The Complex Function given us\"", TraditionalForm],
    PlotRange->{{-8, 8}, {-0.9811926532795532, 0.9811519438724415}},
    PlotRangeClipping->True,
    PlotRangePadding->{
      Scaled[0.02], 
      Scaled[0.02]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.5318577442654343`*^9, 3.531857842162796*^9}, {
  3.5318578747400303`*^9, 3.531857897757286*^9}, {3.531857928481592*^9, 
  3.531857957567477*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["(#8)", "Section",
 CellChangeTimes->{{3.5260906552018003`*^9, 3.526090660459*^9}}],

Cell[TextData[{
 "The file airIndex.dat has two columns of numbers with the wavelength in \
\[Mu]m in the first column and the second column is ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Delta]n", "\[Times]", 
    SuperscriptBox["10", "8"]}], TraditionalForm]]],
 ".  This is ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["10", "8"], " "}], TraditionalForm]]],
 " times the difference between the index of refection of air and the index \
of refraction of a vacuum (which is exactly 1).  This data should be well fit \
by a function of the form ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"\[Delta]n", "\[Times]", 
     SuperscriptBox["10", "8"]}], "=", 
    RowBox[{"a", "+", 
     RowBox[{"b", "/", 
      RowBox[{"(", 
       RowBox[{"c", "-", 
        RowBox[{"1", "/", 
         SuperscriptBox["\[Lambda]", "2"]}]}], ")"}]}], "+", 
     RowBox[{"d", "/", 
      RowBox[{"(", 
       RowBox[{"e", "-", 
        RowBox[{"1", "/", 
         SuperscriptBox["\[Lambda]", "2"]}]}], ")"}]}]}]}], TraditionalForm]]],
 ".  Find the constants a, b, c, d, and e which best fit this data (in the \
least squares sense) and the uncertainties in the fit parameters.  You should \
be able to fit each data point for the index to within 1.  The following \
ranges will give you a good starting point:\n5000<a<15000, 1000000<b<3000000, \
100<c<150, 10000 <d<50000, 10<e<60."
}], "Text",
 CellChangeTimes->{{3.5260906626118*^9, 3.526090663657*^9}, {
  3.5260907130934*^9, 3.5260909553458*^9}, {3.5261152249862003`*^9, 
  3.5261152713962*^9}, {3.5261155762514*^9, 3.5261155926938*^9}, {
  3.5261156436658*^9, 3.5261157555022*^9}, {3.5261162669482*^9, 
  3.526116327133*^9}, {3.529758599255951*^9, 3.529758600039872*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"nlm8", "[", "\"\<BestFitParameters\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.531858449914403*^9, 3.5318584532437468`*^9}, {
  3.531859619318873*^9, 3.5318596267017508`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"a", "\[Rule]", "5000.017785552189`"}], ",", 
   RowBox[{"b", "\[Rule]", "2.0959751567717795`*^6"}], ",", 
   RowBox[{"c", "\[Rule]", "100.00013550902929`"}], ",", 
   RowBox[{"d", "\[Rule]", "10000.000128035497`"}], ",", 
   RowBox[{"e", "\[Rule]", "10.757144692848428`"}]}], "}"}]], "Output",
 CellChangeTimes->{3.531859627123914*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Show", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"ListPlot", "[", "data", "]"}], ",", 
       RowBox[{"Plot", "[", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"a", "+", 
           FractionBox["b", 
            RowBox[{"c", "-", 
             RowBox[{"1", "/", 
              SuperscriptBox["\[Lambda]", "2"]}]}]], "+", 
           FractionBox["d", 
            RowBox[{"e", "-", 
             RowBox[{"1", "/", 
              SuperscriptBox["\[Lambda]", "2"]}]}]]}], ")"}], ",", 
         RowBox[{"{", 
          RowBox[{"\[Lambda]", ",", 
           RowBox[{"-", "2"}], ",", "3"}], "}"}]}], "]"}]}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"25000", ",", "30000"}], "}"}]}], "}"}]}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"a", ",", "6480"}], "}"}], ",", "5000", ",", "15000"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"b", ",", "2.18*^6"}], "}"}], ",", "1000000", ",", "3000000"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"c", ",", "110"}], "}"}], ",", "100", ",", "150"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"d", ",", "50000"}], "}"}], ",", "10000", ",", "80000"}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"e", ",", "54.2"}], "}"}], ",", "10", ",", "80"}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.531859529882647*^9, 3.531859605482174*^9}, {
  3.531859636898225*^9, 3.531859698687304*^9}, {3.531859783002404*^9, 
  3.531859806561039*^9}, {3.531859847092422*^9, 3.531859865952524*^9}, {
  3.531859970768779*^9, 3.531860015412878*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`a$$ = 6780., $CellContext`b$$ = 
    2.055*^6, $CellContext`c$$ = 104.3, $CellContext`d$$ = 
    18100., $CellContext`e$$ = 26., Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`a$$], 6480}, 5000, 15000}, {{
       Hold[$CellContext`b$$], 2.18*^6}, 1000000, 3000000}, {{
       Hold[$CellContext`c$$], 110}, 100, 150}, {{
       Hold[$CellContext`d$$], 50000}, 10000, 80000}, {{
       Hold[$CellContext`e$$], 54.2}, 10, 80}}, Typeset`size$$ = {
    360., {108., 112.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`a$135098$$ = 
    0, $CellContext`b$135099$$ = 0, $CellContext`c$135100$$ = 
    0, $CellContext`d$135101$$ = 0, $CellContext`e$135102$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`a$$ = 6480, $CellContext`b$$ = 
        2.18*^6, $CellContext`c$$ = 110, $CellContext`d$$ = 
        50000, $CellContext`e$$ = 54.2}, "ControllerVariables" :> {
        Hold[$CellContext`a$$, $CellContext`a$135098$$, 0], 
        Hold[$CellContext`b$$, $CellContext`b$135099$$, 0], 
        Hold[$CellContext`c$$, $CellContext`c$135100$$, 0], 
        Hold[$CellContext`d$$, $CellContext`d$135101$$, 0], 
        Hold[$CellContext`e$$, $CellContext`e$135102$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Show[{
         ListPlot[$CellContext`data], 
         Plot[$CellContext`a$$ + $CellContext`b$$/($CellContext`c$$ - 
           1/$CellContext`\[Lambda]^2) + $CellContext`d$$/($CellContext`e$$ - 
           1/$CellContext`\[Lambda]^2), {$CellContext`\[Lambda], -2, 3}]}, 
        PlotRange -> {{0, 2}, {25000, 30000}}], 
      "Specifications" :> {{{$CellContext`a$$, 6480}, 5000, 
         15000}, {{$CellContext`b$$, 2.18*^6}, 1000000, 
         3000000}, {{$CellContext`c$$, 110}, 100, 
         150}, {{$CellContext`d$$, 50000}, 10000, 
         80000}, {{$CellContext`e$$, 54.2}, 10, 80}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{403., {273., 279.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.531859608134952*^9, {3.5318596751500273`*^9, 3.5318596997907877`*^9}, {
   3.5318597839443502`*^9, 3.531859807241674*^9}, {3.531859849493154*^9, 
   3.531859866845461*^9}, {3.531859996086029*^9, 3.531860015817047*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"SetDirectory", "[", 
   RowBox[{"NotebookDirectory", "[", "]"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"data", " ", "=", " ", 
  RowBox[{
  "Import", "[", "\"\<airIndex.dat\>\"", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"nlm8", "=", " ", 
  RowBox[{"NonlinearModelFit", "[", 
   RowBox[{"data", ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"a", "+", 
        FractionBox["b", 
         RowBox[{"c", "-", 
          RowBox[{"1", "/", 
           SuperscriptBox["\[Lambda]", "2"]}]}]], "+", 
        FractionBox["d", 
         RowBox[{"e", "-", 
          RowBox[{"1", "/", 
           SuperscriptBox["\[Lambda]", "2"]}]}]]}], ")"}], ",", 
      RowBox[{"6000", "<", "a", "<", "15000"}], ",", 
      RowBox[{"2000000", "<", "b", "<", "3000000"}], ",", 
      RowBox[{"109", "<", "c", "<", "150"}], ",", 
      RowBox[{"30000", "<", "d", "<", "80000"}], ",", 
      RowBox[{"50", "<", "e", "<", "100"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"a", ",", "b", ",", "c", ",", "d", ",", "e"}], "}"}], ",", 
    "\[Lambda]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"ListPlot", "[", "data", "]"}], ",", 
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{"nlm8", "[", "x", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "0", ",", "2"}], "}"}]}], "]"}]}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.5260909659558*^9, 3.5260909665378*^9}, {
   3.526115776609*^9, 3.5261159434821997`*^9}, {3.5261159847441998`*^9, 
   3.526116068407*^9}, {3.5261161082338*^9, 3.5261161346602*^9}, {
   3.5261163356038*^9, 3.526116336493*^9}, {3.5262156078595476`*^9, 
   3.5262156472834897`*^9}, 3.526227922295189*^9, {3.531847198073388*^9, 
   3.5318472402725444`*^9}, 3.5318577060745077`*^9, {3.531858021899481*^9, 
   3.53185811951751*^9}, {3.531858291324131*^9, 3.5318583686237783`*^9}, {
   3.531858406051015*^9, 3.5318585244297533`*^9}, {3.53185860467337*^9, 
   3.531858679156084*^9}, {3.5318587405154753`*^9, 3.5318589157443733`*^9}, {
   3.531858957917179*^9, 3.5318589582663918`*^9}, {3.531859078962139*^9, 
   3.5318591045931063`*^9}, {3.5318600701044617`*^9, 3.5318600966312237`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0.2`", ",", "32410.087058513993`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.21`", ",", "31748.184686293378`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.22`", ",", "31225.610101369195`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.23`", ",", "30800.62691347661`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.24`", ",", "30447.66761553859`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.25`", ",", "30148.197439799173`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.26`", ",", "29890.974889947207`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.27`", ",", "29670.256476217604`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.28`", ",", "29477.162601459873`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.29`", ",", "29305.871823303944`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.3`", ",", "29157.755913088196`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.31`", ",", "29022.63390063487`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.32`", ",", "28904.03610288619`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.33`", ",", "28794.879296378174`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.34`", ",", "28699.53932107246`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.35000000000000003`", ",", "28613.613858203407`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.36`", ",", "28533.492736300966`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.37`", ",", "28459.99430030095`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.38`", ",", "28393.919081250453`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.39`", ",", "28332.114229052822`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.4`", ",", "28277.594391688424`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.41000000000000003`", ",", "28223.52144464974`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.42`", ",", "28178.3260472532`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.43`", ",", "28132.677686574516`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.44`", ",", "28089.054295162096`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.45`", ",", "28053.820242688293`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.46`", ",", "28017.940856996633`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.47000000000000003`", ",", "27985.626272620746`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.48`", ",", "27953.36843266158`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.49`", ",", "27925.780654485792`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.5`", ",", "27896.27125442876`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.51`", ",", "27872.091833227918`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.52`", ",", "27847.68402025165`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.53`", ",", "27824.570014604113`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.54`", ",", "27804.464987572108`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.55`", ",", "27783.4032870408`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.56`", ",", "27765.42380895562`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.5700000000000001`", ",", "27747.8375651445`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.58`", ",", "27726.646954998596`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.59`", ",", "27713.664375521243`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.6`", ",", "27697.35347966441`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.61`", ",", "27683.88429462466`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.62`", ",", "27669.20224779538`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.63`", ",", "27656.03173772363`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.64`", ",", "27642.43044996681`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.65`", ",", "27632.835822499594`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.66`", ",", "27621.070016594877`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.67`", ",", "27611.70739934641`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.68`", ",", "27600.849911520163`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.6900000000000001`", ",", "27590.461652537266`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.7000000000000001`", ",", "27581.471680959217`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.71`", ",", "27572.014911840455`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.72`", ",", "27563.198798429443`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.73`", ",", "27554.646927354566`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.74`", ",", "27549.013299282647`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.75`", ",", "27538.54598728354`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.76`", ",", "27532.25318739449`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.77`", ",", "27525.876019650197`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.78`", ",", "27518.8187436232`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.79`", ",", "27512.98521394447`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.8`", ",", "27505.816129009338`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.81`", ",", "27499.98362473257`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.8200000000000001`", ",", "27492.338336583776`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.8300000000000001`", ",", "27487.819660442372`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.84`", ",", "27482.769311710188`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.85`", ",", "27477.833887805846`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.86`", ",", "27471.024158330856`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.87`", ",", "27466.855466316603`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.88`", ",", "27463.726418732753`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.89`", ",", "27456.661082123366`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.9`", ",", "27452.83900107453`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.91`", ",", "27447.716106081873`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.92`", ",", "27444.517843813373`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.93`", ",", "27442.08021934389`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.9400000000000001`", ",", "27436.33402550467`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.9500000000000001`", ",", "27432.886651375728`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.96`", ",", "27430.27086571702`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.97`", ",", "27428.277244015597`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.98`", ",", "27423.753998345615`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.99`", ",", "27421.21190215077`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.`", ",", "27417.799837855026`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.05`", ",", "27401.374126575098`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.1`", ",", "27391.51273033936`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.15`", ",", "27381.806260187055`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.2`", ",", "27369.263571938714`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.25`", ",", "27360.298786978186`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.3`", ",", "27353.156069652054`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.35`", ",", "27345.61021688933`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.4`", ",", "27340.305429038024`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.45`", ",", "27335.977321150825`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.5`", ",", "27330.114998664045`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.55`", ",", "27327.80539427505`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.6`", ",", "27323.040696610347`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.65`", ",", "27318.756032532612`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.7`", ",", "27314.90559326293`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.75`", ",", "27314.50603917641`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.8`", ",", "27310.079815539753`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.85`", ",", "27306.113967370788`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.9`", ",", "27306.722655772344`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.95`", ",", "27302.33191351909`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.`", ",", "27302.143118207758`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.531857171142522*^9, 3.531857707013205*^9, {3.53185808503314*^9, 
   3.5318581201561203`*^9}, {3.531858292009842*^9, 3.5318583695622263`*^9}, {
   3.531858408725806*^9, 3.531858436993237*^9}, {3.531858480661529*^9, 
   3.531858524904038*^9}, {3.531858615372705*^9, 3.531858673877274*^9}, {
   3.531858757138679*^9, 3.5318587776074533`*^9}, {3.5318588165444603`*^9, 
   3.531858853282963*^9}, {3.5318589055963717`*^9, 3.531858916107602*^9}, 
   3.531858958611608*^9, {3.531859082679031*^9, 3.531859105063259*^9}, 
   3.531860098267049*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NonlinearModelFit", "::", "eit"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The algorithm does not converge to the tolerance of \
\[NoBreak]\\!\\(4.806217383937354`*^-6\\)\[NoBreak] in \[NoBreak]\\!\\(500\\)\
\[NoBreak] iterations. The best estimated solution, with feasibility \
residual, KKT residual, or complementary residual of \
\[NoBreak]\\!\\({4.86911230310476`*^-7, 0.000639153508765362`, \
6.214156360255479`*^-8}\\)\[NoBreak], is returned. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/NonlinearModelFit\\\", ButtonNote -> \
\\\"NonlinearModelFit::eit\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.53186010067556*^9}],

Cell[BoxData[
 RowBox[{"FittedModel", "[", 
  PanelBox[
   TagBox[
    RowBox[{"7943.659094185147`", "\[VeryThinSpace]", "+", 
     FractionBox["53289.68331061343`", 
      RowBox[{
       RowBox[{"\[LeftSkeleton]", "18", "\[RightSkeleton]"}], 
       "\[VeryThinSpace]", "-", 
       FractionBox["1", 
        RowBox[{"\[LeftSkeleton]", "1", "\[RightSkeleton]"}]]}]], "+", 
     FractionBox["2.3339870303389435`*^6", 
      RowBox[{"125.75337517841434`", "\[VeryThinSpace]", "-", 
       FractionBox["1", 
        SuperscriptBox["\[Lambda]", "2"]]}]]}],
    Short],
   FrameMargins->5], "]"}]], "Output",
 CellChangeTimes->{
  3.531857171142522*^9, 3.531857707013205*^9, {3.53185808503314*^9, 
   3.5318581201561203`*^9}, {3.531858292009842*^9, 3.5318583695622263`*^9}, {
   3.531858408725806*^9, 3.531858436993237*^9}, {3.531858480661529*^9, 
   3.531858524904038*^9}, {3.531858615372705*^9, 3.531858673877274*^9}, {
   3.531858757138679*^9, 3.5318587776074533`*^9}, {3.5318588165444603`*^9, 
   3.531858853282963*^9}, {3.5318589055963717`*^9, 3.531858916107602*^9}, 
   3.531858958611608*^9, {3.531859082679031*^9, 3.531859105063259*^9}, 
   3.531860100679516*^9}],

Cell[BoxData[
 GraphicsBox[{
   {Hue[0.67, 0.6, 0.6], PointBox[CompressedData["
1:eJw1kntMk2cUhysbYypkIJCYMOiYBkGWBeO8TCi/16BMLk7wMuMs4ghSZVFB
IBugLEM7cLiAxAswnEydDnWAigzZhhnzknITRFDery0tl1LuVFqEjctofd+T
fPny/fE955zfc9yjDm/dZyUSifbNPeZ3Qb65FCjsiMiVX+0g2hSnkk+0tZAn
6ZoXzusgXtLsGpNnPaYKdQtlaWoSL1nw/HJcA9R3dok9ndSk0k0+EF7ZiCXf
ra7q/0NFRJZqwuLv6SXbeBW5Emf+oQmujXnR1T4qssnSoBnlH7vE5kwqyWC4
mdCMd43v7A9WKIm5mzT7Kc5OjNV99ZOSrLRUC1yCtXvjkpVkrvkcsAWDr1pO
/7pTSVLN46Y8Q0dK+hardUoiNo/j1orRsOjASjcl+ceMq2mFQ6bfic63lEQW
Y642zBtICJIZBLLgNRA/tE1nRqoEYqY5lTzH/aoLl2ZrBbLVsuALbFi+7mlK
lUDGzTjTC2RGZmyxuSGQ1/m1487h4wtiLgjE3wKk2P7FrkhttsDypJCGmlRn
TgjEMp5cwMX0NZHeyQLLV4mo2NzkgEMCaag3lxLER0hL3CewvFUoCxCtOSoV
iLNlQDXENe1O+7cLLH81HM7FnNkZKhALTtqBY77+4/EbBeZDA5eTvlIHf76P
BleT8zTWawXmR4NizdSjgRV8Pw2qMt1Sl34gMF9aNPnurnFdxvfVQnEk8Um7
u8D8aTE/v1S825Xv34nJ1usFpsUC89kJyehdWbEjz6MTIv178lh7gfntQqH3
gYuf2fJ8uuCXuilv4m2B+e5CxZ9FhlBrnlc3AoqnbaysBOa/G9++mXbqxxnK
8uvG+muuaaumKLuHHoR0eqRumKQszx4c19sEDo1Tdh890AWNRa82UpavDl86
/551wUDZvejwzQ5rnz0jlOWtw8PaMKNoiLL76YXE1vVefT9l+feibHq9rFhP
2T31wsqvp530UuZDj4pfEg2Xuinzoccj3dqP7Lso86GH/b1y+6+1lPnQI+Ja
SEx5B2U++vBAUW0HNWU++uDineSbqKTMRx9SPe6OzVDKfPTj/NFPrzm3U5Jj
8dGPxEXhScbnlPnox+CHMr9bbZT5GECxKXZPUitlPgYgiXqS9XcLZT4G4FVn
ul/xlDIfg1g8e+XYcDNlPgZhivbesryJ+xiES86K26uecB9DyCgoeTbUwH0M
oXLv50vdG7iPIfwcFva+vJ77GMbV9Jt7neu4j2EcPNBTvbaW+xiGnZdqx2kF
9zECUWlEtYOC+xhBf2D6+tHH3McItPMbszc/5j5GIXXN8kl4xOcdxbLzZYad
NTxfAxr7cps09ymxtI95CfW2B/kJf/G8xuDbJlWHVXGeES9jt4kdKznPCHXO
wumgCs4zQbGkzk5WznnjiPbzOOV4h/NeQfzGoVMztzhvAsG7l0gzyjhvAsMH
z2SNlXLeJIqMDwtqSjjvX+QGtkWV/cZ5/8EQLzHdu8l5UwhZ+jKq6CbnTUFy
+baL/AbnTeNcvSQk4zrnzUA8O42S65w3i5iVi/zPFnOeiBzZ2O55cu77f1Na
McU=
     "]]}, {{}, {}, 
    {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
DKSKT7oUEP8PFvHoCw==
      "]], 
     LineBox[{{0.11657463114386826`, 29288.78159335407}, {
      0.11658838551913081`, 29138.770574805807`}, {0.11673366846010538`, 
      26107.62903495469}}], 
     LineBox[{{0.11784698987618247`, 26107.62903495469}, {
      0.11784808892645532`, 29288.78159335407}}], 
     LineBox[{{0.08874056513173412, 26107.62903495469}, {0.08874075451841162, 
      29288.78159335407}}]}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  PlotRange->All,
  PlotRangeClipping->True]], "Output",
 CellChangeTimes->{
  3.531857171142522*^9, 3.531857707013205*^9, {3.53185808503314*^9, 
   3.5318581201561203`*^9}, {3.531858292009842*^9, 3.5318583695622263`*^9}, {
   3.531858408725806*^9, 3.531858436993237*^9}, {3.531858480661529*^9, 
   3.531858524904038*^9}, {3.531858615372705*^9, 3.531858673877274*^9}, {
   3.531858757138679*^9, 3.5318587776074533`*^9}, {3.5318588165444603`*^9, 
   3.531858853282963*^9}, {3.5318589055963717`*^9, 3.531858916107602*^9}, 
   3.531858958611608*^9, {3.531859082679031*^9, 3.531859105063259*^9}, 
   3.531860100781275*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"first81", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"nlm8", "[", "i", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "0.2", ",", "1", ",", "0.01"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"last20", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"nlm8", "[", "i", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1.05", ",", "2", ",", "0.05"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"total", " ", "=", " ", 
  RowBox[{"Join", "[", 
   RowBox[{"first81", ",", "last20"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"\[Delta]s", " ", "=", " ", 
  RowBox[{
   RowBox[{"Transpose", "[", "data", "]"}], "[", 
   RowBox[{"[", "2", "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"\[Delta]s", "-", "total"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Max", "[", 
   RowBox[{"Abs", "[", 
    RowBox[{"\[Delta]s", "-", "total"}], "]"}], "]"}], " ", 
  RowBox[{"(*", 
   RowBox[{
   "the", " ", "first", " ", "one", " ", "is", " ", "the", " ", "furthest", 
    " ", "off"}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.531858993970482*^9, 3.531859068985873*^9}, {
  3.531859108356229*^9, 3.5318593248657007`*^9}, {3.531860114306514*^9, 
  3.53186011496894*^9}, {3.531860199304325*^9, 3.5318602264724207`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "32259.890117757437`", ",", "31682.533465447654`", ",", 
   "31204.880693445928`", ",", "30804.272180037464`", ",", 
   "30464.344797649912`", ",", "30172.991062892608`", ",", 
   "29921.065494441522`", ",", "29701.536154561156`", ",", 
   "29508.911865662012`", ",", "29338.84580228206`", ",", 
   "29187.85514203772`", ",", "29053.11897888213`", ",", 
   "28932.330161871374`", ",", "28823.585009806644`", ",", 
   "28725.3000897097`", ",", "28636.148635235208`", ",", 
   "28555.011419085997`", ",", "28480.938399830156`", ",", 
   "28413.118494885493`", ",", "28350.85554870171`", ",", 
   "28293.549071177185`", ",", "28240.678683046513`", ",", 
   "28191.791466684204`", ",", "28146.491612276575`", ",", 
   "28104.43189092462`", ",", "28065.30659198363`", ",", "28028.84564162834`",
    ",", "27994.809680194143`", ",", "27962.98592224402`", ",", 
   "27933.184659129398`", ",", "27905.23629166092`", ",", 
   "27878.988802302098`", ",", "27854.30559346842`", ",", 
   "27831.06363212106`", ",", "27809.15185168849`", ",", "27788.46977103973`",
    ",", "27768.926297232625`", ",", "27750.43868442706`", ",", 
   "27732.931625961006`", ",", "27716.33646035221`", ",", 
   "27700.59047507675`", ",", "27685.63629452061`", ",", "27671.42134060429`",
    ",", "27657.897356328227`", ",", "27645.019983941864`", ",", 
   "27632.74839065664`", ",", "27621.044935843922`", ",", 
   "27609.874874518147`", ",", "27599.206092630826`", ",", 
   "27589.008870315134`", ",", "27579.255669742328`", ",", 
   "27569.92094469528`", ",", "27560.98096934349`", ",", 
   "27552.413684028543`", ",", "27544.198556147367`", ",", 
   "27536.316454460248`", ",", "27528.74953535705`", ",", 
   "27521.481139793716`", ",", "27514.495699765448`", ",", 
   "27507.778653317575`", ",", "27501.316367211213`", ",", 
   "27495.09606646315`", ",", "27489.10577006766`", ",", "27483.33423228599`",
    ",", "27477.77088895713`", ",", "27472.40580834333`", ",", 
   "27467.229646076434`", ",", "27462.233603817353`", ",", 
   "27457.409391281813`", ",", "27452.74919132197`", ",", 
   "27448.24562778484`", ",", "27443.89173589759`", ",", 
   "27439.680934954264`", ",", "27435.607003101373`", ",", 
   "27431.664054039367`", ",", "27427.84651547504`", ",", 
   "27424.149109175625`", ",", "27420.566832489585`", ",", 
   "27417.094941211795`", ",", "27413.728933682214`", ",", 
   "27410.46453601735`", ",", "27395.531402259436`", ",", 
   "27382.606861179283`", ",", "27371.345512211316`", ",", 
   "27361.47325838464`", ",", "27352.770317101324`", ",", 
   "27345.058779485385`", ",", "27338.19337609173`", ",", 
   "27332.054536988122`", ",", "27326.543116335066`", ",", 
   "27321.57633986303`", ",", "27317.084661344037`", ",", 
   "27313.009302063965`", ",", "27309.30030865988`", ",", 
   "27305.915008061897`", ",", "27302.81676930887`", ",", 
   "27299.97400445185`", ",", "27297.359357163128`", ",", 
   "27294.949039774823`", ",", "27292.722288486235`", ",", 
   "27290.66091325171`"}], "}"}]], "Output",
 CellChangeTimes->{{3.531859056340786*^9, 3.5318590692254972`*^9}, {
  3.531859110702385*^9, 3.531859325815729*^9}, {3.531860107290462*^9, 
  3.531860115657947*^9}, {3.531860206856192*^9, 3.531860213370432*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "32410.087058513993`", ",", "31748.184686293378`", ",", 
   "31225.610101369195`", ",", "30800.62691347661`", ",", 
   "30447.66761553859`", ",", "30148.197439799173`", ",", 
   "29890.974889947207`", ",", "29670.256476217604`", ",", 
   "29477.162601459873`", ",", "29305.871823303944`", ",", 
   "29157.755913088196`", ",", "29022.63390063487`", ",", 
   "28904.03610288619`", ",", "28794.879296378174`", ",", 
   "28699.53932107246`", ",", "28613.613858203407`", ",", 
   "28533.492736300966`", ",", "28459.99430030095`", ",", 
   "28393.919081250453`", ",", "28332.114229052822`", ",", 
   "28277.594391688424`", ",", "28223.52144464974`", ",", "28178.3260472532`",
    ",", "28132.677686574516`", ",", "28089.054295162096`", ",", 
   "28053.820242688293`", ",", "28017.940856996633`", ",", 
   "27985.626272620746`", ",", "27953.36843266158`", ",", 
   "27925.780654485792`", ",", "27896.27125442876`", ",", 
   "27872.091833227918`", ",", "27847.68402025165`", ",", 
   "27824.570014604113`", ",", "27804.464987572108`", ",", 
   "27783.4032870408`", ",", "27765.42380895562`", ",", "27747.8375651445`", 
   ",", "27726.646954998596`", ",", "27713.664375521243`", ",", 
   "27697.35347966441`", ",", "27683.88429462466`", ",", "27669.20224779538`",
    ",", "27656.03173772363`", ",", "27642.43044996681`", ",", 
   "27632.835822499594`", ",", "27621.070016594877`", ",", 
   "27611.70739934641`", ",", "27600.849911520163`", ",", 
   "27590.461652537266`", ",", "27581.471680959217`", ",", 
   "27572.014911840455`", ",", "27563.198798429443`", ",", 
   "27554.646927354566`", ",", "27549.013299282647`", ",", 
   "27538.54598728354`", ",", "27532.25318739449`", ",", 
   "27525.876019650197`", ",", "27518.8187436232`", ",", "27512.98521394447`",
    ",", "27505.816129009338`", ",", "27499.98362473257`", ",", 
   "27492.338336583776`", ",", "27487.819660442372`", ",", 
   "27482.769311710188`", ",", "27477.833887805846`", ",", 
   "27471.024158330856`", ",", "27466.855466316603`", ",", 
   "27463.726418732753`", ",", "27456.661082123366`", ",", 
   "27452.83900107453`", ",", "27447.716106081873`", ",", 
   "27444.517843813373`", ",", "27442.08021934389`", ",", 
   "27436.33402550467`", ",", "27432.886651375728`", ",", 
   "27430.27086571702`", ",", "27428.277244015597`", ",", 
   "27423.753998345615`", ",", "27421.21190215077`", ",", 
   "27417.799837855026`", ",", "27401.374126575098`", ",", 
   "27391.51273033936`", ",", "27381.806260187055`", ",", 
   "27369.263571938714`", ",", "27360.298786978186`", ",", 
   "27353.156069652054`", ",", "27345.61021688933`", ",", 
   "27340.305429038024`", ",", "27335.977321150825`", ",", 
   "27330.114998664045`", ",", "27327.80539427505`", ",", 
   "27323.040696610347`", ",", "27318.756032532612`", ",", 
   "27314.90559326293`", ",", "27314.50603917641`", ",", 
   "27310.079815539753`", ",", "27306.113967370788`", ",", 
   "27306.722655772344`", ",", "27302.33191351909`", ",", 
   "27302.143118207758`"}], "}"}]], "Output",
 CellChangeTimes->{{3.531859056340786*^9, 3.5318590692254972`*^9}, {
  3.531859110702385*^9, 3.531859325815729*^9}, {3.531860107290462*^9, 
  3.531860115657947*^9}, {3.531860206856192*^9, 3.531860213375506*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "150.1969407565557`", ",", "65.65122084572431`", ",", "20.72940792326699`", 
   ",", 
   RowBox[{"-", "3.6452665608521784`"}], ",", 
   RowBox[{"-", "16.6771821113216`"}], ",", 
   RowBox[{"-", "24.7936230934356`"}], ",", 
   RowBox[{"-", "30.090604494314903`"}], ",", 
   RowBox[{"-", "31.279678343551495`"}], ",", 
   RowBox[{"-", "31.749264202138875`"}], ",", 
   RowBox[{"-", "32.973978978116065`"}], ",", 
   RowBox[{"-", "30.099228949522512`"}], ",", 
   RowBox[{"-", "30.48507824725675`"}], ",", 
   RowBox[{"-", "28.294058985182346`"}], ",", 
   RowBox[{"-", "28.705713428469608`"}], ",", 
   RowBox[{"-", "25.76076863723938`"}], ",", 
   RowBox[{"-", "22.53477703180033`"}], ",", 
   RowBox[{"-", "21.51868278503025`"}], ",", 
   RowBox[{"-", "20.94409952920614`"}], ",", 
   RowBox[{"-", "19.1994136350404`"}], ",", 
   RowBox[{"-", "18.741319648888748`"}], ",", 
   RowBox[{"-", "15.95467948876103`"}], ",", 
   RowBox[{"-", "17.1572383967723`"}], ",", 
   RowBox[{"-", "13.465419431006012`"}], ",", 
   RowBox[{"-", "13.81392570205935`"}], ",", 
   RowBox[{"-", "15.377595762525743`"}], ",", 
   RowBox[{"-", "11.486349295337277`"}], ",", 
   RowBox[{"-", "10.904784631708026`"}], ",", 
   RowBox[{"-", "9.183407573396835`"}], ",", 
   RowBox[{"-", "9.617489582440612`"}], ",", 
   RowBox[{"-", "7.404004643605731`"}], ",", 
   RowBox[{"-", "8.965037232159375`"}], ",", 
   RowBox[{"-", "6.896969074179651`"}], ",", 
   RowBox[{"-", "6.62157321676932`"}], ",", 
   RowBox[{"-", "6.49361751694596`"}], ",", 
   RowBox[{"-", "4.686864116381912`"}], ",", 
   RowBox[{"-", "5.0664839989294705`"}], ",", 
   RowBox[{"-", "3.502488277004886`"}], ",", 
   RowBox[{"-", "2.6011192825608305`"}], ",", 
   RowBox[{"-", "6.2846709624100185`"}], ",", 
   RowBox[{"-", "2.6720848309669236`"}], ",", 
   RowBox[{"-", "3.2369954123423668`"}], ",", 
   RowBox[{"-", "1.7519998959505756`"}], ",", 
   RowBox[{"-", "2.2190928089112276`"}], ",", 
   RowBox[{"-", "1.865618604595511`"}], ",", 
   RowBox[{"-", "2.5895339750532003`"}], ",", "0.08743184295235551`", ",", 
   "0.02508075095465756`", ",", "1.8325248282635584`", ",", 
   "1.6438188893371262`", ",", "1.4527822221316455`", ",", 
   "2.2160112168894557`", ",", "2.093967145174247`", ",", 
   "2.217829085951962`", ",", "2.233243326023512`", ",", "4.814743135280878`",
    ",", "2.2295328232939937`", ",", "3.5036520374414977`", ",", 
   "4.394879856481566`", ",", "4.3230438577520545`", ",", 
   "5.206560626895225`", ",", "4.499761798124382`", ",", "4.887558269419969`",
    ",", "3.2325665161151846`", ",", "4.485428156382113`", ",", 
   "4.9984227530585486`", ",", "5.428079462515598`", ",", 
   "3.794512254422443`", ",", "4.62186249925071`", ",", "6.317027450939349`", 
   ",", "3.9118908013952023`", ",", "4.593373289691954`", ",", 
   "3.8243701842839073`", ",", "4.836908859109826`", ",", 
   "6.473216242517083`", ",", "4.6699714653041156`", ",", 
   "5.040135900686437`", ",", "6.121756541393552`", ",", "7.71041152601174`", 
   ",", "6.65905713382017`", ",", "7.482968468557374`", ",", 
   "7.335301837676525`", ",", "5.842724315662053`", ",", "8.90586916007669`", 
   ",", "10.46074797573965`", ",", "7.790313554072782`", ",", 
   "7.5284698768628004`", ",", "8.097290166668245`", ",", 
   "7.416840797599434`", ",", "8.250892049902177`", ",", "9.434204815759585`",
    ",", "8.538658801015117`", ",", "10.720732931011298`", ",", 
   "10.031394546382217`", ",", "9.455723872732051`", ",", 
   "8.990585201034264`", ",", "11.689269867540133`", ",", 
   "10.105811087902111`", ",", "8.754610207659425`", ",", 
   "11.77361599752112`", ",", "9.609625032855547`", ",", 
   "11.48220495604619`"}], "}"}]], "Output",
 CellChangeTimes->{{3.531859056340786*^9, 3.5318590692254972`*^9}, {
  3.531859110702385*^9, 3.531859325815729*^9}, {3.531860107290462*^9, 
  3.531860115657947*^9}, {3.531860206856192*^9, 3.531860213380541*^9}}],

Cell[BoxData["150.1969407565557`"], "Output",
 CellChangeTimes->{{3.531859056340786*^9, 3.5318590692254972`*^9}, {
  3.531859110702385*^9, 3.531859325815729*^9}, {3.531860107290462*^9, 
  3.531860115657947*^9}, {3.531860206856192*^9, 3.5318602133843718`*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["(#9)", "Section",
 CellChangeTimes->{{3.5260909748058*^9, 3.5260909767402*^9}}],

Cell[TextData[{
 "Write a documented package named plasmaSimulation to simulate the motion of \
electrons and protons in a classical 2-dimensional neutral plasma.  We will \
use natural units for this problem so you don\[CloseCurlyQuote]t have to \
worry about a lot of constants.  I suggest debugging each of the parts of the \
package separately in a notebook before copying them to your package.  The \
package should have the following methods:\n\n",
 StyleBox["InitializePlasma[ionPairs_, temperature_]",
  FontWeight->"Bold"],
 ": creates a random plasma with ionPairs electrons and ionPairs protrons.  \
Each electron should have a random speed given by a Maxwell-Boltzmann \
distribution with the given temperature.  Because of their much higher mass, \
the protons will be stationary over the time period of this simulation.  In a \
Maxwell-Boltzmann distribution, each component of an electron\
\[CloseCurlyQuote]s velocity has a mean of 0 and a standard deviation of ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Sigma]", "=", 
    SqrtBox[
     FractionBox[
      RowBox[{"T", " ", 
       SubscriptBox["k", "B"]}], "m"]]}], TraditionalForm]]],
 ".  In our units, both Boltzmann\[CloseCurlyQuote]s constant ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["k", "B"], " "}], TraditionalForm]]],
 " and the electron\[CloseCurlyQuote]s mass ",
 Cell[BoxData[
  FormBox["m", TraditionalForm]]],
 " are equal to 1.  The electrons and protons should be assigned random \
positions in a box with ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"-", "2"}], "\[LessEqual]", 
    RowBox[{"-", "x"}], "\[LessEqual]", "2"}], TraditionalForm]]],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"-", "2"}], "\[LessEqual]", "y", "\[LessEqual]", "2"}], 
   TraditionalForm]]],
 ".\n\n",
 StyleBox["DrawPlasma[]",
  FontWeight->"Bold"],
 ": produces of Graphics object representing the plasma.  Electrons should be \
drawn as small black points and protons as larger red circles.\n\n",
 StyleBox["PlasmaProperties[]",
  FontWeight->"Bold"],
 ":  summarizes information about the statistical state of the plasma: number \
of electrons, average speed, average momentum, and total kinetic energy.\n\n",
 StyleBox["UpdatePlasma[dt_]",
  FontWeight->"Bold"],
 ": This is the heart of the plasma simulation.  It takes a time step of \
length dt.  It computes the 2d force f on each electron (which will be equal \
to its acceleration since m=1).  It then updates each electron\
\[CloseCurlyQuote]s 2d velocity v by the formula ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["v", 
     RowBox[{"i", "+", "1"}]], "=", 
    RowBox[{
     SubscriptBox["v", "i"], "+", 
     RowBox[{"f", " ", "dt"}]}]}], TraditionalForm]]],
 ", where ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["v", "i"], " "}], TraditionalForm]]],
 " is the velocity at the current time and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["v", 
    RowBox[{"i", "+", "1"}]], TraditionalForm]]],
 " is the updated velocity.  Next it updates each electron\[CloseCurlyQuote]s \
position ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["r", 
     RowBox[{"i", "+", "1"}]], "=", 
    RowBox[{
     SubscriptBox["r", "i"], "+", 
     RowBox[{
      SubscriptBox["v", 
       RowBox[{"i", "+", "1"}]], " ", "dt"}]}]}], TraditionalForm]]],
 ".  The force on each electron is the sum of the repulsive force from each \
of the other electrons and the attractive force of each of the protons.  In \
our units, the force on electron 1 at position ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["r", "1"], TraditionalForm]]],
 " due to another electron at position ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["r", "2"], " "}], TraditionalForm]]],
 "is ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"-", "dr"}], "/", 
    SuperscriptBox[
     SubscriptBox["r", "12"], "3"]}], TraditionalForm]]],
 ", where ",
 Cell[BoxData[
  FormBox[
   RowBox[{"dr", "=", 
    RowBox[{
     SubscriptBox["r", "2"], "-", 
     SubscriptBox["r", "1"], " "}]}], TraditionalForm]]],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["r", "12"], "=", 
    SqrtBox[
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["x", "2"], "-", 
         SubscriptBox["x", "1"]}], ")"}], "2"], "+", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["y", "2"], "-", 
         SubscriptBox["y", "1"]}], ")"}], "2"]}]]}], TraditionalForm]]],
 ".  The force on electron 1 at position ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["r", "1"], " "}], TraditionalForm]]],
 " due to a ",
 StyleBox["proton",
  FontSlant->"Italic"],
 " at position ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["r", "2"], " "}], TraditionalForm]]],
 " has the oppostive sign:  ",
 Cell[BoxData[
  FormBox[
   RowBox[{"f", "=", 
    RowBox[{"dr", "/", 
     SuperscriptBox[
      SubscriptBox["r", "12"], "3"]}]}], TraditionalForm]]],
 ".  After updating the postion,\napply a periodic boundary condition to the \
positions to keep them inside the box.  For example, if x<-2, let x=x+4.  \
Make a similar adjustment on the other boundaries.  If r gets too small, your \
code could run into numerical instabilities.  To prevent this, force r to \
always be at least as large as 0.05.\n\n",
 StyleBox["TestPlasma[filename_]",
  FontWeight->"Bold"],
 ": reads in a particular plasma from a file stored in csv format.  The file \
will have six comma,separated numbers on each line.  The first two are the \
components of an electron\[CloseCurlyQuote]s position.  The second two are \
the components of that electron\[CloseCurlyQuote]s velocity.  The third two \
are the components of a proton\[CloseCurlyQuote]s position.  When you execute \
this command, it takes the place of the positions and velocities generated by \
the InitializePlasma command.  The file plasmaTest.csv is an example file you \
can (and should) use to test this.\n\nDemonstrate your library to your TA \
using both InitializePlasma and TestPlasma.  Create an animation of the \
motion of the plasma for 100 steps using the output of UpdatePlasma.  Use \
about 10 electrons, a temperature of about 0.5, and a time step of 0.01.\n\n\
Test case:  for the test plasma in the file plasmaTest.csv you should get 10 \
electrons, an average momentum of {0.22,0.164}, an average speed of 0.706, \
and a total kinetic energy of 3.61 before taking any time steps.  After 100 \
steps, you should have an average momentumof {-0.32, -0.733}, an average \
speed of 2.67, and a total kinetic energy of 41.6.  (Why \
isn\[CloseCurlyQuote]t momentum and energy conserved?)"
}], "Text",
 CellChangeTimes->CompressedData["
1:eJwlx00og3EAx/HlIC+7LVqK2ShNq9XjkfV4CXm8pGRrQg7isWhkNydpLQfb
ssNMrdUoiXKhjdoUsUV22RQpNUtetsVC2i7Txv/3OHz79JVOGjS6AoFAUEGC
8/ShZJF96xh3zsjgr1RdukIMZIQiqI+xRrijmF6GKrPbDNme+Cqkhrbt0CEe
OYLfnNEPFx57g/Cyf/cZVoYyGZhSn2WhVqPMwa2avnoPMW0TzcIruccAGfua
C1Lx2CacS7wfQO7DfgHbTSUhWP7TEOG/ceP+/63FXiJtlIghU+R+8BHbsq4k
7PT5P+ErNfgFW85H5X5iN8fx5pcGKFir2KNhVa5VC6PC9WFYRO+PwTqNUw/v
Ck2OY6LYa+H1JJk0tFmneOO6psAJUcYmbuDtU151SgxPlDXDFyYahkGLNAJ1
18oY7KqWpuAf49bXFQ==
  "]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.526215564050167*^9, 3.526215564529215*^9}, {
   3.526217683852126*^9, 3.5262177264293833`*^9}, {3.526217765727313*^9, 
   3.52621791621336*^9}, {3.526217991194857*^9, 3.5262180107798157`*^9}, {
   3.526218057166454*^9, 3.5262182021319485`*^9}, {3.5262183160403385`*^9, 
   3.5262183187266073`*^9}, {3.5262183522029543`*^9, 
   3.5262184332430573`*^9}, {3.5262184753272657`*^9, 3.526218481951928*^9}, {
   3.526218563251057*^9, 3.526218594322164*^9}, {3.526218632661998*^9, 
   3.5262186339101224`*^9}, {3.5262186692416553`*^9, 3.52621869919465*^9}, {
   3.5262187319799285`*^9, 3.526218793980128*^9}, {3.5262189206577945`*^9, 
   3.526218944338162*^9}, {3.526219007317459*^9, 3.526219007573485*^9}, {
   3.526219343332058*^9, 3.5262193525819826`*^9}, {3.5262196778615074`*^9, 
   3.526219678163537*^9}, {3.5262197892076406`*^9, 3.526219802760996*^9}, {
   3.526226363427189*^9, 3.526226414432189*^9}, {3.526226570855189*^9, 
   3.526226606849189*^9}, 3.526227755874189*^9, 3.526227905736189*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Tests for #9", "Title",
 CellChangeTimes->{{3.531863560668006*^9, 3.531863568787078*^9}}],

Cell[CellGroupData[{

Cell["Methods", "Section",
 CellChangeTimes->{{3.531863581163527*^9, 3.531863582265924*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"InitializePlasma", "[", 
   RowBox[{"ionPairs_", ",", "temperature_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "electronSpeed", ",", "electronPosition", ",", "protonPosition"}], "}"}],
     ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"electronSpeed", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"RandomVariate", "[", 
         RowBox[{"MaxwellDistribution", "[", 
          SqrtBox["temperature"], "]"}], "]"}], ",", 
        RowBox[{"RandomVariate", "[", 
         RowBox[{"MaxwellDistribution", "[", 
          SqrtBox["temperature"], "]"}], "]"}]}], "}"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"electronPosition", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"RandomReal", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "2"}], ",", "2"}], "}"}], "]"}], ",", 
        RowBox[{"RandomReal", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "2"}], ",", "2"}], "}"}], "]"}]}], "}"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"protonPosition", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"RandomReal", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "2"}], ",", "2"}], "}"}], "]"}], ",", 
        RowBox[{"RandomReal", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "2"}], ",", "2"}], "}"}], "]"}]}], "}"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"electronPosition", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", 
       RowBox[{"electronPosition", "[", 
        RowBox[{"[", "2", "]"}], "]"}], ",", 
       RowBox[{"electronSpeed", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", 
       RowBox[{"electronSpeed", "[", 
        RowBox[{"[", "2", "]"}], "]"}], ",", 
       RowBox[{"protonPosition", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", 
       RowBox[{"protonPosition", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}]}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.531860668666757*^9, 3.531860950635253*^9}, {
  3.531861575041874*^9, 3.5318616338028297`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"DrawPlasma", "[", "plasma_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "elec", ",", " ", "prot", ",", "electrons", ",", "protons", ",", 
      "numberOfItems", ",", "counter", ",", "allItems"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"numberOfItems", "=", 
      RowBox[{
       RowBox[{"Dimensions", "[", "plasma", "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"counter", "=", "1"}], ";", "\[IndentingNewLine]", 
     RowBox[{"electrons", "=", 
      RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"protons", "=", " ", 
      RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"While", "[", 
      RowBox[{
       RowBox[{"counter", "\[LessEqual]", "numberOfItems"}], ",", 
       RowBox[{
        RowBox[{"elec", " ", "=", " ", 
         RowBox[{"Graphics", "[", 
          RowBox[{"{", 
           RowBox[{"Black", ",", 
            RowBox[{"Point", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"plasma", "[", 
                RowBox[{"[", 
                 RowBox[{"counter", ",", "1"}], "]"}], "]"}], ",", 
               RowBox[{"plasma", "[", 
                RowBox[{"[", 
                 RowBox[{"counter", ",", "2"}], "]"}], "]"}]}], "}"}], 
             "]"}]}], "}"}], "]"}]}], ";", 
        RowBox[{"prot", " ", "=", " ", 
         RowBox[{"Graphics", "[", 
          RowBox[{"{", 
           RowBox[{"Red", ",", 
            RowBox[{"Disk", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"plasma", "[", 
                 RowBox[{"[", 
                  RowBox[{"counter", ",", "5"}], "]"}], "]"}], ",", 
                RowBox[{"plasma", "[", 
                 RowBox[{"[", 
                  RowBox[{"counter", ",", "6"}], "]"}], "]"}]}], "}"}], ",", 
              ".05"}], "]"}]}], "}"}], "]"}]}], ";", 
        RowBox[{"AppendTo", "[", 
         RowBox[{"electrons", ",", "elec"}], "]"}], ";", 
        RowBox[{"AppendTo", "[", 
         RowBox[{"protons", ",", "prot"}], "]"}], ";", 
        RowBox[{"counter", "++"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"allItems", " ", "=", " ", 
      RowBox[{"Join", "[", 
       RowBox[{"protons", ",", "electrons"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Show", "[", 
      RowBox[{
       RowBox[{"{", "allItems", "}"}], ",", 
       RowBox[{"Axes", "\[Rule]", "True"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "2"}], ",", "2"}], "}"}]}], "}"}]}]}], "]"}]}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.531861179134122*^9, 3.531861353081605*^9}, {
  3.531861409219282*^9, 3.531861508234745*^9}, {3.531861781311759*^9, 
  3.531861823541622*^9}, {3.531861867222385*^9, 3.5318618831433067`*^9}, {
  3.531861945686801*^9, 3.5318620060059843`*^9}, {3.53186203635964*^9, 
  3.531862047949708*^9}, {3.531862088911476*^9, 3.531862204385107*^9}, {
  3.5318623257513638`*^9, 3.531862671446957*^9}, {3.531862979260848*^9, 
  3.531863040843294*^9}, {3.531863080610586*^9, 3.531863092866418*^9}, {
  3.531863213669949*^9, 3.5318632349857893`*^9}, {3.531863376498929*^9, 
  3.53186341097969*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"PlasmaProperties", "[", "plasma_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "numberOfElectrons", ",", "averageSpeed", ",", "averageMomentum", ",", 
      "totalKineticEnergy"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"numberOfElectrons", "=", 
      RowBox[{
       RowBox[{"Dimensions", "[", "plasma", "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ";"}]}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.531863439599943*^9, 3.53186351699769*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"UpdatePlasma", "[", "dt_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "}"}], ","}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"come", " ", "Back", " ", "here"}], "*)"}], "\[IndentingNewLine]",
    "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.531861521659544*^9, 3.5318615415900927`*^9}, {
  3.5318636144602537`*^9, 3.531863622363106*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"TestPlasma", "[", "filename_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "}"}], ","}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"come", " ", "back", " ", "here"}], "*)"}], "\[IndentingNewLine]",
    "]"}]}]], "Input",
 CellChangeTimes->{{3.531863596468573*^9, 3.5318636285974503`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Experiments", "Section",
 CellChangeTimes->{{3.531862097231964*^9, 3.531862098446055*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"DrawPlasma", "[", "allStuff_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "electron", ",", " ", "protons", ",", "lengthOfStuff", ",", "counter"}], 
     "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"lengthOfStuff", "=", 
      RowBox[{
       RowBox[{"Dimensions", "[", "allStuff", "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"counter", "=", "0"}], ";", "\[IndentingNewLine]", 
     RowBox[{"While", "[", 
      RowBox[{
       RowBox[{"counter", "\[LessEqual]", "lengthOfStuff"}], ",", " ", 
       RowBox[{"InitializePlasma", ";", 
        RowBox[{"counter", "++"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"electron", " ", "=", " ", 
      RowBox[{"Graphics", "[", 
       RowBox[{"{", 
        RowBox[{"Black", ",", 
         RowBox[{"Point", "[", "electronposition", "]"}]}], "}"}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"protons", " ", "=", " ", 
      RowBox[{"Graphics", "[", 
       RowBox[{"{", 
        RowBox[{"Red", ",", 
         RowBox[{"Disk", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"protonPosition", "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", 
             RowBox[{"protonPosition", "[", 
              RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", ".2"}], "]"}]}], 
        "}"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Show", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"electron", ",", " ", "protons"}], "}"}], ",", 
       RowBox[{"Axes", "\[Rule]", "True"}]}], "]"}]}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.5318626818717337`*^9, 3.531862683019539*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"crap3", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"InitializePlasma", "[", 
      RowBox[{"x", ",", "400"}], "]"}], ",", 
     RowBox[{"InitializePlasma", "[", 
      RowBox[{"x", ",", "500"}], "]"}], ",", 
     RowBox[{"InitializePlasma", "[", 
      RowBox[{"x", ",", "300"}], "]"}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.53186325256839*^9, 3.531863273106991*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"crap", " ", "=", " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"InitializePlasma", "[", 
     RowBox[{"x", ",", "400"}], "]"}], ",", 
    RowBox[{"InitializePlasma", "[", 
     RowBox[{"x", ",", "500"}], "]"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.5318616366928053`*^9, 3.531861646316826*^9}, {
  3.531861831787489*^9, 3.53186185258832*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.9953222997808773`"}], ",", 
     RowBox[{"-", "1.0908860801681017`"}], ",", "15.293884390069124`", ",", 
     "25.949131788996187`", ",", "1.3361177972668878`", ",", 
     "1.9112369773565696`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.3067430051003992`", ",", 
     RowBox[{"-", "0.6222958015226565`"}], ",", "38.417520322398964`", ",", 
     "18.173462284328764`", ",", 
     RowBox[{"-", "1.9622521619422342`"}], ",", "1.542367894176488`"}], 
    "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.531861852893004*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Dimensions", "[", "crap", "]"}], "[", 
  RowBox[{"[", "1", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.531861859098394*^9, 3.531861872075941*^9}}],

Cell[BoxData["2"], "Output",
 CellChangeTimes->{{3.531861862013432*^9, 3.5318618724819736`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"electronposition1", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"InitializePlasma", "[", 
       RowBox[{"x", ",", "400"}], "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{"InitializePlasma", "[", 
       RowBox[{"x", ",", "400"}], "]"}], "[", 
      RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"protonPosition1", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"InitializePlasma", "[", 
       RowBox[{"x", ",", "400"}], "]"}], "[", 
      RowBox[{"[", "5", "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{"InitializePlasma", "[", 
       RowBox[{"x", ",", "400"}], "]"}], "[", 
      RowBox[{"[", "6", "]"}], "]"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"electronSpeed1", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"InitializePlasma", "[", 
       RowBox[{"x", ",", "400"}], "]"}], "[", 
      RowBox[{"[", "3", "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{"InitializePlasma", "[", 
       RowBox[{"x", ",", "400"}], "]"}], "[", 
      RowBox[{"[", "4", "]"}], "]"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"DrawPlasma", "[", "crap", "]"}]}], "Input",
 CellChangeTimes->{{3.5318613858038073`*^9, 3.531861393920019*^9}, {
  3.531862219935235*^9, 3.531862226807263*^9}, {3.5318630217119617`*^9, 
  3.5318630229182568`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Show", "::", "shx"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"No graphical objects to show. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/Show/shx\\\", ButtonNote -> \
\\\"Show::shx\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.53186302358702*^9}],

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"{", "}"}], "}"}], ",", 
   RowBox[{"Axes", "\[Rule]", "True"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "2"}], ",", "2"}], "}"}]}], "}"}]}]}], "]"}]], "Output",
 CellChangeTimes->{3.531862315794417*^9, 3.53186302358945*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"crap10", " ", "=", " ", 
  RowBox[{"Import", "[", "\"\<plasmaTest.csv\>\"", "]"}]}]], "Input",
 CellChangeTimes->{{3.531863337869957*^9, 3.531863358222402*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.40056528922214163`"}], ",", "1.0889172568793866`", ",", 
     "1.055631869066579`", ",", "0.1632817550375835`", ",", 
     RowBox[{"-", "1.214237596714784`"}], ",", 
     RowBox[{"-", "0.6992107557642635`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.2450965769408251`", ",", 
     RowBox[{"-", "1.1958292687807113`"}], ",", "0.06748975607822463`", ",", 
     RowBox[{"-", "0.576109852487871`"}], ",", "1.7910583165507719`", ",", 
     "0.48406884902664693`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.7629827870866057`", ",", "0.27270698699475027`", ",", 
     RowBox[{"-", "0.5651764812509822`"}], ",", 
     RowBox[{"-", "0.049049198223488556`"}], ",", 
     RowBox[{"-", "0.4186427803941992`"}], ",", "1.3750380361915502`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1.0460146015462497`", ",", "0.40855034893473263`", ",", 
     "1.3463137813415278`", ",", "1.3225318785027926`", ",", 
     RowBox[{"-", "0.6095487567415763`"}], ",", "0.7055445582171984`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.09134196905863412`", ",", "1.8122311884841498`", ",", 
     "0.8124830618838517`", ",", "0.1263377459092836`", ",", 
     RowBox[{"-", "0.1527152818593125`"}], ",", 
     RowBox[{"-", "0.8491477587345893`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.8287581309960679`", ",", "1.5523937976577544`", ",", 
     RowBox[{"-", "0.06147734535040618`"}], ",", "0.2650453080867959`", ",", 
     RowBox[{"-", "1.5243689873335784`"}], ",", "0.6113451471532745`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.1246657642432103`", ",", 
     RowBox[{"-", "1.5545233895201855`"}], ",", 
     RowBox[{"-", "0.08226561869135107`"}], ",", "0.6587178198031629`", ",", 
     "1.099882847480644`", ",", 
     RowBox[{"-", "1.3996353030498234`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.6642973915863166`"}], ",", "1.2889083853946008`", ",", 
     RowBox[{"-", "0.55317220189316`"}], ",", 
     RowBox[{"-", "0.4915331440042792`"}], ",", "1.7217329402228643`", ",", 
     "0.411419605152207`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1.057687269408893`"}], ",", "1.110136642825716`", ",", 
     "0.2867566129534057`", ",", "0.1855008463405585`", ",", 
     "0.08633762647104337`", ",", "1.4832054296493595`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.3220100286830663`", ",", 
     RowBox[{"-", "1.0122020081229026`"}], ",", 
     RowBox[{"-", "0.10643462419889486`"}], ",", "0.03679304543637919`", ",", 
     RowBox[{"-", "0.1550756702199898`"}], ",", 
     RowBox[{"-", "1.7332890901879505`"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.531863352421198*^9, 3.531863412357255*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DrawPlasma", "[", "crap10", "]"}]], "Input",
 CellChangeTimes->{{3.531863049379135*^9, 3.531863053877967*^9}, 
   3.531863277223895*^9, {3.531863360728354*^9, 3.5318633609793797`*^9}}],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[1, 0, 0], 
    DiskBox[{-1.214237596714784, -0.6992107557642635}, 0.05]}, 
   {RGBColor[1, 0, 0], 
    DiskBox[{1.7910583165507719`, 0.48406884902664693`}, 0.05]}, 
   {RGBColor[1, 0, 0], 
    DiskBox[{-0.4186427803941992, 1.3750380361915502`}, 0.05]}, 
   {RGBColor[1, 0, 0], 
    DiskBox[{-0.6095487567415763, 0.7055445582171984}, 0.05]}, 
   {RGBColor[1, 0, 0], 
    DiskBox[{-0.1527152818593125, -0.8491477587345893}, 0.05]}, 
   {RGBColor[1, 0, 0], 
    DiskBox[{-1.5243689873335784`, 0.6113451471532745}, 0.05]}, 
   {RGBColor[1, 0, 0], 
    DiskBox[{1.099882847480644, -1.3996353030498234`}, 0.05]}, 
   {RGBColor[1, 0, 0], 
    DiskBox[{1.7217329402228643`, 0.411419605152207}, 0.05]}, 
   {RGBColor[1, 0, 0], 
    DiskBox[{0.08633762647104337, 1.4832054296493595`}, 0.05]}, 
   {RGBColor[1, 0, 0], 
    DiskBox[{-0.1550756702199898, -1.7332890901879505`}, 0.05]}, 
   {GrayLevel[0], PointBox[{-0.40056528922214163`, 1.0889172568793866`}]}, 
   {GrayLevel[0], PointBox[{0.2450965769408251, -1.1958292687807113`}]}, 
   {GrayLevel[0], PointBox[{0.7629827870866057, 0.27270698699475027`}]}, 
   {GrayLevel[0], PointBox[{1.0460146015462497`, 0.40855034893473263`}]}, 
   {GrayLevel[0], PointBox[{0.09134196905863412, 1.8122311884841498`}]}, 
   {GrayLevel[0], PointBox[{0.8287581309960679, 1.5523937976577544`}]}, 
   {GrayLevel[0], PointBox[{1.1246657642432103`, -1.5545233895201855`}]}, 
   {GrayLevel[0], PointBox[{-0.6642973915863166, 1.2889083853946008`}]}, 
   {GrayLevel[0], PointBox[{-1.057687269408893, 1.110136642825716}]}, 
   {GrayLevel[0], PointBox[{0.3220100286830663, -1.0122020081229026`}]}},
  Axes->True,
  PlotRange->{{-2, 2}, {-2, 2}}]], "Output",
 CellChangeTimes->{
  3.531863054250764*^9, 3.531863094968026*^9, {3.5318632238292627`*^9, 
   3.531863236234174*^9}, 3.531863277453412*^9, {3.531863361349215*^9, 
   3.531863412757764*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{960, 1152},
WindowMargins->{{Automatic, 0}, {Automatic, 0}},
ShowSelection->True,
FrontEndVersion->"8.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (November 6, \
2010)",
StyleDefinitions->FrontEnd`FileName[{"Creative"}, "PastelColor.nb", 
  CharacterEncoding -> "UTF-8"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[567, 22, 252, 3, 60, "Title"],
Cell[822, 27, 1292, 22, 116, "Text"],
Cell[CellGroupData[{
Cell[2139, 53, 241, 3, 72, "Section"],
Cell[2383, 58, 101, 1, 37, "Input"],
Cell[2487, 61, 808, 19, 49, "Text"],
Cell[CellGroupData[{
Cell[3320, 84, 873, 26, 68, "Input"],
Cell[4196, 112, 59434, 1011, 248, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[63679, 1129, 286, 4, 72, "Section"],
Cell[63968, 1135, 1007, 24, 49, "Text"],
Cell[CellGroupData[{
Cell[65000, 1163, 813, 22, 53, "Input"],
Cell[65816, 1187, 385, 10, 60, "Output"],
Cell[66204, 1199, 21961, 374, 255, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[88214, 1579, 290, 4, 72, "Section"],
Cell[88507, 1585, 1463, 44, 56, "Text"],
Cell[CellGroupData[{
Cell[89995, 1633, 1487, 37, 173, "Input"],
Cell[91485, 1672, 255, 5, 37, "Output"],
Cell[91743, 1679, 216, 4, 37, "Output"],
Cell[91962, 1685, 856, 24, 71, "Output"],
Cell[92821, 1711, 273, 6, 37, "Output"],
Cell[93097, 1719, 210, 4, 42, "Output"],
Cell[93310, 1725, 385, 12, 76, "Output"],
Cell[93698, 1739, 218, 3, 37, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[93965, 1748, 306, 4, 72, "Section"],
Cell[94274, 1754, 1045, 21, 34, "Text"],
Cell[CellGroupData[{
Cell[95344, 1779, 657, 20, 58, "Input"],
Cell[96004, 1801, 557, 11, 23, "Message"],
Cell[96564, 1814, 136, 2, 37, "Output"],
Cell[96703, 1818, 99, 1, 37, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[96851, 1825, 343, 5, 72, "Section"],
Cell[97197, 1832, 1397, 30, 30, "Text"],
Cell[CellGroupData[{
Cell[98619, 1866, 1172, 32, 132, "Input"],
Cell[99794, 1900, 13665, 230, 249, "Output"],
Cell[113462, 2132, 250, 6, 64, "Output"],
Cell[113715, 2140, 199, 3, 37, "Output"],
Cell[113917, 2145, 231, 5, 64, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[114197, 2156, 235, 3, 72, "Section"],
Cell[114435, 2161, 769, 25, 53, "Text"],
Cell[CellGroupData[{
Cell[115229, 2190, 1780, 56, 127, "Input"],
Cell[117012, 2248, 1046, 36, 60, "Output"],
Cell[118061, 2286, 7036, 132, 385, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[125146, 2424, 261, 4, 72, "Section"],
Cell[125410, 2430, 1545, 46, 54, "Text"],
Cell[CellGroupData[{
Cell[126980, 2480, 3127, 75, 119, "Input"],
Cell[130110, 2557, 565, 17, 44, "Output"],
Cell[130678, 2576, 41351, 683, 259, "Output"],
Cell[172032, 3261, 72180, 1197, 236, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[244261, 4464, 88, 1, 72, "Section"],
Cell[244352, 4467, 1729, 41, 97, "Text"],
Cell[CellGroupData[{
Cell[246106, 4512, 200, 3, 37, "Input"],
Cell[246309, 4517, 387, 8, 43, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[246733, 4530, 1910, 57, 107, "Input"],
Cell[248646, 4589, 3051, 57, 579, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[251734, 4651, 2298, 52, 141, "Input"],
Cell[254035, 4705, 8879, 213, 278, "Output"],
Cell[262917, 4920, 768, 14, 65, "Message"],
Cell[263688, 4936, 1167, 25, 85, "Output"],
Cell[264858, 4963, 5966, 104, 259, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[270861, 5072, 1356, 35, 113, "Input"],
Cell[272220, 5109, 3247, 54, 158, "Output"],
Cell[275470, 5165, 3248, 54, 158, "Output"],
Cell[278721, 5221, 3929, 74, 158, "Output"],
Cell[282653, 5297, 259, 3, 37, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[282961, 5306, 85, 1, 72, "Section"],
Cell[283049, 5309, 7197, 184, 582, "Text"],
Cell[290249, 5495, 1044, 14, 37, "Input"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[291342, 5515, 95, 1, 60, "Title"],
Cell[CellGroupData[{
Cell[291462, 5520, 92, 1, 72, "Section"],
Cell[291557, 5523, 2290, 61, 222, "Input"],
Cell[293850, 5586, 3578, 85, 233, "Input"],
Cell[297431, 5673, 628, 15, 98, "Input"],
Cell[298062, 5690, 430, 10, 83, "Input"],
Cell[298495, 5702, 360, 9, 68, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[298892, 5716, 96, 1, 72, "Section"],
Cell[298991, 5719, 1806, 45, 158, "Input"],
Cell[300800, 5766, 430, 11, 37, "Input"],
Cell[CellGroupData[{
Cell[301255, 5781, 371, 9, 37, "Input"],
Cell[301629, 5792, 615, 15, 37, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[302281, 5812, 183, 4, 37, "Input"],
Cell[302467, 5818, 96, 1, 37, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[302600, 5824, 1472, 40, 83, "Input"],
Cell[304075, 5866, 396, 9, 23, "Message"],
Cell[304474, 5877, 481, 15, 37, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[304992, 5897, 184, 3, 37, "Input"],
Cell[305179, 5902, 2770, 60, 173, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[307986, 5967, 208, 3, 37, "Input"],
Cell[308197, 5972, 1905, 37, 388, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
